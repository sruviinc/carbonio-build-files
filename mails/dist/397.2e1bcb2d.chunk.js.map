{"version":3,"file":"397.2e1bcb2d.chunk.js","mappings":"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","sources":["webpack://carbonio-mails-ui/./src/integrations/shared-invite-reply/parts/color-select.tsx","webpack://carbonio-mails-ui/./src/integrations/shared-invite-reply/parts/utils.js","webpack://carbonio-mails-ui/./src/store/actions/create-folder.ts","webpack://carbonio-mails-ui/./src/ui-actions/move-conv-msg.tsx","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/components/tags/delete-tag-modal.tsx","webpack://carbonio-mails-ui/./src/views/sidebar/parts/tags/create-update-tag-modal.tsx","webpack://carbonio-mails-ui/./src/ui-actions/tag-actions.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport type { SingleSelectionOnChange } from '@zextras/carbonio-design-system';\nimport { Container, Icon, Padding, Row, Select, Text } from '@zextras/carbonio-design-system';\nimport { ZIMBRA_STANDARD_COLORS, t } from '@zextras/carbonio-shell-ui';\n\nimport { ColorContainer, Square, TextUpperCase } from './styled-components';\nimport { CustomLabelFactoryProps } from '../../../carbonio-ui-commons/types/select';\n\nconst LabelFactory = ({\n\tselected,\n\tlabel,\n\topen,\n\tfocus\n}: CustomLabelFactoryProps): React.JSX.Element => (\n\t<ColorContainer\n\t\torientation=\"horizontal\"\n\t\twidth=\"fill\"\n\t\tcrossAlignment=\"center\"\n\t\tmainAlignment=\"space-between\"\n\t\tborderRadius=\"half\"\n\t\tbackground=\"gray5\"\n\t\tpadding={{\n\t\t\tall: 'small'\n\t\t}}\n\t>\n\t\t<Row width=\"100%\" takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t<Row\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tpadding={{ left: 'small' }}\n\t\t\t>\n\t\t\t\t<Text size=\"small\" color={open || focus ? 'primary' : 'secondary'}>\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t\t<TextUpperCase>{selected[0].label}</TextUpperCase>\n\t\t\t</Row>\n\t\t\t<Padding right=\"small\">\n\t\t\t\t<Square color={ZIMBRA_STANDARD_COLORS[parseInt(selected[0].value, 10)].hex} />\n\t\t\t</Padding>\n\t\t</Row>\n\t\t<Icon\n\t\t\tsize=\"large\"\n\t\t\ticon={open ? 'ChevronUpOutline' : 'ChevronDownOutline'}\n\t\t\tcolor={open || focus ? 'primary' : 'secondary'}\n\t\t\tstyle={{ alignSelf: 'center' }}\n\t\t/>\n\t</ColorContainer>\n);\n\nfunction getColorLabel(color: string): string {\n\t/* i18next-extract-disable-next-line */\n\treturn t(`color.${color}`, '{{color}}', {\n\t\tcontext: ZIMBRA_STANDARD_COLORS,\n\t\treplace: {\n\t\t\tcolor\n\t\t}\n\t});\n}\n\nexport default function ColorSelect({\n\tonChange,\n\tdefaultColor = 0,\n\tlabel\n}: {\n\tonChange: SingleSelectionOnChange;\n\tdefaultColor: number;\n\tlabel: string;\n}): React.JSX.Element {\n\tconst colors = useMemo(\n\t\t() =>\n\t\t\tZIMBRA_STANDARD_COLORS.map((el, index) => ({\n\t\t\t\tlabel: getColorLabel(el.zLabel),\n\t\t\t\tvalue: index.toString(),\n\t\t\t\tcustomComponent: (\n\t\t\t\t\t<Container\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\tmainAlignment=\"space-between\"\n\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t<TextUpperCase>{getColorLabel(el.zLabel)}</TextUpperCase>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t<Square color={el.hex} />\n\t\t\t\t\t</Container>\n\t\t\t\t)\n\t\t\t})),\n\t\t[]\n\t);\n\tconst defaultSelection = useMemo(() => colors[defaultColor], [colors, defaultColor]);\n\treturn (\n\t\t<Select\n\t\t\tlabel={label}\n\t\t\tonChange={onChange}\n\t\t\titems={colors}\n\t\t\tdefaultSelection={defaultSelection}\n\t\t\tLabelFactory={LabelFactory}\n\t\t\tdata-testid=\"color-select\"\n\t\t/>\n\t);\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n// TODO refactor IRIS-4324\nimport { isEqual, transform, isObject, filter } from 'lodash';\n\nexport const ShareCalendarWithOptions = (t) => [\n\t{\n\t\tlabel: t('share.options.share_calendar_with.internal_users_groups', 'Internal Users or Groups'),\n\t\tvalue: 'usr'\n\t},\n\t{\n\t\tlabel: t('share.options.share_calendar_with.external_guests', 'External guests (view only)'),\n\t\tvalue: '',\n\t\tdisabled: true\n\t},\n\t{\n\t\tlabel: t(\n\t\t\t'share.options.share_calendar_with.public',\n\t\t\t'Public (view only, no password required)'\n\t\t),\n\t\tvalue: 'pub'\n\t}\n];\n\nexport const ShareCalendarRoleOptions = (t, canViewPrvtAppt) => [\n\t{ label: t('share.options.share_calendar_role.none', 'None'), value: '' },\n\t{\n\t\tlabel: t('share.options.share_calendar_role.viewer', 'Viewer'),\n\t\tvalue: canViewPrvtAppt ? 'rp' : 'r'\n\t},\n\t{\n\t\tlabel: t('share.options.share_calendar_role.admin', 'Admin'),\n\t\tvalue: canViewPrvtAppt ? 'rwidxap' : 'rwidxa'\n\t},\n\t{\n\t\tlabel: t('share.options.share_calendar_role.manager', 'Manager'),\n\t\tvalue: canViewPrvtAppt ? 'rwidxp' : 'rwidx'\n\t}\n];\nexport const differenceObject = (object, base) => {\n\t// eslint-disable-next-line no-shadow\n\tfunction changes(object, base) {\n\t\treturn transform(object, (result, value, key) => {\n\t\t\tif (!isEqual(value, base[key])) {\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\tresult[key] = isObject(value) && isObject(base[key]) ? changes(value, base[key]) : value;\n\t\t\t}\n\t\t});\n\t}\n\treturn changes(object, base);\n};\n\nexport const validEmailRegex = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\nexport const validEmail = (email) => !!validEmailRegex.test(email);\n\nexport const findLabel = (list, value) => filter(list, (item) => item.value === value)[0]?.label;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { FOLDERS, soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport { type CreateFolderResponse } from '../../types';\n\nexport function createFolder({\n\tparentFolderId,\n\tname\n}: {\n\tparentFolderId: string;\n\tname: string;\n}): Promise<CreateFolderResponse> {\n\treturn soapFetch('CreateFolder', {\n\t\t_jsns: 'urn:zimbraMail',\n\t\tfolder: {\n\t\t\tview: 'message',\n\t\t\tl: parentFolderId || FOLDERS.INBOX,\n\t\t\tname\n\t\t}\n\t});\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport { Container, Input, Padding, Text } from '@zextras/carbonio-design-system';\nimport { replaceHistory, t } from '@zextras/carbonio-shell-ui';\nimport { noop, some } from 'lodash';\n\nimport ModalFooter from '../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../carbonio-ui-commons/components/modals/modal-header';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { isRoot } from '../helpers/folders';\nimport { useUiUtilities } from '../hooks/use-ui-utilities';\nimport { convAction, msgAction } from '../store/actions';\nimport { createFolder } from '../store/actions/create-folder';\nimport { AppDispatch } from '../store/redux';\nimport { FolderSelector } from '../views/sidebar/commons/folder-selector';\n\ntype MoveConvMessageProps = {\n\tselectedIDs: string[];\n\tisMessageView: boolean;\n\tisRestore?: boolean;\n\tdeselectAll?: () => void;\n\tonClose: () => void;\n\tfolderId: string;\n\tdispatch: AppDispatch;\n};\n\nconst MoveConvMessage = ({\n\tselectedIDs,\n\tisMessageView,\n\tisRestore,\n\tdeselectAll,\n\tonClose,\n\tfolderId,\n\tdispatch\n}: MoveConvMessageProps): ReactElement => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [folderDestination, setFolderDestination] = useState<Folder | undefined>();\n\tconst [moveConvModal, setMoveConvModal] = useState(true);\n\n\tconst onCloseModal = useCallback(() => {\n\t\tsetMoveConvModal(true);\n\t\tsetInputValue('');\n\t\tsetFolderDestination(undefined);\n\t\tonClose();\n\t}, [onClose]);\n\n\tconst onConfirmConvMove = useCallback(\n\t\t(id) => {\n\t\t\tdispatch(\n\t\t\t\tconvAction({\n\t\t\t\t\toperation: `move`,\n\t\t\t\t\tids: selectedIDs,\n\t\t\t\t\tparent: id\n\t\t\t\t})\n\t\t\t)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\t\tdeselectAll?.();\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tlabel: isRestore\n\t\t\t\t\t\t\t\t? t('messages.snackbar.email_restored', 'E-mail restored in destination folder')\n\t\t\t\t\t\t\t\t: t('messages.snackbar.conversation_move', 'Conversation successfully moved'),\n\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\tactionLabel: t('action.goto_folder', 'GO TO FOLDER'),\n\t\t\t\t\t\t\tonActionClick: () => {\n\t\t\t\t\t\t\t\treplaceHistory(`/folder/${id}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tsetMoveConvModal(false);\n\t\t\t\t\tonCloseModal();\n\t\t\t\t})\n\t\t\t\t.catch(() => noop);\n\t\t},\n\t\t[dispatch, selectedIDs, onCloseModal, deselectAll, createSnackbar, isRestore]\n\t);\n\n\tconst onConfirmMessageMove = useCallback(\n\t\t(newFolderId = 0) => {\n\t\t\tdispatch(\n\t\t\t\tmsgAction({\n\t\t\t\t\toperation: `move`,\n\t\t\t\t\tids: selectedIDs,\n\t\t\t\t\tparent: newFolderId\n\t\t\t\t})\n\t\t\t)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\t\tdeselectAll?.();\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tlabel: isRestore\n\t\t\t\t\t\t\t\t? t('messages.snackbar.email_restored', 'E-mail restored in destination folder')\n\t\t\t\t\t\t\t\t: t('messages.snackbar.message_move', 'Message successfully moved'),\n\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\thideButton: true // todo: add Go to folder action\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tsetMoveConvModal(false);\n\t\t\t\t\tonCloseModal();\n\t\t\t\t})\n\t\t\t\t.catch(() => noop);\n\t\t},\n\t\t[dispatch, selectedIDs, onCloseModal, deselectAll, createSnackbar, isRestore]\n\t);\n\n\tconst hasSameName = useMemo(\n\t\t() => some(folderDestination?.children, ['name', inputValue]),\n\t\t[folderDestination?.children, inputValue]\n\t);\n\n\tconst isDisabled = useMemo(() => {\n\t\tif (moveConvModal) {\n\t\t\treturn (\n\t\t\t\t!folderDestination || folderDestination?.id === folderId || isRoot(folderDestination?.id)\n\t\t\t);\n\t\t}\n\t\treturn !folderDestination || !inputValue.length || hasSameName;\n\t}, [folderDestination, folderId, hasSameName, inputValue?.length, moveConvModal]);\n\n\tconst textLabel = useMemo(\n\t\t() =>\n\t\t\thasSameName\n\t\t\t\t? t('folder_panel.modal.new.input.name_exist')\n\t\t\t\t: t('folder_panel.modal.new.input.name', 'Folder Name'),\n\t\t[hasSameName]\n\t);\n\n\tconst onConfirm = useCallback(() => {\n\t\tcreateFolder({\n\t\t\tparentFolderId: folderDestination?.parent ?? '',\n\t\t\tname: inputValue\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!('Fault' in res) && 'folder' in res) {\n\t\t\t\t\tisMessageView\n\t\t\t\t\t\t? onConfirmMessageMove(res.folder[0].id)\n\t\t\t\t\t\t: onConfirmConvMove(res.folder[0].id);\n\t\t\t\t} else {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => noop);\n\t\tsetInputValue('');\n\t\tsetFolderDestination(undefined);\n\t}, [\n\t\tcreateSnackbar,\n\t\tfolderDestination?.parent,\n\t\tinputValue,\n\t\tisMessageView,\n\t\tonConfirmConvMove,\n\t\tonConfirmMessageMove\n\t]);\n\n\tconst headerTitle = useMemo(() => {\n\t\tif (moveConvModal) {\n\t\t\tif (isRestore) {\n\t\t\t\treturn t('label.restore', 'Restore');\n\t\t\t}\n\t\t\treturn isMessageView\n\t\t\t\t? t('folder_panel.modal.move.title_modal_message', 'Move Message')\n\t\t\t\t: t('folder_panel.modal.move.title_modal_conversation', 'Move Conversation');\n\t\t}\n\t\treturn t('folder_panel.modal.new.title', 'Create a new folder');\n\t}, [isMessageView, isRestore, moveConvModal]);\n\n\tconst footerConfirm = useMemo(() => {\n\t\tif (moveConvModal) {\n\t\t\tif (isMessageView) {\n\t\t\t\treturn () => onConfirmMessageMove(folderDestination?.id);\n\t\t\t}\n\t\t\treturn () => onConfirmConvMove(folderDestination?.id);\n\t\t}\n\t\treturn onConfirm;\n\t}, [\n\t\tfolderDestination,\n\t\tisMessageView,\n\t\tmoveConvModal,\n\t\tonConfirm,\n\t\tonConfirmConvMove,\n\t\tonConfirmMessageMove\n\t]);\n\n\tconst footerSecondary = useMemo(\n\t\t() =>\n\t\t\tmoveConvModal\n\t\t\t\t? onClose\n\t\t\t\t: (): void => {\n\t\t\t\t\t\tsetMoveConvModal(true);\n\t\t\t\t\t},\n\t\t[moveConvModal, onClose]\n\t);\n\n\tconst footerLabel = useMemo(() => {\n\t\tif (moveConvModal) {\n\t\t\treturn t('label.move', 'Move');\n\t\t}\n\t\treturn isRestore\n\t\t\t? t('folder_panel.modal.new.restore_create_footer', 'Create and Restore')\n\t\t\t: t('folder_panel.modal.new.create_footer', 'Create and Move');\n\t}, [isRestore, moveConvModal]);\n\n\tconst modalFooterTooltip = isDisabled\n\t\t? ''\n\t\t: t('label.folder_not_valid_destination', 'The selected folder is not a valid destination');\n\n\treturn (\n\t\t<Container\n\t\t\tpadding={{ all: 'large' }}\n\t\t\tmainAlignment=\"center\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\theight=\"100%\"\n\t\t\tstyle={{\n\t\t\t\toverflowY: 'auto'\n\t\t\t}}\n\t\t>\n\t\t\t<ModalHeader onClose={onClose} title={headerTitle} />\n\t\t\t<Container\n\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\theight=\"fit\"\n\t\t\t\tstyle={{\n\t\t\t\t\toverflowY: 'auto'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{!moveConvModal && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlabel={textLabel}\n\t\t\t\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\t\t\t\thasError={hasSameName}\n\t\t\t\t\t\t\tdefaultValue={inputValue}\n\t\t\t\t\t\t\tonChange={(e): void => {\n\t\t\t\t\t\t\t\tsetInputValue(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{hasSameName && (\n\t\t\t\t\t\t\t<Padding all=\"small\">\n\t\t\t\t\t\t\t\t<Text size=\"small\" color=\"error\">\n\t\t\t\t\t\t\t\t\t{t('folder_panel.modal.new.name_exist_warning', 'Name already exists')}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t<Container padding={{ all: 'small' }} mainAlignment=\"center\" crossAlignment=\"flex-start\">\n\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t{isRestore\n\t\t\t\t\t\t\t? t('folder_panel.modal.move.body.message2', 'Select a folder to restore to:')\n\t\t\t\t\t\t\t: t(\n\t\t\t\t\t\t\t\t\t'folder_panel.modal.move.body.message1',\n\t\t\t\t\t\t\t\t\t'Select a folder to move the considered one to:'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t</Text>\n\t\t\t\t</Container>\n\t\t\t\t<FolderSelector\n\t\t\t\t\tselectedFolderId={folderDestination?.id}\n\t\t\t\t\tonFolderSelected={setFolderDestination}\n\t\t\t\t\tshowSharedAccounts\n\t\t\t\t\tshowTrashFolder={false}\n\t\t\t\t\tshowSpamFolder={false}\n\t\t\t\t\tallowRootSelection={false}\n\t\t\t\t\tallowFolderCreation={false}\n\t\t\t\t/>\n\t\t\t\t<ModalFooter\n\t\t\t\t\ttooltip={modalFooterTooltip}\n\t\t\t\t\tonConfirm={footerConfirm}\n\t\t\t\t\tsecondaryAction={footerSecondary}\n\t\t\t\t\tlabel={footerLabel}\n\t\t\t\t\tsecondaryLabel={moveConvModal ? t('label.cancel', 'Cancel') : t('go_back', 'Go Back')}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n\nexport default MoveConvMessage;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, useCallback, useMemo } from 'react';\n\nimport { Container, Text, useSnackbar } from '@zextras/carbonio-design-system';\nimport { deleteTag, t } from '@zextras/carbonio-shell-ui';\n\nimport type { DeleteTagModalPropsType } from '../../types/sidebar';\nimport ModalFooter from '../modals/modal-footer';\nimport ModalHeader from '../modals/modal-header';\n\nconst DeleteTagModal: FC<DeleteTagModalPropsType> = ({ onClose, tag }) => {\n\tconst createSnackbar = useSnackbar();\n\n\tconst title = useMemo(\n\t\t() =>\n\t\t\tt('label.delete_tag_name', {\n\t\t\t\tname: tag?.name,\n\t\t\t\tdefaultValue: 'Delete \"{{name}}\" tag'\n\t\t\t}),\n\t\t[tag?.name]\n\t);\n\n\tconst onConfirm = useCallback(() => {\n\t\tif (tag)\n\t\t\tdeleteTag(tag?.id).then((res: any) => {\n\t\t\t\tif (res.action) {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `delete-tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tlabel: t('messages.snackbar.tag_deleted', {\n\t\t\t\t\t\t\tname: tag?.name,\n\t\t\t\t\t\t\tdefaultValue: '{{name}} Tag deleted successfully'\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tonClose();\n\t\t\t});\n\t}, [createSnackbar, onClose, tag]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader onClose={onClose} title={title} />\n\t\t\t<Container padding={{ horizontal: 'large' }}>\n\t\t\t\t<Text>\n\t\t\t\t\t{t('message.delete_tag_message1', {\n\t\t\t\t\t\tname: tag?.name,\n\t\t\t\t\t\tdefaultValue: `Are you sure to delete \"{{name}}\" Tag?`\n\t\t\t\t\t})}\n\t\t\t\t</Text>\n\t\t\t\t<Text overflow=\"break-word\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'message.delete_tag_message2',\n\t\t\t\t\t\t'Once deleted, it will be removed from every item marked with it.'\n\t\t\t\t\t)}\n\t\t\t\t</Text>\n\t\t\t</Container>\n\t\t\t<ModalFooter\n\t\t\t\tonConfirm={onConfirm}\n\t\t\t\tlabel={t('label.delete', 'Delete')}\n\t\t\t\tdisabled={false}\n\t\t\t\tcolor=\"error\"\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default DeleteTagModal;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport { Input, Padding, Text } from '@zextras/carbonio-design-system';\nimport { changeTagColor, createTag, renameTag, t } from '@zextras/carbonio-shell-ui';\n\nimport ModalFooter from '../../../../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../../../../carbonio-ui-commons/components/modals/modal-header';\nimport type { CreateUpdateTagModalPropType } from '../../../../carbonio-ui-commons/types/sidebar';\nimport { useUiUtilities } from '../../../../hooks/use-ui-utilities';\nimport ColorPicker from '../../../../integrations/shared-invite-reply/parts/color-select';\n\nconst NonSupportedCharacters = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/;\nconst CreateUpdateTagModal: FC<CreateUpdateTagModalPropType> = ({\n\tonClose,\n\teditMode = false,\n\ttag\n}): ReactElement => {\n\tconst [name, setName] = useState(tag?.name || '');\n\tconst [color, setColor] = useState(tag?.color || 0);\n\tconst title = useMemo(\n\t\t() =>\n\t\t\teditMode\n\t\t\t\t? t('label.edit_tag_name', { name: tag?.name, defaultValue: 'Edit \"{{name}}\" tag' })\n\t\t\t\t: t('label.create_tag', 'Create a new Tag'),\n\t\t[editMode, tag?.name]\n\t);\n\tconst label = useMemo(() => t('label.tag_name', 'Tag name'), []);\n\tconst handleColorChange = useCallback((c: string | null) => setColor(c), []);\n\tconst handleNameChange = useCallback((ev) => setName(ev.target.value), []);\n\n\tconst showMaxLengthWarning = useMemo(() => name.length >= 128, [name]);\n\tconst showSpecialCharWarning = useMemo(() => NonSupportedCharacters.test(name), [name]);\n\n\tconst showWarning = useMemo(\n\t\t() => showMaxLengthWarning || showSpecialCharWarning,\n\t\t[showMaxLengthWarning, showSpecialCharWarning]\n\t);\n\tconst disabled = useMemo(() => name === '' || showWarning, [name, showWarning]);\n\n\tconst { createSnackbar } = useUiUtilities();\n\n\tconst onCreate = useCallback(\n\t\t() =>\n\t\t\tcreateTag({ name, color }).then((res) => {\n\t\t\t\tif (res.tag) {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `new-tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: t('messages.snackbar.tag_created', {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tdefaultValue: 'Tag {{name}} successfully created'\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tonClose();\n\t\t\t}),\n\t\t[name, color, onClose, createSnackbar]\n\t);\n\tconst onUpdate = useCallback(() => {\n\t\tPromise.all([renameTag(`${tag?.id}`, name), changeTagColor(`${tag?.id}`, Number(color))])\n\t\t\t.then(() => {\n\t\t\t\tonClose();\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `update-tag`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t('messages.snackbar.tag_updated', 'Tag successfully updated'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tonClose();\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `update-tag-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t'messages.snackbar.tag_not_updated',\n\t\t\t\t\t\t'Something went wrong, tag not updated. Please try again.'\n\t\t\t\t\t),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t});\n\t}, [color, createSnackbar, name, onClose, tag?.id]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader onClose={onClose} title={title} />\n\t\t\t<Input\n\t\t\t\tlabel={label}\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={handleNameChange}\n\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\ttextColor={showWarning ? 'error' : 'text'}\n\t\t\t\thasError={showWarning}\n\t\t\t/>\n\n\t\t\t{showWarning && (\n\t\t\t\t<Padding all=\"small\">\n\t\t\t\t\t{showMaxLengthWarning && (\n\t\t\t\t\t\t<Text size=\"extrasmall\" color=\"error\" overflow=\"break-word\">\n\t\t\t\t\t\t\t{t('label.tag_max_length', 'Max 128 characters are allowed')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t{showSpecialCharWarning && (\n\t\t\t\t\t\t<Text size=\"extrasmall\" color=\"error\" overflow=\"break-word\">\n\t\t\t\t\t\t\t{t('label.no_special_char_allowed', 'Name should not contain any special character')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t</Padding>\n\t\t\t)}\n\n\t\t\t<Padding top=\"small\" />\n\t\t\t<ColorPicker\n\t\t\t\tonChange={handleColorChange}\n\t\t\t\tlabel={t('label.select_color', 'Select Color')}\n\t\t\t\tdefaultColor={color}\n\t\t\t/>\n\t\t\t<ModalFooter\n\t\t\t\tonConfirm={editMode ? onUpdate : onCreate}\n\t\t\t\tlabel={editMode ? t('label.edit', 'edit') : t('label.create', 'Create')}\n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default CreateUpdateTagModal;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { ReactElement, useCallback, useContext, useMemo, useState } from 'react';\n\nimport {\n\tCheckbox,\n\tIcon,\n\tModalManagerContext,\n\tPadding,\n\tRow,\n\tText\n} from '@zextras/carbonio-design-system';\nimport {\n\tTag,\n\tZIMBRA_STANDARD_COLORS,\n\treplaceHistory,\n\tt,\n\tuseTags\n} from '@zextras/carbonio-shell-ui';\nimport { every, find, includes, map, reduce, some } from 'lodash';\n\nimport DeleteTagModal from '../carbonio-ui-commons/components/tags/delete-tag-modal';\nimport { TagsActionsType } from '../carbonio-ui-commons/constants';\nimport { useAppDispatch } from '../hooks/redux';\nimport { useUiUtilities } from '../hooks/use-ui-utilities';\nimport { convAction, msgAction } from '../store/actions';\nimport { StoreProvider } from '../store/redux';\nimport type {\n\tArgumentType,\n\tConversation,\n\tItemType,\n\tMailMessage,\n\tTagActionsReturnType,\n\tTagsFromStoreType\n} from '../types';\nimport CreateUpdateTagModal from '../views/sidebar/parts/tags/create-update-tag-modal';\n\nexport const createTag = ({ createModal }: ArgumentType): TagActionsReturnType => ({\n\tid: TagsActionsType.NEW,\n\ticon: 'TagOutline',\n\tlabel: t('label.create_tag', 'Create Tag'),\n\tonClick: (e: React.SyntheticEvent<HTMLElement, Event> | KeyboardEvent): void => {\n\t\tif (e) {\n\t\t\te.stopPropagation();\n\t\t}\n\t\tconst closeModal =\n\t\t\tcreateModal &&\n\t\t\tcreateModal(\n\t\t\t\t{\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<CreateUpdateTagModal onClose={(): void => closeModal && closeModal()} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t}\n});\n\nexport const editTag = ({ createModal, tag }: ArgumentType): TagActionsReturnType => ({\n\tid: TagsActionsType.EDIT,\n\ticon: 'Edit2Outline',\n\tlabel: t('label.edit_tag', 'Edit Tag'),\n\tonClick: (e: React.SyntheticEvent<HTMLElement, Event> | KeyboardEvent): void => {\n\t\tif (e) {\n\t\t\te.stopPropagation();\n\t\t}\n\t\tconst closeModal =\n\t\t\tcreateModal &&\n\t\t\tcreateModal(\n\t\t\t\t{\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<CreateUpdateTagModal\n\t\t\t\t\t\t\t\tonClose={(): void => closeModal && closeModal()}\n\t\t\t\t\t\t\t\ttag={tag}\n\t\t\t\t\t\t\t\teditMode\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t}\n});\n\nexport const deleteTag = ({ createModal, tag }: ArgumentType): TagActionsReturnType => ({\n\tid: TagsActionsType.DELETE,\n\ticon: 'Untag',\n\tlabel: t('label.delete_tag', 'Delete Tag'),\n\tonClick: (e: React.SyntheticEvent<HTMLElement, Event> | KeyboardEvent): void => {\n\t\tif (e) {\n\t\t\te.stopPropagation();\n\t\t}\n\t\tconst closeModal =\n\t\t\tcreateModal &&\n\t\t\tcreateModal(\n\t\t\t\t{\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<DeleteTagModal onClose={(): void => closeModal && closeModal()} tag={tag} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t}\n});\n\nexport const TagsDropdownItem = ({\n\ttag,\n\tconversation,\n\tisMessage\n}: {\n\ttag: Tag;\n\tconversation: any;\n\tisMessage?: boolean;\n}): ReactElement => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst dispatch = useAppDispatch();\n\tconst [checked, setChecked] = useState(includes(conversation.tags, tag.id));\n\tconst [isHovering, setIsHovering] = useState(false);\n\tconst toggleCheck = useCallback(\n\t\t(value) => {\n\t\t\tsetChecked((c) => !c);\n\t\t\tdispatch(\n\t\t\t\tisMessage\n\t\t\t\t\t? msgAction({\n\t\t\t\t\t\t\toperation: value ? '!tag' : 'tag',\n\t\t\t\t\t\t\tids: [conversation.id],\n\t\t\t\t\t\t\ttagName: tag.name\n\t\t\t\t\t\t})\n\t\t\t\t\t: convAction({\n\t\t\t\t\t\t\toperation: value ? '!tag' : 'tag',\n\t\t\t\t\t\t\tids: [conversation.id],\n\t\t\t\t\t\t\ttagName: tag.name\n\t\t\t\t\t\t})\n\t\t\t).then((res: any) => {\n\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: value\n\t\t\t\t\t\t\t? t('snackbar.tag_removed', { tag: tag.name, defaultValue: '\"{{tag}}\" tag removed' })\n\t\t\t\t\t\t\t: t('snackbar.tag_applied', {\n\t\t\t\t\t\t\t\t\ttag: tag.name,\n\t\t\t\t\t\t\t\t\tdefaultValue: '\"{{tag}}\" tag applied'\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[conversation.id, createSnackbar, dispatch, isMessage, tag.name]\n\t);\n\tconst tagColor = useMemo(() => ZIMBRA_STANDARD_COLORS[tag.color || 0].hex, [tag.color]);\n\tconst tagIcon = useMemo(() => (checked ? 'Tag' : 'TagOutline'), [checked]);\n\tconst tagIconOnHovered = useMemo(() => (checked ? 'Untag' : 'Tag'), [checked]);\n\n\treturn (\n\t\t<Row\n\t\t\tdata-testid={`tag-item-${tag.id}`}\n\t\t\ttakeAvailableSpace\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tonClick={(): void => toggleCheck(checked)}\n\t\t\tonMouseEnter={(): void => setIsHovering(true)}\n\t\t\tonMouseLeave={(): void => setIsHovering(false)}\n\t\t>\n\t\t\t<Padding right=\"small\">\n\t\t\t\t<Checkbox value={checked} />\n\t\t\t</Padding>\n\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t<Text>{tag.name}</Text>\n\t\t\t\t</Row>\n\t\t\t\t<Row mainAlignment=\"flex-end\">\n\t\t\t\t\t<Icon icon={isHovering ? tagIconOnHovered : tagIcon} color={tagColor} />\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Row>\n\t);\n};\n\nexport const MultiSelectTagsDropdownItem = ({\n\ttag,\n\tids,\n\ttags,\n\tconversations,\n\tdeselectAll,\n\tfolderId,\n\tisMessage\n}: {\n\ttag: ItemType;\n\tconversations: any;\n\tids: string[];\n\ttags: Tag;\n\tmultiSelect?: boolean;\n\tdeselectAll?: () => void;\n\tfolderId?: string;\n\tisMessage?: boolean;\n}): ReactElement => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst dispatch = useAppDispatch();\n\tconst [isHovering, setIsHovering] = useState(false);\n\tconst tagsToShow = reduce(\n\t\ttags,\n\t\t(acc: any, v: any) => {\n\t\t\tconst values = map(conversations, (c) => includes(c.tags, v.id));\n\t\t\tif (every(values)) acc.push(v.id);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\tconst [checked, setChecked] = useState(includes(tagsToShow, tag.id));\n\tconst toggleCheck = useCallback(\n\t\t(value) => {\n\t\t\tsetChecked((c) => !c);\n\t\t\tdispatch(\n\t\t\t\tisMessage\n\t\t\t\t\t? msgAction({\n\t\t\t\t\t\t\toperation: value ? '!tag' : 'tag',\n\t\t\t\t\t\t\tids,\n\t\t\t\t\t\t\ttagName: tag.name\n\t\t\t\t\t\t})\n\t\t\t\t\t: convAction({\n\t\t\t\t\t\t\toperation: value ? '!tag' : 'tag',\n\t\t\t\t\t\t\tids,\n\t\t\t\t\t\t\ttagName: tag.name\n\t\t\t\t\t\t})\n\t\t\t).then((res: any) => {\n\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\tdeselectAll && deselectAll();\n\t\t\t\t\treplaceHistory(`/folder/${folderId}/`);\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: value\n\t\t\t\t\t\t\t? t('snackbar.tag_removed', { tag: tag.name, defaultValue: '\"{{tag}}\" tag removed' })\n\t\t\t\t\t\t\t: t('snackbar.tag_applied', {\n\t\t\t\t\t\t\t\t\ttag: tag.name,\n\t\t\t\t\t\t\t\t\tdefaultValue: '\"{{tag}}\" tag applied'\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[dispatch, isMessage, ids, tag.name, deselectAll, folderId, createSnackbar]\n\t);\n\n\tconst tagIcon = useMemo(() => (checked ? 'Tag' : 'TagOutline'), [checked]);\n\tconst tagIconOnHovered = useMemo(() => (checked ? 'Untag' : 'Tag'), [checked]);\n\tconst tagColor = useMemo(() => ZIMBRA_STANDARD_COLORS[tag.color || 0].hex, [tag.color]);\n\treturn (\n\t\t<Row\n\t\t\ttakeAvailableSpace\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tonMouseEnter={(): void => setIsHovering(true)}\n\t\t\tonMouseLeave={(): void => setIsHovering(false)}\n\t\t\tonClick={(): void => toggleCheck(checked)}\n\t\t>\n\t\t\t<Padding right=\"small\">\n\t\t\t\t<Checkbox value={checked} />\n\t\t\t</Padding>\n\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t<Text>{tag.name}</Text>\n\t\t\t\t</Row>\n\t\t\t\t<Row mainAlignment=\"flex-end\">\n\t\t\t\t\t<Icon icon={isHovering ? tagIconOnHovered : tagIcon} color={tagColor} />\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Row>\n\t);\n};\n\nexport const applyMultiTag = ({\n\ttags,\n\tids,\n\tconversations,\n\tdeselectAll,\n\tfolderId,\n\tisMessage\n}: {\n\tconversations: any;\n\ttags: any;\n\tids: string[];\n\tdeselectAll?: () => void;\n\tfolderId?: string;\n\tisMessage?: boolean;\n}): { id: string; items: ItemType[]; customComponent: ReactElement } => {\n\tconst tagItem = reduce(\n\t\ttags,\n\t\t(acc, v) => {\n\t\t\tconst item = {\n\t\t\t\tid: v.id,\n\t\t\t\tlabel: v.name,\n\t\t\t\ticon: 'TagOutline',\n\t\t\t\tkeepOpen: true,\n\t\t\t\tcustomComponent: (\n\t\t\t\t\t<MultiSelectTagsDropdownItem\n\t\t\t\t\t\ttag={v}\n\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\tids={ids}\n\t\t\t\t\t\tconversations={conversations}\n\t\t\t\t\t\tdeselectAll={deselectAll}\n\t\t\t\t\t\tfolderId={folderId}\n\t\t\t\t\t\tisMessage={isMessage ?? false}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t};\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tacc.push(item);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\treturn {\n\t\tid: TagsActionsType.Apply,\n\t\titems: tagItem,\n\t\tcustomComponent: (\n\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t<Icon icon=\"TagsMoreOutline\" />\n\t\t\t\t</Padding>\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t<Text>{t('label.tags', 'Tags')}</Text>\n\t\t\t\t\t</Padding>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t)\n\t};\n};\nexport const applyTag = ({\n\tconversation,\n\ttags,\n\tisMessage\n}: {\n\tconversation: Conversation | MailMessage;\n\ttags: TagsFromStoreType;\n\tisMessage?: boolean;\n}): {\n\tid: string;\n\titems: ItemType[];\n\tcustomComponent: ReactElement;\n\tlabel?: string;\n\ticon?: string;\n} => {\n\tconst tagItem = reduce(\n\t\ttags,\n\t\t(acc: Array<ItemType>, v) => {\n\t\t\tconst item = {\n\t\t\t\tid: v.id,\n\t\t\t\tlabel: v.name,\n\t\t\t\ticon: 'TagOutline',\n\t\t\t\tkeepOpen: true,\n\t\t\t\tcustomComponent: (\n\t\t\t\t\t<TagsDropdownItem tag={v} conversation={conversation} isMessage={isMessage ?? false} />\n\t\t\t\t)\n\t\t\t};\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tacc.push(item);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\treturn {\n\t\tid: TagsActionsType.Apply,\n\t\titems: tagItem,\n\t\tlabel: t('label.tag', 'Tag'),\n\t\ticon: 'TagsMoreOutline',\n\t\tcustomComponent: (\n\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t<Icon icon=\"TagsMoreOutline\" />\n\t\t\t\t</Padding>\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t<Text>{t('label.tags', 'Tags')}</Text>\n\t\t\t\t\t</Padding>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t)\n\t};\n};\n\nexport const useGetTagsActions = ({ tag }: ArgumentType): Array<TagActionsReturnType> => {\n\tconst createModal = useContext(ModalManagerContext) as () => () => void;\n\treturn useMemo(\n\t\t() => [\n\t\t\tcreateTag({ createModal }),\n\t\t\teditTag({ createModal, tag }),\n\t\t\tdeleteTag({ tag, createModal })\n\t\t],\n\t\t[createModal, tag]\n\t);\n};\n\nexport const useTagsArrayFromStore = (): Array<ItemType> => {\n\tconst tagsFromStore = useTags();\n\treturn useMemo(\n\t\t() =>\n\t\t\treduce(\n\t\t\t\ttagsFromStore,\n\t\t\t\t(acc: Array<ItemType>, v: any) => {\n\t\t\t\t\tacc.push(v);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t),\n\t\t[tagsFromStore]\n\t);\n};\n\nexport const useTagExist = (tags: Array<Tag>): boolean => {\n\tconst tagsArrayFromStore = useTagsArrayFromStore();\n\n\treturn useMemo(\n\t\t() =>\n\t\t\treduce(\n\t\t\t\ttags,\n\t\t\t\t(acc: boolean, v: Tag) => {\n\t\t\t\t\tlet tmp = false;\n\t\t\t\t\tif (\n\t\t\t\t\t\tfind(tagsArrayFromStore, { id: v?.id }) ||\n\t\t\t\t\t\t(tags?.length > 0 && some(tags, (tag) => tag.id.includes('nil:')))\n\t\t\t\t\t)\n\t\t\t\t\t\ttmp = true;\n\t\t\t\t\treturn tmp;\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t),\n\t\t[tags, tagsArrayFromStore]\n\t);\n};\n"],"names":["LabelFactory","selected","label","open","focus","React","ColorContainer","orientation","width","crossAlignment","mainAlignment","borderRadius","background","padding","all","Row","takeAvailableSpace","left","Text","size","color","TextUpperCase","Padding","right","Square","ZIMBRA_STANDARD_COLORS","parseInt","value","hex","Icon","icon","style","alignSelf","getColorLabel","t","context","replace","ColorSelect","onChange","defaultColor","colors","useMemo","map","el","index","zLabel","toString","customComponent","Container","height","defaultSelection","Select","items","ShareCalendarRoleOptions","canViewPrvtAppt","findLabel","list","filter","item","createFolder","parentFolderId","name","soapFetch","_jsns","folder","view","l","FOLDERS","INBOX","MoveConvMessage","selectedIDs","isMessageView","isRestore","deselectAll","onClose","folderId","dispatch","createSnackbar","useUiUtilities","inputValue","setInputValue","useState","folderDestination","setFolderDestination","moveConvModal","setMoveConvModal","onCloseModal","useCallback","undefined","onConfirmConvMove","id","convAction","operation","ids","parent","then","res","type","includes","key","autoHideTimeout","actionLabel","onActionClick","replaceHistory","hideButton","catch","noop","onConfirmMessageMove","newFolderId","msgAction","hasSameName","some","children","isDisabled","isRoot","length","textLabel","onConfirm","headerTitle","footerConfirm","footerSecondary","footerLabel","modalFooterTooltip","overflowY","ModalHeader","title","Input","backgroundColor","hasError","defaultValue","e","target","overflow","FolderSelector","selectedFolderId","onFolderSelected","showSharedAccounts","showTrashFolder","showSpamFolder","allowRootSelection","allowFolderCreation","ModalFooter","tooltip","secondaryAction","secondaryLabel","disabled","DeleteTagModal","tag","useSnackbar","deleteTag","action","horizontal","textAlign","NonSupportedCharacters","CreateUpdateTagModal","editMode","setName","setColor","handleColorChange","c","handleNameChange","ev","showMaxLengthWarning","showSpecialCharWarning","test","showWarning","onCreate","createTag","onUpdate","Promise","renameTag","changeTagColor","Number","textColor","top","ColorPicker","createModal","TagsActionsType","NEW","onClick","stopPropagation","closeModal","StoreProvider","editTag","EDIT","DELETE","TagsDropdownItem","conversation","isMessage","useAppDispatch","checked","setChecked","tags","isHovering","setIsHovering","toggleCheck","tagName","tagColor","tagIcon","tagIconOnHovered","onMouseEnter","onMouseLeave","Checkbox","MultiSelectTagsDropdownItem","conversations","tagsToShow","reduce","acc","v","values","every","push","applyMultiTag","tagItem","keepOpen","Apply","applyTag","useGetTagsActions","useContext","ModalManagerContext","useTagExist","tagsArrayFromStore","useTagsArrayFromStore","tagsFromStore","useTags","tmp","find"],"sourceRoot":""}