{"version":3,"file":"282.45ab3521.chunk.js","mappings":"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mgC,qBACArU,QACA5rB,eACAkgC,UACAC,gBACAC,OACAC,iBACAK,sBAzG6Be,GAC/BjC,MACAE,OACAD,MACAF,eACAxgC,QACAs3B,WACAvrB,cAEAA,EACCs0B,GAAoB,CACnBI,MACAE,OACAD,MACAF,eACAxgC,QACAs3B,cA2FAoL,CAAwB,CACvBjC,MACAE,OACAD,MACAF,eACAxgC,QACAs3B,WACAvrB,aACEtI,MAAMC,IACJA,EAAItO,KAAKuO,SAAS,cACrBg+B,GACCV,GAAwB,CACvBl1B,WACAm1B,qBACArU,QACA5rB,eACAkgC,UACAC,gBACAC,OACAC,iBACAC,YAAY,IAEdgB,EAAsB,CAAExhC,QAAOgL,WAAUpL,MACzC2a,EAAe,CACdG,IAAK,iBACLrnB,SAAS,EACTgB,KAAM,OACNsL,MAAOC,EAAE,kCAAmC,uCAC5Cgb,gBAAiB,IACjBqJ,YAAY,KAGb1J,EAAe,CACdG,IAAK,QACLrnB,SAAS,EACTgB,KAAM,QACNsL,MAAOC,EAAE,wBAAyB,0CAClCgb,gBAAiB,IACjBqJ,YAAY,GAEd,GACC,GAEH,CAAC1J,EAAgBinB,GACjB,EC3KcD,GACTK,GAAcv/B,EAAAA,EAAAA,cACnB,IACCi/B,EAAO,CACN5B,MACAE,OACAD,MACAF,eACAxgC,MAAOyjB,SAASqe,GAAiB,IAAK,IACtCxK,WACA32B,EACAoL,WACAhL,QACAmgC,qBACArU,QACA5rB,eACAkgC,UACAC,gBACAC,OACAC,iBACAK,qBAEF,CACCU,EACA5B,EACAE,EACAD,EACAF,EACAsB,EACAxK,EACA32B,EACAoL,EACAhL,EACAmgC,EACArU,EACA5rB,EACAkgC,EACAC,EACAC,EACAC,EACAK,IAIIiB,EDkImBC,MACzB,MAAM,eAAEvnB,IAAmBC,EAAAA,EAAAA,KAC3B,OAAOnY,EAAAA,EAAAA,cACN,EACC2I,WACApL,IACAI,QACAmgC,qBACArU,QACA5rB,eACAkgC,UACAC,gBACAC,OACAC,iBACAK,qBAEA51B,GACC6Y,EAAAA,EAAAA,IAAU,CACTC,UAAW,QACXC,IAAK,CAAC/jB,MA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","sources":["webpack://carbonio-mails-ui/./src/carbonio-ui-commons/utils/text/html.ts","webpack://carbonio-mails-ui/./src/commons/get-quoted-text-util.js","webpack://carbonio-mails-ui/./src/commons/mail-message-renderer.tsx","webpack://carbonio-mails-ui/./src/commons/print-conversation/get-participant-header.ts","webpack://carbonio-mails-ui/./src/commons/print-conversation/get-header.ts","webpack://carbonio-mails-ui/./src/commons/print-conversation/get-subject.ts","webpack://carbonio-mails-ui/./src/commons/print-conversation/get-attachments.ts","webpack://carbonio-mails-ui/./src/commons/print-conversation/print-conversation.ts","webpack://carbonio-mails-ui/./src/commons/print-conversation/get-body-wrapper.ts","webpack://carbonio-mails-ui/./src/commons/print-conversation/get-complete-html.ts","webpack://carbonio-mails-ui/./src/helpers/signatures.ts","webpack://carbonio-mails-ui/./src/store/actions/send-msg.ts","webpack://carbonio-mails-ui/./src/store/editor-slice-utils.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/editor-generators.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/hooks/editor.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/hooks/send.ts","webpack://carbonio-mails-ui/./src/helpers/timers.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/hooks/attachments.ts","webpack://carbonio-mails-ui/./src/store/actions/upload-attachments.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/hooks/commons.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/hooks/editors.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/hooks/save-draft.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/store-utils.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/store.ts","webpack://carbonio-mails-ui/./src/ui-actions/delete-conv-modal.tsx","webpack://carbonio-mails-ui/./src/ui-actions/error-page.ts","webpack://carbonio-mails-ui/./src/ui-actions/redirect-message-action.tsx","webpack://carbonio-mails-ui/./src/helpers/appointmemt.ts","webpack://carbonio-mails-ui/./src/ui-actions/message-actions.tsx","webpack://carbonio-mails-ui/./src/ui-actions/utils.tsx","webpack://carbonio-mails-ui/./src/store/actions/create-smart-links.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/message-preview-panel.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/delete-attachment-modal.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/file-preview.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/attachments-block.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/parts/contact-names-chips.tsx","webpack://carbonio-mails-ui/./src/ui-actions/participant-displayer-actions.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/parts/contact-names.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/parts/message-contact-list.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/parts/on-behalf-of-displayer.tsx","webpack://carbonio-mails-ui/./src/hooks/use-visible-actions-count.tsx","webpack://carbonio-mails-ui/./src/ui-actions/mail-message-preview-actions.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/parts/preview-header.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/read-receipt-modal.tsx","webpack://carbonio-mails-ui/./src/store/actions/send-delivery-request.ts","webpack://carbonio-mails-ui/./src/integrations/shared-invite-reply/parts/label-row.tsx","webpack://carbonio-mails-ui/./src/store/actions/acceptSharedCalendarReply.ts","webpack://carbonio-mails-ui/./src/store/actions/mount-share-calendar.ts","webpack://carbonio-mails-ui/./src/integrations/shared-invite-reply/parts/share-calendar-actions.ts","webpack://carbonio-mails-ui/./src/integrations/shared-invite-reply/parts/response-actions.tsx","webpack://carbonio-mails-ui/./src/integrations/shared-invite-reply/index.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/mail-preview.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/preview-panel-header.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/preview/utils/index.ts","webpack://carbonio-mails-ui/./src/views/app/extra-windows/use-extra-window.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nconst P_TAG = /<p[^>]*>/g;\nconst BR_TAG = /<br[^>]*>/g;\nconst DIV_TAG = /<div[^>]*>/g;\nconst SCRIPT_TAG = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\nconst STYLE_TAG = /<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi;\n\nexport const convertHtmlToPlainText = (html: string): string => {\n\tif (!html) {\n\t\treturn '';\n\t}\n\n\tlet result = html\n\t\t// Remove script tags\n\t\t.replace(SCRIPT_TAG, '')\n\t\t// Remove style tags\n\t\t.replace(STYLE_TAG, '')\n\t\t// Add a couple of newline before every p tag\n\t\t.replace(P_TAG, '\\n\\n<p>')\n\t\t// Convert br tags to new lines\n\t\t.replace(BR_TAG, '\\n')\n\t\t// Add a newline before every p tag\n\t\t.replace(DIV_TAG, '\\n<div>');\n\tconst doc = new DOMParser().parseFromString(result, 'text/html');\n\tresult = doc.body.textContent || '';\n\n\treturn result;\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable no-case-declarations */\nimport { orderBy } from 'lodash';\nimport { LineType } from './utils';\n\nconst contentType = 'text/html';\nconst NON_WHITESPACE_REGEX = /\\S+/;\nconst TRIM_REGEX = /^\\s+|\\s+$/g;\nconst COMPRESS_REGEX = /\\s+/g;\n\n// Regexes for finding stuff in msg content\nconst SPLIT_REGEX = /\\r\\n|\\r|\\n/;\n\n// regexes for finding a delimiter such as \"On DATE, NAME (EMAIL) wrote:\"\nconst ORIG_EMAIL_REGEX = /[^@\\s]+@[A-Za-z0-9-]{2,}(\\.[A-Za-z0-9-]{2,})+/;\n\n// matches \"03/07/2014\" or \"March 3, 2014\" by looking for year 20xx\nconst ORIG_DATE_REGEX = /\\d+\\s*(\\/|-|, )20\\d\\d/;\n\n// eslint-disable-next-line no-useless-concat\nconst ORIG_INTRO_DE_REGEX = new RegExp('^(-{2,}|' + 'auf' + '\\\\s+)', 'i');\n\n// eslint-disable-next-line no-useless-concat\nconst ORIG_INTRO_REGEX = new RegExp('^(-{2,}|' + 'on' + '\\\\s+)', 'i');\n\nconst MSG_REGEXES = [\n\t{\n\t\ttype: LineType.ORIG_QUOTED,\n\t\t// regex: /^\\s*(>|\\|)/\n\t\tregex: /^[>|].*/\n\t},\n\t{\n\t\ttype: LineType.ORIG_SEP_STRONG,\n\t\tregex: new RegExp(\n\t\t\t'^\\\\s*--+\\\\s*(' +\n\t\t\t\t'Original Message' +\n\t\t\t\t'|' +\n\t\t\t\t'Originalnachricht' +\n\t\t\t\t'|' +\n\t\t\t\t'Weitergeleitete Nachricht' +\n\t\t\t\t'|' +\n\t\t\t\t'Forwarded Message' +\n\t\t\t\t'|' +\n\t\t\t\t'Original Appointment' +\n\t\t\t\t')\\\\s*--+\\\\s*$',\n\t\t\t'i'\n\t\t)\n\t},\n\t{\n\t\ttype: LineType.ORIG_SEP_STRONG,\n\t\t// eslint-disable-next-line no-useless-concat\n\t\tregex: new RegExp('^' + 'Begin forwarded message:' + '$', 'i')\n\t},\n\t{\n\t\ttype: LineType.ORIG_HEADER,\n\t\tregex: new RegExp(`^\\\\s*(${['from:', 'to:', 'subject:', 'date:', 'sent:', 'cc:'].join('|')}).*`)\n\t},\n\t{\n\t\ttype: LineType.ORIG_LINE,\n\t\tregex: /^\\\\s*_{5,}\\\\s*$/\n\t}\n];\n\nconst SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\n\nconst IGNORE_NODE = { '#comment': true, br: true, script: true, select: true, style: true };\n\nconst flatten = (node, list) => {\n\tconst nodeName = node && node.nodeName.toLowerCase();\n\tif (IGNORE_NODE[nodeName]) {\n\t\treturn;\n\t}\n\tlist.push(node);\n\tconst children = node.childNodes || [];\n\tfor (let i = 0; i < children.length; i += 1) {\n\t\tflatten(children[i], list);\n\t}\n};\n\nexport function getOriginalHtmlContent(text) {\n\tconst htmlNode = document.createElement('div');\n\thtmlNode.innerHTML = text;\n\twhile (SCRIPT_REGEX.test(text)) {\n\t\ttext = text.replace(SCRIPT_REGEX, '');\n\t}\n\tlet done = false;\n\tconst nodeList = [];\n\tflatten(htmlNode, nodeList);\n\tconst ln = nodeList.length;\n\tlet i;\n\tconst results = [];\n\tconst count = {};\n\tlet el;\n\tlet prevEl;\n\tlet nodeName;\n\tlet type;\n\tlet prevType;\n\tlet sepNode;\n\tfor (i = 0; i < ln; i += 1) {\n\t\tel = nodeList[i];\n\t\tif (el.nodeType === 1) {\n\t\t\tel.normalize();\n\t\t}\n\t\tnodeName = el.nodeName.toLowerCase();\n\t\ttype = checkNode(nodeList[i]);\n\t\tif (\n\t\t\ttype === LineType.ORIG_UNKNOWN &&\n\t\t\tel.nodeName === '#text' &&\n\t\t\t(ORIG_DATE_REGEX.test(el.nodeValue) ||\n\t\t\t\tORIG_INTRO_REGEX.test(el.nodeValue) ||\n\t\t\t\tORIG_INTRO_DE_REGEX.test(el.nodeValue))\n\t\t) {\n\t\t\tlet str = el.nodeValue;\n\t\t\tfor (let j = 1; j < 10; j += 1) {\n\t\t\t\tconst el1 = nodeList[i + j];\n\t\t\t\tif (el1 && el1.nodeName === '#text') {\n\t\t\t\t\tstr += el1.nodeValue;\n\t\t\t\t\tif (/:$/.test(str)) {\n\t\t\t\t\t\ttype = getLineType(trim(str));\n\t\t\t\t\t\tif (type === LineType.ORIG_WROTE_STRONG) {\n\t\t\t\t\t\t\ti += j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (type !== null) {\n\t\t\tresults.push({ type, node: el, nodeName });\n\t\t\tcount[type] = count[type] ? count[type] + 1 : 1;\n\t\t\tif (type === LineType.ORIG_SEP_STRONG || type === LineType.ORIG_WROTE_STRONG) {\n\t\t\t\tsepNode = el;\n\t\t\t\tdone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (type === LineType.ORIG_HEADER && prevType === LineType.ORIG_LINE) {\n\t\t\t\tsepNode = prevEl;\n\t\t\t\tdone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevEl = el;\n\t\t\tprevType = type;\n\t\t}\n\t}\n\tif (sepNode) {\n\t\tprune(sepNode, true);\n\t}\n\tconst result = done && htmlNode.textContent ? htmlNode.innerHTML : text;\n\treturn result;\n}\n\nexport function checkNode(el) {\n\tif (!el) {\n\t\treturn null;\n\t}\n\tconst nodeName = el.nodeName.toLowerCase();\n\tlet type = null;\n\tif (nodeName === '#text') {\n\t\tconst content = trim(el.nodeValue);\n\t\tif (NON_WHITESPACE_REGEX.test(content)) {\n\t\t\ttype = getLineType(content);\n\t\t}\n\t} else if (nodeName === 'hr') {\n\t\tif (\n\t\t\tel.id === LineType.HTML_SEP_ID ||\n\t\t\t(el.size === '2' && el.width === '100%' && el.align === 'center')\n\t\t) {\n\t\t\ttype = LineType.ORIG_SEP_STRONG;\n\t\t} else {\n\t\t\ttype = LineType.ORIG_LINE;\n\t\t}\n\t} else if (nodeName === 'pre') {\n\t\ttype = checkNodeContent(el);\n\t} else if (nodeName === 'div') {\n\t\tif (el.className === 'OutlookMessageHeader' || el.className === 'gmail_quote') {\n\t\t\ttype = LineType.ORIG_SEP_STRONG;\n\t\t}\n\t\ttype = type || checkNodeContent(el);\n\t} else if (nodeName === 'span') {\n\t\ttype = type || checkNodeContent(el);\n\t} else if (nodeName === 'img') {\n\t\ttype = LineType.ORIG_UNKNOWN;\n\t} else if (nodeName === 'blockquote') {\n\t\ttype = LineType.ORIG_QUOTED;\n\t}\n\treturn type;\n}\n\nexport function getLineType(testLine) {\n\tlet type = LineType.ORIG_UNKNOWN;\n\tfor (let j = 0; j < MSG_REGEXES.length; j += 1) {\n\t\tconst msgTest = MSG_REGEXES[j];\n\t\tconst { regex } = msgTest;\n\t\tif (msgTest.type !== LineType.ORIG_HEADER) {\n\t\t\tif (regex.test(testLine.toLowerCase())) {\n\t\t\t\tif (msgTest.type === LineType.ORIG_QUOTED && /^\\s*\\|.*\\|\\s*$/.test(testLine)) {\n\t\t\t\t\t// eslint-disable-next-line no-continue\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttype = msgTest.type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (type === LineType.ORIG_UNKNOWN) {\n\t\tconst m = testLine.match(/(\\w+):$/);\n\t\tconst verb = m && m[1] && m[1].toLowerCase();\n\t\tif (verb) {\n\t\t\tlet points = 0;\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\tpoints = points ? 5 : verb === 'changed' ? 0 : 2;\n\t\t\tif (ORIG_EMAIL_REGEX.test(testLine)) {\n\t\t\t\tpoints += 4;\n\t\t\t}\n\t\t\tif (ORIG_DATE_REGEX.test(testLine)) {\n\t\t\t\tpoints += 3;\n\t\t\t}\n\t\t\tif (points >= 7) {\n\t\t\t\ttype = LineType.ORIG_WROTE_STRONG;\n\t\t\t}\n\t\t\tif (points >= 5) {\n\t\t\t\ttype = LineType.ORIG_WROTE_WEAK;\n\t\t\t}\n\t\t}\n\t}\n\treturn type;\n}\nexport function trim(str, compress, space) {\n\tif (!str) {\n\t\treturn '';\n\t}\n\tlet trimRe = TRIM_REGEX;\n\tlet compressRe = COMPRESS_REGEX;\n\tif (space) {\n\t\ttrimRe = new RegExp(`^${space}+|${space}+$`, 'g');\n\t\tcompressRe = new RegExp(`${space}+`, 'g');\n\t} else {\n\t\tspace = ' ';\n\t}\n\tstr = str.replace(trimRe, '');\n\tif (compress) {\n\t\tstr = str.replace(compressRe, space);\n\t}\n\treturn str;\n}\n\nexport function checkNodeContent(node) {\n\tconst content = node.textContent || '';\n\tif (!NON_WHITESPACE_REGEX.test(content) || content.length > 200) {\n\t\treturn null;\n\t}\n\n\tconst type = getLineType(content);\n\treturn type === LineType.ORIG_SEP_STRONG || type === LineType.ORIG_WROTE_STRONG ? type : null;\n}\n\nexport function prune(node, clipNode) {\n\tconst p = node && node.parentNode;\n\twhile (p && p.lastChild && p.lastChild !== node) {\n\t\tp.removeChild(p.lastChild);\n\t}\n\tif (clipNode && p && p.lastChild === node) {\n\t\tp.removeChild(p.lastChild);\n\t}\n\tconst nodeName = p && p.nodeName.toLowerCase();\n\tif (p && nodeName !== 'body' && nodeName !== 'html') {\n\t\tprune(p, false);\n\t}\n}\n\nconst DOC_TAG_REGEX = /<\\/?(html|head|body)>/gi;\n\nexport function trimHtml(html) {\n\tif (!html) {\n\t\treturn '';\n\t}\n\tlet trimmedHtml = html;\n\n\t// remove doc-level tags if they don't have attributes\n\ttrimmedHtml = trimmedHtml.replace(DOC_TAG_REGEX, '');\n\n\t// some editors like to put every <br> in a <div>\n\ttrimmedHtml = trimmedHtml.replace(/<div><br ?\\/?><\\/div>/gi, '<br>');\n\n\t// remove leading/trailing <br>\n\tlet len = 0;\n\twhile (\n\t\ttrimmedHtml.length !== len &&\n\t\t(/^<br ?\\/?>/i.test(trimmedHtml) || /<br ?\\/?>$/i.test(trimmedHtml))\n\t) {\n\t\tlen = trimmedHtml.length; // loop prevention\n\t\ttrimmedHtml = trimmedHtml.replace(/^<br ?\\/?>/i, '').replace(/<br ?\\/?>$/i, '');\n\t}\n\n\t// remove trailing <br> trapped in front of closing tags\n\tconst m = trimmedHtml && trimmedHtml.match(/((<br ?\\/?>)+)((<\\/\\w+>)+)$/i);\n\tif (m && m.length) {\n\t\tconst regex = new RegExp(`${m[1] + m[3]}$`, 'i');\n\t\ttrimmedHtml = trimmedHtml.replace(regex, m[3]);\n\t}\n\n\t// remove empty internal <div> containers\n\ttrimmedHtml = trimmedHtml.replace(/(<div><\\/div>)+/gi, '');\n\n\treturn trim(trimmedHtml);\n}\n\nexport function getQuoteOnly(lines, index) {\n\tconst results = lines.splice(index, lines.length - 1);\n\treturn results.join('\\r\\n');\n}\n\nexport function getBodyOnly(lines, index) {\n\tconst results = lines.splice(0, index);\n\treturn results.join('\\r\\n');\n}\n\nexport function getOriginalContent(text, isHtml) {\n\tif (!text) {\n\t\treturn '';\n\t}\n\tif (isHtml) {\n\t\treturn getOriginalHtmlContent(text);\n\t}\n\n\tconst results = [];\n\tconst lines = text.split(SPLIT_REGEX);\n\n\tlet curType;\n\tlet curBlock = [];\n\tconst count = {};\n\tlet isMerged;\n\tlet unknownBlock;\n\tlet isBugzilla = false;\n\tfor (let i = 0; i < lines.length; i += 1) {\n\t\tconst line = lines[i];\n\t\tlet testLine = trim(line);\n\n\t\t// blank lines are just added to the current block\n\t\tif (!NON_WHITESPACE_REGEX.test(testLine)) {\n\t\t\tcurBlock.push(line);\n\t\t\t// <--->\n\t\t\t// continue;\n\t\t}\n\n\t\t// Bugzilla summary looks like QUOTED; it should be treated as UNKNOWN\n\t\tif (testLine.indexOf('| DO NOT REPLY') === 0 && lines[i + 2].indexOf('bugzilla') !== -1) {\n\t\t\tisBugzilla = true;\n\t\t}\n\n\t\tlet type = getLineType(testLine);\n\t\tif (type === LineType.ORIG_QUOTED) {\n\t\t\ttype = isBugzilla ? LineType.ORIG_UNKNOWN : type;\n\t\t} else {\n\t\t\tisBugzilla = false;\n\t\t}\n\n\t\t// WROTE can stretch over two lines; if so, join them into one line\n\t\tlet nextLine = lines[i + 1];\n\t\tisMerged = false;\n\n\t\tif (\n\t\t\tnextLine &&\n\t\t\ttype === LineType.ORIG_UNKNOWN &&\n\t\t\t(ORIG_INTRO_REGEX.test(testLine) || ORIG_INTRO_DE_REGEX.test(testLine)) &&\n\t\t\tnextLine.match(/\\w+:$/)\n\t\t) {\n\t\t\ttestLine = [testLine, nextLine].join(' ');\n\t\t\ttype = getLineType(testLine);\n\t\t\tisMerged = true;\n\t\t}\n\n\t\t// LINE sometimes used as delimiter; if HEADER follows, lump it in with them\n\t\tif (type === LineType.ORIG_LINE) {\n\t\t\tlet j = i + 1;\n\t\t\tnextLine = lines[j];\n\t\t\twhile (!NON_WHITESPACE_REGEX.test(nextLine) && j < lines.length) {\n\t\t\t\t// eslint-disable-next-line no-plusplus\n\t\t\t\tnextLine = lines[++j];\n\t\t\t}\n\t\t\tconst nextType = nextLine && getLineType(nextLine);\n\t\t\tif (nextType === LineType.ORIG_HEADER) {\n\t\t\t\ttype = LineType.ORIG_HEADER;\n\t\t\t} else {\n\t\t\t\ttype = LineType.ORIG_UNKNOWN;\n\t\t\t}\n\t\t}\n\n\t\t// see if we're switching to a new type; if so, package up what we have so far\n\t\tif (curType) {\n\t\t\tif (curType !== type) {\n\t\t\t\tresults.push({ type: curType, block: curBlock });\n\t\t\t\tunknownBlock = curType === LineType.ORIG_UNKNOWN ? curBlock : unknownBlock;\n\t\t\t\tcount[curType] = count[curType] ? count[curType] + 1 : 1;\n\t\t\t\tcurBlock = [];\n\t\t\t\tcurType = type;\n\t\t\t}\n\t\t} else {\n\t\t\tcurType = type;\n\t\t}\n\n\t\tif (isMerged && (type === LineType.ORIG_WROTE_WEAK || type === LineType.ORIG_WROTE_STRONG)) {\n\t\t\tcurBlock.push(line);\n\t\t\tcurBlock.push(nextLine);\n\t\t\ti += 1;\n\t\t\tisMerged = false;\n\t\t} else {\n\t\t\tcurBlock.push(line);\n\t\t}\n\t}\n\n\t// Handle remaining content\n\tif (curBlock.length) {\n\t\tresults.push({ type: curType, block: curBlock });\n\t\tunknownBlock = curType === LineType.ORIG_UNKNOWN ? curBlock : unknownBlock;\n\t\tcount[curType] = count[curType] ? count[curType] + 1 : 1;\n\t}\n\n\t// Now it's time to analyze all these blocks that we've classified\n\n\t// Check for UNKNOWN followed by HEADER\n\tconst first = results[0];\n\tconst second = results[1];\n\tif (\n\t\tfirst &&\n\t\tfirst.type === LineType.ORIG_UNKNOWN &&\n\t\tsecond &&\n\t\t(second.type === LineType.ORIG_HEADER || second.type === LineType.ORIG_WROTE_STRONG)\n\t) {\n\t\tconst originalText = getTextFromBlock(first.block);\n\t\tif (originalText) {\n\t\t\tconst third = results[2];\n\t\t\tif (third && third.type === LineType.ORIG_UNKNOWN) {\n\t\t\t\tconst originalThirdText = getTextFromBlock(third.block);\n\t\t\t\tif (originalThirdText && originalThirdText.indexOf(LineType.NOTES_SEPARATOR) !== -1) {\n\t\t\t\t\treturn originalText + originalThirdText;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn originalText;\n\t\t}\n\t}\n\n\t// check for special case of WROTE preceded by UNKNOWN, followed by mix of UNKNOWN and QUOTED (inline reply)\n\n\tlet originalText = checkInlineWrote(count, results);\n\tif (originalText) {\n\t\treturn originalText;\n\t}\n\n\t// If we found quoted content and there's exactly one UNKNOWN block, return it.\n\tif (count[LineType.ORIG_UNKNOWN] === 1 && count[LineType.ORIG_QUOTED] > 0) {\n\t\toriginalText = getTextFromBlock(unknownBlock);\n\t\tif (originalText) {\n\t\t\treturn originalText;\n\t\t}\n\t}\n\n\t// If we have a STRONG separator (eg \"--- Original Message ---\"), consider it authoritative and return the text that precedes it\n\tif (count[LineType.ORIG_SEP_STRONG] > 0) {\n\t\tlet block = [];\n\t\tfor (let i = 0; i < results.length; i += 1) {\n\t\t\tconst result = results[i];\n\t\t\tif (result.type === LineType.ORIG_SEP_STRONG) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tblock = block.concat(result.block);\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\toriginalText = getTextFromBlock(block);\n\t\tif (originalText) {\n\t\t\treturn originalText;\n\t\t}\n\t}\n\n\treturn text;\n}\n\nexport function checkInlineWrote(count, results) {\n\tif (count[LineType.ORIG_WROTE_STRONG] > 0) {\n\t\tlet unknownBlock;\n\t\tlet foundSep = false;\n\t\tconst afterSep = {};\n\t\tfor (let i = 0; i < results.length; i += 1) {\n\t\t\tconst result = results[i];\n\t\t\tconst { type } = result;\n\t\t\tif (type === LineType.ORIG_WROTE_STRONG) {\n\t\t\t\tfoundSep = true;\n\t\t\t} else if (type === LineType.ORIG_UNKNOWN && !foundSep) {\n\t\t\t\tif (unknownBlock) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tunknownBlock = result.block;\n\t\t\t} else if (foundSep) {\n\t\t\t\tafterSep[type] = true;\n\t\t\t}\n\t\t}\n\n\t\tconst mixed = afterSep[LineType.ORIG_UNKNOWN] && afterSep[LineType.ORIG_QUOTED];\n\t\tconst endsWithUnknown =\n\t\t\tcount[LineType.ORIG_UNKNOWN] === 2 &&\n\t\t\tresults[results.length - 1].type === LineType.ORIG_UNKNOWN;\n\t\tif (unknownBlock && (!mixed || endsWithUnknown)) {\n\t\t\tconst originalText = getTextFromBlock(unknownBlock);\n\t\t\tif (originalText) {\n\t\t\t\treturn originalText;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nexport function getTextFromBlock(block) {\n\tif (!(block && block.length)) {\n\t\treturn null;\n\t}\n\tlet originalText = `${block.join('\\n')}\\n`;\n\toriginalText = originalText.replace(/\\s+$/, '\\n');\n\treturn NON_WHITESPACE_REGEX.test(originalText) ? originalText : null;\n}\n\nexport function replaceDuplicateDiv(text) {\n\ttext = text.replace('</div></div>', '</div>');\n\tif (text.indexOf('</div></div>') !== -1) {\n\t\ttext = replaceDuplicateDiv(text);\n\t}\n\treturn text;\n}\n\nfunction plainTextToHTML(str) {\n\tif (str !== undefined && str !== null) {\n\t\treturn str.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n\t}\n\treturn '';\n}\nexport function getQuotedTextOnly(message, isHtmlContent) {\n\tconst body = message;\n\n\tconst originalContent = getOriginalContent(body, isHtmlContent);\n\n\tif (originalContent.length >= body.length - 5) {\n\t\treturn '';\n\t}\n\tif (body !== undefined && body !== null && body !== '') {\n\t\tconst parser = new DOMParser();\n\t\tconst htmlDoc = parser.parseFromString(body, 'text/html');\n\n\t\t// htmlDoc.getElementsByTagName('body')[0];\n\t\tconst htmlBody = htmlDoc.body.innerHTML;\n\t\tconst indexList = [\n\t\t\t{\n\t\t\t\tname: 'zimbra',\n\t\t\t\tindex: htmlBody.indexOf('id=\"zwchr\">')\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'gmail',\n\t\t\t\tindex: htmlBody.indexOf('<div class=\"gmail_quote\">')\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'original',\n\t\t\t\tindex: htmlBody.indexOf('Original Message')\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'original_de',\n\t\t\t\tindex: htmlBody.indexOf('Originalnachricht')\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'forward',\n\t\t\t\tindex: htmlBody.indexOf('Forwarded Message')\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'forward_de',\n\t\t\t\tindex: htmlBody.indexOf('Weitergeleitete Nachricht')\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'blockquote',\n\t\t\t\tindex: htmlBody.indexOf('<blockquote style=\"margin: 0 0 1.25rem 0;\">')\n\t\t\t}\n\t\t];\n\t\tlet foundIndex = indexList.filter((v) => v.index !== -1);\n\t\tfoundIndex = orderBy(foundIndex, 'index', 'asc');\n\t\tif (foundIndex.length > 0 && contentType === 'text/html') {\n\t\t\tconst replaceBy = foundIndex[0]; // get quote from smallest index\n\t\t\tlet quotedText = '';\n\t\t\tswitch (replaceBy.name) {\n\t\t\t\tcase 'zimbra': {\n\t\t\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\t\t\tconst zimbraQuoted = htmlBody.split('id=\"zwchr\">');\n\t\t\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\t\t\tdiv.innerHTML = item;\n\t\t\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t\t\t});\n\t\t\t\t\tquotedText = htmlDoc.body.innerHTML;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'gmail': {\n\t\t\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\t\t\tconst zimbraQuoted = htmlBody.split('<div class=\"gmail_quote\">');\n\t\t\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\t\t\tdiv.innerHTML = item;\n\t\t\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t\t\t});\n\t\t\t\t\tquotedText = htmlDoc.body.innerHTML;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'original': {\n\t\t\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Original Message\\s*--+\\s*/gi);\n\t\t\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\t\t\tdiv.innerHTML = item;\n\t\t\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t\t\t});\n\t\t\t\t\tquotedText = `----- Original message -----${htmlDoc.body.innerHTML}`;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'original_de': {\n\t\t\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Originalnachricht\\s*--+\\s*/gi);\n\t\t\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\t\t\tdiv.innerHTML = item;\n\t\t\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t\t\t});\n\t\t\t\t\tquotedText = `----- Originalnachricht -----${htmlDoc.body.innerHTML}`;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'forward': {\n\t\t\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Forwarded Message\\s*--+\\s*/gi);\n\t\t\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\t\t\tdiv.innerHTML = item;\n\t\t\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t\t\t});\n\t\t\t\t\tquotedText = `----- Forwarded message -----${htmlDoc.body.innerHTML}`;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'forward_de': {\n\t\t\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Weitergeleitete Nachricht\\s*--+\\s*/gi);\n\t\t\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\t\t\tdiv.innerHTML = item;\n\t\t\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t\t\t});\n\t\t\t\t\tquotedText = `----- Weitergeleitete Nachricht -----${htmlDoc.body.innerHTML}`;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'blockquote': {\n\t\t\t\t\tconst zimbraQuoted = htmlBody.split('<blockquote style=\"margin: 0 0 1.25rem 0;\">');\n\t\t\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\t\t\tdiv.innerHTML = item;\n\t\t\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t\t\t});\n\t\t\t\t\tquotedText = htmlDoc.body.innerHTML;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn quotedText;\n\t\t}\n\t\tif (\n\t\t\thtmlDoc.getElementsByClassName('OutlookMessageHeader').length > 0 &&\n\t\t\thtmlDoc.getElementsByClassName('OutlookMessageHeader')[0]\n\t\t) {\n\t\t\tconst zimbraQuoted = htmlBody.split('class=\"OutlookMessageHeader\">');\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn htmlDoc.body.innerHTML;\n\t\t}\n\t\tconst originalMsg = parser.parseFromString(originalContent, 'text/html');\n\t\tconst originalHTML = replaceDuplicateDiv(originalMsg.body.innerHTML);\n\t\tconst bodyHTML = replaceDuplicateDiv(htmlDoc.body.innerHTML);\n\t\tconst originalText = bodyHTML.slice(0, originalHTML.length);\n\t\tlet quotedText = bodyHTML.split(originalText)[1];\n\t\tif (quotedText === '' || quotedText === undefined) {\n\t\t\tquotedText = plainTextToHTML(bodyHTML.slice(originalHTML.length, bodyHTML.length));\n\t\t}\n\t\thtmlDoc.body.innerHTML = '';\n\t\tconst div = htmlDoc.createElement('div');\n\t\tdiv.setAttribute('class', 'quoted_text');\n\t\tif (contentType !== 'text/html') {\n\t\t\tquotedText = plainTextToHTML(quotedText);\n\t\t}\n\t\tdiv.innerHTML = quotedText;\n\t\thtmlDoc.body.appendChild(div);\n\t\tquotedText = htmlDoc.body.innerHTML;\n\t\tif (contentType !== 'text/html') {\n\t\t\treturn plainTextToHTML(quotedText);\n\t\t}\n\t\treturn quotedText;\n\t}\n\treturn '';\n}\n\nexport function getQuotedText(body) {\n\tif (body !== undefined && body !== null && body !== '') {\n\t\tconst parser = new DOMParser();\n\t\tconst htmlDoc = parser.parseFromString(body, 'text/html');\n\n\t\t//\thtmlDoc.getElementsByTagName('body')[0];\n\t\tconst htmlBody = htmlDoc.body.innerHTML;\n\n\t\tif (htmlBody.indexOf('id=\"zwchr\">') !== -1) {\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tconst zimbraQuoted = htmlBody.split('id=\"zwchr\">');\n\t\t\tconst allText = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn htmlDoc.body.innerHTML;\n\t\t}\n\t\tif (htmlBody.indexOf('<div class=\"gmail_quote\">') !== -1) {\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tconst zimbraQuoted = htmlBody.split('<div class=\"gmail_quote\">');\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn htmlDoc.body.innerHTML;\n\t\t}\n\t\tif (\n\t\t\thtmlDoc.getElementsByClassName('OutlookMessageHeader').length > 0 &&\n\t\t\thtmlDoc.getElementsByClassName('OutlookMessageHeader')[0]\n\t\t) {\n\t\t\tconst zimbraQuoted = htmlBody.split('class=\"OutlookMessageHeader\">');\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn htmlDoc.body.innerHTML;\n\t\t}\n\t\tif (htmlBody.indexOf('<blockquote style=\"margin: 0 0 1.25rem 0;\">') !== -1) {\n\t\t\tconst zimbraQuoted = htmlBody.split('<blockquote style=\"margin: 0 0 1.25rem 0;\">');\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn htmlDoc.body.innerHTML;\n\t\t}\n\t\tif (/\\s*--+\\s*Forwarded Message\\s*--+\\s*/gi.test(htmlBody)) {\n\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Forwarded Message\\s*--+\\s*/gi);\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn `----- Forwarded message -----${htmlDoc.body.innerHTML}`;\n\t\t}\n\t\tif (/\\s*--+\\s*Weitergeleitete Nachricht\\s*--+\\s*/gi.test(htmlBody)) {\n\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Weitergeleitete Nachricht\\s*--+\\s*/gi);\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn `---- Weitergeleitete Nachricht ----${htmlDoc.body.innerHTML}`;\n\t\t}\n\t\tconst originalMsg = parser.parseFromString(getOriginalHtmlContent(body), 'text/html');\n\t\tconst quotedText = htmlDoc.body.innerHTML.split(originalMsg.body.innerHTML)[1];\n\t\tif (quotedText === '' || quotedText === undefined) {\n\t\t\treturn '';\n\t\t}\n\t\thtmlDoc.body.innerHTML = '';\n\t\tconst div = htmlDoc.createElement('div');\n\t\tdiv.setAttribute('class', 'quoted_text');\n\t\tdiv.innerHTML = quotedText;\n\t\thtmlDoc.body.appendChild(div);\n\t\treturn htmlDoc.body.innerHTML;\n\t}\n\treturn '';\n}\n\nexport function getOriginalQuotedText(body) {\n\tif (body !== undefined && body !== null && body !== '') {\n\t\tconst parser = new DOMParser();\n\t\tconst htmlDoc = parser.parseFromString(body, 'text/html');\n\t\thtmlDoc.getElementsByTagName('body')[0];\n\t\tconst htmlBody = htmlDoc.body.innerHTML;\n\n\t\tif (htmlBody.indexOf('id=\"zwchr\">') !== -1) {\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tconst zimbraQuoted = htmlBody.split('id=\"zwchr\">');\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn htmlDoc.body.innerHTML;\n\t\t}\n\t\tif (/\\s*--+\\s*Original Message\\s*--+\\s*/gi.test(htmlBody)) {\n\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Original Message\\s*--+\\s*/gi);\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn `----- Original message -----${htmlDoc.body.innerHTML}`;\n\t\t}\n\t\tif (/\\s*--+\\s*Originalnachricht\\s*--+\\s*/gi.test(htmlBody)) {\n\t\t\tconst zimbraQuoted = htmlBody.split(/\\s*--+\\s*Originalnachricht\\s*--+\\s*/gi);\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn `---- Originalnachricht ----${htmlDoc.body.innerHTML}`;\n\t\t}\n\t\tif (htmlBody.indexOf('id=\"zwchr\">') !== -1) {\n\t\t\thtmlDoc.body.innerHTML = '';\n\t\t\tconst zimbraQuoted = htmlBody.split('id=\"zwchr\">');\n\t\t\tconst allText = '';\n\t\t\tzimbraQuoted.splice(1).forEach((item) => {\n\t\t\t\tconst div = htmlDoc.createElement('div');\n\t\t\t\tdiv.setAttribute('class', 'quoted_text');\n\t\t\t\tdiv.innerHTML = item;\n\t\t\t\thtmlDoc.body.appendChild(div);\n\t\t\t});\n\t\t\treturn htmlDoc.body.innerHTML;\n\t\t}\n\t\tconst originalMsg = parser.parseFromString(getOriginalHtmlContent(body), 'text/html');\n\t\tconst quotedText = htmlDoc.body.innerHTML.split(originalMsg.body.innerHTML)[1];\n\t\tif (quotedText === '' || quotedText === undefined) {\n\t\t\treturn '';\n\t\t}\n\t\thtmlDoc.body.innerHTML = '';\n\t\tconst div = htmlDoc.createElement('div');\n\t\tdiv.setAttribute('class', 'quoted_text');\n\t\tdiv.innerHTML = quotedText;\n\t\thtmlDoc.body.appendChild(div);\n\t\treturn htmlDoc.body.innerHTML;\n\t}\n\treturn '';\n}\n\n// TODO move to commons submodule\nexport function HTMLToPlainText(str) {\n\tif (str !== undefined && str !== null) {\n\t\treturn str\n\t\t\t.replace(/<li>/gi, '  *  ')\n\t\t\t.replace(/<\\/li>/gi, '\\n')\n\t\t\t.replace(/<\\/ul>/gi, '\\n')\n\t\t\t.replace(/<\\/div>/gi, '\\n')\n\t\t\t.replace(/<\\/p>/gi, '\\n')\n\t\t\t.replace(/<[^>]+>/gi, '');\n\t}\n\treturn '';\n}\n\nexport function getPlainText(str) {\n\tif (str !== undefined && str !== null) {\n\t\treturn str\n\t\t\t.replace(/<\\/div>/gi, '\\n')\n\t\t\t.replace(/<p>/gi, '')\n\t\t\t.replace(/<\\/p>/gi, '\\n')\n\t\t\t.replace(/<br \\/>/gi, '\\n')\n\t\t\t.replace(/<br>/gi, '\\n')\n\t\t\t.replace(/&nbsp;/gi, ' ')\n\t\t\t.replace(/<[^>]+>/gi, '');\n\t}\n\treturn '';\n}\n\nexport function spellCheck(node, regexp) {\n\tswitch (node.nodeType) {\n\t\tcase 1:\n\t\t\t// eslint-disable-next-line no-empty\n\t\t\tfor (let i = node.firstChild; i; i = spellCheck(i, regexp)) {}\n\t\t\tnode = node.nextSibling;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tif (!/[^\\s\\xA0]/.test(node.data)) {\n\t\t\t\tnode = node.nextSibling;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet a = null;\n\t\t\tlet b = null;\n\t\t\tlet result = /^[\\s\\xA0]+/.exec(node.data);\n\t\t\tif (result) {\n\t\t\t\ta = node;\n\t\t\t\tnode = node.splitText(result[0].length);\n\t\t\t}\n\t\t\tresult = /[\\s\\xA0]+$/.exec(node.data);\n\t\t\tif (result) {\n\t\t\t\tb = node.splitText(node.data.length - result[0].length);\n\t\t\t}\n\n\t\t\tlet text = highLightWord(node.data, false, regexp);\n\t\t\ttext = text.replace(/^ +/, '&nbsp;').replace(/ +$/, '&nbsp;');\n\t\t\tlet div = document.createElement('div');\n\t\t\tdiv.innerHTML = text;\n\n\t\t\tif (a) {\n\t\t\t\tdiv.insertBefore(a, div.firstChild);\n\t\t\t}\n\t\t\tif (b) {\n\t\t\t\tdiv.appendChild(b);\n\t\t\t}\n\n\t\t\tconst p = node.parentNode;\n\t\t\twhile (div.firstChild) {\n\t\t\t\tp.insertBefore(div.firstChild, node);\n\t\t\t}\n\n\t\t\tdiv = node.nextSibling;\n\t\t\tp.removeChild(node);\n\t\t\tnode = div;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tnode = node.nextSibling;\n\t}\n\treturn node;\n}\n\nexport function highLightWord(text, textWhiteSpace, regexp) {\n\tconst wordIds = {};\n\tconst spanIds = {};\n\ttext = textWhiteSpace ? convertToHtml(text) : htmlEncode(text);\n\tconst m = regexp.exec(text);\n\tregexp.lastIndex = 0;\n\t// <--->\n\twhile (m) {\n\t\tconst str = m[0];\n\t\tconst prefix = m[1];\n\t\tconst word = m[2];\n\t\tconst suffix = m[3];\n\t\tconst id = 44;\n\t\tspanIds[id] = word;\n\t\tif (!wordIds[word]) wordIds[word] = [];\n\t\twordIds[word].push(id);\n\n\t\tconst repl = [\n\t\t\tprefix,\n\t\t\t'<span word=\"',\n\t\t\tword,\n\t\t\t'\" id=\"',\n\t\t\tid,\n\t\t\t'\" class=\"spell_check_mis_spell\">',\n\t\t\tword,\n\t\t\t'</span>',\n\t\t\tsuffix\n\t\t].join('');\n\t\ttext = [text.substring(0, m.index), repl, text.substring(m.index + str.length)].join('');\n\t\tregexp.lastIndex = m.index + repl.length - suffix.length;\n\t}\n\treturn text;\n}\n\n// TODO move to commons submodule\nexport function convertToHtml(str, quotePrefix, openTag, closeTag) {\n\topenTag = openTag || '<blockquote>';\n\tcloseTag = closeTag || '</blockquote>';\n\tif (!str) {\n\t\treturn '';\n\t}\n\tstr = htmlEncode(str);\n\tif (quotePrefix) {\n\t\tconst prefixRe = /^(>|&gt;|\\|\\s+)/;\n\t\tconst lines = str.split(/\\r?\\n/);\n\t\tlet level = 0;\n\t\tfor (let i = 0; i < lines.length; i += 1) {\n\t\t\tlet line = lines[i];\n\t\t\tif (line.length > 0) {\n\t\t\t\tlet lineLevel = 0;\n\t\t\t\twhile (line.match(prefixRe)) {\n\t\t\t\t\tline = line.replace(prefixRe, '');\n\t\t\t\t\tlineLevel += 1;\n\t\t\t\t}\n\t\t\t\twhile (lineLevel > level) {\n\t\t\t\t\tline = openTag + line;\n\t\t\t\t\tlevel += 1;\n\t\t\t\t}\n\t\t\t\twhile (lineLevel < level) {\n\t\t\t\t\tlines[i - 1] = lines[i - 1] + closeTag;\n\t\t\t\t\tlevel -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlines[i] = line;\n\t\t}\n\t\twhile (level > 0) {\n\t\t\tlines.push(closeTag);\n\t\t\tlevel -= 1;\n\t\t}\n\t\tstr = lines.join('\\n');\n\t}\n\n\tstr = str\n\t\t.replace(/ {2}/gm, ' &nbsp;')\n\t\t.replace(/^ /gm, '&nbsp;')\n\t\t.replace(/\\t/gm, '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;')\n\t\t.replace(/\\r?\\n/gm, '<br>');\n\n\treturn str;\n}\n\n// TODO move to commons submodule\nexport function htmlEncode(str, includeSpaces) {\n\tif (!str) {\n\t\treturn '';\n\t}\n\tif (typeof str !== 'string') {\n\t\tstr = str.toString ? str.toString() : '';\n\t}\n\tif (includeSpaces) {\n\t\treturn str\n\t\t\t.replace(/[&]/g, '&amp;')\n\t\t\t.replace(/ {2}/g, ' &nbsp;')\n\t\t\t.replace(/[<]/g, '&lt;')\n\t\t\t.replace(/[>]/g, '&gt;');\n\t}\n\treturn str.replace(/[&]/g, '&amp;').replace(/[<]/g, '&lt;').replace(/[>]/g, '&gt;');\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, {\n\tFC,\n\tmemo,\n\tuseCallback,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState\n} from 'react';\n\nimport {\n\tButton,\n\tContainer,\n\tIcon,\n\tIconButton,\n\tMultiButton,\n\tPadding,\n\tRow,\n\tText\n} from '@zextras/carbonio-design-system';\nimport { editSettings, t, useUserSettings } from '@zextras/carbonio-shell-ui';\nimport { filter, forEach, isArray, isNull, reduce, some } from 'lodash';\nimport { Trans } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { getOriginalContent, getQuotedTextOnly } from './get-quoted-text-util';\nimport { isAvailableInTrusteeList } from './utils';\nimport { ParticipantRole } from '../carbonio-ui-commons/constants/participants';\nimport { getNoIdentityPlaceholder } from '../helpers/identities';\nimport type { MailMessagePart, Participant } from '../types';\n\nexport const _CI_REGEX = /^<(.*)>$/;\nexport const _CI_SRC_REGEX = /^cid:(.*)$/;\nconst LINK_REGEX =\n\t/(?:https?:\\/\\/|www\\.)+(?![^\\s]*?\")([\\w.,@?!^=%&amp;:()/~+#-]*[\\w@?!^=%&amp;()/~+#-])?/gi;\nconst LINE_BREAK_REGEX = /(?:\\r\\n|\\r|\\n)/g;\n\nexport const plainTextToHTML = (str: string): string => {\n\tif (str !== undefined && str !== null) {\n\t\treturn str.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(LINE_BREAK_REGEX, '<br />');\n\t}\n\treturn '';\n};\n\nconst BannerContainer = styled(Container)`\n\tborder-bottom: 0.0625rem solid ${(props): string => props.theme.palette.warning.regular};\n\tpadding: 0.5rem 1rem;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\theight: 3.625rem;\n\tborder-radius: 0.125rem 0.125rem 0 0;\n`;\n\nconst StyledMultiBtn = styled(MultiButton)`\n\tborder: 0.0625rem solid ${(props): string => props.theme.palette.warning.regular};\n\theight: 2rem;\n\t& > * {\n\t\tbackground-color: ${(props): string => props.theme.palette.transparent.regular} !important;\n\t\tcursor: pointer;\n\t}\n\t&:hover {\n\t\tbackground-color: ${({ theme }): string => theme.palette.gray6.focus};\n\t}\n\tsvg {\n\t\tpadding: 0 !important;\n\t}\n`;\n\nconst replaceLinkToAnchor = (content: string): string => {\n\tif (content === '' || content === undefined) {\n\t\treturn '';\n\t}\n\treturn content.replace(LINK_REGEX, (url) => {\n\t\tconst wrap = document.createElement('div');\n\t\tconst anchor = document.createElement('a');\n\t\tlet href = url.replace(/&amp;/g, '&');\n\t\tif (!url.startsWith('http') && !url.startsWith('https')) {\n\t\t\thref = `http://${url}`;\n\t\t}\n\t\tanchor.href = href.replace(/&#64;/g, '@').replace(/&#61;/g, '=');\n\t\tanchor.target = '_blank';\n\t\tanchor.innerHTML = url;\n\t\twrap.appendChild(anchor);\n\t\treturn wrap.innerHTML;\n\t});\n};\n\nconst _TextMessageRenderer: FC<{ body: { content: string; contentType: string } }> = ({ body }) => {\n\tconst [showQuotedText, setShowQuotedText] = useState(false);\n\tconst orignalText = getOriginalContent(body.content, false);\n\tconst quoted = getQuotedTextOnly(body.content, false);\n\n\tconst contentToDisplay = useMemo(\n\t\t() => (showQuotedText ? body.content : orignalText),\n\t\t[showQuotedText, body.content, orignalText]\n\t);\n\n\tconst convertedHTML = useMemo(\n\t\t() => replaceLinkToAnchor(plainTextToHTML(contentToDisplay)),\n\t\t[contentToDisplay]\n\t);\n\treturn (\n\t\t<>\n\t\t\t<Text\n\t\t\t\toverflow=\"break-word\"\n\t\t\t\tcolor=\"text\"\n\t\t\t\tstyle={{ fontFamily: 'monospace' }}\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: convertedHTML\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{!showQuotedText && quoted.length > 0 && (\n\t\t\t\t<Row mainAlignment=\"center\" crossAlignment=\"center\" padding={{ top: 'medium' }}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel={t('label.show_quoted_text', 'Show quoted text')}\n\t\t\t\t\t\ticon=\"EyeOutline\"\n\t\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\t\tonClick={(): void => setShowQuotedText(true)}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\ntype _HtmlMessageRendererType = {\n\tmsgId: string;\n\tbody: { content: string; contentType: string };\n\tparts: MailMessagePart[];\n\tparticipants: Participant[] | undefined;\n};\nconst _HtmlMessageRenderer: FC<_HtmlMessageRendererType> = ({\n\tmsgId,\n\tbody,\n\tparts,\n\tparticipants\n}) => {\n\tconst divRef = useRef<HTMLDivElement>(null);\n\tconst iframeRef = useRef<HTMLIFrameElement>(null);\n\tconst [showQuotedText, setShowQuotedText] = useState(false);\n\n\tconst settingsPref = useUserSettings()?.prefs;\n\tconst from =\n\t\tfilter(participants, { type: ParticipantRole.FROM })[0]?.address ?? getNoIdentityPlaceholder();\n\tconst domain = from?.substring(from.lastIndexOf('@') + 1);\n\n\tconst [showExternalImage, setShowExternalImage] = useState(false);\n\tconst [displayBanner, setDisplayBanner] = useState(true);\n\t// const darkMode = useMemo(\n\t// \t() => find(settings.props, ['name', 'zappDarkreaderMode'])?._content,\n\t// \t[settings]\n\t// );\n\n\tconst orignalText = getOriginalContent(body.content, true);\n\tconst quoted = getQuotedTextOnly(body.content, true);\n\n\tconst contentToDisplay = useMemo(\n\t\t() => (showQuotedText ? body.content : orignalText),\n\t\t[showQuotedText, body.content, orignalText]\n\t);\n\n\tconst hasExternalImages = useMemo(() => {\n\t\tconst parser = new DOMParser();\n\t\tconst htmlDoc = parser.parseFromString(contentToDisplay, 'text/html');\n\t\tconst images = htmlDoc.body.getElementsByTagName('img');\n\n\t\treturn some(images, (i) => i.hasAttribute('dfsrc'));\n\t}, [contentToDisplay]);\n\n\tconst showBanner = useMemo(\n\t\t() =>\n\t\t\thasExternalImages &&\n\t\t\t!isAvailableInTrusteeList(settingsPref.zimbraPrefMailTrustedSenderList ?? '', from) &&\n\t\t\tdisplayBanner,\n\t\t[from, hasExternalImages, settingsPref.zimbraPrefMailTrustedSenderList, displayBanner]\n\t);\n\tuseEffect(() => {\n\t\tif (isAvailableInTrusteeList(settingsPref.zimbraPrefMailTrustedSenderList ?? '', from))\n\t\t\tsetShowExternalImage(true);\n\t}, [from, settingsPref.zimbraPrefMailTrustedSenderList]);\n\n\tconst calculateHeight = (): void => {\n\t\tif (!isNull(iframeRef.current)) {\n\t\t\tiframeRef.current.style.height = '0';\n\t\t\tiframeRef.current.style.height = `${\n\t\t\t\t(iframeRef?.current?.contentDocument?.body?.scrollHeight || 0) / 16 + 24 / 16\n\t\t\t}rem`;\n\t\t}\n\t};\n\n\tconst saveTrustee = useCallback(\n\t\t(trustee) => {\n\t\t\tlet trusteeAddress: string[] = [];\n\t\t\tif (settingsPref.zimbraPrefMailTrustedSenderList) {\n\t\t\t\ttrusteeAddress = isArray(settingsPref.zimbraPrefMailTrustedSenderList)\n\t\t\t\t\t? settingsPref.zimbraPrefMailTrustedSenderList\n\t\t\t\t\t: // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tsettingsPref.zimbraPrefMailTrustedSenderList?.split(',');\n\t\t\t}\n\n\t\t\teditSettings({\n\t\t\t\tprefs: { zimbraPrefMailTrustedSenderList: [...trusteeAddress, trustee] }\n\t\t\t}).then((res) => {\n\t\t\t\tif (res.type?.includes('fulfilled')) {\n\t\t\t\t\tsetShowExternalImage(true);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[settingsPref.zimbraPrefMailTrustedSenderList]\n\t);\n\n\tconst items = useMemo<any[]>(\n\t\t() => [\n\t\t\t{\n\t\t\t\tid: 'always-allow-address',\n\t\t\t\tlabel: (\n\t\t\t\t\t<Trans\n\t\t\t\t\t\ti18nKey=\"label.always_allow_address\"\n\t\t\t\t\t\tdefaults=\"Always allow from <strong>{{values}}</strong>\"\n\t\t\t\t\t\tvalues={{ from }}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tonClick: () => saveTrustee(from)\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'always-allow-domain',\n\t\t\t\tlabel: (\n\t\t\t\t\t<Trans\n\t\t\t\t\t\ti18nKey=\"label.always_allow_domain\"\n\t\t\t\t\t\tdefaults=\"Always allow from <strong>{{values}}</strong> domain\"\n\t\t\t\t\t\tvalues={{ domain }}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tonClick: () => saveTrustee(domain)\n\t\t\t}\n\t\t],\n\t\t[from, domain, saveTrustee]\n\t);\n\n\tconst showImage = useMemo(\n\t\t() => showExternalImage && displayBanner,\n\t\t[displayBanner, showExternalImage]\n\t);\n\n\tuseLayoutEffect(() => {\n\t\tif (!isNull(iframeRef.current) && !isNull(iframeRef.current.contentDocument)) {\n\t\t\tiframeRef.current.contentDocument.open();\n\t\t\tiframeRef.current.contentDocument.write(contentToDisplay);\n\t\t\tiframeRef.current.contentDocument.close();\n\t\t}\n\t\tconst styleTag = document.createElement('style');\n\t\tconst styles = `\n\t\t\tmax-width: 100% !important;\n\t\t\tbody {\n\t\t\t\tmax-width: 100% !important;\n\t\t\t\tmargin: 0;\n\t\t\t\toverflow-y: hidden;\n\t\t\t\tfont-family: Roboto, sans-serif;\n\t\t\t\tfont-size: 0.875rem;\n\t\t\t\t${/* visibility: ${darkMode && darkMode !== 'disabled' ? 'hidden' : 'visible'}; */ ''}\n\t\t\t\tbackground-color: #ffffff;\n\t\t\t}\n\t\t\tbody pre, body pre * {\n\t\t\t\twhite-space: pre-wrap;\n\t\t\t\tword-wrap: anywhere !important;\n\t\t\t\ttext-wrap: suppress !important;\n\t\t\t}\n\t\t\timg {\n\t\t\t\tmax-width: 100%\n\t\t\t}\n\t\t\ttbody{position:relative !important}\n\t\t\ttd{\n\t\t\t\tmax-width: 100% !important;\n\t\t\t\toverflow-wrap: anywhere !important;\n\t\t\t}\n\t\t\t#bodyTable {\n\t\t\t\theight: fit-content\n\t\t\t}\n\t\t`;\n\t\tstyleTag.textContent = styles;\n\t\tif (!isNull(iframeRef.current) && !isNull(iframeRef.current.contentDocument))\n\t\t\tiframeRef.current.contentDocument.head.append(styleTag);\n\n\t\t// TODO: fix Dark Reader inside iframes\n\t\t// if (darkMode && darkMode !== 'disabled') {\n\t\t// \tconst modeSetting = darkMode === 'enabled' ? 'enable' : 'auto';\n\t\t// \tconst darkReaderScript = document.createElement('script');\n\t\t// \tdarkReaderScript.src = 'https://cdn.jsdelivr.net/npm/darkreader@4.9.32/darkreader.min.js';\n\t\t// \tdarkReaderScript.type = 'application/javascript';\n\t\t// \tiframeRef.current.contentDocument.body.append(darkReaderScript);\n\t\t// \tconst darkScriptEnable = document.createElement('script');\n\t\t// \tdarkScriptEnable.textContent = `if (document.readyState === 'complete') {document.body.style.visibility = 'visible';} else {window.onload = function(){ DarkReader.${modeSetting}();document.body.style.visibility = 'visible';}}`;\n\t\t// \tiframeRef.current.contentDocument.body.append(darkScriptEnable);\n\t\t// }\n\n\t\tcalculateHeight();\n\n\t\tconst imgMap = reduce(\n\t\t\tparts,\n\t\t\t(r, v) => {\n\t\t\t\tif (!_CI_REGEX.test(v.ci ?? '')) return r;\n\t\t\t\tr[_CI_REGEX.exec(v.ci ?? '')?.[1] ?? ''] = v;\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\t{} as any\n\t\t);\n\n\t\tconst images =\n\t\t\tiframeRef.current &&\n\t\t\tiframeRef.current.contentDocument &&\n\t\t\tiframeRef.current.contentDocument.body.getElementsByTagName('img');\n\t\tif (images)\n\t\t\tforEach(images, (p: HTMLImageElement) => {\n\t\t\t\tif (p.hasAttribute('dfsrc') && showImage) {\n\t\t\t\t\tp.setAttribute('src', p.getAttribute('dfsrc') ?? '');\n\t\t\t\t}\n\t\t\t\tif (!_CI_SRC_REGEX.test(p.src)) return;\n\t\t\t\tconst ci = _CI_SRC_REGEX.exec(p.getAttribute('src') ?? '')?.[1] ?? '';\n\t\t\t\tif (imgMap[ci]) {\n\t\t\t\t\tconst part = imgMap[ci];\n\t\t\t\t\tp.setAttribute('pnsrc', p.getAttribute('src') ?? '');\n\t\t\t\t\tp.setAttribute('src', `/service/home/~/?auth=co&id=${msgId}&part=${part.name}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\tconst resizeObserver = new ResizeObserver(calculateHeight);\n\t\tdivRef.current && resizeObserver.observe(divRef.current);\n\n\t\treturn () => resizeObserver.disconnect();\n\t}, [contentToDisplay, msgId, parts, showImage]);\n\n\tconst multiBtnLabel = useMemo(() => t('label.view_images', 'VIEW IMAGES'), []);\n\treturn (\n\t\t<div ref={divRef} className=\"force-white-bg\">\n\t\t\t{showBanner && !showExternalImage && (\n\t\t\t\t<BannerContainer\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\tmainAlignment=\"space-between\"\n\t\t\t\t\tcrossAlignment=\"center\"\n\t\t\t\t\tpadding={{ all: 'large' }}\n\t\t\t\t\theight=\"3.625rem\"\n\t\t\t\t\tbackground=\"#FFF7DE\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t>\n\t\t\t\t\t<Row\n\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\tflexDirection: 'row'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Padding right=\"large\">\n\t\t\t\t\t\t\t<Icon icon=\"AlertTriangleOutline\" color=\"warning\" size=\"large\" />\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t<Text overflow=\"break-word\" size=\"small\">\n\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t'message.external_images_blocked',\n\t\t\t\t\t\t\t\t'External images have been blocked to protect you against potential spam'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row\n\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\tmainAlignment=\"flex-end\"\n\t\t\t\t\t\tpadding={{ left: 'small' }}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\tflexDirection: 'row'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StyledMultiBtn\n\t\t\t\t\t\t\tbackground=\"transparent\"\n\t\t\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\t\t\tlabel={multiBtnLabel}\n\t\t\t\t\t\t\tcolor=\"warning\"\n\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\tsetShowExternalImage(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdropdownProps={{\n\t\t\t\t\t\t\t\tmaxWidth: '31.25rem',\n\t\t\t\t\t\t\t\twidth: 'fit',\n\t\t\t\t\t\t\t\titems\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ticon=\"CloseOutline\"\n\t\t\t\t\t\t\tonClick={(): void => setDisplayBanner(false)}\n\t\t\t\t\t\t\tcustomSize={{\n\t\t\t\t\t\t\t\ticonSize: 'large',\n\t\t\t\t\t\t\t\tpaddingSize: 'small'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Row>\n\t\t\t\t</BannerContainer>\n\t\t\t)}\n\t\t\t<iframe\n\t\t\t\tdata-testid=\"message-renderer-iframe\"\n\t\t\t\ttitle={msgId}\n\t\t\t\tref={iframeRef}\n\t\t\t\tonLoad={calculateHeight}\n\t\t\t\tstyle={{\n\t\t\t\t\tborder: 'none',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{!showQuotedText && quoted.length > 0 && (\n\t\t\t\t<Row mainAlignment=\"center\" crossAlignment=\"center\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel={t('label.show_quoted_text', 'Show quoted text')}\n\t\t\t\t\t\ticon=\"EyeOutline\"\n\t\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\t\tonClick={(): void => setShowQuotedText(true)}\n\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst EmptyBody: FC = () => (\n\t<Container padding={{ bottom: 'medium' }}>\n\t\t<Text>{`(${t('messages.no_content', 'This message has no text content')}.)`}</Text>\n\t</Container>\n);\n\ntype MailMessageRendererProps = {\n\tparts: MailMessagePart[];\n\tbody?: { content: string; contentType: string };\n\tid: string;\n\tfragment?: string;\n\tparticipants?: Participant[];\n};\n\nconst MailMessageRenderer: FC<MailMessageRendererProps> = memo(\n\t({ parts, body, id, fragment, participants }) => {\n\t\tif (!body?.content?.length && !fragment) {\n\t\t\treturn <EmptyBody />;\n\t\t}\n\n\t\tif (body?.contentType === 'text/html') {\n\t\t\treturn (\n\t\t\t\t<_HtmlMessageRenderer msgId={id} body={body} parts={parts} participants={participants} />\n\t\t\t);\n\t\t}\n\t\tif (body?.contentType === 'text/plain') {\n\t\t\treturn <_TextMessageRenderer body={body} />;\n\t\t}\n\t\treturn <EmptyBody />;\n\t}\n);\n\nMailMessageRenderer.displayName = 'MailMessageRenderer';\n\nexport default MailMessageRenderer;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { map } from 'lodash';\nimport type { Participant } from '../../types';\n\nexport const getParticipantHeader = (participants: Participant[], type: string): string => {\n\tconst participantsList = map(\n\t\tparticipants,\n\t\t(f) => `${f.fullName || f.name || f.address} < ${f.address} > `\n\t).join(', ');\n\n\tif (participants.length === 0) return '';\n\treturn `\n    <tr>\n   <td style=\"\n      width: auto;\n      padding: 0.1875rem 0 0.1875rem 0;\n      vertical-align: top;\n      text-align: left;\n      font-weight: bold;\n      \">${type}: <span style=\"padding: 0.1875rem 0.1875rem 0.1875rem 0.1875rem; vertical-align: top; overflow: hidden;font-family: Roboto, sans-serif;\n      font-style: normal;\n      font-weight: 400;\n      font-size: 0.875rem;\n      line-height: 1.3125rem;\">${participantsList}</span></td>\n</tr>\n\n   `;\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { filter } from 'lodash';\nimport moment from 'moment';\nimport { type MailMessage } from '../../types';\nimport { getParticipantHeader } from './get-participant-header';\nimport { getAttachments } from './get-attachments';\nimport { getSubject } from './get-subject';\n\nexport function getHeader(msg: MailMessage, content: string): string {\n\tconst { participants, subject } = msg;\n\tconst from = filter(participants, { type: 'f' });\n\tconst to = filter(participants, { type: 't' });\n\tconst cc = filter(participants, { type: 'c' });\n\tconst bcc = filter(participants, { type: 'b' });\n\tconst replyTo = filter(participants, { type: 'r' });\n\tconst msgTime = moment(msg.date).format('ddd, MMM DD, YYYY hh:mm A');\n\tconst hasAttachments = msg.attachments && msg.attachments?.length > 0;\n\n\treturn `\n    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"Msg\" style=\"padding:0.625rem;\">\n        <tr>\n            <td  colspan=\"2\">\n                <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"background-color:#EEEEEE;\" >\n                    <tr>\n                        <td align=\"left\">\n                            <table width=\"100%\" align=\"left\" cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n                                ${getParticipantHeader(from, 'From')}\n                                ${getSubject(subject, 'Subject')}\n                                ${getParticipantHeader(to, 'To')} \n                                ${getParticipantHeader(cc, 'Cc')}\n                                ${getParticipantHeader(bcc, 'Bcc')}\n                                ${getParticipantHeader(replyTo, 'Reply To')}\n                        </table>\n                        </td>\n                        <td valign='top'>\n                            <table width=\"100%\" cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n                                <tr>\n                                    <td nowrap align='right' class='MsgHdrSent'>\n                                        <span id=\"messageDisplayTime_19062\">${msgTime}</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n\t\t  <tr>\n      ${hasAttachments ? getAttachments({ msg }) : ''}\n\n   </tr>\n        <td id=\"iframeBody\" style=\"padding:0.3125rem; font-family: monospace\" valign='top' colspan=\"2\">\n            <div id=\"iframeBody\" class=\"MsgBody-html\">\n                ${content}\n            </div>\n            <hr>\n        </td>\n    </tr>\n</table>`;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const getSubject = (content: string, subject: string): string => `<tr>\n    <td style=\"\n       width: auto;\n       padding: 0.1875rem 0 0.1875rem 0;\n       vertical-align: top;\n       text-align: left;\n       font-weight: bold;\n       \">${subject}: <span style=\"padding: 0.1875rem 0.1875rem 0.1875rem 0.1875rem; vertical-align: top; overflow: hidden;font-family: Roboto, sans-serif;\n       font-style: normal;\n       font-weight: 400;\n       font-size: 0.875rem;\n       line-height: 1.3125rem;\">${content}</span></td>\n    </tr>`;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { map } from 'lodash';\nimport type { MailMessage } from '../../types';\n\nexport const getAttachments = ({ msg }: { msg: MailMessage }): string =>\n\t`\n\t<tr\n   style=\"\n   display: flow-root;\n   margin-bottom: 1rem\"\n   >\n   <td style=\"\n      margin: 0.5rem;\n      display: flex;\n      \">\n      <div style=\"\n         color: #828282;\n         display: flex;\n         font-family: Roboto, sans-serif;\n         font-size: 1rem;\n         width: fill-content\">\n         ${t('label.attachment_plural', 'Attachments')}:\n      </div>\n   </td>\n   ${map(\n\t\t\tmsg.attachments,\n\t\t\t(item) => `\n   <td style=\"\n      color: #000000;\n      white-space: nowrap;\n      width: 100%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      display: flex;\n      \"\n      >\n      <div style=\"\n         display: flex;\n         \">\n         <svg \n            style=\"\n            width: 0.75rem;\n            display: flex;\n            fill: #333333;\n            margin: 0 0.375rem 0 0.5rem;\n            \" \n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <path\n               d=\"M9.29 21a6.23 6.23 0 0 1-4.43-1.88 6 6 0 0 1-.22-8.49L12 3.2A4.11 4.11 0 0 1 15 2a4.48 4.48 0 0 1 3.19 1.35 4.36 4.36 0 0 1 .15 6.13l-7.4 7.43a2.54 2.54 0 0 1-1.81.75 2.72 2.72 0 0 1-1.95-.82 2.68 2.68 0 0 1-.08-3.77l6.83-6.86a1 1 0 0 1 1.37 1.41l-6.83 6.86a.68.68 0 0 0 .08.95.78.78 0 0 0 .53.23.56.56 0 0 0 .4-.16l7.39-7.43a2.36 2.36 0 0 0-.15-3.31 2.38 2.38 0 0 0-3.27-.15L6.06 12a4 4 0 0 0 .22 5.67 4.22 4.22 0 0 0 3 1.29 3.67 3.67 0 0 0 2.61-1.06l7.39-7.43a1 1 0 1 1 1.42 1.41l-7.39 7.43A5.65 5.65 0 0 1 9.29 21z\"\n               data-name=\"attach\"\n               />\n         </svg>\n         <p style=\"\n            font-family: Roboto, sans-serif;\n            font-size: 0.75rem;\n            display: flex;\n            line-height: 0;\n            \">\n            ${item.filename}\n         </p>\n      </div>\n   </td>\n   `\n\t\t).join('')}\n   </td>\n</tr>\n`;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { filter, forEach, isEmpty, map, reduce } from 'lodash';\n\nimport { getBodyWrapper } from './get-body-wrapper';\nimport { getCompleteHTML } from './get-complete-html';\nimport { getHeader } from './get-header';\nimport { findAttachments } from '../../helpers/attachments';\nimport { type MailMessage } from '../../types';\nimport { _CI_REGEX, _CI_SRC_REGEX, plainTextToHTML } from '../mail-message-renderer';\n\nfunction getSs(conversationMessage: Array<MailMessage>): Array<string> {\n\treturn map(conversationMessage, (msg) => {\n\t\tconst { body } = msg;\n\t\tswitch (body.contentType) {\n\t\t\tcase 'text/html': {\n\t\t\t\tconst parts = findAttachments(msg.parts ?? [], []);\n\t\t\t\tconst parser = new DOMParser();\n\t\t\t\tconst htmlDoc = parser.parseFromString(body.content, 'text/html');\n\t\t\t\tconst imgMap = reduce(\n\t\t\t\t\tparts as any,\n\t\t\t\t\t(r, v) => {\n\t\t\t\t\t\tif (!_CI_REGEX.test(v.ci)) return r;\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tr[_CI_REGEX.exec(v.ci)[1]] = v;\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t);\n\n\t\t\t\tconst images = htmlDoc.getElementsByTagName('img');\n\t\t\t\tforEach(images, (p) => {\n\t\t\t\t\tif (p.hasAttribute('dfsrc')) {\n\t\t\t\t\t\tp.setAttribute('src', p.getAttribute('dfsrc') ?? '');\n\t\t\t\t\t}\n\t\t\t\t\tif (!_CI_SRC_REGEX.test(p.src)) return;\n\t\t\t\t\tconst ci = _CI_SRC_REGEX.exec(p.getAttribute('src') ?? '')?.[1] ?? '';\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (imgMap[ci]) {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tconst part = imgMap[ci];\n\t\t\t\t\t\tp.setAttribute('pnsrc', p.getAttribute('src') ?? '');\n\t\t\t\t\t\tp.setAttribute('src', `/service/home/~/?auth=co&id=${msg.id}&part=${part.name}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn getHeader(msg, htmlDoc.body.innerHTML);\n\t\t\t}\n\t\t\tcase 'text/plain': {\n\t\t\t\treturn !isEmpty(body.content)\n\t\t\t\t\t? getHeader(msg, `<p>${plainTextToHTML(body.content)}</p>`)\n\t\t\t\t\t: getHeader(msg, '<p>No Content</p>');\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn getHeader(msg, '<p>No Content</p>');\n\t\t}\n\t});\n}\n\nexport const getContentForPrint = ({\n\tmessages,\n\tconversations,\n\tisMsg = false\n}: {\n\tmessages: any;\n\tconversations: any;\n\tisMsg: boolean;\n}): string => {\n\tlet content = '';\n\tmap(conversations, (conv) => {\n\t\tconst filteredMessages = filter(messages, { conversation: conv.id }) ?? [];\n\t\tconst conversationMessages = isMsg ? messages : filteredMessages;\n\t\tconst ss = getSs(conversationMessages);\n\t\tcontent += getBodyWrapper({ content: ss.join('<br/>'), subject: conv.subject });\n\t});\n\n\treturn getCompleteHTML({ content });\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport function getBodyWrapper({ content, subject }: { content: string; subject: string }): string {\n\treturn `\n        <div className=\"ZhCallListPrintView\">\n\t\t\t<table cellPadding=\"0\" cellSpacing=\"5\" width=\"100%\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div className=\"ZhPrintSubject\" \n                        style=\"background: rgba(176, 195, 231, 0.8);\n                        padding-left: 0.25rem;\n                        display: flex;\n                        align-items: center;\">\n\t\t\t\t\t\t\t<b>${subject}</b>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>${content}</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>`;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { getUserAccount } from '@zextras/carbonio-shell-ui';\n\nimport { NO_ACCOUNT_NAME } from '../../constants';\n\nexport function getCompleteHTML({ content }: { content: string }): string {\n\tconst accountName = getUserAccount()?.name ?? NO_ACCOUNT_NAME;\n\treturn `\t<html>\n\t\t<head>\n\t\t\t<title>Carbonio</title>\n                <style>\n                    max-width: 100% !important;\n                    body {\n                        max-width: 100% !important;\n                        margin: 0;\n                        overflow-y: hidden;\n                        font-family: Roboto, sans-serif;\n                        font-size: 0.875rem;                      \n                        background-color: #ffffff;\n                    }\n                    body pre, body pre * {\n                        white-space: pre-wrap;\n                        word-wrap: anywhere !important;\n                        text-wrap: suppress !important;\n                    }\n                    img {\n                        max-width: 100%\n                    }\n                    tbody{position:relative !important}\n                    td{\n                        max-width: 100% !important;\n                        overflow-wrap: anywhere !important;\n                    }\n                    \n                    .ZhCallListPrintView td, .zPrintMsgs :not(font){\n                        font-family: Tahoma,Arial,Helvetica,sans-serif;\n                        font-size: 12pt;\n                    }\n                    .ZhPrintSubject {\n                        padding: 0.625rem;\n                        font-weight: bold;\n                    }\n                    table.Msg img {\n                        max-width: 100%;\n                    }\n                    \n                    /* span, p td or div will honour parent's styling if these elements have their own styling that will get applied else will fallback to defaultPrintFontSize */\n                    *[style*=\"font\"] > span, *[style*=\"font\"] > p, *[style*=\"font\"] > td, *[style*=\"font\"] > div {\n                        font-family: inherit;\n                        font-size: inherit;\n                    }\n\n                    .MsgHdrName {\n                        width: 10%;\n                        padding: 0.1875rem 0 0.1875rem 0;\n                        vertical-align: top;\n                        text-align: right;\n                        font-weight: bold;\n                        white-space: nowrap;\n                    }\n                    .MsgHdrValue {\n                        padding: 0.1875rem 0.1875rem 0.1875rem 0.1875rem;\n                        vertical-align: top;\n                        overflow: hidden;\n                    }\n                    .footer {\n                        font-size: 0.5625rem;\n                        text-align: left;\n                        padding-left: 1.25rem;\n                    }\n                        \n                    @page {\n                        size: A4;\n                        margin: 11mm 17mm 17mm 17mm;\n                    }\n                        \n                    @media print {\n                        .footer {\n                            position: fixed;\n                            bottom: 0;\n                        }\n                        \n                        .content-block, p {\n                            page-break-inside: avoid;\n                        }\n                        \n                        html, body {\n                            width: 210mm;\n                            height: 297mm;\n                        }\n                    }\n             </style>\n\t\t</head>\n\t\t<body>\n\t\t\t<table cellPadding=\"0\" cellSpacing=\"5\" width=\"100%\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<b>Carbonio</b>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td nowrap width=\"1%\">\n\t\t\t\t\t\t<b>${accountName}</b>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<hr />${content}\n\t\t\t<div className=\"footer\">${window.location.hostname} </div>\n\t\t\t<script type=\"text/javascript\">setTimeout('window.print()', 3000);</script>\n\t\t</body>\n\t</html>`;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { Account, getUserAccount } from '@zextras/carbonio-shell-ui';\nimport { find, map } from 'lodash';\n\nimport { convertHtmlToPlainText } from '../carbonio-ui-commons/utils/text/html';\nimport { LineType } from '../commons/utils';\nimport type { EditorText } from '../types/editor';\nimport type { SignatureDescriptor } from '../types/signatures';\n\nconst NO_SIGNATURE_ID = '11111111-1111-1111-1111-111111111111';\nconst NO_SIGNATURE_LABEL = 'No signature';\n\n/**\n * Match the first string which is between a\n * signature separator and either a quoted text\n * delimiter or the end of the content\n */\nconst PLAINTEXT_SIGNATURE_REGEX = new RegExp(\n\t`^(${LineType.SIGNATURE_PRE_SEP}\\\\n)(((?!\\\\s${LineType.PLAINTEXT_SEP}$).)*)`,\n\t'ms'\n);\n\n/**\n * Returns signatures descriptors for the given account\n * @param account\n */\nconst getSignatures = (account: Account | undefined): Array<SignatureDescriptor> => {\n\tconst signatureArray = [\n\t\t{\n\t\t\tlabel: NO_SIGNATURE_LABEL,\n\t\t\tvalue: { description: '', id: NO_SIGNATURE_ID }\n\t\t}\n\t];\n\tmap(account?.signatures?.signature, (item) =>\n\t\tsignatureArray.push({\n\t\t\t// FIXME the Account type defined in Shell needs to be refactored (signatures and identities type)\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tlabel: item.name,\n\t\t\t// FIXME the Account type defined in Shell needs to be refactored (signatures and identities type)\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tvalue: { description: item.content ? item.content[0]._content : '', id: item?.id }\n\t\t})\n\t);\n\treturn signatureArray;\n};\n\n/**\n * Returns signature descriptor for the given account and signature id\n * @param account\n * @param signatureId\n * @param fallbackOnFirst - If set to true and if no signature matches the give id (or the given id is undefined) the\n * first signature of the account is returned, instead of returning undefined\n */\nconst getSignature = (\n\taccount: Account | undefined,\n\tsignatureId: string,\n\tfallbackOnFirst?: boolean\n): SignatureDescriptor | undefined => {\n\tconst signatures = getSignatures(account);\n\tconst result = find(\n\t\tsignatures,\n\t\t(signature: SignatureDescriptor) => signature.value.id === signatureId\n\t);\n\n\treturn result ?? (fallbackOnFirst ? signatures?.[0] : undefined);\n};\n\n/**\n * Returns the signature text value for the given account and signature id\n * @param account\n * @param signatureId\n */\nconst getSignatureValue = (account: Account | undefined, signatureId: string): string =>\n\tgetSignature(account, signatureId)?.value.description ?? '';\n\n/**\n * Composes the body of an email with the given signature\n * @param signatureValue\n * @param isRichText\n */\nconst composeMailBodyWithSignature = (\n\tsignatureValue: string | undefined,\n\tisRichText: boolean\n): string => {\n\tif (!signatureValue) {\n\t\treturn '';\n\t}\n\n\treturn isRichText\n\t\t? `<p></p><div class=\"${LineType.SIGNATURE_CLASS}\">${signatureValue}</div>`\n\t\t: `\\n\\n${LineType.SIGNATURE_PRE_SEP}\\n${convertHtmlToPlainText(signatureValue)}`;\n};\n\n/**\n * Replaces the signature in a HTML message body.\n *\n * @param body - HTML message body\n * @param newSignature - content of the new signature\n */\nconst replaceSignatureOnHtmlBody = (body: string, newSignature: string): string => {\n\tconst doc = new DOMParser().parseFromString(body, 'text/html');\n\n\t// Get the element which wraps the signature\n\tconst signatureWrappers = doc.getElementsByClassName(LineType.SIGNATURE_CLASS);\n\n\tlet signatureWrapper = null;\n\n\t// Locate the separator\n\tconst separator = doc.getElementById(LineType.HTML_SEP_ID);\n\n\t// Locate the first signature. If no wrapper is found then the unchanged mail body is returned\n\tsignatureWrapper = signatureWrappers.item(0);\n\tif (signatureWrapper == null) {\n\t\treturn body;\n\t}\n\n\t/*\n\t * If a separator is present it should be located after the signature\n\t * (the content after the separator is quoted text which shouldn't be altered).\n\t * Otherwise the original body content is returned\n\t */\n\tif (\n\t\tseparator &&\n\t\tsignatureWrapper.compareDocumentPosition(separator) !== Node.DOCUMENT_POSITION_FOLLOWING\n\t) {\n\t\treturn body;\n\t}\n\n\tsignatureWrapper.innerHTML = newSignature;\n\treturn doc.documentElement.innerHTML;\n};\n\n/**\n * Replaces the signature in a plain text message body\n *\n * @param body - plain text message body\n * @param newSignature - signature content\n */\nconst replaceSignatureOnPlainTextBody = (body: string, newSignature: string): string => {\n\t// If no eligible signature is found the original body is returned\n\tif (!body.match(PLAINTEXT_SIGNATURE_REGEX)) {\n\t\treturn body;\n\t}\n\n\t// Locate the first quoted text separator\n\tconst quotedTextSeparatorPos = body.indexOf(LineType.PLAINTEXT_SEP);\n\n\tconst match = body.match(PLAINTEXT_SIGNATURE_REGEX);\n\n\t/*\n\t * If the body content doesn't match the regex or if it matches it\n\t * but after a quoted-text separator (= the target signature is\n\t * located inside the quoted text. This could happen when the user\n\t * will manually remove the preset signature inside the UNquoted text.\n\t */\n\tif (!match || (quotedTextSeparatorPos >= 0 && quotedTextSeparatorPos < (match.index ?? 0))) {\n\t\treturn body;\n\t}\n\n\t// Replace the target signature\n\treturn body.replace(PLAINTEXT_SIGNATURE_REGEX, `$1${newSignature}`);\n};\n\n/**\n * Composes the body of an email with signature of given signature id\n * @param text\n * @param signatureId\n */\nconst getMailBodyWithSignature = (text: EditorText, signatureId = ''): EditorText => {\n\tconst signatureValue = signatureId !== '' ? getSignatureValue(getUserAccount(), signatureId) : '';\n\tconst plainSignatureValue =\n\t\tsignatureValue !== '' ? `\\n${convertHtmlToPlainText(signatureValue)}\\n\\n` : '';\n\tconst richText = replaceSignatureOnHtmlBody(text.richText, signatureValue);\n\tconst plainText = replaceSignatureOnPlainTextBody(text.plainText, plainSignatureValue);\n\treturn { plainText, richText };\n};\n\nexport {\n\tNO_SIGNATURE_ID,\n\tNO_SIGNATURE_LABEL,\n\tgetSignatures,\n\tgetSignature,\n\tgetSignatureValue,\n\tcomposeMailBodyWithSignature,\n\treplaceSignatureOnPlainTextBody,\n\tgetMailBodyWithSignature\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport { getConv } from './get-conv';\nimport { getMsg } from './get-msg';\nimport { ParticipantRole } from '../../carbonio-ui-commons/constants/participants';\nimport { getAddressOwnerAccount, getIdentityDescriptor } from '../../helpers/identities';\nimport { getParticipantsFromMessage } from '../../helpers/messages';\nimport { MailMessage, SendMsgResult, SendMsgWithSmartLinksResponse } from '../../types';\nimport type { SaveDraftRequest, SaveDraftResponse, SendMsgParameters } from '../../types';\nimport { generateMailRequest } from '../editor-slice-utils';\nimport { createSoapSendMsgRequestFromEditor } from '../zustand/editor/editor-transformations';\n\nexport const sendMsg = createAsyncThunk<any, { msg: MailMessage }>(\n\t'sendMsg',\n\tasync ({ msg }, { rejectWithValue, dispatch }) => {\n\t\tconst toSend = generateMailRequest(msg);\n\n\t\tconst from = getParticipantsFromMessage(msg, ParticipantRole.FROM)?.[0].address;\n\n\t\t// Get the sender account. If not determined then undefined is passed to the soapFetch which will use the default one\n\t\tconst account = getAddressOwnerAccount(from);\n\t\tlet resp;\n\t\ttry {\n\t\t\tresp = await soapFetch<SaveDraftRequest, SaveDraftResponse>(\n\t\t\t\t'SendMsg',\n\t\t\t\t{\n\t\t\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\t\t\tm: toSend\n\t\t\t\t},\n\t\t\t\taccount ?? undefined\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\treturn rejectWithValue(e);\n\t\t}\n\n\t\tconst response = resp?.Fault ? { ...resp.Fault, error: true } : resp;\n\t\tif (response?.error) {\n\t\t\treturn rejectWithValue(response);\n\t\t}\n\n\t\tif (response?.m && response?.m[0]?.id) {\n\t\t\tdispatch(getMsg({ msgId: response.m[0].id }));\n\t\t}\n\t\tif (response?.m && response?.m[0]?.cid) {\n\t\t\tdispatch(getConv({ conversationId: response.m[0].cid }));\n\t\t}\n\t\treturn { response };\n\t}\n);\n\nexport const sendMsgFromEditor = createAsyncThunk<SendMsgResult, SendMsgParameters>(\n\t'sendMsg',\n\tasync ({ editor }, { rejectWithValue, dispatch }) => {\n\t\tif (!editor) {\n\t\t\treturn rejectWithValue('No editor provided');\n\t\t}\n\n\t\tif (!editor.identityId) {\n\t\t\treturn rejectWithValue('Missing sender');\n\t\t}\n\n\t\tconst msg = createSoapSendMsgRequestFromEditor(editor);\n\n\t\tconst identity = getIdentityDescriptor(editor.identityId);\n\n\t\tlet resp: SendMsgWithSmartLinksResponse;\n\t\ttry {\n\t\t\tresp = await soapFetch<SaveDraftRequest, SaveDraftResponse>(\n\t\t\t\t'SendMsg',\n\t\t\t\t{\n\t\t\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\t\t\tm: msg\n\t\t\t\t},\n\t\t\t\tidentity?.ownerAccount ?? undefined\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\treturn rejectWithValue(e);\n\t\t}\n\n\t\tconst response: SendMsgResult['response'] = resp?.Fault ? { ...resp.Fault, error: true } : resp;\n\t\tif (response?.error) {\n\t\t\treturn rejectWithValue(response);\n\t\t}\n\t\tif (response?.m && response?.m[0]?.id) {\n\t\t\tdispatch(getMsg({ msgId: response.m[0].id }));\n\t\t}\n\t\tif (response?.m && response?.m[0]?.cid) {\n\t\t\tdispatch(getConv({ conversationId: response.m[0].cid }));\n\t\t}\n\t\treturn { response };\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { AccountSettingsPrefs, FOLDERS } from '@zextras/carbonio-shell-ui';\nimport { concat, filter, find, forEach, isEmpty, map, reduce, some } from 'lodash';\nimport moment from 'moment';\n\nimport {\n\tParticipantRole,\n\tParticipantRoleType\n} from '../carbonio-ui-commons/constants/participants';\nimport { convertHtmlToPlainText } from '../carbonio-ui-commons/utils/text/html';\nimport { htmlEncode } from '../commons/get-quoted-text-util';\nimport { LineType } from '../commons/utils';\nimport { getAddressOwnerAccount, getIdentityDescriptor } from '../helpers/identities';\nimport type {\n\tInlineAttachments,\n\tMailAttachmentParts,\n\tMailMessage,\n\tMailMessagePart,\n\tMailsEditor,\n\tParticipant,\n\tSharedParticipant,\n\tSoapDraftMessageObj\n} from '../types';\n\nexport const retrieveAttachmentsType = (\n\toriginal: MailMessage,\n\tdisposition: string\n): Array<MailAttachmentParts> =>\n\treduce(\n\t\toriginal?.parts?.[0]?.parts ?? [],\n\t\t(acc, part) =>\n\t\t\tpart.disposition && part.disposition === disposition\n\t\t\t\t? [\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpart: part.name,\n\t\t\t\t\t\t\tmid: original.id,\n\t\t\t\t\t\t\trequiresSmartLinkConversion: !!part.requiresSmartLinkConversion\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t: acc,\n\t\t[] as Array<MailAttachmentParts>\n\t);\n\nexport const retrieveFROM = (original: MailMessage): Array<Participant> =>\n\tfilter(original.participants, (c: Participant): boolean => c.type === ParticipantRole.FROM);\n\nexport const changeParticipantRole = (\n\toriginal: MailMessage,\n\tpreviousRole: ParticipantRoleType,\n\tnewRole: ParticipantRoleType\n): Array<Participant> =>\n\tmap(\n\t\tfilter(original.participants, (c) => c.type === previousRole),\n\t\t(c) => ({ ...c, type: newRole })\n\t);\n\nexport const changeTypeOfParticipants = (\n\tparticipants: Array<Participant>,\n\tnewRole: ParticipantRoleType\n): Array<Participant> =>\n\tmap(participants, (c: Participant): Participant => ({ ...c, type: newRole }));\n\nexport const retrieveReplyTo = (original: MailMessage): Array<Participant> => {\n\tconst replyToParticipants = filter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean => c.type === ParticipantRole.REPLY_TO\n\t);\n\tif (replyToParticipants.length === 0) {\n\t\tif (original.parent === FOLDERS.SENT) {\n\t\t\treturn filter(\n\t\t\t\toriginal.participants,\n\t\t\t\t(c: Participant): boolean => c.type === ParticipantRole.TO\n\t\t\t);\n\t\t}\n\t\treturn changeParticipantRole(original, ParticipantRole.FROM, ParticipantRole.TO);\n\t}\n\treturn changeParticipantRole(original, ParticipantRole.REPLY_TO, ParticipantRole.TO);\n};\n\nexport const retrieveTO = (original: MailMessage): Array<Participant> =>\n\tfilter(original.participants, (c: Participant): boolean => c.type === ParticipantRole.TO);\n\nexport function retrieveALL(\n\toriginal: MailMessage,\n\treplySenderAccountName: string\n): Array<Participant> {\n\tconst toEmails = filter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean => c.type === ParticipantRole.TO\n\t);\n\tconst fromEmails = filter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean =>\n\t\t\tc.type === ParticipantRole.FROM &&\n\t\t\treplySenderAccountName !== getAddressOwnerAccount(c.address)\n\t);\n\tconst replyToParticipants = filter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean => c.type === ParticipantRole.REPLY_TO\n\t);\n\n\tconst isSentByMe = some(\n\t\tfilter(original.participants, (c: Participant): boolean => c.type === ParticipantRole.FROM),\n\t\t(c: Participant): boolean => replySenderAccountName === getAddressOwnerAccount(c.address)\n\t);\n\tif (replyToParticipants.length === 0) {\n\t\tif (original.parent === FOLDERS.SENT || original.isSentByMe || isSentByMe) {\n\t\t\treturn filter(toEmails, (c) => replySenderAccountName !== getAddressOwnerAccount(c.address))\n\t\t\t\t.length === 0\n\t\t\t\t? toEmails\n\t\t\t\t: filter(toEmails, (c) => replySenderAccountName !== getAddressOwnerAccount(c.address));\n\t\t}\n\t\treturn changeTypeOfParticipants(fromEmails, ParticipantRole.TO);\n\t}\n\treturn changeParticipantRole(original, ParticipantRole.REPLY_TO, ParticipantRole.TO);\n}\n\nexport const retrieveCCForEditNew = (original: MailMessage): Array<Participant> =>\n\tfilter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean => c.type === ParticipantRole.CARBON_COPY\n\t);\n\nexport function retrieveCC(\n\toriginal: MailMessage,\n\treplySenderAccountName: string\n): Array<Participant> {\n\tconst toEmails = filter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean =>\n\t\t\tc.type === ParticipantRole.TO && replySenderAccountName !== getAddressOwnerAccount(c.address)\n\t);\n\tconst ccEmails = filter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean =>\n\t\t\tc.type === ParticipantRole.CARBON_COPY &&\n\t\t\treplySenderAccountName !== getAddressOwnerAccount(c.address)\n\t);\n\tconst finalTo = retrieveALL(original, replySenderAccountName);\n\tconst reducedCcEmails = reduce(\n\t\tccEmails,\n\t\t(acc: Array<Participant>, v: Participant) => {\n\t\t\tif (\n\t\t\t\t!(toEmails.filter((x) => x.address === v.address).length > 0) &&\n\t\t\t\t!(finalTo.filter((x) => x.address === v.address).length > 0)\n\t\t\t) {\n\t\t\t\tacc.push({ ...v, type: ParticipantRole.CARBON_COPY });\n\t\t\t}\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\tif (original.parent !== FOLDERS.SENT && !original.isSentByMe) {\n\t\treturn reduce(\n\t\t\tconcat(toEmails, reducedCcEmails),\n\t\t\t(acc: Participant[], v: Participant) => {\n\t\t\t\tif (!(finalTo.filter((x) => x.address === v.address).length > 0))\n\t\t\t\t\tacc.push({ ...v, type: ParticipantRole.CARBON_COPY });\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t}\n\n\treturn changeTypeOfParticipants(reducedCcEmails, ParticipantRole.CARBON_COPY);\n}\n\nexport const retrieveBCC = (original: MailMessage): Array<Participant> =>\n\tfilter(\n\t\toriginal.participants,\n\t\t(c: Participant): boolean => c.type === ParticipantRole.BLIND_CARBON_COPY\n\t);\n\nexport function isHtml(parts: Array<MailMessagePart>): boolean {\n\tfunction subtreeContainsHtmlParts(part: MailMessagePart): boolean {\n\t\tif (part.contentType === 'text/html') return true;\n\t\treturn part.parts ? part.parts.some(subtreeContainsHtmlParts) : false;\n\t}\n\treturn parts?.some(subtreeContainsHtmlParts) || false;\n}\n\nexport function findBodyPart(\n\tmsgPart: Array<MailMessagePart>,\n\tcontent: string,\n\tacc2 = [] as Array<string>\n): Array<string> {\n\treturn reduce(\n\t\tmsgPart,\n\t\t(acc, v) => {\n\t\t\tif (v.contentType === content && v.content) acc.push(v.content);\n\t\t\treturn v.parts ? findBodyPart(v.parts, content, acc2) : acc2;\n\t\t},\n\t\tacc2 as Array<string>\n\t);\n}\n\nexport const extractBody = (msg: MailMessage): Array<string> => {\n\tconst textArr = findBodyPart(msg.parts, 'text/plain');\n\tconst htmlArr = findBodyPart(msg.parts, 'text/html');\n\tconst text = textArr.length ? textArr[0].replaceAll('\\n', '<br/>') : undefined;\n\tconst html = htmlArr.length ? htmlArr[0].replaceAll('dfsrc', 'src') : undefined;\n\n\treturn [text ?? html ?? '', html ?? text ?? ''];\n};\n\nexport function generateReplyText(\n\tmail: MailMessage,\n\tlabels: { [k: string]: string }\n): Array<string> {\n\tconst headingFrom = map(\n\t\tfilter(mail.participants, ['type', ParticipantRole.FROM]),\n\t\t(c) => `\"${c.fullName}\" <${c.address}>`\n\t).join(', ');\n\n\tconst headingTo = map(\n\t\tfilter(mail.participants, ['type', ParticipantRole.TO]),\n\t\t(c) => `\"${c.fullName}\" <${c.address}>`\n\t).join(', ');\n\n\tconst headingCc = map(\n\t\tfilter(mail.participants, ['type', ParticipantRole.CARBON_COPY]),\n\t\t(c) => `\"${c.fullName}\" <${c.address}>`\n\t).join(', ');\n\n\tconst date = moment(mail.date).format('LLLL');\n\n\tconst textToRetArray = [\n\t\t`\\n\\n${LineType.PLAINTEXT_SEP}\\n${labels.from} ${headingFrom}\\n${labels.to} ${headingTo}\\n`,\n\t\t`<br /><br /><hr id=\"${\n\t\t\tLineType.HTML_SEP_ID\n\t\t}\" ><div style=\"color: black; font-size: 12pt; font-family: tahoma, arial, helvetica, sans-serif;\"><b>${\n\t\t\tlabels.from\n\t\t}</b> ${htmlEncode(headingFrom)} <br /> <b>${labels.to}</b> ${htmlEncode(headingTo)} <br />`\n\t];\n\n\tif (headingCc.length > 0) {\n\t\ttextToRetArray[1] += `<b>${labels.cc}</b> ${htmlEncode(headingCc)}<br />`;\n\t\ttextToRetArray[0] += `${labels.cc} ${headingCc}\\n`;\n\t}\n\n\ttextToRetArray[1] += `<b>${labels.sent}</b> ${date} <br /> <b>${labels.subject}</b> ${htmlEncode(\n\t\tmail.subject\n\t)} <br /><br />${extractBody(mail)[1]}</div>`;\n\n\ttextToRetArray[0] += `${labels.sent} ${date}\\n${labels.subject} ${mail.subject}\\n\\n${\n\t\textractBody(mail)[0]\n\t}`;\n\n\treturn [convertHtmlToPlainText(textToRetArray[0]), textToRetArray[1]];\n}\n\nexport const generateMailRequest = (msg: MailMessage): SoapDraftMessageObj => {\n\tconst richText = extractBody(msg);\n\tconst body = isHtml(msg.parts);\n\treturn {\n\t\tid: msg.id === 'new' ? undefined : msg.id,\n\t\tdid: msg.isDraft ? msg.did ?? msg.id : undefined,\n\t\tattach: { mp: retrieveAttachmentsType(msg, 'attachment') },\n\t\tsu: { _content: msg.subject ?? '' },\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\te: map(msg.participants, (c) => ({\n\t\t\tt: c.type,\n\t\t\ta: c.address,\n\t\t\td: (c as unknown as Participant).fullName ?? (c as unknown as Participant).name ?? undefined\n\t\t})),\n\t\tmp: [\n\t\t\tbody\n\t\t\t\t? {\n\t\t\t\t\t\tct: 'multipart/alternative',\n\t\t\t\t\t\tmp: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tct: 'text/html',\n\t\t\t\t\t\t\t\tbody: true,\n\t\t\t\t\t\t\t\tcontent: { _content: richText[1] ?? '' }\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tct: 'text/plain',\n\t\t\t\t\t\t\t\tcontent: { _content: richText[0] ?? '' }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\t\tct: 'text/plain',\n\t\t\t\t\t\tbody: true,\n\t\t\t\t\t\tcontent: { _content: richText[0] ?? '' }\n\t\t\t\t\t}\n\t\t]\n\t};\n};\n\nexport const getHtmlWithPreAppliedStyled = (\n\tcontent: string,\n\tstyle: { font: string | undefined; fontSize: string | undefined; color: string | undefined }\n): string =>\n\t`<html><style>p {margin: 0};</style><body><div style=\"font-family: ${style?.font}; font-size: ${style?.fontSize}; color: ${style?.color}\">${content}</div></body></html>`;\n\nexport const findCidFromPart = (inline: InlineAttachments | undefined, part: string): string => {\n\tconst ci = find(inline, (i) => i.attach?.mp?.[0]?.part === part)?.ci;\n\treturn `cid:${ci}`;\n};\nexport const replaceLinkWithParts = (\n\tcontent: string,\n\tinline: InlineAttachments | undefined\n): string => {\n\tconst parser = new DOMParser();\n\tconst htmlDoc = parser.parseFromString(content, 'text/html');\n\n\tconst images = htmlDoc.getElementsByTagName('img');\n\n\tif (images) {\n\t\tforEach(images, (p: HTMLImageElement) => {\n\t\t\tif (p.hasAttribute('src') && p.getAttribute('src')?.includes('/service/home')) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst newSource = findCidFromPart(inline, p.getAttribute('src')?.split('&part=')[1]);\n\t\t\t\tp.setAttribute('src', newSource ?? '');\n\t\t\t}\n\t\t});\n\t}\n\treturn htmlDoc.body.innerHTML;\n};\n\nexport const getMP = ({\n\tdata,\n\tstyle\n}: {\n\tdata: MailsEditor;\n\tstyle: { font: string | undefined; fontSize: string | undefined; color: string | undefined };\n}): any => {\n\tconst contentWithBodyParts = replaceLinkWithParts(data?.text?.[1], data?.inline);\n\tif (data.richText) {\n\t\tif (data?.inline && data?.inline?.length > 0) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tct: 'multipart/alternative',\n\t\t\t\t\tmp: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tct: 'text/plain',\n\t\t\t\t\t\t\tcontent: { _content: data?.text[0] ?? '' }\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tct: 'multipart/related',\n\t\t\t\t\t\t\tmp: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tct: 'text/html',\n\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t_content: getHtmlWithPreAppliedStyled(contentWithBodyParts, style) ?? ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...data.inline\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t\treturn [\n\t\t\t{\n\t\t\t\tct: 'multipart/alternative',\n\t\t\t\tmp: [\n\t\t\t\t\t{\n\t\t\t\t\t\tct: 'text/html',\n\t\t\t\t\t\tbody: true,\n\t\t\t\t\t\tcontent: { _content: getHtmlWithPreAppliedStyled(data?.text[1], style) ?? '' }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tct: 'text/plain',\n\t\t\t\t\t\tcontent: { _content: data?.text[0] ?? '' }\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t}\n\treturn [\n\t\t{\n\t\t\tct: 'text/plain',\n\t\t\tbody: true,\n\t\t\tcontent: { _content: data?.text[0] ?? '' }\n\t\t}\n\t];\n};\n\n/**\n * @deprecated\n * @param data\n * @param prefs\n */\nexport const generateRequest = (\n\t// This function will be soon removed\n\t// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\tdata: any,\n\tprefs?: Partial<AccountSettingsPrefs>\n): SoapDraftMessageObj => {\n\tconst style = {\n\t\tfont: prefs?.zimbraPrefHtmlEditorDefaultFontFamily,\n\t\tfontSize: prefs?.zimbraPrefHtmlEditorDefaultFontSize,\n\t\tcolor: prefs?.zimbraPrefHtmlEditorDefaultFontColor\n\t};\n\n\tconst from = getIdentityDescriptor(data.identityId)?.fromAddress;\n\n\tconst participants = map(\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tdata.recipients\n\t\t\t? data.recipients\n\t\t\t: isEmpty(data.sender)\n\t\t\t\t? [from, ...data.to, ...data.cc, ...data.bcc]\n\t\t\t\t: [from, data.sender, ...data.to, ...data.cc, ...data.bcc],\n\t\t(c) => ({\n\t\t\tt: c.type,\n\t\t\ta: c.email ?? c.address,\n\t\t\td: c.fullName ?? c.firstName ?? undefined\n\t\t})\n\t);\n\tif (data.requestReadReceipt) {\n\t\tparticipants.push({\n\t\t\ta:\n\t\t\t\t(data?.sender as unknown as SharedParticipant)?.email ??\n\t\t\t\t(from as unknown as Participant)?.address,\n\t\t\tt: ParticipantRole.READ_RECEIPT_NOTIFICATION,\n\t\t\td:\n\t\t\t\t(from as unknown as Participant).fullName ??\n\t\t\t\t(from as unknown as SharedParticipant).firstName ??\n\t\t\t\tundefined\n\t\t});\n\t}\n\n\treturn {\n\t\tautoSendTime: data.autoSendTime,\n\t\tdid: data.did,\n\t\tid: data.id ?? undefined,\n\t\tattach: data.attach,\n\t\tsu: { _content: data.subject ?? '' },\n\t\trt: data?.rt ?? undefined,\n\t\torigid: data?.origid ?? undefined,\n\t\te: participants,\n\t\tmp: getMP({ data, style })\n\t};\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { getUserSettings, t } from '@zextras/carbonio-shell-ui';\nimport { v4 as uuid } from 'uuid';\n\nimport { buildSavedAttachments, replaceCidUrlWithServiceUrl } from './editor-transformations';\nimport {\n\tcomputeDraftSaveAllowedStatus,\n\tcomputeSendAllowedStatus,\n\tfilterSavedInlineAttachment\n} from './editor-utils';\nimport { getEditor } from './hooks';\nimport { ParticipantRole } from '../../../carbonio-ui-commons/constants/participants';\nimport { getRootsMap } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { LineType } from '../../../commons/utils';\nimport { EditViewActions, NO_ACCOUNT_NAME } from '../../../constants';\nimport {\n\tgetAddressOwnerAccount,\n\tgetDefaultIdentity,\n\tgetIdentityFromParticipant,\n\tgetRecipientReplyIdentity\n} from '../../../helpers/identities';\nimport { getFromParticipantFromMessage } from '../../../helpers/messages';\nimport { getMailBodyWithSignature } from '../../../helpers/signatures';\nimport {\n\tEditViewActionsType,\n\tEditorPrefillData,\n\tMailMessage,\n\tMailsEditorV2,\n\tUnsavedAttachment,\n\tParticipant\n} from '../../../types';\nimport {\n\textractBody,\n\tgenerateReplyText,\n\tretrieveALL,\n\tretrieveBCC,\n\tretrieveCC,\n\tretrieveCCForEditNew,\n\tretrieveReplyTo,\n\tretrieveTO\n} from '../../editor-slice-utils';\nimport { AppDispatch } from '../../redux';\n\n// Regex reply msg title\nconst REPLY_REGEX = /(^(re:\\s)+)/i;\n\n// Regex forward msg title\nconst FORWARD_REGEX = /(^(fwd:\\s)+)/i;\n\nconst labels = {\n\tto: `${t('label.to', 'To')}:`,\n\tfrom: `${t('label.from', 'From')}:`,\n\tcc: `${t('label.cc', 'CC')}:`,\n\tsubject: `${t('label.subject', 'Subject')}:`,\n\tsent: `${t('label.sent', 'Sent')}:`\n};\n\n/**\n *\n */\nexport const generateNewMessageEditor = (messagesStoreDispatch: AppDispatch): MailsEditorV2 => {\n\tconst editorId = uuid();\n\tconst text = {\n\t\tplainText: `\\n\\n${LineType.SIGNATURE_PRE_SEP}\\n`,\n\t\trichText: `<p></p><div class=\"${LineType.SIGNATURE_CLASS}\"></div>`\n\t};\n\tconst defaultIdentity = getDefaultIdentity();\n\tconst textWithSignature = getMailBodyWithSignature(text, defaultIdentity.defaultSignatureId);\n\tconst isRichText = getUserSettings().prefs?.zimbraPrefComposeFormat === 'html';\n\n\tconst editor = {\n\t\taction: EditViewActions.NEW,\n\t\tidentityId: getDefaultIdentity().id,\n\t\tid: editorId,\n\t\tunsavedAttachments: [],\n\t\tsavedAttachments: [],\n\t\tisRichText,\n\t\tisUrgent: false,\n\t\trecipients: {\n\t\t\tto: [],\n\t\t\tcc: [],\n\t\t\tbcc: []\n\t\t},\n\t\tsubject: '',\n\t\ttext: textWithSignature,\n\t\trequestReadReceipt: false,\n\t\t// signature,\n\t\tmessagesStoreDispatch,\n\t\tsize: 0,\n\t\ttotalSmartLinksSize: 0\n\t} as MailsEditorV2;\n\n\teditor.draftSaveAllowedStatus = computeDraftSaveAllowedStatus(editor);\n\teditor.sendAllowedStatus = computeSendAllowedStatus(editor);\n\treturn editor;\n};\n\n/**\n * Temporary type to keep backward compatibility with Calendars\n */\ntype InviteParticipant = {\n\tname: string;\n\temail: string;\n\tisOptional: boolean;\n\tresponse: string;\n};\n\nconst isInviteParticipant = (participant: any): participant is InviteParticipant =>\n\t'name' in participant &&\n\t'email' in participant &&\n\t'isOptional' in participant &&\n\t'response' in participant;\n\nconst normalizeParticipant = (\n\tabstractParticipant: InviteParticipant | Partial<Participant>\n): Participant => {\n\tconst isParticipant = !isInviteParticipant(abstractParticipant);\n\treturn {\n\t\ttype: isParticipant && abstractParticipant.type ? abstractParticipant.type : ParticipantRole.TO,\n\t\taddress:\n\t\t\tisParticipant && abstractParticipant.address\n\t\t\t\t? abstractParticipant.address\n\t\t\t\t: abstractParticipant.email ?? '',\n\t\tname: abstractParticipant.name,\n\t\tfullName: isParticipant ? abstractParticipant.fullName : abstractParticipant.name,\n\t\temail: abstractParticipant.email\n\t};\n};\n\nconst normalizeParticipants = (\n\tabstractParticipants: Array<InviteParticipant | Partial<Participant>> | undefined\n): Array<Participant> =>\n\tabstractParticipants\n\t\t? abstractParticipants.map((abstractParticipant) => normalizeParticipant(abstractParticipant))\n\t\t: [];\n\n/**\n *\n */\nexport const generateIntegratedNewEditor = (\n\tmessagesStoreDispatch: AppDispatch,\n\tcompositionData?: EditorPrefillData\n): MailsEditorV2 => {\n\tconst editorId = uuid();\n\n\tconst plainText = compositionData?.text?.[0] ?? `\\n\\n${LineType.SIGNATURE_PRE_SEP}\\n`;\n\tconst richText =\n\t\tcompositionData?.text?.[1] ?? `<p></p><div class=\"${LineType.SIGNATURE_CLASS}\"></div>`;\n\n\tconst recipients = compositionData?.recipients\n\t\t? compositionData.recipients\n\t\t: normalizeParticipants(compositionData?.to);\n\n\tconst text = {\n\t\tplainText,\n\t\trichText\n\t};\n\tconst isRichText = getUserSettings().prefs?.zimbraPrefComposeFormat === 'html';\n\tconst defaultIdentity = getDefaultIdentity();\n\tconst textWithSignature = getMailBodyWithSignature(text, defaultIdentity.defaultSignatureId);\n\tconst unsavedAttachments: Array<UnsavedAttachment> = !compositionData?.aid\n\t\t? []\n\t\t: compositionData.aid.map(\n\t\t\t\t(aid: string): UnsavedAttachment => ({\n\t\t\t\t\tisInline: false,\n\t\t\t\t\taid,\n\t\t\t\t\tfilename: 'unnamed',\n\t\t\t\t\tsize: 0,\n\t\t\t\t\tcontentType: 'application/octet-stream'\n\t\t\t\t})\n\t\t\t);\n\n\tconst editor = {\n\t\taction: EditViewActions.NEW,\n\t\tidentityId: getDefaultIdentity().id,\n\t\tid: editorId,\n\t\tunsavedAttachments,\n\t\tsavedAttachments: [],\n\t\tisRichText,\n\t\tisUrgent: false,\n\t\trecipients: {\n\t\t\tto: recipients ?? [],\n\t\t\tcc: [],\n\t\t\tbcc: []\n\t\t},\n\t\tsubject: compositionData?.subject ?? '',\n\t\ttext: textWithSignature,\n\t\trequestReadReceipt: false,\n\t\tmessagesStoreDispatch,\n\t\tsize: 0,\n\t\ttotalSmartLinksSize: 0\n\t} as MailsEditorV2;\n\n\teditor.draftSaveAllowedStatus = computeDraftSaveAllowedStatus(editor);\n\teditor.sendAllowedStatus = computeSendAllowedStatus(editor);\n\treturn editor;\n};\n\n/**\n *\n */\nexport const generateReplyAndReplyAllMsgEditor = (\n\tmessagesStoreDispatch: AppDispatch,\n\toriginalMessage: MailMessage,\n\taction: EditViewActionsType\n): MailsEditorV2 => {\n\tconst editorId = uuid();\n\tconst savedInlineAttachments = filterSavedInlineAttachment(\n\t\tbuildSavedAttachments(originalMessage)\n\t);\n\n\tconst text = {\n\t\tplainText: `\\n\\n${LineType.SIGNATURE_PRE_SEP}\\n`,\n\t\trichText: `<p></p><div class=\"${LineType.SIGNATURE_CLASS}\"></div>`\n\t};\n\tconst folderRoots = getRootsMap();\n\tconst from = getRecipientReplyIdentity(folderRoots, originalMessage);\n\tconst defaultIdentity = getDefaultIdentity();\n\tconst signatureId = from.identityId\n\t\t? from.forwardReplySignatureId\n\t\t: defaultIdentity.forwardReplySignatureId;\n\tconst textWithSignature = getMailBodyWithSignature(text, signatureId);\n\n\tconst textWithSignatureRepliesForwards = {\n\t\tplainText: `${textWithSignature.plainText} ${generateReplyText(originalMessage, labels)[0]}`,\n\t\trichText: replaceCidUrlWithServiceUrl(\n\t\t\t`${textWithSignature.richText} ${generateReplyText(originalMessage, labels)[1]}`,\n\t\t\tsavedInlineAttachments\n\t\t)\n\t};\n\tconst accountName = getAddressOwnerAccount(from.address) ?? NO_ACCOUNT_NAME;\n\tconst isRichText = getUserSettings().prefs?.zimbraPrefComposeFormat === 'html';\n\tconst toParticipants =\n\t\taction === EditViewActions.REPLY\n\t\t\t? retrieveReplyTo(originalMessage)\n\t\t\t: retrieveALL(originalMessage, accountName);\n\n\tconst editor = {\n\t\taction: EditViewActions.REPLY,\n\t\tidentityId: from.identityId ?? defaultIdentity.id,\n\t\tsender: undefined,\n\t\tid: editorId,\n\t\tunsavedAttachments: [],\n\t\tsavedAttachments: savedInlineAttachments,\n\t\tisRichText,\n\t\tisUrgent: originalMessage.urgent,\n\t\trecipients: {\n\t\t\tto: toParticipants,\n\t\t\tcc: action === EditViewActions.REPLY_ALL ? retrieveCC(originalMessage, accountName) : [],\n\t\t\tbcc: []\n\t\t},\n\t\tsubject: `RE: ${\n\t\t\toriginalMessage.subject ? originalMessage.subject.replace(REPLY_REGEX, '') : ''\n\t\t}`,\n\t\ttext: textWithSignatureRepliesForwards,\n\t\trequestReadReceipt: false,\n\t\treplyType: 'r',\n\t\toriginalId: originalMessage.id,\n\t\toriginalMessage,\n\t\tmessagesStoreDispatch,\n\t\tsize: originalMessage.size,\n\t\ttotalSmartLinksSize: 0\n\t} as MailsEditorV2;\n\n\teditor.draftSaveAllowedStatus = computeDraftSaveAllowedStatus(editor);\n\teditor.sendAllowedStatus = computeSendAllowedStatus(editor);\n\n\treturn editor;\n};\n\n/**\n *\n */\nexport const generateForwardMsgEditor = (\n\tmessagesStoreDispatch: AppDispatch,\n\toriginalMessage: MailMessage\n): MailsEditorV2 => {\n\tconst editorId = uuid();\n\tconst savedAttachments = buildSavedAttachments(originalMessage);\n\n\tconst text = {\n\t\tplainText: `\\n\\n${LineType.SIGNATURE_PRE_SEP}\\n`,\n\t\trichText: `<p></p><div class=\"${LineType.SIGNATURE_CLASS}\"></div>`\n\t};\n\tconst defaultIdentity = getDefaultIdentity();\n\tconst folderRoots = getRootsMap();\n\tconst from = getRecipientReplyIdentity(folderRoots, originalMessage);\n\tconst signatureId = from.identityId\n\t\t? from.forwardReplySignatureId\n\t\t: defaultIdentity.forwardReplySignatureId;\n\tconst textWithSignature = getMailBodyWithSignature(text, signatureId);\n\tconst textWithSignatureRepliesForwards = {\n\t\tplainText: `${textWithSignature.plainText} ${generateReplyText(originalMessage, labels)[0]}`,\n\t\trichText: replaceCidUrlWithServiceUrl(\n\t\t\t`${textWithSignature.richText} ${generateReplyText(originalMessage, labels)[1]}`,\n\t\t\tsavedAttachments\n\t\t)\n\t};\n\tconst isRichText = getUserSettings().prefs?.zimbraPrefComposeFormat === 'html';\n\tconst editor = {\n\t\taction: EditViewActions.REPLY,\n\t\tidentityId: from.identityId ?? defaultIdentity.id,\n\t\tid: editorId,\n\t\tunsavedAttachments: [],\n\t\tsavedAttachments,\n\t\tisRichText,\n\t\tisUrgent: originalMessage.urgent,\n\t\trecipients: {\n\t\t\tto: [],\n\t\t\tcc: [],\n\t\t\tbcc: []\n\t\t},\n\t\tsubject: `FWD: ${\n\t\t\toriginalMessage.subject ? originalMessage.subject.replace(FORWARD_REGEX, '') : ''\n\t\t}`,\n\t\ttext: textWithSignatureRepliesForwards,\n\t\trequestReadReceipt: false,\n\t\treplyType: 'w',\n\t\toriginalId: originalMessage.id,\n\t\toriginalMessage,\n\t\tmessagesStoreDispatch,\n\t\tsize: originalMessage.size,\n\t\ttotalSmartLinksSize: 0\n\t} as MailsEditorV2;\n\n\teditor.draftSaveAllowedStatus = computeDraftSaveAllowedStatus(editor);\n\teditor.sendAllowedStatus = computeSendAllowedStatus(editor);\n\n\treturn editor;\n};\n\nexport const generateEditAsDraftEditor = (\n\tmessagesStoreDispatch: AppDispatch,\n\toriginalMessage: MailMessage\n): MailsEditorV2 => {\n\tconst editorId = uuid();\n\tconst savedAttachments = buildSavedAttachments(originalMessage);\n\tconst text = {\n\t\tplainText: `${extractBody(originalMessage)[0]}`,\n\t\trichText: replaceCidUrlWithServiceUrl(`${extractBody(originalMessage)[1]}`, savedAttachments)\n\t};\n\n\tconst isRichText = getUserSettings().prefs?.zimbraPrefComposeFormat === 'html';\n\tconst fromParticipant = getFromParticipantFromMessage(originalMessage);\n\tconst fromIdentity = fromParticipant && getIdentityFromParticipant(fromParticipant);\n\tconst editor = {\n\t\taction: EditViewActions.EDIT_AS_DRAFT,\n\t\tidentityId: (fromIdentity ?? getDefaultIdentity()).id,\n\t\tid: editorId,\n\t\tunsavedAttachments: [],\n\t\tsavedAttachments,\n\t\tisRichText,\n\t\tisUrgent: originalMessage.urgent,\n\t\trecipients: {\n\t\t\tto: retrieveTO(originalMessage),\n\t\t\tcc: retrieveCCForEditNew(originalMessage),\n\t\t\tbcc: retrieveBCC(originalMessage)\n\t\t},\n\t\tsubject: originalMessage.subject,\n\t\ttext,\n\t\trequestReadReceipt: false,\n\t\tdid: originalMessage.id,\n\t\tmessagesStoreDispatch,\n\t\tsize: originalMessage.size,\n\t\ttotalSmartLinksSize: 0\n\t} as MailsEditorV2;\n\n\teditor.draftSaveAllowedStatus = computeDraftSaveAllowedStatus(editor);\n\teditor.sendAllowedStatus = computeSendAllowedStatus(editor);\n\n\treturn editor;\n};\n\nexport const generateEditAsNewEditor = (\n\tmessagesStoreDispatch: AppDispatch,\n\toriginalMessage: MailMessage\n): MailsEditorV2 => {\n\tconst editorId = uuid();\n\tconst savedAttachments = buildSavedAttachments(originalMessage);\n\n\tconst text = {\n\t\tplainText: `${extractBody(originalMessage)[0]}`,\n\t\trichText: replaceCidUrlWithServiceUrl(`${extractBody(originalMessage)[1]}`, savedAttachments)\n\t};\n\tconst isRichText = getUserSettings().prefs?.zimbraPrefComposeFormat === 'html';\n\tconst fromParticipant = getFromParticipantFromMessage(originalMessage);\n\tconst fromIdentity = fromParticipant && getIdentityFromParticipant(fromParticipant);\n\tconst editor = {\n\t\taction: EditViewActions.EDIT_AS_NEW,\n\t\tidentityId: (fromIdentity ?? getDefaultIdentity()).id,\n\t\tid: editorId,\n\t\tunsavedAttachments: [],\n\t\tsavedAttachments: buildSavedAttachments(originalMessage),\n\t\tisRichText,\n\t\tisUrgent: originalMessage.urgent,\n\t\trecipients: {\n\t\t\tto: retrieveTO(originalMessage),\n\t\t\tcc: retrieveCCForEditNew(originalMessage),\n\t\t\tbcc: retrieveBCC(originalMessage)\n\t\t},\n\t\tsubject: originalMessage.subject,\n\t\ttext,\n\t\trequestReadReceipt: false,\n\t\toriginalId: originalMessage.id,\n\t\toriginalMessage,\n\t\tmessagesStoreDispatch,\n\t\tsize: originalMessage.size,\n\t\ttotalSmartLinksSize: 0\n\t} as MailsEditorV2;\n\n\teditor.draftSaveAllowedStatus = computeDraftSaveAllowedStatus(editor);\n\teditor.sendAllowedStatus = computeSendAllowedStatus(editor);\n\n\treturn editor;\n};\n\n/**\n *\n * @param id\n */\nexport const resumeEditor = (id: MailsEditorV2['id']): MailsEditorV2 | null => {\n\tconst editor = getEditor({ id });\n\treturn editor ?? null;\n};\n\nexport type GenerateEditorParams = {\n\taction: EditViewActionsType;\n\tid?: string;\n\tmessagesStoreDispatch: AppDispatch;\n\tmessage?: MailMessage | null;\n\tcompositionData?: EditorPrefillData;\n};\n\n/**\n * Generate a new editor structure for the given action and message id\n * @param action\n * @param id\n * @param messagesStoreDispatch\n * @param message\n */\nexport const generateEditor = ({\n\taction,\n\tid,\n\tmessagesStoreDispatch,\n\tmessage,\n\tcompositionData\n}: GenerateEditorParams): MailsEditorV2 | null => {\n\tswitch (action) {\n\t\tcase EditViewActions.RESUME:\n\t\t\tif (!id) {\n\t\t\t\tthrow new Error('Cannot resume editor without an editor id');\n\t\t\t}\n\t\t\treturn getEditor({ id });\n\t\tcase EditViewActions.NEW:\n\t\t\treturn generateNewMessageEditor(messagesStoreDispatch);\n\t\tcase EditViewActions.REPLY:\n\t\t\tif (!id) {\n\t\t\t\tthrow new Error('Cannot generate a reply editor without a message id');\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\treturn generateReplyAndReplyAllMsgEditor(messagesStoreDispatch, message, action);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase EditViewActions.REPLY_ALL:\n\t\t\tif (!id) {\n\t\t\t\tthrow new Error('Cannot generate a reply all editor without a message id');\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\treturn generateReplyAndReplyAllMsgEditor(messagesStoreDispatch, message, action);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase EditViewActions.FORWARD:\n\t\t\tif (!id) {\n\t\t\t\tthrow new Error('Cannot generate a forward editor without a message id');\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\treturn generateForwardMsgEditor(messagesStoreDispatch, message);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase EditViewActions.EDIT_AS_DRAFT:\n\t\t\tif (!id) {\n\t\t\t\tthrow new Error('Cannot generate a draft editor without a message id');\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\treturn generateEditAsDraftEditor(messagesStoreDispatch, message);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase EditViewActions.EDIT_AS_NEW:\n\t\t\tif (!id) {\n\t\t\t\tthrow new Error('Cannot generate an edit as new editor without a message id');\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\treturn generateEditAsNewEditor(messagesStoreDispatch, message);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase EditViewActions.MAIL_TO:\n\t\tcase EditViewActions.COMPOSE:\n\t\tcase EditViewActions.PREFILL_COMPOSE:\n\t\t\treturn generateIntegratedNewEditor(messagesStoreDispatch, compositionData);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n\n\treturn null;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { computeAndUpdateEditorStatus } from './commons';\nimport { useSaveDraftFromEditor } from './save-draft';\nimport { MailsEditorV2 } from '../../../../types';\nimport { useEditorsStore } from '../store';\n\n/**\n * TODO for future refactors\n * instead of calling imperatively the computeAndUpdateEditorStatus function\n * to update the status of the store a subscription-based logic can be implemented.\n *\n * Using the subscriptionWithSelector functionality of Zustand we can subscribe\n * for changes on the store and perform the status update only when the selected\n * fields change.\n * (see https://docs.pmnd.rs/zustand/recipes/recipes#reading/writing-state-and-reacting-to-changes-outside-of-components)\n *\n * The list of the fields to take into consideration can be provide by a specific\n * function/constant so the code will be more clear and future changes/additions\n * will be easier to perform.\n */\n\n/**\n * Returns reactive references to the subject value and to its setter\n * @param id\n */\nexport const useEditorSubject = (\n\tid: MailsEditorV2['id']\n): { subject: string; setSubject: (subject: string) => void } => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[id].subject);\n\tconst setter = useEditorsStore((state) => state.setSubject);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tsubject: value,\n\t\t\tsetSubject: (val: string): void => {\n\t\t\t\tsetter(id, val);\n\t\t\t\tdebouncedSaveDraft(id);\n\t\t\t}\n\t\t}),\n\t\t[id, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive references to the text values and to their setter\n * @param id\n */\nexport const useEditorText = (\n\tid: MailsEditorV2['id']\n): {\n\ttext: MailsEditorV2['text'];\n\tsetText: (text: MailsEditorV2['text']) => void;\n\tresetText: () => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[id].text);\n\tconst setter = useEditorsStore((state) => state.setText);\n\tconst setText = useCallback(\n\t\t(val: MailsEditorV2['text']): void => {\n\t\t\tsetter(id, val);\n\t\t\tdebouncedSaveDraft(id);\n\t\t},\n\t\t[id, debouncedSaveDraft, setter]\n\t);\n\n\tconst resetText = useCallback((): void => {\n\t\tsetter(id, { plainText: '', richText: '' });\n\t\tdebouncedSaveDraft(id);\n\t}, [id, debouncedSaveDraft, setter]);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\ttext: value,\n\t\t\tsetText,\n\t\t\tresetText\n\t\t}),\n\t\t[resetText, setText, value]\n\t);\n};\n\n/**\n * Returns reactive references to the auto send time value and to its setter\n * @params id\n */\nexport const useEditorAutoSendTime = (\n\tid: MailsEditorV2['id']\n): {\n\tautoSendTime: MailsEditorV2['autoSendTime'];\n\tsetAutoSendTime: (autoSendTime: MailsEditorV2['autoSendTime']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[id].autoSendTime);\n\tconst setter = useEditorsStore((state) => state.setAutoSendTime);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tautoSendTime: value,\n\t\t\tsetAutoSendTime: (val: MailsEditorV2['autoSendTime']): void => {\n\t\t\t\tsetter(id, val);\n\t\t\t\tdebouncedSaveDraft(id);\n\t\t\t}\n\t\t}),\n\t\t[id, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive references to the draft id value and to its setter\n * @params id\n */\nexport const useEditorDid = (\n\tid: MailsEditorV2['id']\n): {\n\tdid: MailsEditorV2['did'];\n\tsetDid: (did: MailsEditorV2['did']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[id].did);\n\tconst setter = useEditorsStore((state) => state.setDid);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tdid: value,\n\t\t\tsetDid: (val: MailsEditorV2['did']): void => {\n\t\t\t\tsetter(id, val);\n\t\t\t\tdebouncedSaveDraft(id);\n\t\t\t}\n\t\t}),\n\t\t[id, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive references to the isRichText value and to its setter\n * @params id\n */\nexport const useEditorIsRichText = (\n\tid: MailsEditorV2['id']\n): {\n\tisRichText: MailsEditorV2['isRichText'];\n\tsetIsRichText: (isRichText: MailsEditorV2['isRichText']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[id].isRichText);\n\tconst setter = useEditorsStore((state) => state.setIsRichText);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tisRichText: value,\n\t\t\tsetIsRichText: (val: MailsEditorV2['isRichText']): void => {\n\t\t\t\tsetter(id, val);\n\t\t\t\tdebouncedSaveDraft(id);\n\t\t\t}\n\t\t}),\n\t\t[id, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive references to the \"to\" recipients values and to their setter\n * @param editorId\n */\nexport const useEditorRecipients = (\n\teditorId: MailsEditorV2['id']\n): {\n\trecipients: MailsEditorV2['recipients'];\n\tsetRecipients: (recipient: MailsEditorV2['recipients']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[editorId].recipients);\n\tconst setter = useEditorsStore((state) => state.setRecipients);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\trecipients: value,\n\t\t\tsetRecipients: (val: MailsEditorV2['recipients']): void => {\n\t\t\t\tsetter(editorId, val);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tdebouncedSaveDraft(editorId);\n\t\t\t}\n\t\t}),\n\t\t[editorId, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive references to the \"to\" recipients values and to their setter\n * @param editorId\n */\nexport const useEditorToRecipients = (\n\teditorId: MailsEditorV2['id']\n): {\n\ttoRecipients: MailsEditorV2['recipients']['to'];\n\tsetToRecipients: (recipient: MailsEditorV2['recipients']['to']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[editorId].recipients.to);\n\tconst setter = useEditorsStore((state) => state.setToRecipients);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\ttoRecipients: value,\n\t\t\tsetToRecipients: (val: MailsEditorV2['recipients']['to']): void => {\n\t\t\t\tsetter(editorId, val);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tdebouncedSaveDraft(editorId);\n\t\t\t}\n\t\t}),\n\t\t[editorId, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive references to the \"cc\" recipients values and to their setter\n * @param editorId\n */\nexport const useEditorCcRecipients = (\n\teditorId: MailsEditorV2['id']\n): {\n\tccRecipients: MailsEditorV2['recipients']['cc'];\n\tsetCcRecipients: (recipient: MailsEditorV2['recipients']['cc']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[editorId].recipients.cc);\n\tconst setter = useEditorsStore((state) => state.setCcRecipients);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tccRecipients: value,\n\t\t\tsetCcRecipients: (val: MailsEditorV2['recipients']['cc']): void => {\n\t\t\t\tsetter(editorId, val);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tdebouncedSaveDraft(editorId);\n\t\t\t}\n\t\t}),\n\t\t[editorId, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive references to the \"bcc\" recipients values and to their setter\n * @param editorId\n */\nexport const useEditorBccRecipients = (\n\teditorId: MailsEditorV2['id']\n): {\n\tbccRecipients: MailsEditorV2['recipients']['bcc'];\n\tsetBccRecipients: (recipient: MailsEditorV2['recipients']['bcc']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[editorId].recipients.bcc);\n\tconst setter = useEditorsStore((state) => state.setBccRecipients);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tbccRecipients: value,\n\t\t\tsetBccRecipients: (val: MailsEditorV2['recipients']['bcc']): void => {\n\t\t\t\tsetter(editorId, val);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tdebouncedSaveDraft(editorId);\n\t\t\t}\n\t\t}),\n\t\t[editorId, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive reference to the identity id and to its setter\n * @param editorId\n */\nexport const useEditorIdentityId = (\n\teditorId: MailsEditorV2['id']\n): {\n\tidentityId: MailsEditorV2['identityId'];\n\tsetIdentityId: (from: MailsEditorV2['identityId']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[editorId].identityId);\n\tconst setter = useEditorsStore((state) => state.setIdentityId);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tidentityId: value,\n\t\t\tsetIdentityId: (val: MailsEditorV2['identityId']): void => {\n\t\t\t\tsetter(editorId, val);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tdebouncedSaveDraft(editorId);\n\t\t\t}\n\t\t}),\n\t\t[editorId, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive reference to the isUrgent value and to its setter\n * @param id\n */\nexport const useEditorIsUrgent = (\n\tid: MailsEditorV2['id']\n): {\n\tisUrgent: MailsEditorV2['isUrgent'];\n\tsetIsUrgent: (isUrgent: MailsEditorV2['isUrgent']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[id].isUrgent);\n\tconst setter = useEditorsStore((state) => state.setIsUrgent);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tisUrgent: value,\n\t\t\tsetIsUrgent: (val: MailsEditorV2['isUrgent']): void => {\n\t\t\t\tsetter(id, val);\n\t\t\t\tdebouncedSaveDraft(id);\n\t\t\t}\n\t\t}),\n\t\t[id, debouncedSaveDraft, setter, value]\n\t);\n};\n\n/**\n * Returns reactive reference to the requestReadReceipt value and to its setter\n * @param id\n */\nexport const useEditorRequestReadReceipt = (\n\tid: MailsEditorV2['id']\n): {\n\trequestReadReceipt: MailsEditorV2['requestReadReceipt'];\n\tsetRequestReadReceipt: (requestReadReceipt: MailsEditorV2['requestReadReceipt']) => void;\n} => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst value = useEditorsStore((state) => state.editors[id].requestReadReceipt);\n\tconst setter = useEditorsStore((state) => state.setRequestReadReceipt);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\trequestReadReceipt: value,\n\t\t\tsetRequestReadReceipt: (val: MailsEditorV2['requestReadReceipt']): void => {\n\t\t\t\tsetter(id, val);\n\t\t\t\tdebouncedSaveDraft(id);\n\t\t\t}\n\t\t}),\n\t\t[id, debouncedSaveDraft, setter, value]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { getUserSettings, t } from '@zextras/carbonio-shell-ui';\nimport { find } from 'lodash';\n\nimport { computeAndUpdateEditorStatus } from './commons';\nimport { getEditor } from './editors';\nimport { createCancelableTimer } from '../../../../helpers/timers';\nimport { MailsEditorV2 } from '../../../../types';\nimport { sendMsgFromEditor } from '../../../actions/send-msg';\nimport { useEditorsStore } from '../store';\n\nexport type SendMessageOptions = {\n\tcancelable?: boolean;\n\tonCountdownTick?: (countdown: number, cancel: () => void) => void;\n\tonComplete?: () => void;\n\tonError?: (error: string) => void;\n\tonCancel?: () => void;\n};\n\nexport type SendMessageResult = {\n\tcancel?: () => void;\n};\n\n/**\n *\n * @param editorId\n * @param options\n */\nconst sendFromEditor = (\n\teditorId: MailsEditorV2['id'],\n\toptions?: SendMessageOptions\n): SendMessageResult => {\n\tconst editor = getEditor({ id: editorId });\n\tif (!editor) {\n\t\tconsole.warn('Cannot find the editor', editorId);\n\t\treturn {};\n\t}\n\n\tif (!editor.sendAllowedStatus?.allowed) {\n\t\treturn {};\n\t}\n\n\t/**\n\t * On each time tick the store will be\n\t * @param remain\n\t */\n\tconst onTimerTick = (remain: number, cancel: () => void): void => {\n\t\toptions?.onCountdownTick && options?.onCountdownTick(remain, cancel);\n\t};\n\n\tconst onTimerCanceled = (): void => {\n\t\tuseEditorsStore.getState().setSendProcessStatus(editorId, {\n\t\t\tstatus: 'aborted',\n\t\t\tabortReason: t('messages.snackbar.message_sending_aborted', 'canceled by the user')\n\t\t});\n\t\tcomputeAndUpdateEditorStatus(editorId);\n\t};\n\n\tconst delay =\n\t\t(find(getUserSettings().props, ['name', 'mails_snackbar_delay'])\n\t\t\t?._content as unknown as number) ?? 3;\n\n\tconst cancelableTimer = createCancelableTimer({\n\t\tsecondsDelay: delay,\n\t\tonTick: onTimerTick,\n\t\tonCancel: onTimerCanceled\n\t});\n\n\tcancelableTimer.promise\n\t\t.then(() => {\n\t\t\teditor\n\t\t\t\t.messagesStoreDispatch(sendMsgFromEditor({ editor }))\n\t\t\t\t.then((res) => {\n\t\t\t\t\t// TODO try to handle the error only inside the sendMsgFromEditor (is the asyncThunk really necessary?)\n\t\t\t\t\tif (res.meta.requestStatus === 'rejected') {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tconst errorDescription: string = res.payload.reason;\n\t\t\t\t\t\tuseEditorsStore.getState().setSendProcessStatus(editorId, {\n\t\t\t\t\t\t\tstatus: 'aborted',\n\t\t\t\t\t\t\tabortReason: errorDescription\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\t\t\toptions?.onError && options.onError(errorDescription);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuseEditorsStore.getState().setSendProcessStatus(editorId, {\n\t\t\t\t\t\t\tstatus: 'completed'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\t\t\toptions?.onComplete && options.onComplete();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tuseEditorsStore.getState().setSendProcessStatus(editorId, {\n\t\t\t\t\t\tstatus: 'aborted',\n\t\t\t\t\t\tabortReason: err\n\t\t\t\t\t});\n\t\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\t\toptions?.onError && options.onError(err);\n\t\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tuseEditorsStore.getState().setSendProcessStatus(editorId, {\n\t\t\t\tstatus: 'aborted',\n\t\t\t\tabortReason: err\n\t\t\t});\n\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\toptions?.onError && options.onError(err);\n\t\t});\n\n\tuseEditorsStore.getState().setSendProcessStatus(editorId, {\n\t\tstatus: 'running',\n\t\tcancel: cancelableTimer.cancel\n\t});\n\tcomputeAndUpdateEditorStatus(editorId);\n\n\treturn {\n\t\tcancel: cancelableTimer.cancel\n\t};\n};\n\nexport const useEditorSend = (\n\teditorId: MailsEditorV2['id']\n): {\n\tstatus: MailsEditorV2['sendAllowedStatus'];\n\tsend: (options?: SendMessageOptions) => SendMessageResult;\n} => {\n\tconst status = useEditorsStore((state) => state.editors[editorId].sendAllowedStatus);\n\tconst sendInvoker = useCallback(\n\t\t(options?: SendMessageOptions): SendMessageResult => sendFromEditor(editorId, options),\n\t\t[editorId]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tstatus,\n\t\t\tsend: sendInvoker\n\t\t}),\n\t\t[sendInvoker, status]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\n/**\n * Delay (in ms) between the timer ticks\n */\nconst TICK_DELAY_TIME = 1000;\n\nexport type CancelableTimerParams = {\n\tsecondsDelay: number;\n\tonTick?: (count: number, cancel: () => void) => void;\n\tonCancel?: () => void;\n};\n\nexport type CancelableTimer = {\n\tpromise: Promise<void>;\n\tcancel: () => void;\n};\n\n/**\n *\n * @param secondsDelay\n * @param onTick\n * @param onCancel\n */\nexport const createCancelableTimer = ({\n\tsecondsDelay,\n\tonTick,\n\tonCancel\n}: CancelableTimerParams): CancelableTimer => {\n\tlet intervalId: ReturnType<typeof setInterval> | null;\n\tlet countdown = secondsDelay;\n\n\tconst cancel = (): void => {\n\t\tif (!intervalId) {\n\t\t\treturn;\n\t\t}\n\t\tclearInterval(intervalId);\n\t\tintervalId = null;\n\t\tonCancel && onCancel();\n\t};\n\n\tconst promise = new Promise<void>((resolve) => {\n\t\tif (secondsDelay <= 0) {\n\t\t\tresolve();\n\t\t\treturn;\n\t\t}\n\n\t\tintervalId = setInterval(() => {\n\t\t\tif (countdown > 0) {\n\t\t\t\tcountdown -= 1;\n\t\t\t\tonTick && onTick(countdown, cancel);\n\t\t\t} else {\n\t\t\t\tintervalId && clearInterval(intervalId);\n\t\t\t\tresolve();\n\t\t\t}\n\t\t}, TICK_DELAY_TIME);\n\t});\n\treturn {\n\t\tpromise,\n\t\tcancel\n\t};\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback } from 'react';\n\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { omit, reject } from 'lodash';\n\nimport { computeAndUpdateEditorStatus } from './commons';\nimport { getEditor } from './editors';\nimport { useSaveDraftFromEditor, SaveDraftOptions } from './save-draft';\nimport { TIMEOUTS } from '../../../../constants';\nimport { composeAttachmentDownloadUrl } from '../../../../helpers/attachments';\nimport { useUiUtilities } from '../../../../hooks/use-ui-utilities';\nimport { AttachmentUploadProcessStatus, MailsEditorV2, UnsavedAttachment } from '../../../../types';\nimport {\n\tuploadAttachments,\n\tUploadAttachmentsOptions,\n\tUploadCallbacks\n} from '../../../actions/upload-attachments';\nimport { composeCidUrlFromContentId } from '../editor-transformations';\nimport {\n\tfilterUnsavedAttachmentsByUploadId,\n\tgetSavedInlineAttachmentsByContentId\n} from '../editor-utils';\nimport { useEditorsStore } from '../store';\n\nconst useNotifyUploadError = (): ((file: File) => void) => {\n\tconst { createSnackbar } = useUiUtilities();\n\treturn useCallback(\n\t\t(file) => {\n\t\t\tcreateSnackbar({\n\t\t\t\tkey: `upload-error`,\n\t\t\t\treplace: true,\n\t\t\t\ttype: 'error',\n\t\t\t\tlabel: t('label.errors.upload_failed_generic', {\n\t\t\t\t\tfilename: file.name,\n\t\t\t\t\tdefaultValue: 'Upload failed for the file \"{{filename}}\"'\n\t\t\t\t}),\n\t\t\t\tautoHideTimeout: TIMEOUTS.SNACKBAR_DEFAULT_TIMEOUT\n\t\t\t});\n\t\t},\n\t\t[createSnackbar]\n\t);\n};\n\ntype EditorAttachmentHook = {\n\thasStandardAttachments: boolean;\n\tunsavedStandardAttachments: MailsEditorV2['unsavedAttachments'];\n\tsavedStandardAttachments: MailsEditorV2['savedAttachments'];\n\taddStandardAttachments: (\n\t\tfiles: Array<File>,\n\t\tcallbacks?: UploadCallbacks\n\t) => Array<UnsavedAttachment>;\n\taddUploadedAttachment: ({\n\t\tattachmentId,\n\t\tfileName,\n\t\tcontentType,\n\t\tsize\n\t}: {\n\t\tattachmentId: string;\n\t\tfileName: string;\n\t\tcontentType: string;\n\t\tsize: number;\n\t}) => UnsavedAttachment;\n\taddInlineAttachments: (\n\t\tfiles: Array<File>,\n\t\toptions?: UploadCallbacks & {\n\t\t\tonSaveComplete?: (\n\t\t\t\tinlineAttachments: Array<{\n\t\t\t\t\tcontentId: string | undefined;\n\t\t\t\t\tcidUrl: string | undefined;\n\t\t\t\t\tdownloadServiceUrl: string | undefined;\n\t\t\t\t}>\n\t\t\t) => void;\n\t\t}\n\t) => Array<UnsavedAttachment>;\n\tremoveSavedAttachment: (partName: string) => void;\n\tremoveUnsavedAttachment: (uploadId: string) => void;\n\tremoveStandardAttachments: () => void;\n\ttoggleSmartLink: (partName: string) => void;\n};\n\nexport const useEditorAttachments = (editorId: MailsEditorV2['id']): EditorAttachmentHook => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst notifyUploadError = useNotifyUploadError();\n\n\tconst unsavedStandardAttachments = reject(\n\t\tuseEditorsStore((state) => state.editors[editorId].unsavedAttachments),\n\t\t'isInline'\n\t);\n\tconst savedStandardAttachments = reject(\n\t\tuseEditorsStore((state) => state.editors[editorId].savedAttachments),\n\t\t'isInline'\n\t);\n\tconst removeStandardAttachmentsInvoker = useEditorsStore(\n\t\t(state) => state.clearStandardAttachments\n\t);\n\tconst removeSavedAttachmentsInvoker = useEditorsStore((state) => state.removeSavedAttachment);\n\tconst removeUnsavedAttachmentsInvoker = useEditorsStore((state) => state.removeUnsavedAttachment);\n\tconst toggleSmartLinkInvoker = useEditorsStore((state) => state.toggleSmartLink);\n\n\tconst addGenericUnsavedAttachments = (\n\t\tfiles: Array<File>,\n\t\tareInline: boolean,\n\t\tcallbacks?: UploadAttachmentsOptions\n\t): Array<UnsavedAttachment> => {\n\t\tconst options: UploadAttachmentsOptions = {\n\t\t\tonUploadProgress: (file: File, uploadId: string, percentage: number): void => {\n\t\t\t\tconst setUploadStatus = useEditorsStore.getState().setAttachmentUploadStatus;\n\t\t\t\tconst status: AttachmentUploadProcessStatus = {\n\t\t\t\t\tstatus: 'running',\n\t\t\t\t\tprogress: percentage\n\t\t\t\t};\n\t\t\t\tsetUploadStatus(editorId, uploadId, status);\n\t\t\t\tcallbacks?.onUploadProgress && callbacks.onUploadProgress(file, uploadId, percentage);\n\t\t\t},\n\n\t\t\tonUploadError: (file: File, uploadId: string, error: string): void => {\n\t\t\t\tconst setUploadStatus = useEditorsStore.getState().setAttachmentUploadStatus;\n\t\t\t\tconst status: AttachmentUploadProcessStatus = {\n\t\t\t\t\tstatus: 'aborted',\n\t\t\t\t\tabortReason: error\n\t\t\t\t};\n\t\t\t\tnotifyUploadError(file);\n\t\t\t\tsetUploadStatus(editorId, uploadId, status);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tcallbacks?.onUploadError && callbacks.onUploadError(file, uploadId, error);\n\t\t\t},\n\n\t\t\tonUploadComplete: (file: File, uploadId: string, attachmentId: string): void => {\n\t\t\t\tconst setUploadCompleted = useEditorsStore.getState().setAttachmentUploadCompleted;\n\t\t\t\tsetUploadCompleted(editorId, uploadId, attachmentId);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tcallbacks?.onUploadComplete && callbacks.onUploadComplete(file, uploadId, attachmentId);\n\t\t\t},\n\n\t\t\tonUploadsEnd: (completedUploadsId, failedUploadsId): void => {\n\t\t\t\tcallbacks?.onUploadsEnd && callbacks.onUploadsEnd(completedUploadsId, failedUploadsId);\n\t\t\t}\n\t\t};\n\n\t\tconst uploadsResult = uploadAttachments(files, options);\n\t\tconst { addUnsavedAttachments } = useEditorsStore.getState();\n\n\t\tconst unsavedAttachments = uploadsResult.map<UnsavedAttachment>(\n\t\t\t({ file, uploadId, abortController }) => {\n\t\t\t\tconst attachment: UnsavedAttachment = {\n\t\t\t\t\tfilename: file.name,\n\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\tsize: file.size,\n\t\t\t\t\tuploadId,\n\t\t\t\t\tisInline: areInline,\n\t\t\t\t\tuploadStatus: {\n\t\t\t\t\t\tstatus: 'running',\n\t\t\t\t\t\tprogress: 0\n\t\t\t\t\t},\n\t\t\t\t\tuploadAbortController: abortController\n\t\t\t\t};\n\t\t\t\tareInline && (attachment.contentId = `${attachment.uploadId}@carbonio`);\n\t\t\t\treturn attachment;\n\t\t\t}\n\t\t);\n\t\taddUnsavedAttachments(editorId, unsavedAttachments);\n\t\tcomputeAndUpdateEditorStatus(editorId);\n\n\t\treturn unsavedAttachments;\n\t};\n\n\tconst addAndSaveGenericAttachments = (\n\t\tfiles: Array<File>,\n\t\tareInline: boolean,\n\t\tcallbacks?: UploadAttachmentsOptions & {\n\t\t\tonSaveComplete?: (savedContentIds: Array<string>) => void;\n\t\t}\n\t): Array<UnsavedAttachment> => {\n\t\tconst customizedCallbacks = {\n\t\t\t...callbacks,\n\t\t\tonUploadsEnd: (completedUploadsId: Array<string>, failedUploadsId: Array<string>): void => {\n\t\t\t\tconst editor = getEditor({ id: editorId });\n\t\t\t\tif (editor) {\n\t\t\t\t\tconst uploadedUnsavedAttachments = filterUnsavedAttachmentsByUploadId(\n\t\t\t\t\t\teditor.unsavedAttachments,\n\t\t\t\t\t\tcompletedUploadsId\n\t\t\t\t\t);\n\n\t\t\t\t\tconst uploadedContentIds: Array<string> = [];\n\t\t\t\t\tuploadedUnsavedAttachments.forEach((uploadedUnsavedAttachment) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tuploadedUnsavedAttachment.isInline === areInline &&\n\t\t\t\t\t\t\tuploadedUnsavedAttachment.contentId\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tuploadedContentIds.push(uploadedUnsavedAttachment.contentId);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconst saveDraftOptions: SaveDraftOptions = {\n\t\t\t\t\t\tonComplete: (): void => {\n\t\t\t\t\t\t\tcallbacks?.onSaveComplete && callbacks.onSaveComplete(uploadedContentIds);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tdebouncedSaveDraft(editorId, saveDraftOptions);\n\t\t\t\t}\n\n\t\t\t\tcallbacks?.onUploadsEnd && callbacks.onUploadsEnd(completedUploadsId, failedUploadsId);\n\t\t\t}\n\t\t};\n\n\t\treturn addGenericUnsavedAttachments(files, areInline, customizedCallbacks);\n\t};\n\n\tconst addAndSaveUploadedAttachment = ({\n\t\tattachmentId,\n\t\tfileName,\n\t\tcontentType,\n\t\tsize\n\t}: {\n\t\tattachmentId: string;\n\t\tfileName: string;\n\t\tcontentType: string;\n\t\tsize: number;\n\t}): UnsavedAttachment => {\n\t\tconst { addUnsavedAttachments } = useEditorsStore.getState();\n\n\t\tconst unsavedAttachment = {\n\t\t\tfilename: fileName,\n\t\t\tcontentType,\n\t\t\tsize,\n\t\t\taid: attachmentId,\n\t\t\tisInline: false,\n\t\t\tuploadStatus: {\n\t\t\t\tstatus: 'completed',\n\t\t\t\tprogress: 0\n\t\t\t}\n\t\t} satisfies UnsavedAttachment;\n\t\taddUnsavedAttachments(editorId, [unsavedAttachment]);\n\t\tcomputeAndUpdateEditorStatus(editorId);\n\n\t\tdebouncedSaveDraft(editorId);\n\n\t\treturn unsavedAttachment;\n\t};\n\n\tconst addStandardAttachments = (\n\t\tfiles: Array<File>,\n\t\tcallbacks?: UploadCallbacks\n\t): Array<UnsavedAttachment> => addAndSaveGenericAttachments(files, false, callbacks);\n\n\tconst addUploadedAttachment = ({\n\t\tattachmentId,\n\t\tfileName,\n\t\tcontentType,\n\t\tsize\n\t}: {\n\t\tattachmentId: string;\n\t\tfileName: string;\n\t\tcontentType: string;\n\t\tsize: number;\n\t}): UnsavedAttachment =>\n\t\taddAndSaveUploadedAttachment({ attachmentId, fileName, contentType, size });\n\n\tconst addInlineAttachments = (\n\t\tfiles: Array<File>,\n\t\tcallbacks?: UploadCallbacks & {\n\t\t\tonSaveComplete?: (\n\t\t\t\tinlineAttachments: Array<{\n\t\t\t\t\tcontentId: string | undefined;\n\t\t\t\t\tcidUrl: string | undefined;\n\t\t\t\t\tdownloadServiceUrl: string | undefined;\n\t\t\t\t}>\n\t\t\t) => void;\n\t\t}\n\t): Array<UnsavedAttachment> => {\n\t\tconst customizedCallbacks = {\n\t\t\t...omit(callbacks, 'onSaveComplete'),\n\t\t\tonSaveComplete: (savedContentIds: Array<string>): void => {\n\t\t\t\tconst editor = getEditor({ id: editorId });\n\t\t\t\tif (!editor) {\n\t\t\t\t\tcallbacks?.onSaveComplete && callbacks.onSaveComplete([]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst savedInlineAttachments = getSavedInlineAttachmentsByContentId(\n\t\t\t\t\tsavedContentIds,\n\t\t\t\t\teditor.savedAttachments\n\t\t\t\t);\n\n\t\t\t\tconst inlineInfo = savedInlineAttachments.map((savedInlineAttachment) => ({\n\t\t\t\t\tcontentId: savedInlineAttachment.contentId,\n\t\t\t\t\tcidUrl: savedInlineAttachment.contentId\n\t\t\t\t\t\t? composeCidUrlFromContentId(savedInlineAttachment.contentId) ?? undefined\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdownloadServiceUrl: composeAttachmentDownloadUrl(savedInlineAttachment)\n\t\t\t\t}));\n\n\t\t\t\tcallbacks?.onSaveComplete && callbacks.onSaveComplete(inlineInfo);\n\t\t\t}\n\t\t};\n\n\t\treturn addAndSaveGenericAttachments(files, true, customizedCallbacks);\n\t};\n\n\treturn {\n\t\thasStandardAttachments: unsavedStandardAttachments.length + savedStandardAttachments.length > 0,\n\t\tunsavedStandardAttachments,\n\t\tsavedStandardAttachments,\n\t\tremoveUnsavedAttachment: (uploadId: string): void => {\n\t\t\tremoveUnsavedAttachmentsInvoker(editorId, uploadId);\n\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\tdebouncedSaveDraft(editorId);\n\t\t},\n\n\t\tremoveSavedAttachment: (partName: string): void => {\n\t\t\tremoveSavedAttachmentsInvoker(editorId, partName);\n\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\tdebouncedSaveDraft(editorId);\n\t\t},\n\t\tremoveStandardAttachments: (): void => {\n\t\t\tremoveStandardAttachmentsInvoker(editorId);\n\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\tdebouncedSaveDraft(editorId);\n\t\t},\n\t\taddStandardAttachments,\n\t\taddInlineAttachments,\n\t\taddUploadedAttachment,\n\t\ttoggleSmartLink: (partName: string): void => {\n\t\t\ttoggleSmartLinkInvoker(editorId, partName);\n\t\t}\n\t};\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport axios from 'axios';\nimport { map, remove } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nimport { convertToDecimal } from '../../commons/utilities';\n\nexport type UploadAttachmentResponse = Array<{ aid: string } | null>;\n\nfunction parse(str: string): Array<Array<{ aid: string }>> {\n\t// eslint-disable-next-line no-new-func\n\treturn Function(`'use strict'; return (${str})`)();\n}\n\nexport type UploadCallbacks = {\n\tonUploadProgress?: (file: File, uploadId: string, percentage: number) => void;\n\tonUploadComplete?: (file: File, uploadId: string, attachmentId: string) => void;\n\tonUploadError?: (file: File, uploadId: string, error: string) => void;\n};\n\nexport type UploadAttachmentOptions = UploadCallbacks;\n\nexport type UploadAttachmentsOptions = UploadCallbacks & {\n\tonUploadsEnd?: (completedUploadsId: Array<string>, failedUploadsId: Array<string>) => void;\n};\n\nexport type UploadAttachmentResult = {\n\tfile: File;\n\tuploadId: string;\n\tabortController: AbortController;\n};\n\n/**\n * Uploads a single file and provides a set of callbacks to be notified upon\n * progress, completion or failure of the upload\n *\n * @param file\n * @param options\n *\n * @return An object containing the given uploaded file, the assigned uploadId and\n * the AbortController to cancel the upload connection\n */\nexport const uploadAttachment = (\n\tfile: File,\n\toptions?: UploadAttachmentOptions\n): UploadAttachmentResult => {\n\tconst uploadId: string = uuid();\n\tconst abortController = new AbortController();\n\n\taxios\n\t\t.post('/service/upload?fmt=extended,raw', file, {\n\t\t\theaders: {\n\t\t\t\t'Cache-Control': 'no-cache',\n\t\t\t\t'X-Requested-With': 'XMLHttpRequest',\n\t\t\t\t'Content-Type': `${file.type || 'application/octet-stream'};`,\n\t\t\t\t'Content-Disposition': `attachment; filename=\"${convertToDecimal(file.name)}\"`\n\t\t\t},\n\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\tconst { loaded, total } = progressEvent;\n\t\t\t\tconst percent = total ? Math.round((loaded * 100) / total) : 0;\n\t\t\t\tif (percent < 100) {\n\t\t\t\t\toptions?.onUploadProgress && options?.onUploadProgress(file, uploadId, percent);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsignal: abortController.signal\n\t\t})\n\t\t.then((res) => res.data)\n\t\t.then((txt) => parse(`[${txt}]`))\n\t\t.then((val) => {\n\t\t\tif (!val[2]) {\n\t\t\t\toptions?.onUploadError &&\n\t\t\t\t\toptions?.onUploadError(file, uploadId, 'The upload process returned no aid');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toptions?.onUploadComplete && options?.onUploadComplete(file, uploadId, val[2][0].aid);\n\t\t})\n\t\t.catch((reason) => {\n\t\t\toptions?.onUploadError && options?.onUploadError(file, uploadId, reason);\n\t\t});\n\n\treturn {\n\t\tfile,\n\t\tuploadId,\n\t\tabortController\n\t};\n};\n\n/**\n * Uploads a list of files and provides a set of callbacks to be notified upon\n * progress, completion or failure of the single upload, plus a callback to be\n * notified when all uploads end (with success of failure)\n *\n * @param files\n * @param options\n *\n * @return An array of objects containing, for each element, the given uploaded file, the assigned uploadId and\n * the AbortController to cancel the upload connection\n */\nexport const uploadAttachments = (\n\tfiles: Array<File>,\n\toptions?: UploadAttachmentsOptions\n): Array<UploadAttachmentResult> => {\n\tconst runningUploads: Array<string> = [];\n\tconst completedUploads: Array<string> = [];\n\tconst failedUploads: Array<string> = [];\n\n\tconst removeRunningUpload = (uploadId: string, reason: 'completed' | 'error'): void => {\n\t\tconst removedUploadId = remove(\n\t\t\trunningUploads,\n\t\t\t(runningUploadId) => runningUploadId === uploadId\n\t\t)?.[0];\n\n\t\tif (!removedUploadId) {\n\t\t\treturn;\n\t\t}\n\n\t\treason === 'completed' && completedUploads.push(removedUploadId);\n\t\treason === 'error' && failedUploads.push(removedUploadId);\n\n\t\tif (runningUploads.length === 0 && options?.onUploadsEnd) {\n\t\t\toptions.onUploadsEnd(completedUploads, failedUploads);\n\t\t}\n\t};\n\n\tconst customizedOptions: UploadAttachmentsOptions = {\n\t\t...options,\n\t\tonUploadComplete: (file, uploadId, attachmentId): void => {\n\t\t\toptions?.onUploadComplete && options.onUploadComplete(file, uploadId, attachmentId);\n\t\t\tremoveRunningUpload(uploadId, 'completed');\n\t\t},\n\t\tonUploadError: (file, uploadId, error): void => {\n\t\t\toptions?.onUploadError && options.onUploadError(file, uploadId, error);\n\t\t\tremoveRunningUpload(uploadId, 'error');\n\t\t}\n\t};\n\n\tconst uploadsInfo = map(files, (file) => uploadAttachment(file, customizedOptions));\n\n\t// Populate the list of the running uploads\n\tuploadsInfo.forEach((uploadInfo) => {\n\t\trunningUploads.push(uploadInfo.uploadId);\n\t});\n\n\treturn uploadsInfo;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { getEditor } from './editors';\nimport { MailsEditorV2 } from '../../../../types';\nimport { computeDraftSaveAllowedStatus, computeSendAllowedStatus } from '../editor-utils';\nimport { useEditorsStore } from '../store';\n\n/**\n * Analyzes the given editor and updates in the store the allow status for the\n * draft save and the send operations\n * @param editorId\n */\nexport const computeAndUpdateEditorStatus = (editorId: MailsEditorV2['id']): void => {\n\tconst editor = getEditor({ id: editorId });\n\tif (!editor) {\n\t\tconsole.warn('Cannot find the editor', editorId);\n\t\treturn;\n\t}\n\n\tuseEditorsStore\n\t\t.getState()\n\t\t.setDraftSaveAllowedStatus(editorId, computeDraftSaveAllowedStatus(editor));\n\n\tuseEditorsStore.getState().setSendAllowedStatus(editorId, computeSendAllowedStatus(editor));\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { AddEditorParams, MailsEditorV2 } from '../../../../types';\nimport { useEditorsStore } from '../store';\n\nexport const getEditor = ({ id }: { id: MailsEditorV2['id'] }): MailsEditorV2 | null =>\n\tuseEditorsStore.getState()?.editors?.[id] ?? null;\n\n/**\n * @param id\n * @param editor\n */\nexport const addEditor = ({ id, editor }: AddEditorParams): void => {\n\tuseEditorsStore.getState().addEditor(id, editor);\n};\n\n/**\n * Remove a specific editor.\n * @params id\n */\nexport const deleteEditor = ({ id }: { id: MailsEditorV2['id'] }): void =>\n\tuseEditorsStore.getState().deleteEditor(id);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { debounce } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { computeAndUpdateEditorStatus } from './commons';\nimport { getEditor } from './editors';\nimport { useUiUtilities } from '../../../../hooks/use-ui-utilities';\nimport { normalizeMailMessageFromSoap } from '../../../../normalizations/normalize-message';\nimport { MailsEditorV2 } from '../../../../types';\nimport { saveDraftAsyncThunk, saveDraftV3 } from '../../../actions/save-draft';\nimport { buildSavedAttachments } from '../editor-transformations';\nimport { useEditorsStore } from '../store';\nimport { getDraftSaveDelay } from '../store-utils';\n\nexport type SaveDraftOptions = {\n\tonComplete?: () => void;\n\tonError?: (error: string) => void;\n};\n\nexport type SaveDraftFunction = (editorId: MailsEditorV2['id'], options?: SaveDraftOptions) => void;\n\n/**\n *\n * @param editorId\n * @param options\n */\nexport const useSaveDraftFromEditor = (): {\n\tdebouncedSaveDraft: ReturnType<typeof debounce<SaveDraftFunction>>;\n\timmediateSaveDraft: SaveDraftFunction;\n} => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst [t] = useTranslation();\n\n\tconst saveDraftFromEditor = useCallback(\n\t\t(editorId: MailsEditorV2['id'], options?: SaveDraftOptions): void => {\n\t\t\tconst editor = getEditor({ id: editorId });\n\t\t\tif (!editor) {\n\t\t\t\tconsole.warn('Cannot find the editor', editorId);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!editor.draftSaveAllowedStatus?.allowed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst handleError = (err: string): void => {\n\t\t\t\tuseEditorsStore.getState().setDraftSaveProcessStatus(editorId, {\n\t\t\t\t\tstatus: 'aborted',\n\t\t\t\t\tabortReason: err\n\t\t\t\t});\n\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `save-draft`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t});\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\toptions?.onError && options.onError(err);\n\t\t\t};\n\n\t\t\t// Update messages store\n\t\t\tsaveDraftV3({ editor })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif ('Fault' in res) {\n\t\t\t\t\t\thandleError(res.Fault.Detail?.Error?.Detail);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!res.m) {\n\t\t\t\t\t\thandleError(\n\t\t\t\t\t\t\tt('label.save_draft.incomplete_response', 'The save draft response is incomplete')\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mailMessage = normalizeMailMessageFromSoap(res.m[0]);\n\t\t\t\t\tuseEditorsStore.getState().setDid(editorId, mailMessage.id);\n\t\t\t\t\tuseEditorsStore.getState().setSize(editorId, mailMessage.size);\n\t\t\t\t\tuseEditorsStore.getState().removeUnsavedAttachments(editorId);\n\t\t\t\t\tconst savedAttachments = buildSavedAttachments(mailMessage);\n\n\t\t\t\t\tuseEditorsStore.getState().setSavedAttachments(editorId, savedAttachments);\n\n\t\t\t\t\tuseEditorsStore.getState().setSavedAttachments(editorId, savedAttachments);\n\t\t\t\t\tuseEditorsStore.getState().setTotalSmartLinksSize(editorId);\n\t\t\t\t\tuseEditorsStore.getState().setDraftSaveProcessStatus(editorId, {\n\t\t\t\t\t\tstatus: 'completed',\n\t\t\t\t\t\tlastSaveTimestamp: new Date()\n\t\t\t\t\t});\n\t\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\t\toptions?.onComplete && options?.onComplete();\n\n\t\t\t\t\teditor.messagesStoreDispatch && editor.messagesStoreDispatch(saveDraftAsyncThunk(res));\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tuseEditorsStore.getState().setDraftSaveProcessStatus(editorId, {\n\t\t\t\t\t\tstatus: 'aborted',\n\t\t\t\t\t\tabortReason: err\n\t\t\t\t\t});\n\t\t\t\t\t// FIXME use a subscription to the store update\n\t\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\t\thandleError(err);\n\t\t\t\t\toptions?.onError && options?.onError(err);\n\t\t\t\t});\n\n\t\t\tuseEditorsStore.getState().setDraftSaveProcessStatus(editorId, {\n\t\t\t\tstatus: 'running'\n\t\t\t});\n\t\t\t// FIXME use a subscription to the store update\n\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t},\n\t\t[createSnackbar, t]\n\t);\n\n\tconst delay = getDraftSaveDelay();\n\treturn useMemo(\n\t\t() => ({\n\t\t\tdebouncedSaveDraft: debounce(saveDraftFromEditor, delay),\n\t\t\timmediateSaveDraft: saveDraftFromEditor\n\t\t}),\n\t\t[delay, saveDraftFromEditor]\n\t);\n};\n\n/**\n * Returns the reactive status for the draft save operation.\n * If some change on the editor data will cause the ability/inability to\n * perform a draft save the status will be updated.\n *\n * The hook returns also the functions to invoke the draft save, a debounced version\n * and a normal version\n *\n * @param editorId\n */\nexport const useEditorDraftSave = (\n\teditorId: MailsEditorV2['id']\n): {\n\tstatus: MailsEditorV2['draftSaveAllowedStatus'];\n\tsaveDraft: () => void;\n} => {\n\tconst { immediateSaveDraft, debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst status = useEditorsStore((state) => state.editors[editorId].draftSaveAllowedStatus);\n\tconst immediateInvoker = useCallback((): void => {\n\t\tdebouncedSaveDraft.cancel();\n\t\timmediateSaveDraft(editorId);\n\t}, [debouncedSaveDraft, editorId, immediateSaveDraft]);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tstatus,\n\t\t\tsaveDraft: immediateInvoker\n\t\t}),\n\t\t[immediateInvoker, status]\n\t);\n};\n\n/**\n * Returns the reactive status of the draft save process\n * @param editorId\n */\nexport const useEditorDraftSaveProcessStatus = (\n\teditorId: MailsEditorV2['id']\n): MailsEditorV2['draftSaveProcessStatus'] =>\n\tuseEditorsStore((state) => state.editors[editorId].draftSaveProcessStatus);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { getUserSettings } from '@zextras/carbonio-shell-ui';\nimport { findIndex } from 'lodash';\n\nimport { TIMEOUTS } from '../../../constants';\nimport { EditorsStateTypeV2, UnsavedAttachment } from '../../../types';\n\nexport const getUnsavedAttachmentIndex = (\n\tstate: EditorsStateTypeV2,\n\teditorId: string,\n\tuploadId: string\n): number | null => {\n\tif (!state?.editors?.[editorId]) {\n\t\treturn null;\n\t}\n\tconst unsavedAttachmentIndex = findIndex(state.editors[editorId].unsavedAttachments, [\n\t\t'uploadId',\n\t\tuploadId\n\t]);\n\treturn unsavedAttachmentIndex < 0 ? null : unsavedAttachmentIndex;\n};\n\nexport const getUnsavedAttachment = (\n\tstate: EditorsStateTypeV2,\n\teditorId: string,\n\tuploadId: string\n): UnsavedAttachment | null => {\n\tconst index = getUnsavedAttachmentIndex(state, editorId, uploadId);\n\tif (index === null) {\n\t\treturn null;\n\t}\n\treturn state.editors[editorId].unsavedAttachments[index];\n};\n\nexport function getDraftSaveDelay(): number {\n\tconst maximumDraftSaveDelay = TIMEOUTS.DRAFT_SAVE_DELAY;\n\tconst autoSaveDraftSettings = getUserSettings().prefs.zimbraPrefAutoSaveDraftInterval as string;\n\tif (!autoSaveDraftSettings || autoSaveDraftSettings === '0') {\n\t\treturn TIMEOUTS.DRAFT_SAVE_DELAY;\n\t}\n\tif (autoSaveDraftSettings.includes('s')) {\n\t\tautoSaveDraftSettings.replace('s', '');\n\t\treturn Math.min(parseInt(autoSaveDraftSettings, 10) * 1000, maximumDraftSaveDelay);\n\t}\n\tif (autoSaveDraftSettings.includes('m')) {\n\t\tautoSaveDraftSettings.replace('m', '');\n\t\treturn Math.min(parseInt(autoSaveDraftSettings, 10) * 1000 * 60, maximumDraftSaveDelay);\n\t}\n\treturn TIMEOUTS.DRAFT_SAVE_DELAY;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { produce } from 'immer';\nimport { find, remove } from 'lodash';\nimport { create } from 'zustand';\n\nimport { filterSavedInlineAttachment, filterUnsavedInlineAttachment } from './editor-utils';\nimport { getUnsavedAttachmentIndex } from './store-utils';\nimport {\n\tAttachmentUploadProcessStatus,\n\tEditorsStateTypeV2,\n\tMailsEditorV2,\n\tSavedAttachment,\n\tUnsavedAttachment\n} from '../../../types';\nimport { AppDispatch } from '../../redux';\n\n// extra currying as suggested in https://github.com/pmndrs/zustand/blob/main/docs/guides/typescript.md#basic-usage\nexport const useEditorsStore = create<EditorsStateTypeV2>()((set) => ({\n\teditors: {},\n\taddEditor: (id: MailsEditorV2['id'], editor: MailsEditorV2): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tstate.editors[id] = editor;\n\t\t\t})\n\t\t);\n\t},\n\tdeleteEditor: (id: MailsEditorV2['id']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tdelete state.editors[id];\n\t\t\t})\n\t\t);\n\t},\n\tsetSubject: (id: MailsEditorV2['id'], subject: MailsEditorV2['subject']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].subject = subject;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetText: (id: MailsEditorV2['id'], text: MailsEditorV2['text']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].text = text;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetAutoSendTime: (id: MailsEditorV2['id'], autoSendTime: MailsEditorV2['autoSendTime']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].autoSendTime = autoSendTime;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetDid: (id: MailsEditorV2['id'], did: MailsEditorV2['did']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].did = did;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetSize: (id: MailsEditorV2['id'], size: MailsEditorV2['size']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].size = size;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetTotalSmartLinksSize: (id: MailsEditorV2['id']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tconst currentEditor = state?.editors?.[id];\n\t\t\t\t\tconst { savedAttachments } = currentEditor;\n\t\t\t\t\tconst totalSmartLinksSize = savedAttachments.reduce(\n\t\t\t\t\t\t(acc, attachment) =>\n\t\t\t\t\t\t\tattachment.requiresSmartLinkConversion ? acc + attachment.size : acc,\n\t\t\t\t\t\t0\n\t\t\t\t\t);\n\t\t\t\t\tcurrentEditor.totalSmartLinksSize = totalSmartLinksSize;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\n\tsetIsRichText: (id: MailsEditorV2['id'], value: MailsEditorV2['isRichText']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].isRichText = value;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetOriginalId: (id: MailsEditorV2['id'], originalId: MailsEditorV2['originalId']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].originalId = originalId;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetRecipients: (id: MailsEditorV2['id'], recipients: MailsEditorV2['recipients']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].recipients = recipients;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetToRecipients: (\n\t\tid: MailsEditorV2['id'],\n\t\trecipients: MailsEditorV2['recipients']['to']\n\t): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].recipients.to = recipients;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetCcRecipients: (\n\t\tid: MailsEditorV2['id'],\n\t\trecipients: MailsEditorV2['recipients']['cc']\n\t): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].recipients.cc = recipients;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetBccRecipients: (\n\t\tid: MailsEditorV2['id'],\n\t\trecipients: MailsEditorV2['recipients']['bcc']\n\t): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].recipients.bcc = recipients;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetIdentityId: (id: MailsEditorV2['id'], from: MailsEditorV2['identityId']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].identityId = from;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetIsUrgent: (id: MailsEditorV2['id'], value: MailsEditorV2['isUrgent']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].isUrgent = value;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetRequestReadReceipt: (\n\t\tid: MailsEditorV2['id'],\n\t\tvalue: MailsEditorV2['requestReadReceipt']\n\t): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].requestReadReceipt = value;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetDraftSaveAllowedStatus: (id, status): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].draftSaveAllowedStatus = status;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetDraftSaveProcessStatus: (id, status): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].draftSaveProcessStatus = status;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetSendAllowedStatus: (id, status): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].sendAllowedStatus = status;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetSendProcessStatus: (id, status): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].sendProcessStatus = status;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\ttoggleSmartLink: (id: MailsEditorV2['id'], partName: string): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tconst currentEditor = state?.editors?.[id];\n\t\t\t\tif (!currentEditor) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst attachment = find(currentEditor.savedAttachments, ['partName', partName]);\n\t\t\t\tif (attachment) {\n\t\t\t\t\tattachment.requiresSmartLinkConversion = !attachment.requiresSmartLinkConversion;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetSavedAttachments: (id: MailsEditorV2['id'], attachment: Array<SavedAttachment>): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].savedAttachments = [...attachment];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tremoveSavedAttachment: (id: MailsEditorV2['id'], partName: string): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tremove(state.editors[id].savedAttachments, ['partName', partName]);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tremoveUnsavedAttachments: (id: MailsEditorV2['id']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].unsavedAttachments = [];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\taddUnsavedAttachment: (id: MailsEditorV2['id'], attachment: UnsavedAttachment): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].unsavedAttachments.push(attachment);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\taddUnsavedAttachments: (id: MailsEditorV2['id'], attachments: Array<UnsavedAttachment>): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].unsavedAttachments.push(...attachments);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\taddSavedAttachment: (id: MailsEditorV2['id'], attachment: SavedAttachment): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].savedAttachments.push(attachment);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tsetAttachmentUploadStatus: (\n\t\tid: MailsEditorV2['id'],\n\t\tuploadId: string,\n\t\tstatus: AttachmentUploadProcessStatus\n\t): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tconst unsavedAttachmentIndex = getUnsavedAttachmentIndex(state, id, uploadId);\n\t\t\t\tif (unsavedAttachmentIndex === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstate.editors[id].unsavedAttachments[unsavedAttachmentIndex].uploadStatus = status;\n\t\t\t})\n\t\t);\n\t},\n\tsetAttachmentUploadCompleted: (id: MailsEditorV2['id'], uploadId: string, aid: string): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tconst unsavedAttachmentIndex = getUnsavedAttachmentIndex(state, id, uploadId);\n\t\t\t\tif (unsavedAttachmentIndex === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstate.editors[id].unsavedAttachments[unsavedAttachmentIndex].aid = aid;\n\t\t\t\tstate.editors[id].unsavedAttachments[unsavedAttachmentIndex].uploadStatus = {\n\t\t\t\t\tstatus: 'completed'\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t},\n\tremoveUnsavedAttachment: (id: MailsEditorV2['id'], uploadId: string): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tremove(state.editors[id].unsavedAttachments, ['uploadId', uploadId]);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\tclearStandardAttachments: (id: MailsEditorV2['id']): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].savedAttachments = filterSavedInlineAttachment(\n\t\t\t\t\t\tstate.editors[id].savedAttachments\n\t\t\t\t\t);\n\t\t\t\t\tstate.editors[id].unsavedAttachments = filterUnsavedInlineAttachment(\n\t\t\t\t\t\tstate.editors[id].unsavedAttachments\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t},\n\t/**\n\t * Dispatch function for messages store\n\t * @param id\n\t * @param dispatch\n\t */\n\tsetMessagesStoreDispatch: (id: MailsEditorV2['id'], dispatch: AppDispatch): void => {\n\t\tset(\n\t\t\tproduce((state: EditorsStateTypeV2) => {\n\t\t\t\tif (state?.editors?.[id]) {\n\t\t\t\t\tstate.editors[id].messagesStoreDispatch = dispatch;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}));\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback } from 'react';\n\nimport { Container, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nimport ModalFooter from '../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../carbonio-ui-commons/components/modals/modal-header';\nimport { useAppDispatch } from '../hooks/redux';\nimport { useUiUtilities } from '../hooks/use-ui-utilities';\nimport { convAction, msgAction } from '../store/actions';\n\ntype DeleteConvConfirmPropType = {\n\tselectedIDs: Array<string>;\n\tisMessageView: boolean;\n\tdeselectAll: () => void | undefined;\n\tonClose: () => void;\n};\nconst DeleteConvConfirm: FC<DeleteConvConfirmPropType> = ({\n\tselectedIDs,\n\tisMessageView,\n\tdeselectAll,\n\tonClose\n}) => {\n\tconst dispatch = useAppDispatch();\n\tconst { createSnackbar } = useUiUtilities();\n\n\tconst onConfirmConvDelete = useCallback(() => {\n\t\tdispatch(\n\t\t\tisMessageView\n\t\t\t\t? msgAction({\n\t\t\t\t\t\toperation: 'delete',\n\t\t\t\t\t\tids: selectedIDs\n\t\t\t\t\t})\n\t\t\t\t: convAction({\n\t\t\t\t\t\toperation: 'delete',\n\t\t\t\t\t\tids: selectedIDs\n\t\t\t\t\t})\n\t\t).then((res) => {\n\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\tdeselectAll && deselectAll();\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `trash-${selectedIDs}`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t('label.email_perm_deleted', 'E-mail permanently deleted'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `edit`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t});\n\t\t\t}\n\t\t\tonClose();\n\t\t});\n\t}, [dispatch, isMessageView, selectedIDs, onClose, deselectAll, createSnackbar]);\n\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\tpadding={{ all: 'large' }}\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\theight=\"fit\"\n\t\t\t>\n\t\t\t\t<ModalHeader\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\ttitle={t(\n\t\t\t\t\t\t'messages.permanent_delete_title',\n\t\t\t\t\t\t'Are you sure to permanently delete this element?'\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Container\n\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\t\tmainAlignment=\"center\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\theight=\"fit\"\n\t\t\t\t>\n\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t'messages.permanent_delete_body',\n\t\t\t\t\t\t\t'If you permanently delete this element you will not be able to recover it. Continue?'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<ModalFooter\n\t\t\t\t\t\tonConfirm={onConfirmConvDelete}\n\t\t\t\t\t\tlabel={t('label.delete_permanently', 'Delete permanently')}\n\t\t\t\t\t\tbackground=\"error\"\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default DeleteConvConfirm;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { t } from '@zextras/carbonio-shell-ui';\nimport productLogo from '../assets/logo-product-grey.png';\nimport logo from '../assets/zextras-logo-gray.png';\n\nexport const errorPage = `<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>${t('label.error', 'Error')}</title>\n        <style>\n            html, body, .container {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n            body {\n                background-color: #ffffff;\n                color: #4d4d4d;\n                font-size: 0.8125rem;\n                font-family: Roboto, sans-serif;\n            }\n            .container {\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            }\n            .mainTextWrapper {\n                color: #2b73d2;\n                font-weight: 900;\n                font-size: 1.625rem;\n                line-height: 1.5rem;\n                margin-top: 1.875rem;\n            }\n            .errorWrapper {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                margin: 1.4375rem 0 0.625rem;\n            }\n            .line {\n                height: 0.0625rem;\n                width: 6.25rem;\n                background-color: gray;\n            }\n            .errorCode {\n                color: #4d4d4d;\n                font-weight: 300;\n                font-size: 0.875rem;\n                line-height: 1.3125rem;\n                padding: 0 3.125rem;\n                text-transform: uppercase;\n            }\n            .customText {\n                margin: 0 0.3125rem 0 0;\n                color: #414141;\n            }\n            .needSupportText {\n                color: #414141;\n                font-size: 0.9375rem;\n            }\n            .poweredByZextras {\n                display: flex;\n                margin: 1.875rem 0 0 0;\n            }\n            .zextrasLogo {\n                top: 0.1875rem;\n                position: relative;\n            }\n            .productLogo {\n                height: 4.6875rem;\n                width: 35.25rem;\n            }\n        </style>\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"productLogo\" >\n                <img src=${productLogo} width=\"564\" height=\"75\"/>\n            </div>\n            <div class=\"mainTextWrapper\">\n            ${t('messages.could_not_find_to_show', 'Sorry, we couldn’t find anything to show')}\n            </div>\n            <div class=\"errorWrapper\">\n                <div class=\"line\"></div>\n                <div class=\"errorCode\"><p>${t(\n\t\t\t\t\t\t\t\t\t'messages.something_went_wrong',\n\t\t\t\t\t\t\t\t\t'SOMETHING WENT WRONG'\n\t\t\t\t\t\t\t\t)}</p></div>\n                <div class=\"line\"></div>\n            </div>\n            <p class=\"needSupportText\">${t(\n\t\t\t\t\t\t\t'messages.check_and_try_again',\n\t\t\t\t\t\t\t'Please, check Carbonio and try again'\n\t\t\t\t\t\t)}</p>\n            <div class=\"poweredByZextras\">\n                <p class=\"customText\">${t('messages.powered_by', 'powered by')}</p>\n                <div class=\"zextrasLogo\">\n                    <img src=${logo} height=\"10\" width=\"63\"/>\n                </div>\n            </div>\n        </div>\n    </body>\n</html>`;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport { ChipInput, ChipItem, Container, Divider, Text } from '@zextras/carbonio-design-system';\nimport { t, useIntegratedComponent } from '@zextras/carbonio-shell-ui';\nimport { map, some } from 'lodash';\n\nimport ModalFooter from '../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../carbonio-ui-commons/components/modals/modal-header';\nimport { TIMEOUTS } from '../constants';\nimport { useUiUtilities } from '../hooks/use-ui-utilities';\nimport { redirectMessageAction } from '../store/actions';\n\ntype RedirectActionProps = { onClose: () => void; id: string };\n\ntype ContactType = {\n\tcompany?: string;\n\temail: string;\n\tfirstName?: string;\n\tfullName?: string;\n\tid?: string;\n\tlabel?: string;\n\tlastName?: string;\n};\n\nconst RedirectMessageAction = ({ onClose, id }: RedirectActionProps): ReactElement => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst [ContactInput, integrationAvailable] = useIntegratedComponent('contact-input');\n\tconst [contacts, setContacts] = useState<ContactType[]>([]);\n\tconst onChipInputChange = useCallback((items: ChipItem[]) => {\n\t\tsetContacts(\n\t\t\titems.map<ContactType>(\n\t\t\t\t(item) =>\n\t\t\t\t\t({\n\t\t\t\t\t\taddress: item.label,\n\t\t\t\t\t\temail: item.label\n\t\t\t\t\t}) as ContactType\n\t\t\t)\n\t\t);\n\t}, []);\n\tconst onContactChange = useCallback((users: ContactType[]) => setContacts(users), []);\n\tconst disableRedirect = useMemo(\n\t\t() => contacts?.length === 0 || some(contacts, { error: true }),\n\t\t[contacts]\n\t);\n\n\tconst onRedirectError = useCallback(() => {\n\t\tcreateSnackbar({\n\t\t\tkey: `redirect-${id}`,\n\t\t\treplace: true,\n\t\t\ttype: 'error',\n\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\tautoHideTimeout: TIMEOUTS.REDIRECT\n\t\t});\n\t}, [createSnackbar, id]);\n\n\tconst onConfirm = useCallback(\n\t\t() =>\n\t\t\tredirectMessageAction({\n\t\t\t\tid,\n\t\t\t\te: map(contacts, (p) => ({\n\t\t\t\t\ta: p.email,\n\t\t\t\t\tt: 't'\n\t\t\t\t}))\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (!('Fault' in res)) {\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `redirect-${id}`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tlabel: t('messages.snackbar.message_redirected', 'The message has been redirected'),\n\t\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.REDIRECT\n\t\t\t\t\t\t});\n\t\t\t\t\t\tonClose();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonRedirectError();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tonRedirectError();\n\t\t\t\t}),\n\t\t[contacts, createSnackbar, id, onClose, onRedirectError]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\tpadding={{ all: 'large' }}\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\theight=\"fit\"\n\t\t\t>\n\t\t\t\t<ModalHeader onClose={onClose} title={t('header.redirect_email', 'Redirect e-mail')} />\n\t\t\t\t<Container\n\t\t\t\t\tpadding={{ top: 'small', bottom: 'small' }}\n\t\t\t\t\tmainAlignment=\"center\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\theight=\"fit\"\n\t\t\t\t>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t'messages.modal.redirect.first',\n\t\t\t\t\t\t\t\t\t'This e-mail will be sent on to a new recipient while preserving the e-mail address of the original sender.'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t'messages.modal.redirect.second',\n\t\t\t\t\t\t\t\t\t'The e-mail will appear as originally intended for the new recepient'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</em>\n\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t<Container height=\"fit\" padding={{ top: 'medium' }}>\n\t\t\t\t\t\t\t{integrationAvailable ? (\n\t\t\t\t\t\t\t\t<ContactInput\n\t\t\t\t\t\t\t\t\tdata-testid={'redirect-recipients-address'}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tplaceholder={t('placeholder.add_new_recipients', 'Add new recipients')}\n\t\t\t\t\t\t\t\t\tonChange={onContactChange}\n\t\t\t\t\t\t\t\t\tdefaultValue={contacts}\n\t\t\t\t\t\t\t\t\tdisablePortal\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ChipInput\n\t\t\t\t\t\t\t\t\tdata-testid={'redirect-recipients-address'}\n\t\t\t\t\t\t\t\t\tplaceholder={t('label.to', 'To')}\n\t\t\t\t\t\t\t\t\tonChange={onChipInputChange}\n\t\t\t\t\t\t\t\t\tdefaultValue={contacts}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Divider color=\"primary\" />\n\t\t\t\t\t\t<ModalFooter\n\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\tlabel={t('action.redirect', 'Redirect')}\n\t\t\t\t\t\t\tdisabled={disableRedirect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\nexport default RedirectMessageAction;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport {\n\tgetAddressOwnerAccount,\n\tgetIdentitiesDescriptors,\n\tgetRecipientReplyIdentity\n} from './identities';\nimport { getRootsMap } from '../carbonio-ui-commons/store/zustand/folder/hooks';\nimport { NO_ACCOUNT_NAME } from '../constants';\nimport { retrieveALL, retrieveCC } from '../store/editor-slice-utils';\nimport type { MailMessage } from '../types';\nimport { Attendee, MatchingReplyIdentity, SenderType } from '../types/calendar';\n\n/**\n * Analyze the message and return the identity that should be used as organizer.\n * @param message\n */\nconst getOrganizer = (message: MailMessage): MatchingReplyIdentity => {\n\tconst folderRoots = getRootsMap();\n\tconst from: MatchingReplyIdentity = getRecipientReplyIdentity(folderRoots, message);\n\treturn from;\n};\n\n/**\n * Analyze the message and return the attendees for appointment.\n * @param message\n */\nconst getAttendees = (message: MailMessage): Array<Attendee> => {\n\tconst matchIdentity = getOrganizer(message);\n\tconst accountName = getAddressOwnerAccount(matchIdentity.address) ?? NO_ACCOUNT_NAME;\n\tconst toParticipants = retrieveALL(message, accountName);\n\tconst calAttendees: Array<Attendee> = toParticipants.map(({ address }) => ({ email: address }));\n\treturn calAttendees;\n};\n\n/**\n * Analyze the message and return the optionals attendees for appointment.\n * @param message\n */\nconst getOptionalsAttendees = (message: MailMessage): Array<Attendee> => {\n\tconst matchIdentity = getOrganizer(message);\n\tconst accountName = getAddressOwnerAccount(matchIdentity.address) ?? NO_ACCOUNT_NAME;\n\tconst ccParticipants = retrieveCC(message, accountName);\n\tconst calOptionals: Array<Attendee> = ccParticipants.map(({ address }) => ({ email: address }));\n\treturn calOptionals;\n};\n\n/**\n *\n * @param address\n */\nconst getSenderByOwner = (address?: string): SenderType | null => {\n\tif (!address) {\n\t\treturn null;\n\t}\n\tconst identitiesList = getIdentitiesDescriptors();\n\tconst matchIdentity = identitiesList.find(\n\t\t(identityDescriptor) => identityDescriptor.ownerAccount === address\n\t);\n\treturn matchIdentity\n\t\t? {\n\t\t\t\taddress: matchIdentity.ownerAccount,\n\t\t\t\tfullName: matchIdentity.fromDisplay ?? matchIdentity.identityName,\n\t\t\t\tidentityName: matchIdentity.identityName,\n\t\t\t\tlabel: matchIdentity.identityName\n\t\t\t}\n\t\t: null;\n};\n\nexport { getOrganizer, getAttendees, getOptionalsAttendees, getSenderByOwner };\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { AsyncThunkAction, Dispatch } from '@reduxjs/toolkit';\nimport { Text, useSnackbar } from '@zextras/carbonio-design-system';\nimport {\n\tt,\n\taddBoard,\n\tFOLDERS,\n\treplaceHistory,\n\tuseIntegratedFunction\n} from '@zextras/carbonio-shell-ui';\nimport { isNull, map, noop } from 'lodash';\n\nimport DeleteConvConfirm from './delete-conv-modal';\nimport { errorPage } from './error-page';\nimport MoveConvMessage from './move-conv-msg';\nimport RedirectAction from './redirect-message-action';\nimport { getRoot } from '../carbonio-ui-commons/store/zustand/folder';\nimport { getContentForPrint } from '../commons/print-conversation/print-conversation';\nimport { EditViewActions, MAILS_ROUTE, MessageActionsDescriptors, TIMEOUTS } from '../constants';\nimport { getAttendees, getOptionalsAttendees, getSenderByOwner } from '../helpers/appointmemt';\nimport { useUiUtilities } from '../hooks/use-ui-utilities';\nimport { getMsgCall, getMsgsForPrint, msgAction } from '../store/actions';\nimport { sendMsg, sendMsgFromEditor } from '../store/actions/send-msg';\nimport { extractBody } from '../store/editor-slice-utils';\nimport { AppDispatch, StoreProvider } from '../store/redux';\nimport type {\n\tBoardContext,\n\tMailMessage,\n\tMailsEditorV2,\n\tMessageAction,\n\tMessageActionReturnType,\n\tMsgActionParameters,\n\tMsgActionResult\n} from '../types';\nimport { ConvActionReturnType, ExtraWindowCreationParams, ExtraWindowsContextType } from '../types';\nimport { CalendarType, SenderType } from '../types/calendar';\nimport { MessagePreviewPanel } from '../views/app/detail-panel/message-preview-panel';\nimport { getLocationOrigin } from '../views/app/detail-panel/preview/utils';\n\ntype MessageActionIdsType = Array<string>;\ntype MessageActionValueType = string | boolean;\ntype DeselectAllType = () => void;\n\ntype MessageActionPropType = {\n\tids: MessageActionIdsType;\n\tid?: string | MessageActionIdsType;\n\tvalue?: MessageActionValueType;\n\tdispatch: AppDispatch;\n\tfolderId?: string;\n\tshouldReplaceHistory?: boolean;\n\tdeselectAll?: DeselectAllType;\n\tconversationId?: string;\n\tcloseEditor?: boolean;\n\tisRestore?: boolean;\n\tmessage?: MailMessage;\n};\n\nexport const setMsgRead = ({\n\tids,\n\tvalue,\n\tdispatch,\n\tfolderId,\n\tshouldReplaceHistory = false,\n\tdeselectAll\n}: MessageActionPropType): MessageActionReturnType => {\n\tconst actDescriptor = value\n\t\t? MessageActionsDescriptors.MARK_AS_UNREAD\n\t\t: MessageActionsDescriptors.MARK_AS_READ;\n\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: value ? 'EmailOutline' : 'EmailReadOutline',\n\t\tlabel: value\n\t\t\t? t('action.mark_as_unread', 'Mark as unread')\n\t\t\t: t('action.mark_as_read', 'Mark as read'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\tdispatch(\n\t\t\t\tmsgAction({\n\t\t\t\t\toperation: `${value ? '!' : ''}read`,\n\t\t\t\t\tids\n\t\t\t\t})\n\t\t\t).then((res) => {\n\t\t\t\tdeselectAll && deselectAll();\n\t\t\t\tif (res.type.includes('fulfilled') && shouldReplaceHistory) {\n\t\t\t\t\treplaceHistory(`/folder/${folderId}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n};\n\nexport function setMsgFlag({\n\tids,\n\tvalue,\n\tdispatch\n}: Omit<\n\tMessageActionPropType,\n\t'folderId' | 'shouldReplaceHistory' | 'deselectAll'\n>): MessageActionReturnType {\n\tconst actDescriptor = value ? MessageActionsDescriptors.UNFLAG : MessageActionsDescriptors.FLAG;\n\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: value ? 'Flag' : 'FlagOutline',\n\t\tlabel: value ? t('action.unflag', 'Remove flag') : t('action.flag', 'Add flag'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\tdispatch(\n\t\t\t\tmsgAction({\n\t\t\t\t\toperation: `${value ? '!' : ''}flag`,\n\t\t\t\t\tids\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n}\n\ntype SetAsSpamProps = {\n\tnotCanceled: boolean;\n\tvalue: MessageActionValueType | undefined;\n\tdispatch: AppDispatch;\n\tids: Array<string>;\n\tshouldReplaceHistory?: boolean;\n\tfolderId?: string;\n};\n\nexport const useSetMsgAsSpam = (): ((arg: MessageActionPropType) => MessageActionReturnType) => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst setAsSpam = useCallback(\n\t\t({ notCanceled, value, dispatch, ids, shouldReplaceHistory, folderId }: SetAsSpamProps) => {\n\t\t\tif (!notCanceled) return;\n\t\t\tdispatch(\n\t\t\t\tmsgAction({\n\t\t\t\t\toperation: `${value ? '!' : ''}spam`,\n\t\t\t\t\tids\n\t\t\t\t})\n\t\t\t).then((res) => {\n\t\t\t\tif (res.type.includes('fulfilled') && shouldReplaceHistory) {\n\t\t\t\t\treplaceHistory(`/folder/${folderId}`);\n\t\t\t\t}\n\t\t\t\tif (!res.type.includes('fulfilled')) {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `trash-${ids}`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[createSnackbar]\n\t);\n\n\treturn useCallback(\n\t\t({ ids, value, dispatch, shouldReplaceHistory = true, folderId }) => {\n\t\t\tconst actDescriptor = value\n\t\t\t\t? MessageActionsDescriptors.MARK_AS_NOT_SPAM\n\t\t\t\t: MessageActionsDescriptors.MARK_AS_SPAM;\n\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: value ? 'AlertCircleOutline' : 'AlertCircle',\n\t\t\t\tlabel: value\n\t\t\t\t\t? t('action.mark_as_non_spam', 'Not spam')\n\t\t\t\t\t: t('action.mark_as_spam', 'Mark as spam'),\n\t\t\t\tonClick: (ev): void => {\n\t\t\t\t\tif (ev) ev.preventDefault();\n\t\t\t\t\tlet notCanceled = true;\n\n\t\t\t\t\tconst infoSnackbar = (hideButton = false): void => {\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `trash-${ids}`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tlabel: value\n\t\t\t\t\t\t\t\t? t('messages.snackbar.marked_as_non_spam', 'You’ve marked this e-mail as Not Spam')\n\t\t\t\t\t\t\t\t: t('messages.snackbar.marked_as_spam', 'You’ve marked this e-mail as Spam'),\n\t\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.SET_AS_SPAM,\n\t\t\t\t\t\t\thideButton,\n\t\t\t\t\t\t\tactionLabel: t('label.undo', 'Undo'),\n\t\t\t\t\t\t\tonActionClick: () => {\n\t\t\t\t\t\t\t\tnotCanceled = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tinfoSnackbar();\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t/** If the user has not clicked on the undo button, we can proceed with the action */\n\t\t\t\t\t\tsetAsSpam({ notCanceled, value, dispatch, ids, shouldReplaceHistory, folderId });\n\t\t\t\t\t}, TIMEOUTS.SET_AS_SPAM);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createSnackbar, setAsSpam]\n\t);\n};\n\nexport const previewOnSeparatedWindow = (\n\tmessageId: string,\n\tfolderId: string,\n\tsubject: string,\n\tcreateWindow: ExtraWindowsContextType['createWindow'],\n\tmessageActions: Array<MessageAction>\n): void => {\n\tif (!createWindow) {\n\t\treturn;\n\t}\n\n\tconst createWindowParams: ExtraWindowCreationParams = {\n\t\tname: `message-${messageId}`,\n\t\treturnComponent: false,\n\t\tchildren: (\n\t\t\t<MessagePreviewPanel\n\t\t\t\tmessageId={messageId}\n\t\t\t\tfolderId={folderId}\n\t\t\t\tmessageActions={messageActions}\n\t\t\t/>\n\t\t),\n\t\ttitle: subject,\n\t\tcloseOnUnmount: false\n\t};\n\tcreateWindow(createWindowParams);\n};\n\nexport function previewMessageOnSeparatedWindow(\n\tmessageId: string,\n\tfolderId: string,\n\tsubject: string,\n\tcreateWindow: ExtraWindowsContextType['createWindow'],\n\tmessageActions: Array<MessageAction>\n): ConvActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.PREVIEW_ON_SEPARATED_WINDOW;\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'ExternalLink',\n\t\tlabel: t('action.preview_on_separated_tab', 'Open in a new tab'),\n\t\tonClick: (): void => {\n\t\t\tpreviewOnSeparatedWindow(messageId, folderId, subject, createWindow, messageActions);\n\t\t}\n\t};\n}\n\nexport function printMsg({ message }: { message: MailMessage }): MessageActionReturnType {\n\tconst conversations = map([message], (msg) => ({\n\t\tconversation: msg.conversation,\n\t\tsubject: msg.subject\n\t}));\n\n\tconst actDescriptor = MessageActionsDescriptors.PRINT;\n\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'PrinterOutline',\n\t\tlabel: t('action.print', 'Print'),\n\t\tonClick: (): void => {\n\t\t\tconst printWindow = window.open('', '_blank');\n\t\t\tgetMsgsForPrint({ ids: [message.id] })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst content = getContentForPrint({\n\t\t\t\t\t\tmessages: res,\n\t\t\t\t\t\tconversations,\n\t\t\t\t\t\tisMsg: true\n\t\t\t\t\t});\n\t\t\t\t\tif (printWindow?.top) {\n\t\t\t\t\t\tprintWindow.top.document.title = 'Carbonio';\n\t\t\t\t\t\tprintWindow.document.write(content);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tif (printWindow) printWindow.document.write(errorPage);\n\t\t\t\t});\n\t\t}\n\t};\n}\n\nexport function showOriginalMsg({ id }: { id: string }): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.SHOW_SOURCE;\n\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'CodeOutline',\n\t\tlabel: t('action.show_original', 'Show original'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\twindow.open(`/service/home/~/?auth=co&view=text&id=${id}`, '_blank');\n\t\t}\n\t};\n}\n\nconst dispatchMsgMove = (\n\tdispatch: Dispatch<any>,\n\tids: MessageActionIdsType,\n\tfolderId: string\n): AsyncThunkAction<MsgActionResult, MsgActionParameters, Record<string, unknown>> =>\n\tdispatch(\n\t\tmsgAction({\n\t\t\toperation: 'move',\n\t\t\tids,\n\t\t\tparent: folderId\n\t\t})\n\t);\n\nconst useRestoreMessage = (): ((\n\tdispatch: AppDispatch,\n\tids: MessageActionIdsType,\n\tfolderId: string,\n\tcloseEditor: boolean | undefined,\n\tconversationId: string | undefined\n) => void) => {\n\tconst { createSnackbar } = useUiUtilities();\n\treturn useCallback(\n\t\t(dispatch, ids, folderId, closeEditor, conversationId): void => {\n\t\t\tdispatchMsgMove(dispatch, ids, folderId)\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\t\tcloseEditor &&\n\t\t\t\t\t\t\treplaceHistory(\n\t\t\t\t\t\t\t\tconversationId\n\t\t\t\t\t\t\t\t\t? `/folder/${folderId}/conversation/${conversationId}`\n\t\t\t\t\t\t\t\t\t: `/folder/${folderId}/conversation/-${ids[0]}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `move-${ids}`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tlabel: t('messages.snackbar.email_restored', 'E-mail restored in destination folder'),\n\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `move-${ids}`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\t[createSnackbar]\n\t);\n};\n\nexport const useMoveMsgToTrash = (): ((arg: MessageActionPropType) => MessageActionReturnType) => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst restoreMessage = useRestoreMessage();\n\treturn useCallback(\n\t\t({ ids, dispatch, deselectAll, folderId = FOLDERS.INBOX, conversationId, closeEditor }) => {\n\t\t\tconst actDescriptor = MessageActionsDescriptors.MOVE_TO_TRASH;\n\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: 'Trash2Outline',\n\t\t\t\tlabel: t('label.delete', 'Delete'),\n\t\t\t\tonClick: (ev): void => {\n\t\t\t\t\tif (ev) ev.preventDefault();\n\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tmsgAction({\n\t\t\t\t\t\t\toperation: 'trash',\n\t\t\t\t\t\t\tids\n\t\t\t\t\t\t})\n\t\t\t\t\t).then((res) => {\n\t\t\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\t\t\tdeselectAll && deselectAll();\n\t\t\t\t\t\t\tcloseEditor && replaceHistory(`/folder/${folderId}`);\n\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\tkey: `trash-${ids}`,\n\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\t\tlabel: t('messages.snackbar.email_moved_to_trash', 'E-mail moved to Trash'),\n\t\t\t\t\t\t\t\tautoHideTimeout: 5000,\n\t\t\t\t\t\t\t\thideButton: false,\n\t\t\t\t\t\t\t\tactionLabel: t('label.undo', 'Undo'),\n\t\t\t\t\t\t\t\tonActionClick: () =>\n\t\t\t\t\t\t\t\t\trestoreMessage(dispatch, ids, folderId, closeEditor, conversationId)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\tkey: `trash-${ids}`,\n\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createSnackbar, restoreMessage]\n\t);\n};\n\nexport const useDeleteMsg = (): ((\n\targ: Pick<MessageActionPropType, 'ids' | 'dispatch'>\n) => MessageActionReturnType) => {\n\tconst { createSnackbar, createModal } = useUiUtilities();\n\n\treturn useCallback(\n\t\t({ ids, dispatch }) => {\n\t\t\tconst actDescriptor = MessageActionsDescriptors.DELETE;\n\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: 'Trash2Outline',\n\t\t\t\tlabel: t('label.delete', 'Delete'),\n\t\t\t\tonClick: (ev): void => {\n\t\t\t\t\tif (ev) {\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tconst closeModal = createModal({\n\t\t\t\t\t\ttitle: t('header.delete_email', 'Delete e-mail'),\n\t\t\t\t\t\tconfirmLabel: t('action.ok', 'Ok'),\n\t\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\tmsgAction({\n\t\t\t\t\t\t\t\t\toperation: 'delete',\n\t\t\t\t\t\t\t\t\tids\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t).then((res) => {\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\t\t\tkey: `trash-${ids}`,\n\t\t\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\t\t\t\tlabel: t('messages.snackbar.message_deleted', 'Message deleted'),\n\t\t\t\t\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\t\t\tkey: `trash-${ids}`,\n\t\t\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again.'),\n\t\t\t\t\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSecondaryAction: () => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdismissLabel: t('label.cancel', 'Cancel'),\n\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t\t'messages.modal.delete.sure_delete_email',\n\t\t\t\t\t\t\t\t\t\t'Are you sure to delete the selected e-mail?'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t\t'messages.modal.delete.if_delete_lost_forever',\n\t\t\t\t\t\t\t\t\t\t'If you delete the e-mail, it will be lost forever.'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t\t)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createModal, createSnackbar]\n\t);\n};\n\nexport function replyMsg({ id }: Pick<MessageActionPropType, 'id'>): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.REPLY;\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'UndoOutline',\n\t\tlabel: t('action.reply', 'Reply'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\taddBoard<BoardContext>({\n\t\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.REPLY}&id=${id}`,\n\t\t\t\t// context: { mailId: id, folderId },\n\t\t\t\ttitle: ''\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function replyAllMsg({ id }: Pick<MessageActionPropType, 'id'>): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.REPLY_ALL;\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'ReplyAll',\n\t\tlabel: t('action.reply_all', 'Reply all'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\taddBoard<BoardContext>({\n\t\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.REPLY_ALL}&id=${id}`,\n\t\t\t\t// context: { mailId: id, folderId },\n\t\t\t\ttitle: ''\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function forwardMsg({ id }: Pick<MessageActionPropType, 'id'>): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.FORWARD;\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'Forward',\n\t\tlabel: t('action.forward', 'Forward'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\taddBoard<BoardContext>({\n\t\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.FORWARD}&id=${id}`,\n\t\t\t\t// context: { mailId: id, folderId },\n\t\t\t\ttitle: ''\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function editAsNewMsg({ id }: Pick<MessageActionPropType, 'id'>): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.EDIT_AS_NEW;\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'Edit2Outline',\n\t\tlabel: t('action.edit_as_new', 'Edit as new'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\taddBoard<BoardContext>({\n\t\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.EDIT_AS_NEW}&id=${id}`,\n\t\t\t\t// context: { mailId: id, folderId },\n\t\t\t\ttitle: ''\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport const useEditDraft = (): ((\n\targ: Pick<MessageActionPropType, 'id' | 'folderId' | 'message'>\n) => MessageActionReturnType) => {\n\tconst { createModal } = useUiUtilities();\n\treturn useCallback(\n\t\t({ id, folderId, message }): MessageActionReturnType => {\n\t\t\tconst actDescriptor = MessageActionsDescriptors.EDIT_DRAFT;\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: 'Edit2Outline',\n\t\t\t\tlabel: t('label.edit', 'Edit'),\n\t\t\t\tonClick: (ev): void => {\n\t\t\t\t\tif (ev) ev.preventDefault();\n\t\t\t\t\tif (message?.isScheduled) {\n\t\t\t\t\t\tconst closeModal = createModal({\n\t\t\t\t\t\t\ttitle: t('label.warning', 'Warning'),\n\t\t\t\t\t\t\tconfirmLabel: t('action.edit_anyway', 'Edit anyway'),\n\t\t\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\taddBoard<BoardContext>({\n\t\t\t\t\t\t\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.EDIT_AS_DRAFT}&id=${id}`,\n\t\t\t\t\t\t\t\t\t// context: { mailId: id, folderId },\n\t\t\t\t\t\t\t\t\ttitle: ''\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tshowCloseIcon: true,\n\t\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t\t\t'messages.edit_schedule_warning',\n\t\t\t\t\t\t\t\t\t\t\t'By editing this e-mail, the time and date previously set for delayed sending will be reset.'\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddBoard<BoardContext>({\n\t\t\t\t\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.EDIT_AS_DRAFT}&id=${id}`,\n\t\t\t\t\t\t\t// context: { mailId: id, folderId },\n\t\t\t\t\t\t\ttitle: ''\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createModal]\n\t);\n};\n\nexport function sendDraft({\n\tmessage,\n\tdispatch\n}: {\n\tmessage: MailMessage;\n\tdispatch: AppDispatch;\n}): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.SEND;\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'PaperPlaneOutline',\n\t\tlabel: t('label.send', 'Send'),\n\t\tonClick: (ev): void => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\tdispatch(\n\t\t\t\tsendMsg({\n\t\t\t\t\tmsg: message\n\t\t\t\t})\n\t\t\t)\n\t\t\t\t.then() // TOFIX IRIS-4400\n\t\t\t\t.catch(); // TOFIX IRIS-4400\n\t\t}\n\t};\n}\n\nexport function sendDraftFromPreview({\n\tgenerateEditorFunction,\n\tdispatch\n}: {\n\tgenerateEditorFunction: () => Promise<MailsEditorV2>;\n\tdispatch: AppDispatch;\n}): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.SEND;\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'PaperPlaneOutline',\n\t\tlabel: t('label.send', 'Send'),\n\t\tonClick: async (ev): Promise<void> => {\n\t\t\tif (ev) ev.preventDefault();\n\n\t\t\tgenerateEditorFunction()\n\t\t\t\t.then((editor) => dispatch(sendMsgFromEditor({ editor })))\n\t\t\t\t.then() // TOFIX IRIS-4400\n\t\t\t\t.catch(noop); // TOFIX IRIS-4400\n\t\t}\n\t};\n}\n\nexport const useRedirectMsg = (): ((arg: { id: string }) => MessageActionReturnType) => {\n\tconst { createModal } = useUiUtilities();\n\treturn useCallback(\n\t\t({ id }) => {\n\t\t\tconst actDescriptor = MessageActionsDescriptors.REDIRECT;\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: 'CornerUpRight',\n\t\t\t\tlabel: t('action.redirect', 'Redirect'),\n\t\t\t\tonClick: (ev): void => {\n\t\t\t\t\tif (ev) ev.preventDefault();\n\t\t\t\t\tconst closeModal = createModal(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t\t\t<RedirectAction onClose={(): void => closeModal()} id={id} />\n\t\t\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createModal]\n\t);\n};\n\nexport const useMoveMessageToFolder = (): ((\n\targ: Pick<MessageActionPropType, 'id' | 'dispatch' | 'isRestore' | 'deselectAll' | 'folderId'>\n) => MessageActionReturnType) => {\n\tconst { createModal } = useUiUtilities();\n\treturn useCallback(\n\t\t({ id, dispatch, isRestore, deselectAll, folderId }) => {\n\t\t\tconst actDescriptor = isRestore\n\t\t\t\t? MessageActionsDescriptors.RESTORE\n\t\t\t\t: MessageActionsDescriptors.MOVE;\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: isRestore ? 'RestoreOutline' : 'MoveOutline',\n\t\t\t\tlabel: isRestore ? t('label.restore', 'Restore') : t('label.move', 'Move'),\n\t\t\t\tonClick: (): void => {\n\t\t\t\t\tconst closeModal = createModal(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\t\t\tsize: 'medium',\n\t\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t\t\t<MoveConvMessage\n\t\t\t\t\t\t\t\t\t\tfolderId={folderId ?? ''}\n\t\t\t\t\t\t\t\t\t\tselectedIDs={[id as string]}\n\t\t\t\t\t\t\t\t\t\tonClose={(): void => closeModal()}\n\t\t\t\t\t\t\t\t\t\tisMessageView\n\t\t\t\t\t\t\t\t\t\tisRestore={isRestore ?? false}\n\t\t\t\t\t\t\t\t\t\tdeselectAll={deselectAll ?? noop}\n\t\t\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createModal]\n\t);\n};\n\nexport const useDeleteMessagePermanently = (): ((\n\targ: MessageActionPropType\n) => MessageActionReturnType) => {\n\tconst { createModal } = useUiUtilities();\n\treturn useCallback(\n\t\t({ ids, deselectAll }) => {\n\t\t\tconst actDescriptor = MessageActionsDescriptors.DELETE_PERMANENTLY;\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: 'DeletePermanentlyOutline',\n\t\t\t\tlabel: t('label.delete_permanently', 'Delete Permanently'),\n\t\t\t\tonClick: (): void => {\n\t\t\t\t\tconst closeModal = createModal(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t\t\t<DeleteConvConfirm\n\t\t\t\t\t\t\t\t\t\tselectedIDs={ids}\n\t\t\t\t\t\t\t\t\t\tisMessageView\n\t\t\t\t\t\t\t\t\t\tonClose={(): void => closeModal()}\n\t\t\t\t\t\t\t\t\t\tdeselectAll={deselectAll || ((): null => null)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createModal]\n\t);\n};\n\nexport function downloadEml({ id }: { id: string }): MessageActionReturnType {\n\tconst actDescriptor = MessageActionsDescriptors.DOWNLOAD_EML;\n\n\treturn {\n\t\tid: actDescriptor.id,\n\t\ticon: 'DownloadOutline',\n\t\tlabel: t('action.download_eml', 'Download EML'),\n\t\tonClick: (ev): void => {\n\t\t\tev?.preventDefault();\n\t\t\tconst link = document.createElement('a');\n\t\t\tlink.download = `${id}.eml`;\n\t\t\tlink.href = `${getLocationOrigin()}/service/home/~/?auth=co&id=${id}`;\n\t\t\tlink.click();\n\t\t\tlink.remove();\n\t\t}\n\t};\n}\n\nexport const useCreateAppointment = (): (({\n\titem,\n\topenAppointmentComposer\n}: {\n\titem: MailMessage;\n\topenAppointmentComposer: ReturnType<typeof useIntegratedFunction>[0];\n}) => MessageActionReturnType) => {\n\tconst createSnackbar = useSnackbar();\n\n\treturn useCallback(\n\t\t({\n\t\t\titem,\n\t\t\topenAppointmentComposer\n\t\t}: {\n\t\t\titem: MailMessage;\n\t\t\topenAppointmentComposer: ReturnType<typeof useIntegratedFunction>[0];\n\t\t}): MessageActionReturnType => {\n\t\t\tconst actDescriptor = MessageActionsDescriptors.CREATE_APPOINTMENT;\n\t\t\treturn {\n\t\t\t\tid: actDescriptor.id,\n\t\t\t\ticon: 'CalendarModOutline',\n\t\t\t\tlabel: t('action.create_appointment', 'Create Appointment'),\n\t\t\t\tonClick: (ev): void => {\n\t\t\t\t\tev?.preventDefault();\n\t\t\t\t\tconst attendees = getAttendees(item);\n\t\t\t\t\tconst optionalAttendees = getOptionalsAttendees(item);\n\t\t\t\t\tconst rooFolder = getRoot(item.parent);\n\t\t\t\t\tlet calendar: CalendarType | null = null;\n\t\t\t\t\tlet sender: SenderType | null = null;\n\t\t\t\t\tconst htmlBody = extractBody(item)[1];\n\t\t\t\t\tif (rooFolder && rooFolder?.isLink) {\n\t\t\t\t\t\tconst calendarId = `${rooFolder.id.split(':')[0]}:${FOLDERS.CALENDAR}`;\n\t\t\t\t\t\tcalendar = {\n\t\t\t\t\t\t\tid: calendarId,\n\t\t\t\t\t\t\towner: rooFolder?.isLink && rooFolder.owner\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsender = getSenderByOwner(rooFolder?.owner);\n\t\t\t\t\t}\n\t\t\t\t\tif (!item?.isComplete) {\n\t\t\t\t\t\tgetMsgCall({ msgId: item.id })\n\t\t\t\t\t\t\t.then((message: MailMessage) => {\n\t\t\t\t\t\t\t\tconst mailHtmlBody = extractBody(message)[1];\n\t\t\t\t\t\t\t\topenAppointmentComposer({\n\t\t\t\t\t\t\t\t\ttitle: message.subject,\n\t\t\t\t\t\t\t\t\tisRichText: true,\n\t\t\t\t\t\t\t\t\trichText: mailHtmlBody,\n\t\t\t\t\t\t\t\t\t...(!isNull(calendar) ? { calendar } : {}),\n\t\t\t\t\t\t\t\t\t...(!isNull(sender) ? { sender } : {}),\n\t\t\t\t\t\t\t\t\tattendees,\n\t\t\t\t\t\t\t\t\toptionalAttendees\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\t\tkey: `get-msg-on-new-appointment`,\n\t\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t\t\t\t\t'message.snackbar.att_err',\n\t\t\t\t\t\t\t\t\t\t'There seems to be a problem when saving, please try again'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\topenAppointmentComposer({\n\t\t\t\t\t\t\ttitle: item.subject,\n\t\t\t\t\t\t\tisRichText: true,\n\t\t\t\t\t\t\trichText: htmlBody,\n\t\t\t\t\t\t\t...(!isNull(calendar) ? { calendar } : {}),\n\t\t\t\t\t\t\t...(!isNull(sender) ? { sender } : {}),\n\t\t\t\t\t\t\tattendees,\n\t\t\t\t\t\t\toptionalAttendees\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t[createSnackbar]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { CreateSnackbarFn } from '@zextras/carbonio-design-system';\nimport { TFunction } from 'i18next';\nimport { find, truncate } from 'lodash';\n\nimport { createSmartLinksSoapAPI } from '../store/actions/create-smart-links';\nimport { useEditorsStore } from '../store/zustand/editor/store';\nimport type {\n\tCreateSmartLinksResponse,\n\tSmartLinkUrl,\n\tConversation,\n\tMailMessage,\n\tMailsEditorV2,\n\tMessageAction\n} from '../types';\n\ntype GetFolderParentIdProps = {\n\tfolderId: string;\n\tisConversation: boolean;\n\titems: Array<Partial<MailMessage> & Pick<MailMessage, 'id'>> | Array<Conversation>;\n};\n\n// FIXME the function name and the parameters are misleading\n// FIXME this function implementation is strictly linked to the\n//  search list and multiple selection list. Should be moved\n//  closer to them\nexport function getFolderParentId({\n\tfolderId,\n\tisConversation,\n\titems\n}: GetFolderParentIdProps): string {\n\tif (folderId) return folderId;\n\tif (isConversation) return (items as Conversation[])?.[0]?.messages?.[0]?.parent;\n\treturn (items as MailMessage[])?.[0]?.parent;\n}\n\n/**\n *\n * @param actions\n * @param id\n */\nexport const findMessageActionById = (\n\tactions: Array<MessageAction>,\n\tid: string\n): MessageAction | undefined => {\n\tif (!actions || !actions.length) {\n\t\treturn undefined;\n\t}\n\n\treturn find(actions, ['id', id]);\n};\n\n/**\n * Generate the html for the smart link\n */\nexport const generateSmartLinkHtml = ({\n\tsmartLink,\n\tfilename\n}: {\n\tsmartLink: SmartLinkUrl;\n\tfilename: MailsEditorV2['savedAttachments'][0]['filename'];\n}): string =>\n\t`<a style='background-color: #D3EBF8;\npadding: 11px 16px;\ncolor: #2B73D2;\ndisplay: inline-block;\nmargin-top: 5px;\nmax-width: 80%;\nborder-radius: 5px;'\n href='${smartLink.publicUrl}' download>${truncate(filename ?? smartLink.publicUrl, {\n\t\tlength: 76,\n\t\tomission: '...'\n })}</a>`;\n\n/**\n * Add smart links to the text of the editor\n * both in plain text and rich text\n */\nexport function addSmartLinksToText({\n\tresponse,\n\ttext,\n\tattachments\n}: {\n\tresponse: CreateSmartLinksResponse;\n\ttext: MailsEditorV2['text'];\n\tattachments: MailsEditorV2['savedAttachments'];\n}): MailsEditorV2['text'] {\n\treturn {\n\t\tplainText: text.plainText.concat(\n\t\t\tresponse.smartLinks.map((smartLink) => smartLink.publicUrl).join('\\n')\n\t\t),\n\t\trichText: text.richText.concat(\n\t\t\t` ${response.smartLinks\n\t\t\t\t.map((smartLink, index) =>\n\t\t\t\t\tgenerateSmartLinkHtml({\n\t\t\t\t\t\tsmartLink,\n\t\t\t\t\t\tfilename: attachments[index]?.filename\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.join('<br/>')}`\n\t\t)\n\t};\n}\n\n/**\n * Create smart links for the attachments that require it\n * once obtained the response, the text of the editor is updated with the smart links\n * the attachments that have been converted are removed from the saved attachments\n * @param editorId\n * @param onResponseCallback\n * @param createSnackbar\n * @param t\n * @returns Promise<void>\n */\nexport async function updateEditorWithSmartLinks({\n\tcreateSnackbar,\n\tt,\n\teditorId\n}: {\n\teditorId: MailsEditorV2['id'];\n\tcreateSnackbar: CreateSnackbarFn;\n\tt: TFunction;\n}): Promise<void> {\n\tconst savedStandardAttachments = useEditorsStore.getState().editors[editorId].savedAttachments;\n\n\tconst attachmentsToConvert = savedStandardAttachments\n\t\t.filter((attachment) => attachment.requiresSmartLinkConversion)\n\t\t.map((attachment) => ({ draftId: attachment.messageId, partName: attachment.partName }));\n\n\ttry {\n\t\tconst result = await createSmartLinksSoapAPI(attachmentsToConvert);\n\n\t\tconst { text } = useEditorsStore.getState().editors[editorId];\n\n\t\tconst attachmentsToAddToBody = savedStandardAttachments.filter(\n\t\t\t(attachment) => attachment.requiresSmartLinkConversion\n\t\t);\n\n\t\tconst textWithLinks = addSmartLinksToText({\n\t\t\tresponse: result,\n\t\t\ttext,\n\t\t\tattachments: attachmentsToAddToBody\n\t\t});\n\t\tuseEditorsStore.getState().setText(editorId, textWithLinks);\n\t\tconst { removeSavedAttachment } = useEditorsStore.getState();\n\t\tattachmentsToConvert.forEach((smartLink) => {\n\t\t\tremoveSavedAttachment(editorId, smartLink.partName);\n\t\t});\n\t} catch (err) {\n\t\tcreateSnackbar({\n\t\t\tkey: `save-draft`,\n\t\t\treplace: true,\n\t\t\ttype: 'error',\n\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\tautoHideTimeout: 3000\n\t\t});\n\t\tthrow err;\n\t}\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { ErrorSoapBodyResponse, soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport {\n\tCreateSmartLinksRequest,\n\tCreateSmartLinksResponse,\n\tSmartLinkAttachment\n} from '../../types';\n\nexport async function createSmartLinksSoapAPI(\n\tattachmentsToConvert: Array<SmartLinkAttachment>\n): Promise<CreateSmartLinksResponse> {\n\treturn soapFetch<CreateSmartLinksRequest, CreateSmartLinksResponse | ErrorSoapBodyResponse>(\n\t\t'CreateSmartLinks',\n\t\t{\n\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\tattachments: attachmentsToConvert\n\t\t}\n\t).then((resp) => {\n\t\tif ('Fault' in resp) {\n\t\t\treturn Promise.reject(resp.Fault);\n\t\t}\n\t\treturn resp;\n\t});\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useEffect } from 'react';\n\nimport { Container, Padding } from '@zextras/carbonio-design-system';\nimport { uniqBy } from 'lodash';\n\nimport MailPreview from './preview/mail-preview';\nimport PreviewPanelHeader from './preview/preview-panel-header';\nimport { EXTRA_WINDOW_ACTION_ID } from '../../../constants';\nimport { useAppDispatch, useAppSelector } from '../../../hooks/redux';\nimport { getMsg } from '../../../store/actions';\nimport { selectMessage } from '../../../store/messages-slice';\nimport type { MailsStateType, MessageAction } from '../../../types';\nimport { useExtraWindow } from '../extra-windows/use-extra-window';\n\nexport type MessagePreviewPanelProps = {\n\tfolderId: string;\n\tmessageId: string;\n\tmessageActions: Array<MessageAction>;\n};\n\nexport const MessagePreviewPanel: FC<MessagePreviewPanelProps> = ({\n\tfolderId,\n\tmessageId,\n\tmessageActions\n}) => {\n\tconst { isInsideExtraWindow } = useExtraWindow();\n\tconst dispatch = useAppDispatch();\n\n\tconst isExtraWindowActions = messageActions.some(\n\t\t(action: MessageAction) => action.id === EXTRA_WINDOW_ACTION_ID\n\t);\n\n\tconst actions = isExtraWindowActions\n\t\t? messageActions.filter((action: MessageAction) => action.id !== EXTRA_WINDOW_ACTION_ID)\n\t\t: uniqBy([...messageActions[0], ...messageActions[1]], 'id');\n\n\tconst message = useAppSelector((state: MailsStateType) => selectMessage(state, messageId));\n\n\tuseEffect(() => {\n\t\tif (!message?.isComplete) {\n\t\t\tdispatch(getMsg({ msgId: messageId }));\n\t\t}\n\t}, [dispatch, folderId, message, messageId]);\n\n\treturn (\n\t\t<Container orientation=\"vertical\" mainAlignment=\"flex-start\" crossAlignment=\"flex-start\">\n\t\t\t{message && (\n\t\t\t\t<>\n\t\t\t\t\t{!isInsideExtraWindow && <PreviewPanelHeader item={message} folderId={folderId} />}\n\t\t\t\t\t<Container\n\t\t\t\t\t\tstyle={{ overflowY: 'auto' }}\n\t\t\t\t\t\theight=\"fill\"\n\t\t\t\t\t\tbackground=\"gray5\"\n\t\t\t\t\t\tpadding={{ horizontal: 'large', bottom: 'small', top: 'large' }}\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Container height=\"fit\" mainAlignment=\"flex-start\" background=\"gray5\">\n\t\t\t\t\t\t\t<Padding bottom=\"medium\" width=\"100%\">\n\t\t\t\t\t\t\t\t<MailPreview\n\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\texpanded\n\t\t\t\t\t\t\t\t\tisAlone\n\t\t\t\t\t\t\t\t\tmessageActions={actions}\n\t\t\t\t\t\t\t\t\tisMessageView\n\t\t\t\t\t\t\t\t\tisInsideExtraWindow={isInsideExtraWindow}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Container>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { Container, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport React, { FC, useCallback } from 'react';\nimport ModalFooter from '../../../../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../../../../carbonio-ui-commons/components/modals/modal-header';\n\nexport type DeleteAttachmentModalPropsType = {\n\tonClose: () => void;\n\tonDownloadAndDelete: () => void;\n\tonDeleteAttachment: () => void;\n};\n\nconst DeleteAttachmentModal: FC<DeleteAttachmentModalPropsType> = ({\n\tonClose,\n\tonDownloadAndDelete,\n\tonDeleteAttachment\n}) => {\n\tconst onDeleteConfirm = useCallback(() => {\n\t\tonClose();\n\t\tonDeleteAttachment();\n\t}, [onClose, onDeleteAttachment]);\n\n\tconst onDownloadAndDeleteConfirm = useCallback(() => {\n\t\tonClose();\n\t\tonDownloadAndDelete();\n\t}, [onClose, onDownloadAndDelete]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader onClose={onClose} title={t('header.warning', 'Warning')} />\n\t\t\t<Container padding={{ right: 'large', top: 'extrasmall' }} crossAlignment=\"flex-start\">\n\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'message.delete_attachment_message1',\n\t\t\t\t\t\t'Your attachment will be permanently deleted from Carbonio.'\n\t\t\t\t\t)}\n\t\t\t\t</Text>\n\t\t\t\t<Text overflow=\"break-word\" style={{ textAlign: 'left' }}>\n\t\t\t\t\t{t('message.delete_attachment_message2', 'Do you want to download it before?')}\n\t\t\t\t</Text>\n\t\t\t</Container>\n\t\t\t<ModalFooter\n\t\t\t\tonConfirm={onDeleteConfirm}\n\t\t\t\tlabel={t('label.delete_permanently', 'Delete Permanently')}\n\t\t\t\tsecondaryBtnType={'outlined'}\n\t\t\t\tsecondaryAction={onDownloadAndDeleteConfirm}\n\t\t\t\tsecondaryLabel={t('label.download_and_delete', 'Download And Delete')}\n\t\t\t\tsecondaryColor=\"error\"\n\t\t\t\tcolor=\"error\"\n\t\t\t\tpaddingTop=\"extrasmall\"\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default DeleteAttachmentModal;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { includes } from 'lodash';\n\n/**\n * Format a size in byte as human readable\n */\nexport const humanFileSize = (inputSize: number): string => {\n\tif (inputSize === 0) {\n\t\treturn '0 B';\n\t}\n\tconst i = Math.floor(Math.log(inputSize) / Math.log(1024));\n\treturn `${(inputSize / 1024 ** i).toFixed(2).toString()} ${['B', 'KB', 'MB', 'GB', 'TB'][i]}`;\n};\n\nexport const previewType = (contentType: string): 'image' | 'pdf' | 'vcard' | undefined => {\n\tif (contentType?.startsWith('image') && !contentType?.includes('photoshop')) return 'image';\n\tif (includes(['text/vcard'], contentType)) return 'vcard';\n\tif (\n\t\tcontentType?.endsWith('pdf') ||\n\t\tincludes(\n\t\t\t[\n\t\t\t\t'text/csv',\n\t\t\t\t'text/plain',\n\t\t\t\t'application/msword',\n\t\t\t\t'application/vnd.ms-excel',\n\t\t\t\t'application/vnd.ms-powerpoint',\n\t\t\t\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t\t'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t\t\t\t'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t\t'application/vnd.oasis.opendocument.presentation',\n\t\t\t\t'application/vnd.oasis.opendocument.text'\n\t\t\t],\n\t\t\tcontentType\n\t\t)\n\t)\n\t\treturn 'pdf';\n\treturn undefined;\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useCallback, useContext, useMemo, useRef, useState } from 'react';\n\nimport {\n\tContainer,\n\tgetColor,\n\tIcon,\n\tIconButton,\n\tLink,\n\tPadding,\n\tRow,\n\tText,\n\tTooltip,\n\tuseTheme\n} from '@zextras/carbonio-design-system';\nimport {\n\tErrorSoapBodyResponse,\n\tgetIntegratedFunction,\n\tsoapFetch,\n\tt,\n\tuseIntegratedFunction\n} from '@zextras/carbonio-shell-ui';\nimport { PreviewsManagerContext } from '@zextras/carbonio-ui-preview';\nimport { filter, map } from 'lodash';\nimport styled from 'styled-components';\n\nimport DeleteAttachmentModal from './delete-attachment-modal';\nimport { humanFileSize, previewType } from './file-preview';\nimport {\n\tgetAttachmentIconColors,\n\tgetAttachmentsDownloadLink,\n\tgetAttachmentsLink,\n\tgetLocationOrigin\n} from './utils';\nimport { getFileExtension } from '../../../../commons/utilities';\nimport { useAttachmentIconColor } from '../../../../helpers/attachments';\nimport { useAppDispatch } from '../../../../hooks/redux';\nimport { useUiUtilities } from '../../../../hooks/use-ui-utilities';\nimport { getMsgsForPrint } from '../../../../store/actions';\nimport { deleteAttachments } from '../../../../store/actions/delete-all-attachments';\nimport { StoreProvider } from '../../../../store/redux';\nimport type {\n\tAttachmentPart,\n\tAttachmentType,\n\tCopyToFileRequest,\n\tCopyToFileResponse,\n\tMailMessage,\n\tOpenEmlPreviewType\n} from '../../../../types';\nimport { useExtraWindow } from '../../extra-windows/use-extra-window';\n\n/**\n * The BE currently doesn't support the preview of PDF attachments\n * whose part name consists in more than 2 numbers (which is common\n * for attachments nested inside an EML. Example: 1.3.2)\n *\n * As a workaround we intercept those cases and handle them\n * with the browser pdf preview\n *\n * TODO remove it when IRIS-3918 will be implemented\n */\nconst UNSUPPORTED_PDF_ATTACHMENT_PARTNAME_PATTERN = /\\d+\\.\\d+\\../;\n\nconst AttachmentHoverBarContainer = styled(Container)`\n\tdisplay: none;\n\theight: 0;\n`;\n\nconst AttachmentContainer = styled(Container).attrs(\n\t(props: { requiresSmartLinkConversion: boolean }) => ({\n\t\trequiresSmartLinkConversion: props.requiresSmartLinkConversion\n\t})\n)`\n\tborder-bottom: ${(props): string =>\n\t\tprops.requiresSmartLinkConversion\n\t\t\t? `1px solid ${props.theme.palette.primary.regular}`\n\t\t\t: 'none'};\n\n\tborder-radius: 0.125rem;\n\twidth: calc(50% - 0.25rem);\n\ttransition: 0.2s ease-out;\n\tmargin-bottom: ${({ theme }): string => theme.sizes.padding.small};\n\t&:hover {\n\t\tbackground-color: ${({ theme, background = 'currentColor' }): string =>\n\t\t\tgetColor(`${background}.hover`, theme)};\n\t\t& ${AttachmentHoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n\t&:focus {\n\t\tbackground-color: ${({ theme, background = 'currentColor' }): string =>\n\t\t\tgetColor(`${background}.focus`, theme)};\n\t}\n\tcursor: pointer;\n`;\n\nconst AttachmentLink = styled.a`\n\tmargin-bottom: ${({ theme }): string => theme.sizes.padding.small};\n\tposition: relative;\n\ttext-decoration: none;\n`;\n\nconst AttachmentExtension = styled(Text)<{\n\tbackground: string;\n}>`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 2rem;\n\theight: 2rem;\n\tborder-radius: ${({ theme }): string => theme.borderRadius};\n\tbackground-color: ${({ background }): string => background};\n\tcolor: ${({ theme }): string => theme.palette.gray6.regular};\n\tfont-size: calc(${({ theme }): string => theme.sizes.font.small} - 0.125rem);\n\ttext-transform: uppercase;\n\tmargin-right: ${({ theme }): string => theme.sizes.padding.small};\n`;\n\nconst Attachment: FC<AttachmentType> = ({\n\tfilename,\n\tsize,\n\tlink,\n\tdownloadlink,\n\tmessage,\n\tisExternalMessage = false,\n\tpart,\n\tatt,\n\topenEmlPreview\n}) => {\n\tconst { createPreview } = useContext(PreviewsManagerContext);\n\tconst { isInsideExtraWindow } = useExtraWindow();\n\tconst extension = getFileExtension(att).value;\n\tconst { createSnackbar, createModal } = useUiUtilities();\n\n\tconst inputRef = useRef<HTMLAnchorElement>(null);\n\tconst inputRef2 = useRef<HTMLAnchorElement>(null);\n\tconst dispatch = useAppDispatch();\n\n\tconst pType = previewType(att.contentType);\n\tconst [createContact, isAvailable] = useIntegratedFunction('create_contact_from_vcard');\n\tconst downloadAttachment = useCallback(() => {\n\t\tif (inputRef.current) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tinputRef2.current.value = null;\n\t\t\tinputRef.current.click();\n\t\t}\n\t}, [inputRef]);\n\n\t// TODO remove it when IRIS-3918 will be implemented\n\tconst browserPdfPreview = useCallback(() => {\n\t\tif (inputRef2.current) {\n\t\t\tinputRef2.current.click();\n\t\t}\n\t}, [inputRef2]);\n\n\tconst isEML = extension === 'EML';\n\n\tconst actionTooltipText = isEML\n\t\t? t('action.click_open', 'Click to open')\n\t\t: t('action.click_preview', 'Click to preview');\n\n\tconst onDeleteAttachment = useCallback(() => {\n\t\tdispatch(deleteAttachments({ id: message.id, attachments: [part] }));\n\t}, [dispatch, message.id, part]);\n\n\tconst onDownloadAndDelete = useCallback(() => {\n\t\tdownloadAttachment();\n\t\tonDeleteAttachment();\n\t}, [downloadAttachment, onDeleteAttachment]);\n\n\tconst removeAttachment = useCallback(() => {\n\t\tconst closeModal = createModal(\n\t\t\t{\n\t\t\t\tmaxHeight: '90vh',\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<DeleteAttachmentModal\n\t\t\t\t\t\t\tonClose={(): void => closeModal()}\n\t\t\t\t\t\t\tonDownloadAndDelete={onDownloadAndDelete}\n\t\t\t\t\t\t\tonDeleteAttachment={onDeleteAttachment}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}, [createModal, onDeleteAttachment, onDownloadAndDelete]);\n\n\tconst confirmAction = useCallback(\n\t\t(nodes) => {\n\t\t\tsoapFetch<CopyToFileRequest, CopyToFileResponse | ErrorSoapBodyResponse>('CopyToFiles', {\n\t\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\t\tmid: message.id,\n\t\t\t\tpart: att.name,\n\t\t\t\tdestinationFolderId: nodes[0].id\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (!('Fault' in res)) {\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `mail-moved-root`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\t\tlabel: t('message.snackbar.att_saved', 'Attachment saved in the selected folder'),\n\t\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `mail-moved-root`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t\t\t'message.snackbar.att_err',\n\t\t\t\t\t\t\t\t'There seems to be a problem when saving, please try again'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `calendar-moved-root`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t\t'message.snackbar.att_err',\n\t\t\t\t\t\t\t'There seems to be a problem when saving, please try again'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t[att.name, createSnackbar, message.id]\n\t);\n\tconst onCreateContact = useCallback(() => {\n\t\tcreateContact({ messageId: message.id, part });\n\t}, [createContact, message.id, part]);\n\tconst isAValidDestination = useCallback((node) => node?.permissions?.can_write_file, []);\n\n\tconst actionTarget = useMemo(\n\t\t() => ({\n\t\t\ttitle: t('label.select_folder', 'Select folder'),\n\t\t\tconfirmAction,\n\t\t\tconfirmLabel: t('label.save', 'Save'),\n\t\t\tdisabledTooltip: t('label.invalid_destination', 'This node is not a valid destination'),\n\t\t\tallowFiles: false,\n\t\t\tallowFolders: true,\n\t\t\tisValidSelection: isAValidDestination,\n\t\t\tcanSelectOpenedFolder: true,\n\t\t\tmaxSelection: 1\n\t\t}),\n\t\t[confirmAction, isAValidDestination]\n\t);\n\n\tconst [uploadIntegration, isUploadIntegrationAvailable] = getIntegratedFunction('select-nodes');\n\n\tconst showEMLPreview = useCallback(() => {\n\t\tgetMsgsForPrint({ ids: [message.id], part: att?.name })\n\t\t\t.then((res) => {\n\t\t\t\topenEmlPreview && openEmlPreview(message.id, att?.name, res[0]);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `eml-attachment-failed-download`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thideButton: true,\n\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t'message.snackbar.eml_download_failed',\n\t\t\t\t\t\t'The EML attachment could not be downloaded. Try later'\n\t\t\t\t\t),\n\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t});\n\t\t\t});\n\t}, [att?.name, createSnackbar, message.id, openEmlPreview]);\n\n\tconst preview = useCallback(\n\t\t(ev) => {\n\t\t\tev.preventDefault();\n\t\t\tconst pType = previewType(att.contentType);\n\n\t\t\tif (pType === 'pdf' || pType === 'image') {\n\t\t\t\t// TODO remove the condition and the conditional block when IRIS-3918 will be implemented\n\t\t\t\tif (pType === 'pdf' && att.name.match(UNSUPPORTED_PDF_ATTACHMENT_PARTNAME_PATTERN)) {\n\t\t\t\t\tbrowserPdfPreview();\n\t\t\t\t} else {\n\t\t\t\t\tcreatePreview({\n\t\t\t\t\t\tsrc: link,\n\t\t\t\t\t\tpreviewType: pType,\n\t\t\t\t\t\t/** Left Action for the preview */\n\t\t\t\t\t\tcloseAction: {\n\t\t\t\t\t\t\tid: 'close',\n\t\t\t\t\t\t\ticon: 'ArrowBack',\n\t\t\t\t\t\t\ttooltipLabel: t('preview.close', 'Close Preview')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/** Actions for the preview */\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon: 'DownloadOutline',\n\t\t\t\t\t\t\t\ttooltipLabel: t('label.download', 'Download'),\n\t\t\t\t\t\t\t\tid: 'DownloadOutline',\n\t\t\t\t\t\t\t\tonClick: downloadAttachment\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t/** Extension of the file, shown as info */\n\t\t\t\t\t\textension: att.filename.substring(att.filename.lastIndexOf('.') + 1),\n\t\t\t\t\t\t/** Name of the file, shown as info */\n\t\t\t\t\t\tfilename: att.filename,\n\t\t\t\t\t\t/** Size of the file, shown as info */\n\t\t\t\t\t\tsize: humanFileSize(att.size)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (isEML) {\n\t\t\t\tshowEMLPreview();\n\t\t\t} else if (inputRef2.current) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tinputRef2.current.value = null;\n\t\t\t\tinputRef2.current.click();\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tatt.contentType,\n\t\t\tatt.filename,\n\t\t\tatt.name,\n\t\t\tatt.size,\n\t\t\tbrowserPdfPreview,\n\t\t\tcreatePreview,\n\t\t\tdownloadAttachment,\n\t\t\tisEML,\n\t\t\tlink,\n\t\t\tshowEMLPreview\n\t\t]\n\t);\n\n\tconst theme = useTheme();\n\tconst requiresSmartLinkConversion = !!att.requiresSmartLinkConversion;\n\n\tconst sizeLabel = useMemo(() => humanFileSize(size), [size]);\n\tconst backgroundColor = useMemo(() => {\n\t\tif (requiresSmartLinkConversion) {\n\t\t\treturn theme.palette.infoBanner.regular;\n\t\t}\n\t\treturn 'gray3';\n\t}, [requiresSmartLinkConversion, theme.palette.infoBanner.regular]);\n\n\tconst attachmentExtensionContent = useMemo(\n\t\t() =>\n\t\t\trequiresSmartLinkConversion ? (\n\t\t\t\t<Icon icon=\"Link2Outline\" size=\"large\" color=\"primary\" />\n\t\t\t) : (\n\t\t\t\textension\n\t\t\t),\n\t\t[extension, requiresSmartLinkConversion]\n\t);\n\n\tconst attachItemColor = useAttachmentIconColor(att);\n\tconst attachmentExtensionColor = useMemo(\n\t\t() => (requiresSmartLinkConversion ? 'transparent' : attachItemColor),\n\t\t[attachItemColor, requiresSmartLinkConversion]\n\t);\n\n\treturn (\n\t\t<AttachmentContainer\n\t\t\torientation=\"horizontal\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\theight=\"fit\"\n\t\t\tbackground={backgroundColor}\n\t\t\tdata-testid={`attachment-container-${filename}`}\n\t\t\trequiresSmartLinkConversion={requiresSmartLinkConversion}\n\t\t>\n\t\t\t<Tooltip key={`${message.id}-Preview`} label={actionTooltipText}>\n\t\t\t\t<Row\n\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\tonClick={preview}\n\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t>\n\t\t\t\t\t<AttachmentExtension background={attachmentExtensionColor}>\n\t\t\t\t\t\t{attachmentExtensionContent}\n\t\t\t\t\t</AttachmentExtension>\n\t\t\t\t\t<Row orientation=\"vertical\" crossAlignment=\"flex-start\" takeAvailableSpace>\n\t\t\t\t\t\t{requiresSmartLinkConversion && <Padding top=\"small\" />}\n\t\t\t\t\t\t<Padding style={{ width: '100%' }} bottom=\"extrasmall\">\n\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t{filename ||\n\t\t\t\t\t\t\t\t\tt('label.attachement_unknown', {\n\t\t\t\t\t\t\t\t\t\tmimeType: att?.contentType,\n\t\t\t\t\t\t\t\t\t\tdefaultValue: 'Unknown <{{mimeType}}>'\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t{!requiresSmartLinkConversion ? (\n\t\t\t\t\t\t\t<Text color=\"gray1\" size=\"small\">\n\t\t\t\t\t\t\t\t{sizeLabel}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Padding top=\"small\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Row>\n\t\t\t\t</Row>\n\t\t\t</Tooltip>\n\t\t\t<Row orientation=\"horizontal\" crossAlignment=\"center\">\n\t\t\t\t<AttachmentHoverBarContainer orientation=\"horizontal\">\n\t\t\t\t\t{isUploadIntegrationAvailable && !isInsideExtraWindow && (\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tkey={`${message.id}-DriveOutline`}\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\tisInsideExtraWindow\n\t\t\t\t\t\t\t\t\t? t(\n\t\t\t\t\t\t\t\t\t\t\t'label.extra_window.save_to_files_disabled',\n\t\t\t\t\t\t\t\t\t\t\t'Files’ attachments saving is available only from the main tab'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: t('label.save_to_files', 'Save to Files')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\ticon=\"DriveOutline\"\n\t\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\t\tuploadIntegration && uploadIntegration(actionTarget);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t<Tooltip key={`${message.id}-DownloadOutline`} label={t('label.download', 'Download')}>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tdata-testid={`download-attachment-${filename}`}\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\ticon=\"DownloadOutline\"\n\t\t\t\t\t\t\t\tonClick={downloadAttachment}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Padding>\n\t\t\t\t\t{!isExternalMessage && (\n\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\tkey={`${message.id}-DeletePermanentlyOutline`}\n\t\t\t\t\t\t\t\tlabel={t('label.delete', 'Delete')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tdata-testid={`remove-attachments-${filename}`}\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\ticon=\"DeletePermanentlyOutline\"\n\t\t\t\t\t\t\t\t\tonClick={removeAttachment}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t)}\n\t\t\t\t\t{isAvailable && pType === 'vcard' && (\n\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\tkey={`${message.id}-UploadOutline`}\n\t\t\t\t\t\t\t\tlabel={t('label.import_to_contacts', 'Import to Contacts')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tdata-testid={`import-contacts-${filename}`}\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\ticon=\"UploadOutline\"\n\t\t\t\t\t\t\t\t\tonClick={onCreateContact}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t)}\n\t\t\t\t</AttachmentHoverBarContainer>\n\t\t\t</Row>\n\t\t\t<AttachmentLink\n\t\t\t\trel=\"noopener\"\n\t\t\t\tref={inputRef2}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={`${getLocationOrigin()}/service/home/~/?auth=co&id=${message.id}&part=${part}`}\n\t\t\t/>\n\t\t\t<AttachmentLink ref={inputRef} rel=\"noopener\" target=\"_blank\" href={downloadlink} />\n\t\t</AttachmentContainer>\n\t);\n};\n\nconst copyToFiles = (\n\tatt: AttachmentPart,\n\tmessage: MailMessage,\n\tnodes: any\n): Promise<CopyToFileResponse> =>\n\tsoapFetch('CopyToFiles', {\n\t\t_jsns: 'urn:zimbraMail',\n\t\tmid: message.id,\n\t\tpart: att.name,\n\t\tdestinationFolderId: nodes?.[0]?.id\n\t});\n\nconst AttachmentsBlock: FC<{\n\tmessage: MailMessage;\n\tisExternalMessage?: boolean;\n\topenEmlPreview?: OpenEmlPreviewType;\n}> = ({ message, isExternalMessage = false, openEmlPreview }): ReactElement => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst [expanded, setExpanded] = useState(false);\n\tconst attachments = useMemo(\n\t\t() => filter(message?.attachments, { cd: 'attachment' }),\n\t\t[message?.attachments]\n\t);\n\n\tconst attachmentsCount = useMemo(() => attachments?.length || 0, [attachments]);\n\tconst attachmentsParts = useMemo(() => map(attachments, 'name'), [attachments]);\n\tconst theme = useTheme();\n\tconst actionsDownloadLink = useMemo(\n\t\t() =>\n\t\t\tgetAttachmentsDownloadLink({\n\t\t\t\tmessageId: message.id,\n\t\t\t\tmessageSubject: message.subject,\n\t\t\t\tattachments: attachmentsParts\n\t\t\t}),\n\t\t[message, attachmentsParts]\n\t);\n\n\tconst getLabel = ({\n\t\tallSuccess,\n\t\tallFails\n\t}: {\n\t\tallSuccess: boolean;\n\t\tallFails: boolean;\n\t}): string => {\n\t\tif (allSuccess) {\n\t\t\treturn t(\n\t\t\t\t'message.snackbar.all_att_saved',\n\t\t\t\t'Attachments successfully saved in the selected folder'\n\t\t\t);\n\t\t}\n\t\tif (allFails) {\n\t\t\treturn t(\n\t\t\t\t'message.snackbar.att_err',\n\t\t\t\t'There seems to be a problem when saving, please try again'\n\t\t\t);\n\t\t}\n\t\treturn t(\n\t\t\t'message.snackbar.some_att_fails',\n\t\t\t'There seems to be a problem when saving some files, please try again'\n\t\t);\n\t};\n\n\tconst confirmAction = useCallback(\n\t\t(nodes) => {\n\t\t\tconst promises = map(attachments, (att) => copyToFiles(att, message, nodes));\n\t\t\tPromise.allSettled(promises).then((res: CopyToFileResponse[]) => {\n\t\t\t\tconst isFault = res.length === filter(res, (r) => r?.value?.Fault)?.length;\n\t\t\t\tconst allSuccess = isFault\n\t\t\t\t\t? false\n\t\t\t\t\t: res.length === filter(res, ['status', 'fulfilled'])?.length;\n\t\t\t\tconst allFails = res.length === filter(res, ['status', 'rejected'])?.length;\n\t\t\t\tconst type = allSuccess ? 'info' : 'warning';\n\t\t\t\tconst label = getLabel({ allSuccess, allFails });\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `calendar-moved-root`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype,\n\t\t\t\t\thideButton: true,\n\t\t\t\t\tlabel,\n\t\t\t\t\tautoHideTimeout: 4000\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t[attachments, createSnackbar, message]\n\t);\n\n\tconst isAValidDestination = useCallback((node) => node?.permissions?.can_write_file, []);\n\n\tconst actionTarget = useMemo(\n\t\t() => ({\n\t\t\ttitle: t('label.select_folder', 'Select folder'),\n\t\t\tconfirmAction,\n\t\t\tconfirmLabel: t('label.save', 'Save'),\n\t\t\tdisabledTooltip: t('label.invalid_destination', 'This node is not a valid destination'),\n\t\t\tallowFiles: false,\n\t\t\tallowFolders: true,\n\t\t\tisValidSelection: isAValidDestination,\n\t\t\tcanSelectOpenedFolder: true,\n\t\t\tmaxSelection: 1\n\t\t}),\n\t\t[confirmAction, isAValidDestination]\n\t);\n\n\tconst [uploadIntegration, isUploadIntegrationAvailable] = getIntegratedFunction('select-nodes');\n\n\tconst { isInsideExtraWindow } = useExtraWindow();\n\n\tconst getSaveToFilesLink = useCallback((): ReactElement | null => {\n\t\tif (!isUploadIntegrationAvailable || isInsideExtraWindow) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tsize=\"medium\"\n\t\t\t\tonClick={(): void => {\n\t\t\t\t\tuploadIntegration && uploadIntegration(actionTarget);\n\t\t\t\t}}\n\t\t\t\tstyle={{ paddingLeft: '0.5rem' }}\n\t\t\t>\n\t\t\t\t{t('label.save_to_files', 'Save to Files')}\n\t\t\t</Link>\n\t\t);\n\t}, [actionTarget, isInsideExtraWindow, isUploadIntegrationAvailable, uploadIntegration]);\n\n\tconst attachmentsLabel = t('label.attachment', {\n\t\tcount: attachmentsCount,\n\t\tdefaultValue_one: '{{count}} attachment',\n\t\tdefaultValue_other: '{{count}} attachments'\n\t});\n\n\treturn attachmentsCount > 0 ? (\n\t\t<Container crossAlignment=\"flex-start\">\n\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"space-between\" wrap=\"wrap\">\n\t\t\t\t{map(expanded ? attachments : attachments?.slice(0, 2), (att, index) => (\n\t\t\t\t\t<Attachment\n\t\t\t\t\t\tkey={`att-${att.filename}-${index}`}\n\t\t\t\t\t\tfilename={att?.filename}\n\t\t\t\t\t\tsize={att?.size ?? 0}\n\t\t\t\t\t\tlink={getAttachmentsLink({\n\t\t\t\t\t\t\tmessageId: message.id,\n\t\t\t\t\t\t\tmessageSubject: message.subject,\n\t\t\t\t\t\t\tattachments: [att.name],\n\t\t\t\t\t\t\tattachmentType: att.contentType\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tdownloadlink={getAttachmentsDownloadLink({\n\t\t\t\t\t\t\tmessageId: message.id,\n\t\t\t\t\t\t\tmessageSubject: message.subject,\n\t\t\t\t\t\t\tattachments: [att.name]\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\tisExternalMessage={isExternalMessage}\n\t\t\t\t\t\tpart={att?.name ?? ''}\n\t\t\t\t\t\ticonColors={getAttachmentIconColors({ attachments, theme })}\n\t\t\t\t\t\tatt={att}\n\t\t\t\t\t\topenEmlPreview={openEmlPreview}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Container>\n\t\t\t<Row mainAlignment=\"flex-start\" padding={{ top: 'extrasmall', bottom: 'medium' }}>\n\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t{attachmentsCount > 0 && attachmentsCount <= 2 && (\n\t\t\t\t\t\t<Text color=\"gray1\">{attachmentsLabel}</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t{attachmentsCount > 2 &&\n\t\t\t\t\t\t(expanded ? (\n\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\tdata-testid=\"attachment-list-collapse-link\"\n\t\t\t\t\t\t\t\tonClick={(): void => setExpanded(false)}\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t<Text color=\"primary\">{attachmentsLabel}</Text>\n\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t<Icon icon=\"ArrowIosUpward\" color=\"primary\" />\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\tdata-testid=\"attachment-list-expand-link\"\n\t\t\t\t\t\t\t\tonClick={(): void => setExpanded(true)}\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t<Text color=\"primary\">\n\t\t\t\t\t\t\t\t\t\t{t('label.show_all_attachments', {\n\t\t\t\t\t\t\t\t\t\t\tcount: attachmentsCount,\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue_one: 'Show attachment',\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue_other: 'Show all {{count}} attachments'\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t<Icon icon=\"ArrowIosDownward\" color=\"primary\" />\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t))}{' '}\n\t\t\t\t</Padding>\n\n\t\t\t\t<Link target=\"_blank\" size=\"medium\" href={actionsDownloadLink}>\n\t\t\t\t\t{t('label.download', {\n\t\t\t\t\t\tcount: attachmentsCount,\n\t\t\t\t\t\tdefaultValue_one: 'Download',\n\t\t\t\t\t\tdefaultValue_other: 'Download all'\n\t\t\t\t\t})}\n\t\t\t\t</Link>\n\t\t\t\t{getSaveToFilesLink()}\n\t\t\t</Row>\n\t\t</Container>\n\t) : (\n\t\t<></>\n\t);\n};\nexport default AttachmentsBlock;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, ReactElement } from 'react';\n\nimport { Row, Text, Chip, Container, useSnackbar, Padding } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { capitalize, map } from 'lodash';\n\nimport { useUiUtilities } from '../../../../../hooks/use-ui-utilities';\nimport type { Participant } from '../../../../../types';\nimport {\n\tcopyEmailToClipboard,\n\tsendMsg\n} from '../../../../../ui-actions/participant-displayer-actions';\n\nfunction capitalizeEveryWord(string: string): string {\n\treturn string\n\t\t.split(' ')\n\t\t.map((word) => capitalize(word))\n\t\t.join(' ');\n}\n\nexport function generateChipName(contact: Participant): string {\n\tconst capitalizedFullName = contact.fullName ? capitalizeEveryWord(contact.fullName) : null;\n\tconst capitalizedName = contact.name ? capitalizeEveryWord(contact.name) : null;\n\tconst capitalizedText = capitalizedFullName ?? capitalizedName ?? '';\n\tif (capitalizedText.includes(',')) {\n\t\treturn `\"${capitalizedText}\"`;\n\t}\n\treturn capitalizedText;\n}\n\nexport const ContactNameChip: FC<{\n\tshowOverflow?: boolean;\n\tcontacts: Participant[];\n\tlabel: string;\n}> = ({ contacts, label }): ReactElement => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst separator = ',';\n\treturn (\n\t\t<>\n\t\t\t<Row mainAlignment=\"flex-start\">\n\t\t\t\t<Text color=\"secondary\" size=\"small\" style={{ paddingRight: '0.25rem' }}>\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t<Row\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\ttakeAvailableSpace\n\t\t\t\theight=\"fit\"\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tdisplay=\"flex\"\n\t\t\t\twrap={'nowrap'}\n\t\t\t\tstyle={{\n\t\t\t\t\tlineHeight: '1.125rem',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Container\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\twrap=\"wrap\"\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\tstyle={{ gap: '0.5rem' }}\n\t\t\t\t>\n\t\t\t\t\t{map(contacts, (contact, index) => (\n\t\t\t\t\t\t<Row data-testid={`chip-${contact.address}`} key={index}>\n\t\t\t\t\t\t\t<Text color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t\t{generateChipName(contact)}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Padding right=\"extrasmall\" />\n\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\tlabel={contact.address}\n\t\t\t\t\t\t\t\tbackground=\"gray2\"\n\t\t\t\t\t\t\t\tcolor=\"text\"\n\t\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid: 'action1',\n\t\t\t\t\t\t\t\t\t\tlabel: t('message.send_email', 'Send e-mail'),\n\t\t\t\t\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\t\t\t\t\ticon: 'EmailOutline',\n\t\t\t\t\t\t\t\t\t\tbackground: 'gray3',\n\t\t\t\t\t\t\t\t\t\tonClick: () => sendMsg(contact)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid: 'action2',\n\t\t\t\t\t\t\t\t\t\tlabel: t('message.copy', 'Copy'),\n\t\t\t\t\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\t\t\t\t\ticon: 'Copy',\n\t\t\t\t\t\t\t\t\t\tbackground: 'gray3',\n\t\t\t\t\t\t\t\t\t\tonClick: () => copyEmailToClipboard(contact.address, createSnackbar)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{index !== contacts.length - 1 && (\n\t\t\t\t\t\t\t\t<Padding left=\"extrasmall\">\n\t\t\t\t\t\t\t\t\t<Text color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t\t\t\t{separator}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t))}\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { CreateSnackbarFn } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nimport { mailToSharedFunction } from '../integrations/shared-functions';\nimport { Participant } from '../types';\n\nexport const copyEmailToClipboard = (email: string, createSnackbar: CreateSnackbarFn): void => {\n\tnavigator.clipboard.writeText(email).then(() => {\n\t\tcreateSnackbar({\n\t\t\tkey: `clipboard-copy-success`,\n\t\t\treplace: true,\n\t\t\ttype: 'success',\n\t\t\thideButton: true,\n\t\t\tlabel: t('snackbar.email_copied_to_clipboard', 'Email copied to clipboard.'),\n\t\t\tautoHideTimeout: 3000\n\t\t});\n\t});\n};\n\nexport const sendMsg = (contact: Participant): void => {\n\tconst updatedContact: Participant = { ...contact, type: 't' };\n\tmailToSharedFunction([updatedContact]);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, ReactElement, useLayoutEffect, useRef, useState } from 'react';\n\nimport { Row, Tooltip, Text } from '@zextras/carbonio-design-system';\nimport { useUserAccounts } from '@zextras/carbonio-shell-ui';\nimport { capitalize, map } from 'lodash';\nimport styled from 'styled-components';\n\nimport { participantToString } from '../../../../../commons/utils';\nimport type { Participant } from '../../../../../types';\n\nconst ContactSubText = styled(Text)`\n\tpadding: 0 0.125rem;\n\toverflow: initial;\n\t&:not(:last-child) {\n\t\t&:after {\n\t\t\tcontent: ',';\n\t\t}\n\t}\n`;\nconst ContactName: FC<{\n\tshowOverflow?: boolean;\n\tcontacts: Participant[];\n\tlabel: string;\n}> = ({ showOverflow, contacts, label }): ReactElement => {\n\tconst accounts = useUserAccounts();\n\tconst toRef = useRef<HTMLInputElement>(null);\n\tconst [isOverflow, setIsOverflow] = useState(false);\n\tuseLayoutEffect(() => {\n\t\tif (toRef?.current?.clientWidth) {\n\t\t\tconst rowOverflow = toRef?.current.scrollWidth > toRef?.current.clientWidth;\n\t\t\tsetIsOverflow(rowOverflow);\n\t\t}\n\t}, [showOverflow]);\n\n\treturn (\n\t\t<>\n\t\t\t<Row mainAlignment=\"flex-start\">\n\t\t\t\t<Text color=\"secondary\" size=\"small\" style={{ paddingRight: '0.25rem' }}>\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t<Row\n\t\t\t\tref={toRef}\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\ttakeAvailableSpace\n\t\t\t\theight=\"fit\"\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tdisplay=\"flex\"\n\t\t\t\twrap={showOverflow ? 'nowrap' : 'wrap'}\n\t\t\t\tstyle={{\n\t\t\t\t\tlineHeight: '1.125rem',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{map(contacts, (contact, index) => (\n\t\t\t\t\t<Tooltip label={contact.address} key={index}>\n\t\t\t\t\t\t<ContactSubText color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t{capitalize(participantToString(contact, accounts))}\n\t\t\t\t\t\t</ContactSubText>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t\t{isOverflow && showOverflow && (\n\t\t\t\t<Text color=\"secondary\" size=\"small\" style={{ paddingLeft: '0.3125rem' }}>\n\t\t\t\t\t...\n\t\t\t\t</Text>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ContactName;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, {\n\tFC,\n\tReactElement,\n\tuseCallback,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState\n} from 'react';\n\nimport {\n\tBadge,\n\tContainer,\n\tIcon,\n\tIconButton,\n\tPadding,\n\tRow,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { filter } from 'lodash';\n\nimport ContactNames from './contact-names';\nimport { ContactNameChip } from './contact-names-chips';\nimport { useFoldersMap } from '../../../../../carbonio-ui-commons/store/zustand/folder';\nimport type { MailMessage, TextReadValuesProps } from '../../../../../types';\nimport { getFolderTranslatedName } from '../../../../sidebar/utils';\n\nconst MessageContactList: FC<{\n\tmessage: MailMessage;\n\tfolderId: string;\n\tcontactListExpandCB: (showMore: boolean) => void;\n}> = ({ message, folderId, contactListExpandCB }): ReactElement => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst toggleOpen = useCallback(\n\t\t(e) => {\n\t\t\te.preventDefault();\n\t\t\tsetOpen((o) => {\n\t\t\t\tcontactListExpandCB(!o);\n\t\t\t\treturn !o;\n\t\t\t});\n\t\t},\n\t\t[contactListExpandCB]\n\t);\n\tconst folders = useFoldersMap();\n\n\tconst toContacts = useMemo(\n\t\t() => filter(message.participants, ['type', 't']),\n\t\t[message.participants]\n\t);\n\tconst ccContacts = useMemo(\n\t\t() => filter(message.participants, ['type', 'c']),\n\t\t[message.participants]\n\t);\n\tconst bccContacts = useMemo(\n\t\t() => filter(message.participants, ['type', 'b']),\n\t\t[message.participants]\n\t);\n\n\tconst textReadValues: TextReadValuesProps = useMemo(() => {\n\t\tif (typeof message.read === 'undefined')\n\t\t\treturn { color: 'text', weight: 'regular', badge: 'read', size: 'small' };\n\t\treturn message.read\n\t\t\t? { color: 'text', weight: 'regular', badge: 'read', size: 'small' }\n\t\t\t: { color: 'primary', weight: 'bold', badge: 'unread', size: 'medium' };\n\t}, [message.read]);\n\n\tconst messageFolder = useMemo(\n\t\t() => folders[message.parent?.includes(':') ? folderId : message.parent],\n\t\t[folderId, folders, message.parent]\n\t);\n\tconst labelTo = useMemo(() => `${t('label.to', 'To')}: `, []);\n\tconst labelCc = useMemo(() => `${t('label.cc', 'CC')}: `, []);\n\tconst labelBcc = useMemo(() => `${t('label.bcc', 'BCC')}: `, []);\n\n\tconst showBadge = useMemo(\n\t\t() => messageFolder?.name && messageFolder?.id !== folderId,\n\t\t[folderId, messageFolder]\n\t);\n\n\tconst toggleExpandButtonLabel = useMemo(\n\t\t() =>\n\t\t\topen\n\t\t\t\t? t('label.collapse_receivers_list', \"Collapse receiver's list\")\n\t\t\t\t: t('label.expand_receivers_list', \"Expand receiver's list\"),\n\t\t[open]\n\t);\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst [badgeWidth, setBadgeWidth] = useState('100%');\n\tuseLayoutEffect(() => {\n\t\tif (containerRef?.current?.clientWidth) {\n\t\t\tsetBadgeWidth(`calc(100% - ${containerRef.current.clientWidth + 25}px)`);\n\t\t}\n\t}, []);\n\treturn (\n\t\t<Container\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\torientation=\"horizontal\"\n\t\t\twidth=\"100%\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tpadding={{ bottom: 'small' }}\n\t\t>\n\t\t\t<Container\n\t\t\t\tstyle={{ width: '1.5625rem', padding: '0 0.5rem 0 0' }}\n\t\t\t\tcrossAlignment=\"baseline\"\n\t\t\t\tmainAlignment=\"space-between\"\n\t\t\t\torientation=\"horizontal\"\n\t\t\t>\n\t\t\t\t<Tooltip label={toggleExpandButtonLabel}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\ticon={open ? 'ChevronUp' : 'ChevronDown'}\n\t\t\t\t\t\tonClick={toggleOpen}\n\t\t\t\t\t\tcustomSize={{\n\t\t\t\t\t\t\ticonSize: 'small',\n\t\t\t\t\t\t\tpaddingSize: ''\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata-testid=\"contacs-list-toggle-icon\"\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t</Container>\n\t\t\t<Container mainAlignment=\"flex-start\" crossAlignment=\"flex-start\" width={badgeWidth}>\n\t\t\t\t{!open && (\n\t\t\t\t\t<Container width=\"calc(100% - 1.5rem)\" crossAlignment=\"flex-start\">\n\t\t\t\t\t\t<Row height=\"fit\" crossAlignment=\"flex-start\" mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t{toContacts.length > 0 && (\n\t\t\t\t\t\t\t\t<ContactNames showOverflow contacts={toContacts} label={labelTo} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row height=\"fit\" crossAlignment=\"flex-start\" mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t{ccContacts.length > 0 && (\n\t\t\t\t\t\t\t\t<ContactNames showOverflow contacts={ccContacts} label={labelCc} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row height=\"fit\" width=\"100%\" crossAlignment=\"flex-start\" mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t{bccContacts.length > 0 && (\n\t\t\t\t\t\t\t\t<ContactNames showOverflow contacts={bccContacts} label={labelBcc} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\t\t\t\t{open && (\n\t\t\t\t\t<Container width=\"calc(100% - 1.5rem)\" crossAlignment=\"flex-start\">\n\t\t\t\t\t\t<Container width=\"100%\">\n\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\tpadding={{ bottom: 'small' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{toContacts.length > 0 && <ContactNameChip contacts={toContacts} label={labelTo} />}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\tpadding={{ bottom: 'small' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ccContacts.length > 0 && <ContactNameChip contacts={ccContacts} label={labelCc} />}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row height=\"fit\" width=\"100%\" crossAlignment=\"flex-start\" mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t{bccContacts.length > 0 && (\n\t\t\t\t\t\t\t\t\t<ContactNameChip contacts={bccContacts} label={labelBcc} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t\t<Container ref={containerRef} width=\"fit\" mainAlignment=\"flex-start\">\n\t\t\t\t{message.urgent && <Icon data-testid=\"UrgentIcon\" color=\"error\" icon=\"ArrowUpward\" />}\n\t\t\t\t{showBadge && (\n\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tdata-testid=\"FolderBadge\"\n\t\t\t\t\t\t\tvalue={getFolderTranslatedName({\n\t\t\t\t\t\t\t\tfolderId,\n\t\t\t\t\t\t\t\tfolderName: messageFolder.name\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\ttype={textReadValues.badge}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Padding>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n\nexport default MessageContactList;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useMemo } from 'react';\n\nimport { getColor, TextWithTooltip } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { capitalize } from 'lodash';\nimport styled from 'styled-components';\nimport type { Participant, MailMessage } from '../../../../../types';\n\nconst StyledText = styled.span<{ isRead?: string | boolean; color?: string }>`\n\tpadding: 0 0.125rem;\n\tcolor: ${({ theme, color, isRead }): string =>\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tcolor\n\t\t\t? getColor(color, theme)\n\t\t\t: isRead\n\t\t\t\t? theme.palette.text.regular\n\t\t\t\t: theme.palette.primary.regular};\n\n\tfont-weight: ${({ theme, isRead }): number =>\n\t\tisRead ? theme.fonts.weight.regular : theme.fonts.weight.bold};\n`;\nconst OnBehalfOfDisplayer: FC<{\n\tcompProps: { senderContact: Participant; mainContact: Participant; message: MailMessage };\n}> = ({ compProps: { senderContact, mainContact, message } }): ReactElement => {\n\tconst [mainContactFullName, mainContactAddress] = useMemo(\n\t\t() => [capitalize(mainContact.fullName || mainContact.name), mainContact.address],\n\t\t[mainContact]\n\t);\n\tconst [fullName, address] = useMemo(\n\t\t() => [capitalize(senderContact.fullName), senderContact.address],\n\t\t[senderContact]\n\t);\n\n\tconst behalfOfLabel = useMemo(() => t('label.behalf_of', 'behalf of'), []);\n\treturn (\n\t\t<TextWithTooltip>\n\t\t\t<StyledText isRead={message.read ?? ''}>{fullName}</StyledText>\n\t\t\t<StyledText color=\"secondary\" isRead={message.read}>\n\t\t\t\t{` <${address}> `}\n\t\t\t</StyledText>\n\t\t\t<StyledText color=\"text\">{behalfOfLabel}</StyledText>\n\t\t\t<StyledText isRead={message.read}>{mainContactFullName}</StyledText>\n\t\t\t<StyledText color=\"secondary\" isRead={message.read}>\n\t\t\t\t{` <${mainContactAddress}> `}\n\t\t\t</StyledText>\n\t\t</TextWithTooltip>\n\t);\n};\n\nexport default OnBehalfOfDisplayer;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n// This is a temporary solution to avoid errors from theme import\nimport { ThemeContext } from '@zextras/carbonio-design-system';\nimport { min } from 'lodash';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\n\ntype ArgsProps = {\n\ticonWidth?: number;\n\tnumberLimit?: number;\n};\n\nexport const useVisibleActionsCount = (\n\tcontainerRef: React.RefObject<HTMLInputElement>,\n\targs: ArgsProps\n): [number, () => void] => {\n\tconst [visibleActionsCount, setVisibleActionsCount] = useState<number>(0);\n\tconst { iconWidth, numberLimit } = args;\n\tconst theme = useContext(ThemeContext);\n\tconst iconSize = iconWidth ?? parseFloat(theme.sizes.icon.large);\n\n\tconst calculateVisibleActionsCount = useCallback(() => {\n\t\tif (containerRef && containerRef.current && containerRef?.current?.clientWidth > 0) {\n\t\t\tconst evaluation = Math.floor(containerRef.current.clientWidth / iconSize);\n\t\t\tconst valueToSet = numberLimit ? (min([evaluation, numberLimit]) as number) : evaluation;\n\t\t\tsetVisibleActionsCount(valueToSet);\n\t\t}\n\t}, [containerRef, iconSize, numberLimit]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', calculateVisibleActionsCount);\n\t\treturn (): void => window.removeEventListener('resize', calculateVisibleActionsCount);\n\t}, [calculateVisibleActionsCount]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('transitionend', calculateVisibleActionsCount);\n\t\treturn (): void => window.removeEventListener('transitionend', calculateVisibleActionsCount);\n\t}, [calculateVisibleActionsCount]);\n\n\treturn [visibleActionsCount, calculateVisibleActionsCount];\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, {\n\tFC,\n\tReactElement,\n\tuseCallback,\n\tuseContext,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState\n} from 'react';\n\nimport {\n\tDropdown,\n\tIconButton,\n\tPadding,\n\tRow,\n\tRowProps,\n\tThemeContext,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport { FOLDERS } from '@zextras/carbonio-shell-ui';\nimport { difference, map, noop, slice } from 'lodash';\nimport { useParams } from 'react-router-dom';\n\nimport { getFolderIdParts } from '../helpers/folders';\nimport { useVisibleActionsCount } from '../hooks/use-visible-actions-count';\n\ntype MailMsgPreviewActionsType = {\n\tactions: Array<any>;\n\tmaxActions?: number;\n\tmaxWidth?: string;\n\tmainAlignment?: RowProps['mainAlignment'];\n};\n\nexport const MailMsgPreviewActions: FC<MailMsgPreviewActionsType> = ({\n\tactions,\n\tmaxWidth = '7.5rem',\n\tmainAlignment = 'flex-end'\n}): ReactElement => {\n\tconst { folderId }: { folderId: string } = useParams();\n\tconst actionContainerRef = useRef<HTMLInputElement>(null);\n\tconst [open, setOpen] = useState(false);\n\tconst theme = useContext(ThemeContext);\n\n\tconst maxActions = useMemo(() => {\n\t\tif (getFolderIdParts(folderId).id === FOLDERS.TRASH) return 2;\n\t\tif (getFolderIdParts(folderId).id === FOLDERS.DRAFTS) return 4;\n\t\treturn 6;\n\t}, [folderId]);\n\n\tconst [visibleActionsCount, calculateVisibleActionsCount] = useVisibleActionsCount(\n\t\tactionContainerRef,\n\t\t{ numberLimit: maxActions }\n\t);\n\n\tconst firstActions = useMemo(\n\t\t() =>\n\t\t\tslice(\n\t\t\t\tactions,\n\t\t\t\t0,\n\t\t\t\tvisibleActionsCount > 0 && actions?.length > 2\n\t\t\t\t\t? visibleActionsCount - 1\n\t\t\t\t\t: visibleActionsCount\n\t\t\t),\n\t\t[actions, visibleActionsCount]\n\t);\n\n\tconst secondActions = useMemo(() => difference(actions, firstActions), [actions, firstActions]);\n\tconst iconSize = useMemo(() => theme.sizes.icon.large, [theme.sizes.icon.large]);\n\n\tconst onIconClick = useCallback((ev: { stopPropagation: () => void }): void => {\n\t\tev.stopPropagation();\n\t\tsetOpen((o) => !o);\n\t}, []);\n\n\tconst onDropdownClose = useCallback((): void => {\n\t\tsetOpen(false);\n\t}, []);\n\n\tconst _maxWidth = useMemo(\n\t\t() => (iconSize && maxActions ? `calc(${iconSize} * ${maxActions})` : maxWidth),\n\t\t[iconSize, maxActions, maxWidth]\n\t);\n\n\tconst _minWidth = useMemo(\n\t\t() =>\n\t\t\tgetFolderIdParts(folderId).id === FOLDERS.TRASH\n\t\t\t\t? `calc(${iconSize} * ${maxActions})`\n\t\t\t\t: theme.sizes.icon.large,\n\t\t[folderId, iconSize, maxActions, theme?.sizes?.icon?.large]\n\t);\n\n\tuseLayoutEffect(() => {\n\t\tcalculateVisibleActionsCount();\n\t}, [calculateVisibleActionsCount]);\n\n\treturn (\n\t\t<Row\n\t\t\tref={actionContainerRef}\n\t\t\tmainAlignment={mainAlignment}\n\t\t\tmaxWidth={_maxWidth}\n\t\t\twrap=\"nowrap\"\n\t\t\tstyle={{\n\t\t\t\tflexGrow: 1,\n\t\t\t\tflexBasis: 'fit-content',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tminWidth: _minWidth\n\t\t\t}}\n\t\t>\n\t\t\t{firstActions?.length > 0 &&\n\t\t\t\tmap(firstActions, (action) =>\n\t\t\t\t\taction.items ? (\n\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t<Tooltip label={action.label}>\n\t\t\t\t\t\t\t\t<Dropdown items={action.items}>\n\t\t\t\t\t\t\t\t\t<IconButton icon={action.icon} size=\"small\" onClick={noop} />\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Tooltip key={`${action.icon}`} label={action.label}>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\ticon={action.icon}\n\t\t\t\t\t\t\t\tonClick={(ev): void => {\n\t\t\t\t\t\t\t\t\tif (ev) ev.preventDefault();\n\t\t\t\t\t\t\t\t\taction.onClick();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t{secondActions?.length > 0 && (\n\t\t\t\t<Dropdown items={secondActions} forceOpen={open} onClose={onDropdownClose}>\n\t\t\t\t\t<IconButton size=\"small\" icon=\"MoreVertical\" onClick={onIconClick} />\n\t\t\t\t</Dropdown>\n\t\t\t)}\n\t\t</Row>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, {\n\tFC,\n\tReactElement,\n\tSyntheticEvent,\n\tuseCallback,\n\tuseContext,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState\n} from 'react';\n\nimport {\n\tContainer,\n\tText,\n\tAvatar,\n\tIcon,\n\tPadding,\n\tRow,\n\tThemeContext,\n\tTooltip,\n\tChip,\n\tDropdown,\n\tContainerProps,\n\tIconButton,\n\tgetColor\n} from '@zextras/carbonio-design-system';\nimport {\n\tuseTags,\n\tuseUserAccounts,\n\tZIMBRA_STANDARD_COLORS,\n\trunSearch,\n\tt\n} from '@zextras/carbonio-shell-ui';\nimport {\n\tcapitalize,\n\tevery,\n\tfilter,\n\tfind,\n\tforEach,\n\tincludes,\n\tisEmpty,\n\tmap,\n\treduce,\n\tuniqBy\n} from 'lodash';\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { ContactNameChip } from './contact-names-chips';\nimport MessageContactsList from './message-contact-list';\nimport OnBehalfOfDisplayer from './on-behalf-of-displayer';\nimport { ParticipantRole } from '../../../../../carbonio-ui-commons/constants/participants';\nimport { getTimeLabel, participantToString } from '../../../../../commons/utils';\nimport { getNoIdentityPlaceholder } from '../../../../../helpers/identities';\nimport { retrieveAttachmentsType } from '../../../../../store/editor-slice-utils';\nimport type { MailMessage, MessageAction } from '../../../../../types';\nimport { MailMsgPreviewActions } from '../../../../../ui-actions/mail-message-preview-actions';\nimport { useTagExist } from '../../../../../ui-actions/tag-actions';\n\nconst HoverContainer = styled(Container)<ContainerProps & { isExpanded: boolean }>`\n\tcursor: pointer;\n\tborder-radius: ${({ isExpanded }): string => (isExpanded ? '0.25rem 0.25rem 0 0' : '0.25rem')};\n\t&:hover {\n\t\tbackground: ${({ theme, background = 'currentColor' }): string =>\n\t\t\tgetColor(`${background}.hover`, theme)};\n\t}\n`;\n\nconst TagChip = styled(Chip)`\n\tmargin-left: ${({ theme }): string => theme.sizes.padding.extrasmall};\n\tpadding: 0.0625rem 0.5rem !important;\n\tmargin-bottom: 0.25rem;\n`;\n\ntype PreviewHeaderProps = {\n\tcompProps: {\n\t\tmessage: MailMessage;\n\t\tonClick: (e: SyntheticEvent) => void;\n\t\topen: boolean;\n\t\tisExternalMessage?: boolean;\n\t\tisInsideExtraWindow?: boolean;\n\t};\n\tactions: MessageAction[];\n};\n\nconst fallbackContact = {\n\ttype: ParticipantRole.FROM,\n\taddress: '',\n\tdisplayName: getNoIdentityPlaceholder(),\n\tfullName: ''\n};\n\nconst PreviewHeader: FC<PreviewHeaderProps> = ({ compProps, actions }): ReactElement => {\n\tconst { message, onClick, open, isExternalMessage } = compProps;\n\n\tconst textRef = useRef<HTMLInputElement>(null);\n\tconst accounts = useUserAccounts();\n\n\tconst [_minWidth, _setMinWidth] = useState('');\n\tconst [isContactListExpand, setIsContactListExpand] = useState(false);\n\tconst mainContact = find(message.participants, ['type', 'f']) || fallbackContact;\n\tconst _onClick = useCallback((e) => !e.isDefaultPrevented() && onClick(e), [onClick]);\n\tconst attachments = retrieveAttachmentsType(message, 'attachment');\n\tconst senderContact = find(message.participants, ['type', 's']);\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tconst { folderId } = useParams();\n\n\tconst contactListExpandCB = useCallback((contactListExpand) => {\n\t\tsetIsContactListExpand(contactListExpand);\n\t}, []);\n\n\tconst theme = useContext(ThemeContext);\n\tconst iconSize = useMemo(\n\t\t() => parseInt(theme?.sizes.icon.large, 10),\n\t\t[theme?.sizes?.icon?.large]\n\t);\n\tuseLayoutEffect(() => {\n\t\tlet width = actions.length > 2 ? iconSize : 2 * iconSize;\n\t\tif (message.hasAttachment && attachments.length > 0) width += iconSize;\n\t\tif (message.flagged) width += iconSize;\n\t\tif (textRef?.current?.clientWidth) width += textRef.current.clientWidth;\n\t\t_setMinWidth(`${width}px`);\n\t}, [\n\t\tactions.length,\n\t\tattachments.length,\n\t\ticonSize,\n\t\tmessage.hasAttachment,\n\t\tmessage.flagged,\n\t\ttextRef?.current?.clientWidth\n\t]);\n\n\tconst tagsFromStore = useTags();\n\tconst tags = useMemo(\n\t\t() =>\n\t\t\treduce(\n\t\t\t\ttagsFromStore,\n\t\t\t\t(acc: any, v) => {\n\t\t\t\t\tif (includes(message.tags, v.id)) {\n\t\t\t\t\t\tacc.push({\n\t\t\t\t\t\t\t...v,\n\t\t\t\t\t\t\t// TODO: align the use of the property with the type exposed by the shell\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tcolor: ZIMBRA_STANDARD_COLORS[v.color ?? 0].hex,\n\t\t\t\t\t\t\tlabel: v.name,\n\t\t\t\t\t\t\tcustomComponent: (\n\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t<Row mainAlignment=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"Tag\" color={ZIMBRA_STANDARD_COLORS[v.color ?? 0].hex} />\n\t\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t\t<Text>{v.name}</Text>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (message.tags?.length > 0 && !includes(message.tags, v.id)) {\n\t\t\t\t\t\tforEach(\n\t\t\t\t\t\t\tfilter(message.tags, (tn) => tn?.includes('nil:')),\n\t\t\t\t\t\t\t(tagNotInList) => {\n\t\t\t\t\t\t\t\tacc.push({\n\t\t\t\t\t\t\t\t\tid: tagNotInList,\n\t\t\t\t\t\t\t\t\tname: tagNotInList.split(':')[1],\n\t\t\t\t\t\t\t\t\tlabel: t('label.not_in_list', {\n\t\t\t\t\t\t\t\t\t\tname: tagNotInList.split(':')[1],\n\t\t\t\t\t\t\t\t\t\tdefaultValue: '{{name}} - Not in your tag list'\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tcolor: ZIMBRA_STANDARD_COLORS[0].hex,\n\t\t\t\t\t\t\t\t\tcustomComponent: (\n\t\t\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Row mainAlignment=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"Tag\" color={ZIMBRA_STANDARD_COLORS[0].hex} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{t('label.not_in_list', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: tagNotInList.split(':')[1],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue: '{{name}} - Not in your tag list'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn uniqBy(acc, 'id');\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t),\n\t\t[message.tags, tagsFromStore]\n\t);\n\n\tconst tagIcon = useMemo(() => (tags.length > 1 ? 'TagsMoreOutline' : 'Tag'), [tags]);\n\tconst tagIconColor = useMemo(() => (tags?.length === 1 ? tags[0].color : undefined), [tags]);\n\n\tconst tagLabel = useMemo(() => t('label.tags', 'Tags'), []);\n\n\tconst [showDropdown, setShowDropdown] = useState(false);\n\tconst onIconClick = useCallback((ev: { stopPropagation: () => void }): void => {\n\t\tev.stopPropagation();\n\t\tsetShowDropdown((o) => !o);\n\t}, []);\n\n\tconst onDropdownClose = useCallback((): void => {\n\t\tsetShowDropdown(false);\n\t}, []);\n\n\tconst isTagInStore = useTagExist(tags);\n\n\tconst showMultiTagIcon = useMemo(() => message.tags?.length > 1, [message]);\n\tconst showTagIcon = useMemo(\n\t\t() =>\n\t\t\tmessage.tags &&\n\t\t\tmessage.tags?.length !== 0 &&\n\t\t\t!showMultiTagIcon &&\n\t\t\tisTagInStore &&\n\t\t\tevery(message.tags, (tn) => tn !== ''),\n\t\t[isTagInStore, message.tags, showMultiTagIcon]\n\t);\n\tconst triggerSearch = useCallback(\n\t\t(tagToSearch) =>\n\t\t\trunSearch(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tavatarBackground: tagToSearch?.color || 0,\n\t\t\t\t\t\tavatarIcon: 'Tag',\n\t\t\t\t\t\tbackground: 'gray2',\n\t\t\t\t\t\thasAvatar: true,\n\t\t\t\t\t\t// TODO: fix type definition\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tisGeneric: false,\n\t\t\t\t\t\tisQueryFilter: true,\n\t\t\t\t\t\tlabel: `tag:${tagToSearch?.name}`,\n\t\t\t\t\t\tvalue: `tag:\"${tagToSearch?.name}\"`\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'mails'\n\t\t\t),\n\t\t[]\n\t);\n\tconst scheduledTime = useMemo(\n\t\t() =>\n\t\t\tt('message.schedule_mail', {\n\t\t\t\tdate: moment(message?.autoSendTime).format('DD/MM/YYYY'),\n\t\t\t\ttime: moment(message?.autoSendTime).format('HH:mm'),\n\t\t\t\tdefaultValue: 'Will be sent on: {{date}} at {{time}}'\n\t\t\t}),\n\t\t[message?.autoSendTime]\n\t);\n\n\treturn (\n\t\t<HoverContainer\n\t\t\theight=\"fit\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tbackground=\"gray6\"\n\t\t\tisExpanded={open}\n\t\t\tonClick={_onClick}\n\t\t>\n\t\t\t<Container height=\"fit\" width=\"100%\">\n\t\t\t\t<Container orientation=\"horizontal\">\n\t\t\t\t\t<Container\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\twidth=\"fit\"\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tlabel={mainContact.fullName || mainContact.address || getNoIdentityPlaceholder()}\n\t\t\t\t\t\t\tcolorLabel={mainContact.address || getNoIdentityPlaceholder()}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Row\n\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\twidth=\"calc(100% - 3rem)\"\n\t\t\t\t\t\tpadding={{ vertical: 'small' }}\n\t\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t\t>\n\t\t\t\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"space-between\" width=\"fill\">\n\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t// this style replace takeAvailableSpace prop, it calculates growth depending from content (all 4 props are needed)\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\t\t\tflexBasis: 'fit-content',\n\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t\twhiteSpace: 'nowrap'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isEmpty(senderContact) ? (\n\t\t\t\t\t\t\t\t\t<Row takeAvailableSpace width=\"fit\" mainAlignment=\"flex-start\" wrap=\"nowrap\">\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\tdata-testid=\"SenderText\"\n\t\t\t\t\t\t\t\t\t\t\tsize={message.read ? 'small' : 'medium'}\n\t\t\t\t\t\t\t\t\t\t\tcolor={message.read ? 'text' : 'primary'}\n\t\t\t\t\t\t\t\t\t\t\tweight={message.read ? 'regular' : 'bold'}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{capitalize(participantToString(mainContact, accounts))}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t\t\t\t\t\t\t\twidth=\"fit\"\n\t\t\t\t\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\t\t\t\t\t\tpadding={{ left: 'small' }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{!isContactListExpand && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Text color=\"gray1\" size={message.read ? 'small' : 'medium'}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{mainContact.address && mainContact.address}\n\t\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{isContactListExpand && mainContact.address && (\n\t\t\t\t\t\t\t\t\t\t\t\t<ContactNameChip contacts={[mainContact]} label={''} />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t<OnBehalfOfDisplayer compProps={{ senderContact, message, mainContact }} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t{!isExternalMessage && (\n\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\t\t\t\tmainAlignment=\"flex-end\"\n\t\t\t\t\t\t\t\t\t// this style replace takeAvailableSpace prop, it calculates growth depending from content (all 4 props are needed)\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\t\t\t\tflexBasis: 'fit-content',\n\t\t\t\t\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tminWidth={_minWidth}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{showTagIcon && (\n\t\t\t\t\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip label={message?.tags?.[0]} disabled={showMultiTagIcon}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon data-testid=\"TagIcon\" icon={tagIcon} color={`${tagIconColor}`} />\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{showMultiTagIcon && (\n\t\t\t\t\t\t\t\t\t\t<Dropdown items={tags} forceOpen={showDropdown} onClose={onDropdownClose}>\n\t\t\t\t\t\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton data-testid=\"TagIcon\" icon={tagIcon} onClick={onIconClick} />\n\t\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{message.hasAttachment && attachments.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"AttachOutline\" />\n\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{message.flagged && (\n\t\t\t\t\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t<Icon color=\"error\" icon=\"Flag\" data-testid=\"FlagIcon\" />\n\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Row ref={textRef} minWidth=\"fit\" padding={{ horizontal: 'small' }}>\n\t\t\t\t\t\t\t\t\t\t{message?.isScheduled ? (\n\t\t\t\t\t\t\t\t\t\t\t<Text color=\"primary\" data-testid=\"scheduledLabel\" size=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t\t{scheduledTime}\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Text color=\"gray1\" data-testid=\"DateLabel\" size=\"extrasmall\">\n\t\t\t\t\t\t\t\t\t\t\t\t{getTimeLabel(message.date)}\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t\t\t{open && <MailMsgPreviewActions actions={actions} />}\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{!isExternalMessage && tags?.length > 0 && open && (\n\t\t\t\t\t<Container\n\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tpadding={{ left: 'large' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Padding left=\"extrasmall\">\n\t\t\t\t\t\t\t<Text color=\"secondary\" size=\"small\" overflow=\"break-word\">\n\t\t\t\t\t\t\t\t{tagLabel}:\n\t\t\t\t\t\t\t\t{map(tags, (tag) => (\n\t\t\t\t\t\t\t\t\t<TagChip\n\t\t\t\t\t\t\t\t\t\tlabel={tag?.label}\n\t\t\t\t\t\t\t\t\t\tavatarBackground={tag.color}\n\t\t\t\t\t\t\t\t\t\tbackground=\"gray2\"\n\t\t\t\t\t\t\t\t\t\thasAvatar\n\t\t\t\t\t\t\t\t\t\tavatarIcon=\"Tag\"\n\t\t\t\t\t\t\t\t\t\tonClick={(): void => triggerSearch(tag)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t\t<Container\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tpadding={{ horizontal: 'small' }}\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t>\n\t\t\t\t{!open && (\n\t\t\t\t\t<Row padding={{ bottom: 'small' }}>\n\t\t\t\t\t\t<Text color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t{message.fragment}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t\t{open && (\n\t\t\t\t\t<MessageContactsList\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\tfolderId={folderId}\n\t\t\t\t\t\tcontactListExpandCB={contactListExpandCB}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</HoverContainer>\n\t);\n};\n\nexport default PreviewHeader;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useCallback, useEffect, useMemo } from 'react';\n\nimport { Container, CustomModal, Padding, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nimport ModalFooter from '../../../../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../../../../carbonio-ui-commons/components/modals/modal-header';\nimport { useAppDispatch } from '../../../../hooks/redux';\nimport { useUiUtilities } from '../../../../hooks/use-ui-utilities';\nimport { msgAction } from '../../../../store/actions';\nimport { sendDeliveryReport } from '../../../../store/actions/send-delivery-request';\nimport type { MailMessage } from '../../../../types';\n\ntype CompProps = {\n\topen: boolean;\n\tonClose: () => void;\n\tmessage: MailMessage;\n\treadReceiptSetting: string | undefined | number | Array<string | number>;\n};\n\nconst ReadReceiptModal: FC<CompProps> = ({\n\topen,\n\tonClose,\n\tmessage,\n\treadReceiptSetting\n}): ReactElement => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst dispatch = useAppDispatch();\n\n\tconst title = useMemo(() => t('label.read_receipt_req', 'Read receipt required'), []);\n\tconst onConfirm = useCallback(() => {\n\t\tdispatch(\n\t\t\tmsgAction({\n\t\t\t\toperation: 'update',\n\t\t\t\tids: [message?.id],\n\t\t\t\tflag: 'n'\n\t\t\t})\n\t\t);\n\t}, [dispatch, message?.id]);\n\n\tconst onNotify = useCallback(() => {\n\t\tsendDeliveryReport(message.id).then(() => {\n\t\t\tcreateSnackbar({\n\t\t\t\tkey: `read-receipt-sent`,\n\t\t\t\treplace: true,\n\t\t\t\thideButton: true,\n\t\t\t\ttype: 'info',\n\t\t\t\tlabel: t('label.read_receipt_sent', 'A read receipt has been sent for this message'),\n\t\t\t\tautoHideTimeout: 3000\n\t\t\t});\n\t\t});\n\t\tonClose();\n\t}, [createSnackbar, message.id, onClose]);\n\n\tuseEffect(() => {\n\t\tif (message?.isReadReceiptRequested && readReceiptSetting === 'always' && !message?.isSentByMe)\n\t\t\tonNotify();\n\t}, [message?.isReadReceiptRequested, onNotify, readReceiptSetting, message?.isSentByMe]);\n\n\tconst confirmLabel = useMemo(() => t('label.do_not_notify', 'Do not notify'), []);\n\tconst notifyLabel = useMemo(() => t('label.notify', 'Notify'), []);\n\tconst messageLineOne = useMemo(\n\t\t() =>\n\t\t\tt(\n\t\t\t\t'messages.read_receipt_1',\n\t\t\t\t'The sender of this message has requested to be notified when you read this message.'\n\t\t\t),\n\t\t[]\n\t);\n\tconst messageLineTwo = useMemo(\n\t\t() => t('messages.read_receipt_2', 'Do you wish to notify the sender?'),\n\t\t[]\n\t);\n\n\treturn (\n\t\t<CustomModal open={open} onClose={(): null => null} maxHeight=\"90vh\">\n\t\t\t<Container padding={{ all: 'large' }}>\n\t\t\t\t<ModalHeader title={title} />\n\t\t\t\t<Container crossAlignment=\"flex-start\">\n\t\t\t\t\t<Text overflow=\"break-word\">{messageLineOne}</Text>\n\t\t\t\t\t<Padding top=\"large\">\n\t\t\t\t\t\t<Text>{messageLineTwo}</Text>\n\t\t\t\t\t</Padding>\n\t\t\t\t</Container>\n\t\t\t\t<ModalFooter\n\t\t\t\t\tonConfirm={onNotify}\n\t\t\t\t\tsecondaryAction={onConfirm}\n\t\t\t\t\tsecondaryLabel={confirmLabel}\n\t\t\t\t\tlabel={notifyLabel}\n\t\t\t\t\tsecondaryBtnType=\"outlined\"\n\t\t\t\t\tsecondaryColor=\"primary\"\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</CustomModal>\n\t);\n};\n\nexport default ReadReceiptModal;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\n\nexport const sendDeliveryReport = async (messageId: string): Promise<any> => {\n\tconst res = await soapFetch('SendDeliveryReport', {\n\t\tmid: messageId,\n\t\t_jsns: 'urn:zimbraMail'\n\t});\n\treturn res;\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement } from 'react';\nimport { Row, Icon, Text } from '@zextras/carbonio-design-system';\n\ntype LabelRowProps = {\n\tlabel: string;\n\ticon: string;\n\ttext: string;\n};\n\nconst LabelRow: FC<LabelRowProps> = ({ label, icon, text }): ReactElement => (\n\t<Row width=\"fill\" mainAlignment=\"flex-start\" padding={{ horizontal: 'small', bottom: 'small' }}>\n\t\t<Row padding={{ right: 'small' }}>\n\t\t\t<Icon icon={icon} />\n\t\t</Row>\n\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\" display=\"flex\">\n\t\t\t<Text overflow=\"break-word\" weight=\"bold\">\n\t\t\t\t{label}\n\t\t\t</Text>\n\t\t\t<Text overflow=\"break-word\">&nbsp;{text}</Text>\n\t\t</Row>\n\t</Row>\n);\nexport default LabelRow;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\nimport type { ReplyShareParameters, SaveDraftRequest, SaveDraftResponse } from '../../types';\nimport { generateRequest } from '../editor-slice-utils';\n\n// TODO probably the owner account should be set also here\nexport const acceptSharedCalendarReply = createAsyncThunk<any, ReplyShareParameters>(\n\t'sendMsg',\n\tasync ({ data }, { getState, dispatch }) => {\n\t\tconst toSend = generateRequest(data);\n\t\tconst resp = await soapFetch<SaveDraftRequest, SaveDraftResponse>('SendMsg', {\n\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\tm: toSend\n\t\t});\n\n\t\treturn { resp };\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const mountSharedCalendar = createAsyncThunk(\n\t'calendar/mountSharedCalendar',\n\tasync (data: any, { getState }) => {\n\t\tconst requests: any = {};\n\t\trequests.mountSharedCalendarRequest = `<CreateMountpointRequest xmlns=\"urn:zimbraMail\">\n        <link l=\"1\" name=\"${data.calendarName}\" zid=\"${data.zid}\" rid=\"${data.rid}\" view=\"${data.view}\" color=\"${data.color}\" f=\"#\"/>\n        </CreateMountpointRequest>`;\n\n\t\tconst res = await fetch('/service/soap/CreateMountpointRequest', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/soap+xml'\n\t\t\t},\n\t\t\tbody: `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\t\t\t<soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\">\n\t\t\t\t<soap:Header>\n\t\t\t\t\t<context xmlns=\"urn:zimbra\">\n\t\t\t\t\t\t<account by=\"name\">${data.accounts[0].name}</account>\n\t\t\t\t\t\t<format type=\"js\"/>\n\t\t\t\t\t</context>\n\t\t\t\t</soap:Header>\n\t\t\t\t<soap:Body>\n\t\t\t\t\t${requests.mountSharedCalendarRequest ?? ''}\t\t\t\t\n\t\t\t\t</soap:Body>\n\t\t\t</soap:Envelope>\n\t\t`\n\t\t});\n\t\tconst response = await res.json();\n\t\tif (response.Body.Fault) {\n\t\t\tthrow new Error(response.Body.Fault.Reason.Text);\n\t\t}\n\n\t\treturn { response };\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback } from 'react';\n\nimport { map } from 'lodash';\n\nimport { ParticipantRole } from '../../../carbonio-ui-commons/constants/participants';\nimport { useUiUtilities } from '../../../hooks/use-ui-utilities';\nimport { msgAction } from '../../../store/actions';\nimport { acceptSharedCalendarReply } from '../../../store/actions/acceptSharedCalendarReply';\nimport { mountSharedCalendar } from '../../../store/actions/mount-share-calendar';\nimport { AppDispatch } from '../../../store/redux';\nimport type { MailsEditor, Participant } from '../../../types';\n\ntype Accept = {\n\tzid: string;\n\tview: string;\n\trid: string;\n\tcalendarName: string;\n\tcolor: number;\n\taccounts: any;\n\tt: (...args: any[]) => string;\n\tdispatch: AppDispatch;\n\tmsgId: Array<string> | any;\n\tsharedCalendarName: string;\n\towner: string;\n\tparticipants: Participant[];\n\tgrantee: string;\n\tcustomMessage: string;\n\trole: string;\n\tallowedActions: string;\n\tnotifyOrganizer: boolean;\n};\n\ntype MoveInviteToTrashType = {\n\tt: (...args: any[]) => string;\n\tdispatch: AppDispatch;\n\tmsgId: string;\n};\n\ntype MountSharedCalendarType = {\n\tzid: string;\n\tview: string;\n\trid: string;\n\tcalendarName: string;\n\tcolor: number;\n\taccounts: any;\n\tdispatch: AppDispatch;\n};\ntype AcceptSharedCalendarType = {\n\tdispatch: AppDispatch;\n\tsharedCalendarName: string;\n\towner: string;\n\tparticipants: Participant[];\n\tgrantee: string;\n\tcustomMessage: string;\n\trole: string;\n\tallowedActions: string;\n\tisAccepted: boolean;\n};\n\ntype DeclineType = {\n\tdispatch: AppDispatch;\n\tt: (...args: any[]) => string;\n\tmsgId: string;\n\tsharedCalendarName: string;\n\towner: string;\n\tparticipants: Participant[];\n\tgrantee: string;\n\tcustomMessage: string;\n\trole: string;\n\tallowedActions: string;\n\tnotifyOrganizer: boolean;\n};\nconst mountSharedCalendarFunc = ({\n\tzid,\n\tview,\n\trid,\n\tcalendarName,\n\tcolor,\n\taccounts,\n\tdispatch\n}: MountSharedCalendarType): any =>\n\tdispatch(\n\t\tmountSharedCalendar({\n\t\t\tzid,\n\t\t\tview,\n\t\t\trid,\n\t\t\tcalendarName,\n\t\t\tcolor,\n\t\t\taccounts\n\t\t})\n\t);\n\nconst sharedCalendarReplyFunc = ({\n\tdispatch,\n\tsharedCalendarName,\n\towner,\n\tparticipants,\n\tgrantee,\n\tcustomMessage,\n\trole,\n\tallowedActions,\n\tisAccepted\n}: AcceptSharedCalendarType): any => {\n\tconst displayMessage = customMessage?.length > 0 ? customMessage : '';\n\treturn dispatch(\n\t\tacceptSharedCalendarReply({\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tdata: {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tattach: [{ mp: [] }],\n\t\t\t\tsubject: isAccepted\n\t\t\t\t\t? `Share Accepted: ${sharedCalendarName} shared by ${owner}`\n\t\t\t\t\t: `Share Declined: ${sharedCalendarName} shared by ${owner}`,\n\t\t\t\tparticipants: map(participants, (p) => {\n\t\t\t\t\tif (p.type === ParticipantRole.FROM) {\n\t\t\t\t\t\treturn { ...p, type: ParticipantRole.TO };\n\t\t\t\t\t}\n\t\t\t\t\treturn { ...p, type: ParticipantRole.FROM };\n\t\t\t\t}),\n\t\t\t\ttext: [\n\t\t\t\t\tisAccepted\n\t\t\t\t\t\t? `Accepted: ${grantee} has accepted the sharing of \"${sharedCalendarName}\"\\n\\n----------------------------------------------\\n\\nShared item: ${sharedCalendarName}\\nOwner: ${owner}\\nGrantee: ${grantee}\\nRole: ${role}\\nAllowed actions: ${allowedActions}\\n*~*~*~*~*~*~*~*~*~*\\n${displayMessage}`\n\t\t\t\t\t\t: `Declined: ${grantee} has declined the sharing of \"${sharedCalendarName}\"\\n\\n----------------------------------------------\\n\\nShared item: ${sharedCalendarName}\\nOwner: ${owner}\\nGrantee: ${grantee}\\nRole: ${role}\\nAllowed actions: ${allowedActions}\\n*~*~*~*~*~*~*~*~*~*\\n${displayMessage}`\n\t\t\t\t]\n\t\t\t} as MailsEditor\n\t\t})\n\t);\n};\n\nconst useMoveInviteToTrashFunc = (): ((arg: MoveInviteToTrashType) => any) => {\n\tconst { createSnackbar } = useUiUtilities();\n\treturn useCallback(\n\t\t({ msgId, dispatch, t }) =>\n\t\t\tdispatch(\n\t\t\t\tmsgAction({\n\t\t\t\t\toperation: `trash`,\n\t\t\t\t\tids: [msgId]\n\t\t\t\t})\n\t\t\t).then((res2: any): void => {\n\t\t\t\tif (!res2.type.includes('fulfilled')) {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `share`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t[createSnackbar]\n\t);\n};\n\nexport const useAccept = (): ((arg: Accept) => void) => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst moveInviteToTrashFunc = useMoveInviteToTrashFunc();\n\treturn useCallback(\n\t\t({\n\t\t\tzid,\n\t\t\tview,\n\t\t\trid,\n\t\t\tcalendarName,\n\t\t\tcolor,\n\t\t\taccounts,\n\t\t\tt,\n\t\t\tdispatch,\n\t\t\tmsgId,\n\t\t\tsharedCalendarName,\n\t\t\towner,\n\t\t\tparticipants,\n\t\t\tgrantee,\n\t\t\tcustomMessage,\n\t\t\trole,\n\t\t\tallowedActions,\n\t\t\tnotifyOrganizer\n\t\t}) => {\n\t\t\tmountSharedCalendarFunc({\n\t\t\t\tzid,\n\t\t\t\tview,\n\t\t\t\trid,\n\t\t\t\tcalendarName,\n\t\t\t\tcolor,\n\t\t\t\taccounts,\n\t\t\t\tdispatch\n\t\t\t}).then((res: any): void => {\n\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\tnotifyOrganizer &&\n\t\t\t\t\t\tsharedCalendarReplyFunc({\n\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\tsharedCalendarName,\n\t\t\t\t\t\t\towner,\n\t\t\t\t\t\t\tparticipants,\n\t\t\t\t\t\t\tgrantee,\n\t\t\t\t\t\t\tcustomMessage,\n\t\t\t\t\t\t\trole,\n\t\t\t\t\t\t\tallowedActions,\n\t\t\t\t\t\t\tisAccepted: true\n\t\t\t\t\t\t});\n\t\t\t\t\tmoveInviteToTrashFunc({ msgId, dispatch, t });\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `share_accepted`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: t('message.snackbar.share.accepted', 'You have accepted the share request'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `share`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[createSnackbar, moveInviteToTrashFunc]\n\t);\n};\n\nexport const useDecline = (): ((arg: DeclineType) => Promise<void>) => {\n\tconst { createSnackbar } = useUiUtilities();\n\treturn useCallback(\n\t\t({\n\t\t\tdispatch,\n\t\t\tt,\n\t\t\tmsgId,\n\t\t\tsharedCalendarName,\n\t\t\towner,\n\t\t\tparticipants,\n\t\t\tgrantee,\n\t\t\tcustomMessage,\n\t\t\trole,\n\t\t\tallowedActions,\n\t\t\tnotifyOrganizer\n\t\t}) =>\n\t\t\tdispatch(\n\t\t\t\tmsgAction({\n\t\t\t\t\toperation: `trash`,\n\t\t\t\t\tids: [msgId]\n\t\t\t\t})\n\t\t\t).then((res): void => {\n\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\tnotifyOrganizer &&\n\t\t\t\t\t\tsharedCalendarReplyFunc({\n\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\tsharedCalendarName,\n\t\t\t\t\t\t\towner,\n\t\t\t\t\t\t\tparticipants,\n\t\t\t\t\t\t\tgrantee,\n\t\t\t\t\t\t\tcustomMessage,\n\t\t\t\t\t\t\trole,\n\t\t\t\t\t\t\tallowedActions,\n\t\t\t\t\t\t\tisAccepted: false\n\t\t\t\t\t\t});\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `share_declined`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: t('message.snackbar.share.declined', 'You have declined the share request'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `share`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t[createSnackbar]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { ChangeEvent, FC, ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport {\n\tButton,\n\tCheckbox,\n\tDivider,\n\tInput,\n\tPadding,\n\tRow,\n\tText\n} from '@zextras/carbonio-design-system';\nimport { useFoldersByView, useUserAccounts } from '@zextras/carbonio-shell-ui';\nimport { find } from 'lodash';\n\nimport ColorSelect from './color-select';\nimport { useAccept, useDecline } from './share-calendar-actions';\nimport { FOLDER_VIEW } from '../../../carbonio-ui-commons/constants';\nimport { ResponseActionsProps } from '../../../types';\n\nconst ResponseActions: FC<ResponseActionsProps> = ({\n\tdispatch,\n\tt,\n\tzid,\n\tview,\n\trid,\n\tmsgId,\n\tsharedCalendarName,\n\tgrantee,\n\towner,\n\trole,\n\tallowedActions,\n\tparticipants\n}): ReactElement => {\n\tconst [customMessage, setCustomMessage] = useState('');\n\tconst [notifyOrganizer, setNotifyOrganizer] = useState(false);\n\tconst [calendarName, setCalendarName] = useState(sharedCalendarName);\n\tconst [selectedColor, setSelectedColor] = useState<string | null>('0');\n\tconst accounts = useUserAccounts();\n\tconst calFolders = useFoldersByView(FOLDER_VIEW.appointment);\n\tconst showError = useMemo(\n\t\t() =>\n\t\t\tfind(\n\t\t\t\tcalFolders[0]?.children,\n\t\t\t\t(item) => item?.name.toLowerCase() === calendarName.toLowerCase()\n\t\t\t),\n\t\t[calFolders, calendarName]\n\t);\n\tconst disabled = useMemo(\n\t\t() => !!(calendarName.length === 0 || showError),\n\t\t[calendarName, showError]\n\t);\n\n\tconst accept = useAccept();\n\tconst acceptShare = useCallback(\n\t\t() =>\n\t\t\taccept({\n\t\t\t\tzid,\n\t\t\t\tview,\n\t\t\t\trid,\n\t\t\t\tcalendarName,\n\t\t\t\tcolor: parseInt(selectedColor ?? '0', 10),\n\t\t\t\taccounts,\n\t\t\t\tt,\n\t\t\t\tdispatch,\n\t\t\t\tmsgId,\n\t\t\t\tsharedCalendarName,\n\t\t\t\towner,\n\t\t\t\tparticipants,\n\t\t\t\tgrantee,\n\t\t\t\tcustomMessage,\n\t\t\t\trole,\n\t\t\t\tallowedActions,\n\t\t\t\tnotifyOrganizer\n\t\t\t}),\n\t\t[\n\t\t\taccept,\n\t\t\tzid,\n\t\t\tview,\n\t\t\trid,\n\t\t\tcalendarName,\n\t\t\tselectedColor,\n\t\t\taccounts,\n\t\t\tt,\n\t\t\tdispatch,\n\t\t\tmsgId,\n\t\t\tsharedCalendarName,\n\t\t\towner,\n\t\t\tparticipants,\n\t\t\tgrantee,\n\t\t\tcustomMessage,\n\t\t\trole,\n\t\t\tallowedActions,\n\t\t\tnotifyOrganizer\n\t\t]\n\t);\n\n\tconst decline = useDecline();\n\tconst declined = useCallback(() => {\n\t\tdecline({\n\t\t\tdispatch,\n\t\t\tt,\n\t\t\tmsgId,\n\t\t\tsharedCalendarName,\n\t\t\towner,\n\t\t\tparticipants,\n\t\t\tgrantee,\n\t\t\tcustomMessage,\n\t\t\trole,\n\t\t\tallowedActions,\n\t\t\tnotifyOrganizer\n\t\t});\n\t}, [\n\t\tdecline,\n\t\tdispatch,\n\t\tt,\n\t\tmsgId,\n\t\tsharedCalendarName,\n\t\towner,\n\t\tparticipants,\n\t\tgrantee,\n\t\tcustomMessage,\n\t\trole,\n\t\tallowedActions,\n\t\tnotifyOrganizer\n\t]);\n\treturn (\n\t\t<>\n\t\t\t<Row width=\"100%\" crossAlignment=\"baseline\" padding={{ vertical: 'small' }}>\n\t\t\t\t<Row width=\"auto\">\n\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tvalue={notifyOrganizer}\n\t\t\t\t\t\t\tonClick={(): void => setNotifyOrganizer(!notifyOrganizer)}\n\t\t\t\t\t\t\tlabel={t('label.notify_organizer', 'Notify Organizer')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Padding>\n\t\t\t\t</Row>\n\t\t\t\t<Row width=\"80%\" padding={{ left: 'small', vertical: 'small' }}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel={t('label.add_custom_message', 'Add a custom message')}\n\t\t\t\t\t\tvalue={customMessage}\n\t\t\t\t\t\tonChange={(ev: any): void => {\n\t\t\t\t\t\t\tsetCustomMessage(ev.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbackgroundColor=\"gray6\"\n\t\t\t\t\t\tdisabled={!notifyOrganizer}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t\t<Row width=\"fill\" mainAlignment=\"space-around\">\n\t\t\t\t<Row width=\"50%\" mainAlignment=\"flex-start\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel={t('label.type_name_here', 'Item name')}\n\t\t\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\t\t\tvalue={calendarName}\n\t\t\t\t\t\thasError={disabled}\n\t\t\t\t\t\tonChange={(e: ChangeEvent<HTMLInputElement>): void => setCalendarName(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t\t<Row\n\t\t\t\t\twidth=\"50%\"\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\tpadding={{ horizontal: 'small', vertical: 'small' }}\n\t\t\t\t>\n\t\t\t\t\t<ColorSelect\n\t\t\t\t\t\tonChange={(a: string | null): void => setSelectedColor(a)}\n\t\t\t\t\t\tdefaultColor={0}\n\t\t\t\t\t\tlabel={t('label.calendar_color', `Item color`)}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t\t<Row\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"1rem\"\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\tstyle={{ marginBottom: '0.5rem' }}\n\t\t\t\t>\n\t\t\t\t\t{(calendarName.length === 0 && (\n\t\t\t\t\t\t<Text size=\"small\" color=\"error\">\n\t\t\t\t\t\t\t{t('messages.enter_calendar_name', 'Enter a name to accept the calendar')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)) ||\n\t\t\t\t\t\t(showError && (\n\t\t\t\t\t\t\t<Text size=\"small\" color=\"error\">\n\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t'messages.cal_name_exist_warning',\n\t\t\t\t\t\t\t\t\t'A calendar with the same name already exists in this path'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t\t<Divider />\n\t\t\t<Row\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\theight=\"fit\"\n\t\t\t\tpadding={{ all: 'large' }}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\tlabel={t('label.accept', 'Accept')}\n\t\t\t\t\ticon=\"Checkmark\"\n\t\t\t\t\tonClick={acceptShare}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t\t<Padding horizontal=\"small\" />\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\tlabel={t('label.decline', 'Decline')}\n\t\t\t\t\ticon=\"CloseOutline\"\n\t\t\t\t\tonClick={declined}\n\t\t\t\t/>\n\t\t\t\t<Padding horizontal=\"small\" />\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default ResponseActions;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport {\n\tButton,\n\tCollapse,\n\tContainer,\n\tDivider,\n\tIcon,\n\tPadding,\n\tRow,\n\tText\n} from '@zextras/carbonio-design-system';\nimport { FOLDERS, t } from '@zextras/carbonio-shell-ui';\nimport React, { FC, ReactElement, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../hooks/redux';\nimport type { MailMessage } from '../../types';\nimport LabelRow from './parts/label-row';\nimport ResponseActions from './parts/response-actions';\nimport { ShareCalendarRoleOptions, findLabel } from './parts/utils';\n\nconst InviteContainer = styled(Container)`\n\tborder: 0.0625rem solid ${({ theme }: any): string => theme.palette.gray2.regular};\n\tborder-radius: 0.875rem;\n\tmargin: ${({ theme }: any): string => theme.sizes.padding.extrasmall};\n`;\n\ntype SharedCalendarResponseReturnType = {\n\tsharedContent: string;\n\tmailMsg: MailMessage;\n\tonLoadChange?: () => void;\n};\n\nconst SharedCalendarResponse: FC<SharedCalendarResponseReturnType> = ({\n\tsharedContent,\n\tmailMsg,\n\tonLoadChange\n}): ReactElement => {\n\tuseEffect(() => {\n\t\tif (mailMsg.read === 'false') {\n\t\t\tonLoadChange && onLoadChange();\n\t\t}\n\t}, [mailMsg.read, onLoadChange]);\n\tconst dispatch = useAppDispatch();\n\n\tconst rights = useMemo(\n\t\t() => sharedContent?.split('<link ')[1].split('perm=\"')[1].split('\" ')[0],\n\t\t[sharedContent]\n\t);\n\n\tconst shareCalendarRoleOptions = useMemo(\n\t\t() => ShareCalendarRoleOptions(t, rights?.includes('p')),\n\t\t[rights]\n\t);\n\n\tconst role = useMemo(\n\t\t() => findLabel(shareCalendarRoleOptions, rights || ''),\n\t\t[shareCalendarRoleOptions, rights]\n\t);\n\n\tconst view = useMemo(\n\t\t() => sharedContent?.split('<link ')[1]?.split('view=\"')[1]?.split('\" ')[0],\n\t\t[sharedContent]\n\t);\n\n\tconst zid = useMemo(\n\t\t() => sharedContent?.split('<grantor ')[1]?.split('id=\"')[1]?.split('\"')[0],\n\t\t[sharedContent]\n\t);\n\n\tconst rid = useMemo(\n\t\t() => sharedContent?.split('<link ')[1].split('id=\"')[1].split('\" ')[0]?.split('\"')[0],\n\t\t[sharedContent]\n\t);\n\n\tconst notes = useMemo(\n\t\t() =>\n\t\t\tmailMsg?.body?.content\n\t\t\t\t?.substring(Number(mailMsg?.body?.content?.lastIndexOf('<hr />')) + 6)\n\t\t\t\t.replace(/<p>/gi, '')\n\t\t\t\t.replace(/<\\/p>/gi, ''),\n\t\t[mailMsg?.body?.content]\n\t);\n\n\tconst [folderType, folderIcon] = useMemo(() => {\n\t\tswitch (view) {\n\t\t\tcase 'message':\n\t\t\t\treturn [t('label.mail_folder', 'Mail Folder'), 'MailModOutline'];\n\t\t\tcase 'appointment':\n\t\t\t\treturn [t('label.calendar', 'Calendar'), 'CalendarOutline'];\n\t\t\tdefault:\n\t\t\t\treturn [t('label.contact_folder', 'Contact Folder'), 'ContactsModOutline'];\n\t\t}\n\t}, [view]);\n\n\tconst allowedActions = useMemo((): string => {\n\t\tif (rights === 'rwidx' || rights === 'rwidxp') {\n\t\t\treturn t('message.manager_rights', 'View,Edit,Add,Remove');\n\t\t}\n\t\tif (rights === 'r' || rights === 'rp') {\n\t\t\treturn t('message.view_rights', 'View');\n\t\t}\n\t\tif (rights === 'rwidxa' || rights === 'rwidxap') {\n\t\t\treturn t('message.admin_rights', 'View,Edit,Add,Remove,Administer');\n\t\t}\n\t\treturn 'None';\n\t}, [rights]);\n\n\tconst owner = useMemo(\n\t\t() => sharedContent?.split('<grantor ')[1]?.split('name=\"')[1]?.split('\"')[0],\n\t\t[sharedContent]\n\t);\n\tconst grantee = useMemo(\n\t\t() => sharedContent?.split('<grantee ')[1]?.split('name=\"')[1]?.split('\"')[0],\n\t\t[sharedContent]\n\t);\n\n\tconst sharedContentItem = useMemo(\n\t\t() => sharedContent?.split('<link ')[1]?.split('name=\"')[1]?.split('\" ')[0],\n\t\t[sharedContent]\n\t);\n\n\tconst [showMoreInfo, setShowMoreInfo] = useState(false);\n\n\treturn (\n\t\t<InviteContainer>\n\t\t\t<Container\n\t\t\t\tpadding={{ top: 'medium', horizontal: 'large', bottom: 'extrasmall' }}\n\t\t\t\twidth=\"100%\"\n\t\t\t>\n\t\t\t\t<Row padding={{ bottom: 'medium' }}>\n\t\t\t\t\t<Icon icon=\"ShareOutline\" size=\"large\" />\n\t\t\t\t\t<Padding all=\"extrasmall\" />\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Text size=\"large\" weight=\"bold\">\n\t\t\t\t\t\t\t{`${owner} ${t('label.would_like_to_share', 'shared its')}  ${folderType}`}\n\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t<Text size=\"large\" weight=\"bold\" color=\"primary\">{`\"${sharedContentItem}\"`}</Text>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t<Text size=\"large\" weight=\"bold\">\n\t\t\t\t\t\t\t\t{t('label.with_you', 'with you')}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t</Row>\n\t\t\t\t</Row>\n\t\t\t\t<LabelRow\n\t\t\t\t\tlabel={t('label.shared_item', 'Shared item')}\n\t\t\t\t\ticon=\"InfoOutline\"\n\t\t\t\t\ttext={sharedContentItem}\n\t\t\t\t/>\n\t\t\t\t<LabelRow label={t('label.owner', 'Owner: ')} icon=\"PersonOutline\" text={owner} />\n\t\t\t\t<LabelRow label={t('label.grantee', 'Grantee: ')} icon=\"StarOutline\" text={grantee} />\n\t\t\t\t<LabelRow label={t('label.role', 'Role: ')} icon=\"ShieldOutline\" text={role} />\n\t\t\t\t<LabelRow label={t('label.type', 'Type:')} icon={folderIcon} text={folderType} />\n\t\t\t\t<LabelRow\n\t\t\t\t\tlabel={t('label.allowed_actions', 'Allowed Actions : ')}\n\t\t\t\t\ticon=\"UnlockOutline\"\n\t\t\t\t\ttext={allowedActions}\n\t\t\t\t/>\n\t\t\t\t<>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Collapse orientation=\"vertical\" open={showMoreInfo} crossSize=\"100%\">\n\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\tpadding={{ horizontal: 'small', bottom: 'small' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\tpadding={{ right: 'small' }}\n\t\t\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Row padding={{ right: 'small' }}>\n\t\t\t\t\t\t\t\t\t\t<Icon icon=\"MessageSquareOutline\" />\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\" display=\"flex\">\n\t\t\t\t\t\t\t\t\t\t<Text overflow=\"break-word\" dangerouslySetInnerHTML={{ __html: notes }}></Text>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Row width=\"fill\" mainAlignment=\"flex-start\" padding={{ all: 'small', bottom: 'medium' }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={(): void => setShowMoreInfo(!showMoreInfo)}\n\t\t\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\tshowMoreInfo\n\t\t\t\t\t\t\t\t\t? t('label.hide_more_info', 'Hide more information')\n\t\t\t\t\t\t\t\t\t: t('label.show_more_info', 'Show more information')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Row>\n\t\t\t\t</>\n\n\t\t\t\t{mailMsg.parent !== FOLDERS.TRASH && mailMsg.parent !== FOLDERS.SENT && role !== 'None' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<ResponseActions\n\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\tt={t}\n\t\t\t\t\t\t\tzid={zid}\n\t\t\t\t\t\t\tview={view}\n\t\t\t\t\t\t\trid={rid}\n\t\t\t\t\t\t\tmsgId={mailMsg.id}\n\t\t\t\t\t\t\tsharedCalendarName={sharedContentItem}\n\t\t\t\t\t\t\tgrantee={grantee}\n\t\t\t\t\t\t\towner={owner}\n\t\t\t\t\t\t\trole={role}\n\t\t\t\t\t\t\tallowedActions={allowedActions}\n\t\t\t\t\t\t\tparticipants={mailMsg.participants}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</InviteContainer>\n\t);\n};\n\nexport default SharedCalendarResponse;\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport {\n\tButton,\n\tCollapse,\n\tContainer,\n\tDivider,\n\tIcon,\n\tPadding,\n\tRow,\n\tText\n} from '@zextras/carbonio-design-system';\nimport {\n\tFOLDERS,\n\tgetIntegratedComponent,\n\tt,\n\tuseUserAccounts,\n\tuseUserSettings\n} from '@zextras/carbonio-shell-ui';\nimport { filter, find } from 'lodash';\n/* eslint-disable no-nested-ternary */\nimport { useParams } from 'react-router-dom';\n\nimport AttachmentsBlock from './attachments-block';\nimport PreviewHeader from './parts/preview-header';\nimport ReadReceiptModal from './read-receipt-modal';\nimport { ParticipantRole } from '../../../../carbonio-ui-commons/constants/participants';\nimport MailMessageRenderer from '../../../../commons/mail-message-renderer';\nimport { MessageActionsDescriptors } from '../../../../constants';\nimport { getAttachmentParts } from '../../../../helpers/attachments';\nimport { getFolderIdParts } from '../../../../helpers/folders';\nimport { useAppDispatch } from '../../../../hooks/redux';\nimport SharedInviteReply from '../../../../integrations/shared-invite-reply';\nimport { getMsg, msgAction } from '../../../../store/actions';\nimport type { MailMessage, OpenEmlPreviewType } from '../../../../types';\nimport { ExtraWindowCreationParams, MessageAction } from '../../../../types';\nimport { findMessageActionById } from '../../../../ui-actions/utils';\nimport { useGlobalExtraWindowManager } from '../../extra-windows/global-extra-window-manager';\n\nconst [InviteResponse, integrationAvailable] = getIntegratedComponent('invites-reply');\n\nconst MailContent: FC<{\n\tmessage: MailMessage;\n\tisMailPreviewOpen: boolean;\n\tisExternalMessage?: boolean;\n\tisInsideExtraWindow?: boolean;\n\topenEmlPreview?: OpenEmlPreviewType;\n}> = ({\n\tmessage,\n\tisMailPreviewOpen,\n\tisExternalMessage = false,\n\topenEmlPreview,\n\tisInsideExtraWindow = false\n}) => {\n\tconst [showModal, setShowModal] = useState(true);\n\tconst dispatch = useAppDispatch();\n\tconst accounts = useUserAccounts();\n\tconst { prefs } = useUserSettings();\n\tconst moveToTrash = useCallback(() => {\n\t\tdispatch(\n\t\t\tmsgAction({\n\t\t\t\toperation: `trash`,\n\t\t\t\tids: [message.id]\n\t\t\t})\n\t\t);\n\t}, [message, dispatch]);\n\n\t// this is necessary because if somebody click a message in the same conversation\n\t// already open that message will not be expanded\n\tuseEffect(() => {\n\t\tif (!message.isComplete) {\n\t\t\tdispatch(getMsg({ msgId: message.id }));\n\t\t}\n\t}, [dispatch, message.id, message.isComplete]);\n\n\tconst showAppointmentInvite = useMemo(\n\t\t() =>\n\t\t\tmessage.isInvite &&\n\t\t\tmessage.invite?.[0]?.comp &&\n\t\t\tmessage.isInvite &&\n\t\t\t(message.invite?.[0]?.comp[0].method === 'REQUEST' ||\n\t\t\t\tmessage.invite?.[0]?.comp[0].method === 'COUNTER') &&\n\t\t\tintegrationAvailable &&\n\t\t\tInviteResponse,\n\t\t[message]\n\t);\n\tconst readReceiptRequester = useMemo(\n\t\t() => find(message?.participants, { type: ParticipantRole.READ_RECEIPT_NOTIFICATION }),\n\t\t[message?.participants]\n\t);\n\n\tconst readReceiptSetting = useMemo(() => prefs?.zimbraPrefMailSendReadReceipts, [prefs]);\n\tconst showReadReceiptModal = useMemo(\n\t\t() =>\n\t\t\t(!!readReceiptRequester &&\n\t\t\t\tshowModal &&\n\t\t\t\tmessage.isReadReceiptRequested &&\n\t\t\t\t!message?.isSentByMe &&\n\t\t\t\treadReceiptSetting === 'prompt') ??\n\t\t\tfalse,\n\t\t[readReceiptRequester, showModal, message, readReceiptSetting]\n\t);\n\n\tconst showShareInvite = useMemo(\n\t\t() =>\n\t\t\tmessage &&\n\t\t\tmessage?.shr &&\n\t\t\tmessage?.shr?.length > 0 &&\n\t\t\tmessage.fragment &&\n\t\t\t!message?.fragment.includes('revoked') &&\n\t\t\t!message?.fragment.includes('has accepted') &&\n\t\t\t!message?.fragment.includes('has declined'),\n\t\t[message]\n\t);\n\n\tconst onModalClose = useCallback(() => {\n\t\tsetShowModal(false);\n\t}, []);\n\tconst loggedInUser = useMemo(() => accounts[0]?.name, [accounts]);\n\tconst isAttendee = useMemo(\n\t\t() => message.invite?.[0]?.comp?.[0]?.or?.a !== loggedInUser,\n\t\t[loggedInUser, message]\n\t);\n\n\tconst { inviteId, participationStatus } = {\n\t\t/*\n\t\t * Compose the invite ID\n\t\t * The invite ID is composed by the following fields:\n\t\t * - the appointment ID (if present)\n\t\t * - the message ID\n\t\t * If the 2 fields are both present they will be separated by a hyphen otherwise only the message ID will be used\n\t\t *\n\t\t * The appointment ID is present only if the appointment was automatically added to the calendar (following the\n\t\t * user's preferences)\n\t\t */\n\t\tinviteId: showAppointmentInvite\n\t\t\t? message.invite[0].comp[0].apptId\n\t\t\t\t? `${message.invite[0].comp[0].apptId}-${message.id}`\n\t\t\t\t: message.id\n\t\t\t: '',\n\n\t\t// Compose the participation status\n\t\tparticipationStatus:\n\t\t\tshowAppointmentInvite && message.invite[0].replies\n\t\t\t\t? message.invite[0].replies[0].reply[0].ptst\n\t\t\t\t: ''\n\t};\n\n\tconst parts = useMemo(\n\t\t() => (message.parts ? getAttachmentParts(message.parts) : []),\n\t\t[message?.parts]\n\t);\n\n\tconst participants = useMemo(() => message?.participants, [message?.participants]);\n\treturn (\n\t\t<Collapse\n\t\t\topen={isMailPreviewOpen}\n\t\t\tcrossSize=\"100%\"\n\t\t\torientation=\"vertical\"\n\t\t\tdisableTransition\n\t\t\tdata-testid=\"MailMessageRendererCollapse\"\n\t\t>\n\t\t\t{message.isComplete && (\n\t\t\t\t<Container\n\t\t\t\t\tdata-testid=\"MessageBody\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"fit\"\n\t\t\t\t\tcrossAlignment=\"stretch\"\n\t\t\t\t\tpadding={\n\t\t\t\t\t\tisInsideExtraWindow ? { vertical: 'small' } : { horizontal: 'large', vertical: 'small' }\n\t\t\t\t\t}\n\t\t\t\t\tbackground=\"gray6\"\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<AttachmentsBlock\n\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\tisExternalMessage={isExternalMessage}\n\t\t\t\t\t\t\topenEmlPreview={openEmlPreview}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Padding style={{ width: '100%' }} vertical=\"medium\">\n\t\t\t\t\t\t{showAppointmentInvite ? (\n\t\t\t\t\t\t\t<Container width=\"100%\">\n\t\t\t\t\t\t\t\t<InviteResponse\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tonLoadChange={(): null => null}\n\t\t\t\t\t\t\t\t\tmailMsg={message}\n\t\t\t\t\t\t\t\t\tinviteId={inviteId}\n\t\t\t\t\t\t\t\t\tparticipationStatus={participationStatus}\n\t\t\t\t\t\t\t\t\tto={filter(message.participants, { type: 'f' })}\n\t\t\t\t\t\t\t\t\tinvite={message.invite}\n\t\t\t\t\t\t\t\t\tmethod={message.invite[0]?.comp[0].method}\n\t\t\t\t\t\t\t\t\tmoveToTrash={moveToTrash}\n\t\t\t\t\t\t\t\t\tisAttendee={isAttendee}\n\t\t\t\t\t\t\t\t\tparent={message.parent}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t) : showShareInvite ? (\n\t\t\t\t\t\t\t<SharedInviteReply\n\t\t\t\t\t\t\t\t// title={message?.fragment?.split('Shared item:')[0]}\n\t\t\t\t\t\t\t\tsharedContent={message.shr[0].content}\n\t\t\t\t\t\t\t\tmailMsg={message}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MailMessageRenderer\n\t\t\t\t\t\t\t\tparts={parts}\n\t\t\t\t\t\t\t\tbody={message.body}\n\t\t\t\t\t\t\t\tid={message.id}\n\t\t\t\t\t\t\t\tfragment={message.fragment}\n\t\t\t\t\t\t\t\tparticipants={participants}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Padding>\n\t\t\t\t\t<ReadReceiptModal\n\t\t\t\t\t\topen={showReadReceiptModal}\n\t\t\t\t\t\tonClose={onModalClose}\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\treadReceiptSetting={readReceiptSetting}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</Collapse>\n\t);\n};\n\ntype MailPreviewBlockType = {\n\tmessage: MailMessage;\n\topen: boolean;\n\tonClick: () => void;\n\tmessageActions: Array<MessageAction>;\n\tisExternalMessage?: boolean;\n\tisInsideExtraWindow?: boolean;\n};\nconst MailPreviewBlock: FC<MailPreviewBlockType> = ({\n\tmessage,\n\topen,\n\tonClick,\n\tmessageActions,\n\tisExternalMessage = false,\n\tisInsideExtraWindow = false\n}) => {\n\tconst { folderId } = useParams<{ folderId: string }>();\n\tconst compProps = useMemo(\n\t\t() => ({ message, onClick, open, isExternalMessage, isInsideExtraWindow }),\n\t\t[message, onClick, open, isExternalMessage, isInsideExtraWindow]\n\t);\n\tconst markAsNotSpam = findMessageActionById(\n\t\tmessageActions,\n\t\tMessageActionsDescriptors.MARK_AS_NOT_SPAM.id\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{getFolderIdParts(folderId).id === FOLDERS.SPAM && (\n\t\t\t\t<Container\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\theight=\"fit\"\n\t\t\t\t\tpadding={{ bottom: 'medium' }}\n\t\t\t\t>\n\t\t\t\t\t<Container background=\"gray6\" orientation=\"horizontal\" padding={{ all: 'small' }}>\n\t\t\t\t\t\t<Row width=\"50%\" display=\"flex\" crossAlignment=\"center\" mainAlignment=\"baseline\">\n\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t<Icon icon=\"AlertCircleOutline\" size=\"medium\" />\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t{t('messages.snackbar.marked_as_spam', 'You’ve marked this e-mail as Spam')}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row width=\"50%\" mainAlignment=\"flex-end\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t\t\t\tlabel={t('action.mark_as_non_spam', 'Not Spam')}\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={markAsNotSpam}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t\t{message && (\n\t\t\t\t<Row width=\"fill\">\n\t\t\t\t\t<PreviewHeader compProps={compProps} actions={messageActions} />\n\t\t\t\t</Row>\n\t\t\t)}\n\n\t\t\t{/* External message disclaimer */}\n\t\t\t{isExternalMessage && (\n\t\t\t\t<Container background=\"white\" padding={{ top: 'large', bottom: 'large' }}>\n\t\t\t\t\t<Row\n\t\t\t\t\t\tbackground=\"gray2\"\n\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\tpadding={{ all: 'large' }}\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Padding right=\"large\">\n\t\t\t\t\t\t\t<Icon icon=\"AlertCircleOutline\" size=\"large\" />\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t'label.attachments_disclaimer',\n\t\t\t\t\t\t\t\t'You are viewing an attached message. The authenticity of the attached messages can not be verified.'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Divider color=\"gray1\" />\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport type MailPreviewProps = {\n\tmessage: MailMessage;\n\texpanded: boolean;\n\tmessageActions: Array<MessageAction>;\n\tisAlone: boolean;\n\tisMessageView: boolean;\n\tisExternalMessage?: boolean;\n\tisInsideExtraWindow?: boolean;\n};\n\nconst MailPreview: FC<MailPreviewProps> = ({\n\tmessage,\n\texpanded,\n\tmessageActions,\n\tisAlone,\n\tisMessageView,\n\tisExternalMessage = false,\n\tisInsideExtraWindow = false\n}) => {\n\tconst mailContainerRef = useRef<HTMLDivElement>(null);\n\tconst [open, setOpen] = useState(expanded || isAlone);\n\tconst { createWindow } = useGlobalExtraWindowManager();\n\n\tconst onClick = useCallback(() => {\n\t\tsetOpen((o) => !o);\n\t}, []);\n\n\tconst isMailPreviewOpen = useMemo(\n\t\t() => (isMessageView ? true : isAlone ? true : open),\n\t\t[isAlone, isMessageView, open]\n\t);\n\n\t/**\n\t * To avoid component dependency cycles we define here, outside the\n\t * AttachmentsBlock component, the function that open the EML preview\n\t */\n\tconst openEmlPreview: OpenEmlPreviewType = useCallback<OpenEmlPreviewType>(\n\t\t(parentMessageId: string, attachmentName: string, emlMessage: MailMessage): void => {\n\t\t\tconst createWindowParams: ExtraWindowCreationParams = {\n\t\t\t\tname: `${parentMessageId}-${attachmentName}`,\n\t\t\t\treturnComponent: false,\n\t\t\t\tchildren: (\n\t\t\t\t\t<MailPreview\n\t\t\t\t\t\tmessage={emlMessage}\n\t\t\t\t\t\texpanded={false}\n\t\t\t\t\t\tisAlone\n\t\t\t\t\t\tmessageActions={messageActions}\n\t\t\t\t\t\tisMessageView\n\t\t\t\t\t\tisExternalMessage\n\t\t\t\t\t\tisInsideExtraWindow\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\ttitle: emlMessage.subject,\n\t\t\t\tcloseOnUnmount: false\n\t\t\t};\n\t\t\tif (createWindow) {\n\t\t\t\tcreateWindow(createWindowParams);\n\t\t\t}\n\t\t},\n\t\t[createWindow, messageActions]\n\t);\n\n\treturn (\n\t\t<Container\n\t\t\tref={mailContainerRef}\n\t\t\theight=\"fit\"\n\t\t\tdata-testid={`MailPreview-${message.id}`}\n\t\t\tpadding={isInsideExtraWindow ? { all: 'large' } : undefined}\n\t\t\tbackground=\"white\"\n\t\t>\n\t\t\t<MailPreviewBlock\n\t\t\t\tonClick={onClick}\n\t\t\t\tmessage={message}\n\t\t\t\topen={isMailPreviewOpen}\n\t\t\t\tmessageActions={messageActions}\n\t\t\t\tisExternalMessage={isExternalMessage}\n\t\t\t\tisInsideExtraWindow={isInsideExtraWindow}\n\t\t\t/>\n\n\t\t\t<Container\n\t\t\t\twidth=\"fill\"\n\t\t\t\theight=\"fit\"\n\t\t\t\tstyle={{\n\t\t\t\t\toverflowY: 'auto'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{(open || isAlone) && (\n\t\t\t\t\t<MailContent\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\tisMailPreviewOpen={isMailPreviewOpen}\n\t\t\t\t\t\topenEmlPreview={openEmlPreview}\n\t\t\t\t\t\tisExternalMessage={isExternalMessage}\n\t\t\t\t\t\tisInsideExtraWindow={isInsideExtraWindow}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n\nexport default MailPreview;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, FC, useMemo } from 'react';\n\nimport {\n\tContainer,\n\tDivider,\n\tIcon,\n\tIconButton,\n\tRow,\n\tText,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport { replaceHistory, t } from '@zextras/carbonio-shell-ui';\n\nimport type { Conversation, MailMessage } from '../../../../types';\n\nconst PreviewPanelHeader: FC<{\n\titem: Conversation | (Partial<MailMessage> & Pick<MailMessage, 'id'>);\n\tfolderId: string;\n}> = ({ item, folderId }) => {\n\tconst replaceHistoryCallback = useCallback(\n\t\t() => replaceHistory(`/folder/${folderId}`),\n\t\t[folderId]\n\t);\n\n\tconst subject = useMemo(\n\t\t() => item?.subject || t('label.no_subject_with_tags', '<No Subject>'),\n\t\t[item?.subject]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\tdata-testid=\"PreviewPanelHeader\"\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\theight=\"3rem\"\n\t\t\t\tbackground=\"white\"\n\t\t\t\tmainAlignment=\"space-between\"\n\t\t\t\tcrossAlignment=\"center\"\n\t\t\t\tpadding={{ left: 'large', right: 'extrasmall' }}\n\t\t\t\tstyle={{ minHeight: '3rem' }}\n\t\t\t>\n\t\t\t\t{item?.read ? (\n\t\t\t\t\t<Icon style={{ width: '1.125rem' }} icon=\"EmailReadOutline\" data-testid=\"EmailReadIcon\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tstyle={{ width: '1.125rem' }}\n\t\t\t\t\t\ticon=\"EmailReadOutline\"\n\t\t\t\t\t\tdata-testid=\"EmailUnreadIcon\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Row mainAlignment=\"flex-start\" padding={{ left: 'large' }} takeAvailableSpace>\n\t\t\t\t\t<Tooltip label={subject}>\n\t\t\t\t\t\t<Text size=\"medium\" data-testid=\"Subject\" color={item?.subject ? 'text' : 'secondary'}>\n\t\t\t\t\t\t\t{subject}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Row>\n\t\t\t\t<IconButton\n\t\t\t\t\tdata-testid=\"PreviewPanelCloseIcon\"\n\t\t\t\t\ticon=\"CloseOutline\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\treplaceHistoryCallback();\n\t\t\t\t\t}}\n\t\t\t\t\tcustomSize={{\n\t\t\t\t\t\ticonSize: 'large',\n\t\t\t\t\t\tpaddingSize: 'small'\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t\t<Divider />\n\t\t</>\n\t);\n};\n\nexport default PreviewPanelHeader;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { includes, uniqBy } from 'lodash';\nimport { DefaultTheme } from 'styled-components';\n\nimport { calcColor, getFileExtension } from '../../../../../commons/utilities';\nimport type {\n\tAttachmentPart,\n\tEditorAttachmentFiles,\n\tGetAttachmentsDownloadLinkProps,\n\tIconColors\n} from '../../../../../types';\n\nexport const getLocationOrigin = (): string => window.location.origin;\n\ntype GetAttachmentsLinkProps = {\n\tmessageId: string;\n\tmessageSubject: string;\n\tattachments: Array<string | undefined>;\n\tattachmentType: string | undefined;\n};\n\nexport const getAttachmentsLink = ({\n\tmessageId,\n\tmessageSubject,\n\tattachments,\n\tattachmentType\n}: GetAttachmentsLinkProps): string => {\n\tif (attachments.length > 1) {\n\t\treturn `${getLocationOrigin()}/service/home/~/?auth=co&id=${messageId}&filename=${messageSubject}&charset=UTF-8&part=${attachments.join(\n\t\t\t','\n\t\t)}&disp=a&fmt=zip`;\n\t}\n\tif (includes(['image/gif', 'image/png', 'image/jpeg', 'image/jpg'], attachmentType)) {\n\t\treturn `${getLocationOrigin()}/service/preview/image/${messageId}/${\n\t\t\tattachments[0]\n\t\t}/0x0/?quality=high`;\n\t}\n\tif (includes(['application/pdf'], attachmentType)) {\n\t\treturn `${getLocationOrigin()}/service/preview/pdf/${messageId}/${\n\t\t\tattachments[0]\n\t\t}/?first_page=1`;\n\t}\n\tif (\n\t\tincludes(\n\t\t\t[\n\t\t\t\t'text/csv',\n\t\t\t\t'text/plain',\n\t\t\t\t'application/msword',\n\t\t\t\t'application/vnd.ms-excel',\n\t\t\t\t'application/vnd.ms-powerpoint',\n\t\t\t\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t\t'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t\t\t\t'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t\t'application/vnd.oasis.opendocument.presentation',\n\t\t\t\t'application/vnd.oasis.opendocument.text'\n\t\t\t],\n\t\t\tattachmentType\n\t\t)\n\t) {\n\t\treturn `${getLocationOrigin()}/service/preview/document/${messageId}/${attachments.join(',')}`;\n\t}\n\treturn `${getLocationOrigin()}/service/home/~/?auth=co&id=${messageId}&part=${attachments.join(\n\t\t','\n\t)}&disp=a`;\n};\n\nexport const getAttachmentsDownloadLink = ({\n\tmessageId,\n\tmessageSubject,\n\tattachments\n}: GetAttachmentsDownloadLinkProps): string => {\n\tif (attachments?.length > 1) {\n\t\treturn `${getLocationOrigin()}/service/home/~/?auth=co&id=${messageId}&filename=${messageSubject}&charset=UTF-8&part=${attachments.join(\n\t\t\t','\n\t\t)}&disp=a&fmt=zip`;\n\t}\n\treturn `${getLocationOrigin()}/service/home/~/?auth=co&id=${messageId}&part=${attachments?.join(\n\t\t','\n\t)}&disp=a`;\n};\n\nexport const getAttachmentIconColors = ({\n\tattachments,\n\ttheme\n}: {\n\tattachments: AttachmentPart[] | EditorAttachmentFiles[];\n\ttheme: DefaultTheme;\n}): IconColors =>\n\tuniqBy(\n\t\tattachments.map((att: AttachmentPart | EditorAttachmentFiles) => {\n\t\t\tconst fileExtn = getFileExtension(att).value;\n\t\t\tconst color = calcColor(att.contentType ?? '', theme);\n\n\t\t\treturn {\n\t\t\t\textension: fileExtn,\n\t\t\t\tcolor\n\t\t\t};\n\t\t}),\n\t\t'extension'\n\t);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useContext } from 'react';\nimport type { ExtraWindowsCreationResult } from '../../../types';\nimport { ExtraWindowContext } from './extra-window';\nimport { useExtraWindowsManager } from './extra-window-manager';\n\n/**\n * Tells if the calling component is inside an ExtraWindow and\n * returns the relative window creation data.\n */\nexport const useExtraWindow = (): {\n\tisInsideExtraWindow: boolean;\n\twindowData?: ExtraWindowsCreationResult;\n} => {\n\tconst { getWindow } = useExtraWindowsManager();\n\n\tconst windowContext = useContext(ExtraWindowContext);\n\tif (!windowContext) {\n\t\treturn { isInsideExtraWindow: false };\n\t}\n\n\treturn {\n\t\twindowData: getWindow && getWindow({ windowId: windowContext.windowId }),\n\t\tisInsideExtraWindow: true\n\t};\n};\n"],"names":["P_TAG","BR_TAG","DIV_TAG","SCRIPT_TAG","STYLE_TAG","convertHtmlToPlainText","html","result","replace","DOMParser","parseFromString","body","textContent","contentType","NON_WHITESPACE_REGEX","TRIM_REGEX","COMPRESS_REGEX","SPLIT_REGEX","ORIG_EMAIL_REGEX","ORIG_DATE_REGEX","ORIG_INTRO_DE_REGEX","RegExp","ORIG_INTRO_REGEX","MSG_REGEXES","type","LineType","ORIG_QUOTED","regex","ORIG_SEP_STRONG","ORIG_HEADER","join","ORIG_LINE","SCRIPT_REGEX","IGNORE_NODE","br","script","select","style","flatten","node","list","nodeName","toLowerCase","push","children","childNodes","i","length","getOriginalHtmlContent","text","htmlNode","document","createElement","innerHTML","test","done","nodeList","ln","results","count","el","prevEl","prevType","sepNode","nodeType","normalize","checkNode","ORIG_UNKNOWN","nodeValue","str","j","el1","getLineType","trim","ORIG_WROTE_STRONG","prune","content","id","HTML_SEP_ID","size","width","align","checkNodeContent","className","testLine","msgTest","m","match","verb","points","ORIG_WROTE_WEAK","compress","space","trimRe","compressRe","clipNode","p","parentNode","lastChild","removeChild","getOriginalContent","isHtml","lines","split","curType","curBlock","isMerged","unknownBlock","isBugzilla","line","indexOf","nextLine","block","first","second","originalText","getTextFromBlock","third","originalThirdText","NOTES_SEPARATOR","foundSep","afterSep","mixed","endsWithUnknown","checkInlineWrote","concat","replaceDuplicateDiv","plainTextToHTML","getQuotedTextOnly","message","isHtmlContent","originalContent","parser","htmlDoc","htmlBody","foundIndex","name","index","filter","v","orderBy","quotedText","splice","forEach","item","div","setAttribute","appendChild","zimbraQuoted","getElementsByClassName","originalHTML","bodyHTML","slice","undefined","htmlEncode","includeSpaces","toString","_CI_REGEX","_CI_SRC_REGEX","LINK_REGEX","LINE_BREAK_REGEX","BannerContainer","styled","Container","withConfig","displayName","componentId","props","theme","palette","warning","regular","StyledMultiBtn","MultiButton","transparent","gray6","focus","_TextMessageRenderer","showQuotedText","setShowQuotedText","useState","orignalText","quoted","contentToDisplay","useMemo","convertedHTML","replaceLinkToAnchor","url","wrap","anchor","href","startsWith","target","React","Text","overflow","color","fontFamily","dangerouslySetInnerHTML","__html","Row","mainAlignment","crossAlignment","padding","top","Button","label","t","icon","onClick","_HtmlMessageRenderer","msgId","parts","participants","divRef","useRef","iframeRef","settingsPref","useUserSettings","prefs","from","ParticipantRole","FROM","address","getNoIdentityPlaceholder","domain","substring","lastIndexOf","showExternalImage","setShowExternalImage","displayBanner","setDisplayBanner","hasExternalImages","images","getElementsByTagName","some","hasAttribute","showBanner","isAvailableInTrusteeList","zimbraPrefMailTrustedSenderList","useEffect","calculateHeight","isNull","current","height","contentDocument","scrollHeight","saveTrustee","useCallback","trustee","trusteeAddress","isArray","editSettings","then","res","includes","items","Trans","i18nKey","defaults","values","showImage","useLayoutEffect","open","write","close","styleTag","head","append","imgMap","reduce","r","ci","exec","getAttribute","src","part","resizeObserver","ResizeObserver","observe","disconnect","multiBtnLabel","ref","orientation","all","background","display","flexGrow","flexDirection","Padding","right","Icon","left","dropdownProps","maxWidth","IconButton","customSize","iconSize","paddingSize","title","onLoad","border","EmptyBody","bottom","MailMessageRenderer","memo","fragment","getParticipantHeader","participantsList","map","f","fullName","getHeader","msg","subject","to","cc","bcc","replyTo","msgTime","moment","date","format","hasAttachments","attachments","getSubject","getAttachments","filename","getContentForPrint","messages","conversations","isMsg","conv","filteredMessages","conversation","ss","conversationMessage","findAttachments","isEmpty","getBodyWrapper","getUserAccount","NO_ACCOUNT_NAME","window","location","hostname","getCompleteHTML","NO_SIGNATURE_ID","NO_SIGNATURE_LABEL","PLAINTEXT_SIGNATURE_REGEX","SIGNATURE_PRE_SEP","PLAINTEXT_SEP","getMailBodyWithSignature","signatureId","signatureValue","getSignatureValue","account","getSignature","fallbackOnFirst","signatures","signatureArray","value","description","signature","_content","getSignatures","find","plainSignatureValue","richText","replaceSignatureOnHtmlBody","newSignature","doc","signatureWrappers","SIGNATURE_CLASS","signatureWrapper","separator","getElementById","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","documentElement","plainText","replaceSignatureOnPlainTextBody","quotedTextSeparatorPos","sendMsg","createAsyncThunk","async","rejectWithValue","dispatch","toSend","generateMailRequest","getParticipantsFromMessage","getAddressOwnerAccount","resp","soapFetch","_jsns","e","console","error","response","Fault","getMsg","cid","getConv","conversationId","sendMsgFromEditor","editor","identityId","createSoapSendMsgRequestFromEditor","identity","getIdentityDescriptor","ownerAccount","retrieveAttachmentsType","original","disposition","acc","mid","requiresSmartLinkConversion","changeParticipantRole","previousRole","newRole","c","changeTypeOfParticipants","retrieveReplyTo","REPLY_TO","parent","FOLDERS","SENT","TO","retrieveTO","retrieveALL","replySenderAccountName","toEmails","fromEmails","replyToParticipants","isSentByMe","retrieveCCForEditNew","CARBON_COPY","retrieveCC","ccEmails","finalTo","reducedCcEmails","x","retrieveBCC","BLIND_CARBON_COPY","findBodyPart","msgPart","acc2","extractBody","textArr","htmlArr","replaceAll","generateReplyText","mail","labels","headingFrom","headingTo","headingCc","textToRetArray","sent","subtreeContainsHtmlParts","did","isDraft","attach","mp","su","a","d","ct","getHtmlWithPreAppliedStyled","font","fontSize","getMP","data","contentWithBodyParts","replaceLinkWithParts","inline","newSource","findCidFromPart","generateRequest","zimbraPrefHtmlEditorDefaultFontFamily","zimbraPrefHtmlEditorDefaultFontSize","zimbraPrefHtmlEditorDefaultFontColor","fromAddress","recipients","sender","email","firstName","requestReadReceipt","READ_RECEIPT_NOTIFICATION","autoSendTime","rt","origid","REPLY_REGEX","FORWARD_REGEX","generateReplyAndReplyAllMsgEditor","messagesStoreDispatch","originalMessage","action","editorId","uuid","savedInlineAttachments","filterSavedInlineAttachment","buildSavedAttachments","folderRoots","getRootsMap","getRecipientReplyIdentity","defaultIdentity","getDefaultIdentity","forwardReplySignatureId","textWithSignature","textWithSignatureRepliesForwards","replaceCidUrlWithServiceUrl","accountName","isRichText","getUserSettings","zimbraPrefComposeFormat","toParticipants","EditViewActions","REPLY","unsavedAttachments","savedAttachments","isUrgent","urgent","REPLY_ALL","replyType","originalId","totalSmartLinksSize","draftSaveAllowedStatus","computeDraftSaveAllowedStatus","sendAllowedStatus","computeSendAllowedStatus","generateEditor","compositionData","RESUME","Error","getEditor","NEW","defaultSignatureId","generateNewMessageEditor","FORWARD","generateForwardMsgEditor","EDIT_AS_DRAFT","generateEditAsDraftEditor","fromParticipant","getFromParticipantFromMessage","fromIdentity","getIdentityFromParticipant","EDIT_AS_NEW","generateEditAsNewEditor","MAIL_TO","COMPOSE","PREFILL_COMPOSE","generateIntegratedNewEditor","abstractParticipants","abstractParticipant","isParticipant","participant","normalizeParticipant","aid","isInline","useEditorSubject","debouncedSaveDraft","useSaveDraftFromEditor","useEditorsStore","state","editors","setter","setSubject","val","useEditorText","setText","resetText","useEditorAutoSendTime","setAutoSendTime","useEditorDid","setDid","useEditorIsRichText","setIsRichText","useEditorToRecipients","setToRecipients","toRecipients","computeAndUpdateEditorStatus","useEditorCcRecipients","setCcRecipients","ccRecipients","useEditorBccRecipients","setBccRecipients","bccRecipients","useEditorIdentityId","setIdentityId","useEditorIsUrgent","setIsUrgent","useEditorRequestReadReceipt","setRequestReadReceipt","useEditorSend","status","sendInvoker","options","sendFromEditor","warn","allowed","cancelableTimer","createCancelableTimer","secondsDelay","onTick","onCancel","intervalId","countdown","cancel","clearInterval","promise","Promise","resolve","setInterval","onTimerTick","remain","onCountdownTick","onTimerCanceled","getState","setSendProcessStatus","abortReason","meta","requestStatus","errorDescription","payload","reason","onError","onComplete","catch","err","send","useEditorAttachments","notifyUploadError","useNotifyUploadError","createSnackbar","useUiUtilities","file","key","defaultValue","autoHideTimeout","TIMEOUTS","SNACKBAR_DEFAULT_TIMEOUT","unsavedStandardAttachments","reject","savedStandardAttachments","removeStandardAttachmentsInvoker","clearStandardAttachments","removeSavedAttachmentsInvoker","removeSavedAttachment","removeUnsavedAttachmentsInvoker","removeUnsavedAttachment","toggleSmartLinkInvoker","toggleSmartLink","addGenericUnsavedAttachments","files","areInline","callbacks","uploadsResult","uploadAttachments","runningUploads","completedUploads","failedUploads","removeRunningUpload","uploadId","removedUploadId","remove","runningUploadId","onUploadsEnd","customizedOptions","onUploadComplete","attachmentId","onUploadError","uploadsInfo","uploadAttachment","abortController","AbortController","axios","post","headers","convertToDecimal","onUploadProgress","progressEvent","loaded","total","percent","Math","round","signal","txt","Function","uploadInfo","percentage","setUploadStatus","setAttachmentUploadStatus","progress","setUploadCompleted","setAttachmentUploadCompleted","completedUploadsId","failedUploadsId","addUnsavedAttachments","attachment","uploadStatus","uploadAbortController","contentId","addAndSaveGenericAttachments","customizedCallbacks","uploadedUnsavedAttachments","filterUnsavedAttachmentsByUploadId","uploadedContentIds","uploadedUnsavedAttachment","onSaveComplete","hasStandardAttachments","partName","removeStandardAttachments","addStandardAttachments","addInlineAttachments","omit","savedContentIds","inlineInfo","getSavedInlineAttachmentsByContentId","savedInlineAttachment","cidUrl","composeCidUrlFromContentId","downloadServiceUrl","composeAttachmentDownloadUrl","addUploadedAttachment","fileName","addAndSaveUploadedAttachment","unsavedAttachment","setDraftSaveAllowedStatus","setSendAllowedStatus","addEditor","deleteEditor","useTranslation","saveDraftFromEditor","handleError","setDraftSaveProcessStatus","saveDraftV3","Detail","mailMessage","normalizeMailMessageFromSoap","setSize","removeUnsavedAttachments","setSavedAttachments","setTotalSmartLinksSize","lastSaveTimestamp","Date","saveDraftAsyncThunk","delay","getDraftSaveDelay","debounce","immediateSaveDraft","useEditorDraftSave","immediateInvoker","saveDraft","useEditorDraftSaveProcessStatus","draftSaveProcessStatus","getUnsavedAttachmentIndex","unsavedAttachmentIndex","findIndex","maximumDraftSaveDelay","DRAFT_SAVE_DELAY","autoSaveDraftSettings","zimbraPrefAutoSaveDraftInterval","min","parseInt","create","set","produce","currentEditor","setOriginalId","setRecipients","sendProcessStatus","addUnsavedAttachment","addSavedAttachment","filterUnsavedInlineAttachment","setMessagesStoreDispatch","DeleteConvConfirm","selectedIDs","isMessageView","deselectAll","onClose","useAppDispatch","onConfirmConvDelete","msgAction","operation","ids","convAction","hideButton","ModalHeader","ModalFooter","onConfirm","errorPage","productLogo","logo","RedirectMessageAction","ContactInput","integrationAvailable","useIntegratedComponent","contacts","setContacts","onChipInputChange","onContactChange","users","disableRedirect","onRedirectError","REDIRECT","redirectMessageAction","placeholder","onChange","disablePortal","ChipInput","Divider","disabled","getOrganizer","setMsgRead","folderId","shouldReplaceHistory","MessageActionsDescriptors","MARK_AS_UNREAD","MARK_AS_READ","ev","preventDefault","replaceHistory","setMsgFlag","UNFLAG","FLAG","useSetMsgAsSpam","setAsSpam","notCanceled","MARK_AS_NOT_SPAM","MARK_AS_SPAM","infoSnackbar","SET_AS_SPAM","actionLabel","onActionClick","setTimeout","previewOnSeparatedWindow","messageId","createWindow","messageActions","returnComponent","MessagePreviewPanel","closeOnUnmount","previewMessageOnSeparatedWindow","PREVIEW_ON_SEPARATED_WINDOW","printMsg","PRINT","printWindow","getMsgsForPrint","showOriginalMsg","SHOW_SOURCE","useMoveMsgToTrash","restoreMessage","useRestoreMessage","closeEditor","dispatchMsgMove","INBOX","MOVE_TO_TRASH","useDeleteMsg","createModal","DELETE","closeModal","confirmLabel","onSecondaryAction","dismissLabel","StoreProvider","replyMsg","addBoard","MAILS_ROUTE","replyAllMsg","forwardMsg","editAsNewMsg","useEditDraft","EDIT_DRAFT","isScheduled","showCloseIcon","sendDraft","SEND","sendDraftFromPreview","generateEditorFunction","noop","useRedirectMsg","maxHeight","RedirectAction","useMoveMessageToFolder","isRestore","RESTORE","MOVE","MoveConvMessage","useDeleteMessagePermanently","DELETE_PERMANENTLY","downloadEml","DOWNLOAD_EML","link","download","getLocationOrigin","click","useCreateAppointment","useSnackbar","openAppointmentComposer","CREATE_APPOINTMENT","attendees","matchIdentity","getAttendees","optionalAttendees","getOptionalsAttendees","rooFolder","getRoot","calendar","isLink","calendarId","CALENDAR","owner","getIdentitiesDescriptors","identityDescriptor","fromDisplay","identityName","getSenderByOwner","isComplete","getMsgCall","mailHtmlBody","getFolderParentId","isConversation","findMessageActionById","actions","generateSmartLinkHtml","smartLink","publicUrl","truncate","omission","updateEditorWithSmartLinks","attachmentsToConvert","draftId","createSmartLinksSoapAPI","textWithLinks","smartLinks","addSmartLinksToText","isInsideExtraWindow","useExtraWindow","EXTRA_WINDOW_ACTION_ID","uniqBy","useAppSelector","selectMessage","PreviewPanelHeader","overflowY","horizontal","MailPreview","expanded","isAlone","DeleteAttachmentModal","onDownloadAndDelete","onDeleteAttachment","onDeleteConfirm","onDownloadAndDeleteConfirm","textAlign","secondaryBtnType","secondaryAction","secondaryLabel","secondaryColor","paddingTop","humanFileSize","inputSize","floor","log","toFixed","previewType","endsWith","UNSUPPORTED_PDF_ATTACHMENT_PARTNAME_PATTERN","AttachmentHoverBarContainer","AttachmentContainer","attrs","primary","sizes","small","getColor","AttachmentLink","AttachmentExtension","borderRadius","Attachment","downloadlink","isExternalMessage","att","openEmlPreview","createPreview","useContext","PreviewsManagerContext","extension","getFileExtension","inputRef","inputRef2","pType","createContact","isAvailable","useIntegratedFunction","downloadAttachment","browserPdfPreview","isEML","actionTooltipText","deleteAttachments","removeAttachment","confirmAction","nodes","destinationFolderId","onCreateContact","isAValidDestination","permissions","can_write_file","actionTarget","disabledTooltip","allowFiles","allowFolders","isValidSelection","canSelectOpenedFolder","maxSelection","uploadIntegration","isUploadIntegrationAvailable","getIntegratedFunction","showEMLPreview","preview","closeAction","tooltipLabel","useTheme","sizeLabel","backgroundColor","infoBanner","attachmentExtensionContent","attachItemColor","useAttachmentIconColor","attachmentExtensionColor","Tooltip","takeAvailableSpace","mimeType","rel","AttachmentsBlock","setExpanded","cd","attachmentsCount","attachmentsParts","actionsDownloadLink","getAttachmentsDownloadLink","messageSubject","promises","copyToFiles","allSettled","allSuccess","getLabel","allFails","getSaveToFilesLink","Link","paddingLeft","attachmentsLabel","defaultValue_one","defaultValue_other","getAttachmentsLink","attachmentType","iconColors","getAttachmentIconColors","cursor","capitalizeEveryWord","string","word","capitalize","ContactNameChip","paddingRight","lineHeight","gap","contact","capitalizedFullName","capitalizedName","capitalizedText","generateChipName","Chip","updatedContact","mailToSharedFunction","copyEmailToClipboard","navigator","clipboard","writeText","ContactSubText","ContactName","showOverflow","accounts","useUserAccounts","toRef","isOverflow","setIsOverflow","clientWidth","rowOverflow","scrollWidth","participantToString","MessageContactList","contactListExpandCB","setOpen","toggleOpen","o","folders","useFoldersMap","toContacts","ccContacts","bccContacts","textReadValues","read","weight","badge","messageFolder","labelTo","labelCc","labelBcc","showBadge","toggleExpandButtonLabel","containerRef","badgeWidth","setBadgeWidth","ContactNames","Badge","getFolderTranslatedName","folderName","StyledText","isRead","fonts","bold","OnBehalfOfDisplayer","compProps","senderContact","mainContact","mainContactFullName","mainContactAddress","behalfOfLabel","TextWithTooltip","MailMsgPreviewActions","useParams","actionContainerRef","ThemeContext","maxActions","getFolderIdParts","TRASH","DRAFTS","visibleActionsCount","calculateVisibleActionsCount","useVisibleActionsCount","args","setVisibleActionsCount","iconWidth","numberLimit","parseFloat","large","evaluation","valueToSet","addEventListener","removeEventListener","firstActions","secondActions","difference","onIconClick","stopPropagation","onDropdownClose","_maxWidth","_minWidth","flexBasis","whiteSpace","minWidth","Dropdown","forceOpen","HoverContainer","isExpanded","TagChip","extrasmall","fallbackContact","PreviewHeader","textRef","_setMinWidth","isContactListExpand","setIsContactListExpand","_onClick","isDefaultPrevented","contactListExpand","hasAttachment","flagged","tagsFromStore","useTags","tags","ZIMBRA_STANDARD_COLORS","hex","customComponent","tn","tagNotInList","tagIcon","tagIconColor","tagLabel","showDropdown","setShowDropdown","isTagInStore","useTagExist","showMultiTagIcon","showTagIcon","every","triggerSearch","tagToSearch","runSearch","avatarBackground","avatarIcon","hasAvatar","isGeneric","isQueryFilter","scheduledTime","time","Avatar","colorLabel","vertical","getTimeLabel","tag","MessageContactsList","ReadReceiptModal","readReceiptSetting","flag","onNotify","sendDeliveryReport","isReadReceiptRequested","notifyLabel","messageLineOne","messageLineTwo","CustomModal","LabelRow","acceptSharedCalendarReply","mountSharedCalendar","requests","mountSharedCalendarRequest","calendarName","zid","rid","view","fetch","method","json","Body","Reason","sharedCalendarReplyFunc","sharedCalendarName","grantee","customMessage","role","allowedActions","isAccepted","displayMessage","ResponseActions","setCustomMessage","notifyOrganizer","setNotifyOrganizer","setCalendarName","selectedColor","setSelectedColor","calFolders","useFoldersByView","FOLDER_VIEW","appointment","showError","accept","useAccept","moveInviteToTrashFunc","useMoveInviteToTrashFunc","res2","mountSharedCalendarFunc","acceptShare","decline","useDecline","declined","Checkbox","Input","hasError","ColorSelect","defaultColor","marginBottom","InviteContainer","gray2","SharedCalendarResponse","sharedContent","mailMsg","onLoadChange","rights","shareCalendarRoleOptions","ShareCalendarRoleOptions","findLabel","notes","Number","folderType","folderIcon","sharedContentItem","showMoreInfo","setShowMoreInfo","Collapse","crossSize","InviteResponse","getIntegratedComponent","MailContent","isMailPreviewOpen","showModal","setShowModal","moveToTrash","showAppointmentInvite","isInvite","invite","comp","readReceiptRequester","zimbraPrefMailSendReadReceipts","showReadReceiptModal","showShareInvite","shr","onModalClose","loggedInUser","isAttendee","or","inviteId","participationStatus","apptId","replies","reply","ptst","getAttachmentParts","disableTransition","SharedInviteReply","MailPreviewBlock","markAsNotSpam","SPAM","mailContainerRef","useGlobalExtraWindowManager","parentMessageId","attachmentName","emlMessage","createWindowParams","replaceHistoryCallback","minHeight","origin","calcColor","getWindow","useExtraWindowsManager","windowContext","ExtraWindowContext","windowData","windowId"],"sourceRoot":""}