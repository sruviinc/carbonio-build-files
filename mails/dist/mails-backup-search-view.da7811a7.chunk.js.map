{"version":3,"file":"mails-backup-search-view.da7811a7.chunk.js","mappings":"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","sources":["webpack://carbonio-mails-ui/./src/carbonio-ui-commons/components/list/list-item.tsx","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/components/list/list.tsx","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/components/modals/modal-footer.tsx","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/components/modals/modal-header.tsx","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/helpers/api-wrapper.ts","webpack://carbonio-mails-ui/./src/hooks/use-selection.tsx","webpack://carbonio-mails-ui/./src/views/app/folder-panel/parts/hover-bar-container.tsx","webpack://carbonio-mails-ui/./src/views/app/folder-panel/parts/hover-container.tsx","webpack://carbonio-mails-ui/./src/views/backup-search/parts/backup-search-header.tsx","webpack://carbonio-mails-ui/./src/views/backup-search/parts/backup-search-message-list-item.tsx","webpack://carbonio-mails-ui/./src/views/backup-search/parts/backup-search-recovery-modal.tsx","webpack://carbonio-mails-ui/./src/views/backup-search/parts/backup-search-list.tsx","webpack://carbonio-mails-ui/./src/api/restore-messages.ts","webpack://carbonio-mails-ui/./src/views/backup-search/parts/backup-search-panel-text-line.tsx","webpack://carbonio-mails-ui/./src/views/backup-search/parts/backup-search-panel.tsx","webpack://carbonio-mails-ui/./src/views/backup-search/backup-search-view.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { getColor, ListItem } from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\nconst CustomListItemHelper = styled(ListItem)``;\n\nexport const CustomListItem = styled(CustomListItemHelper).attrs(\n\t({\n\t\tbackground = 'gray6',\n\t\tactive,\n\t\tactiveBackground = 'highlight',\n\t\tselected,\n\t\tselectedBackground = 'gray5',\n\t\ttheme\n\t}) => ({\n\t\t$baseBackgroundColor: getColor(\n\t\t\t(active && activeBackground) || (selected && selectedBackground) || background,\n\t\t\ttheme\n\t\t),\n\t\t$focusBackgroundColor: getColor(`${(active && activeBackground) || 'gray6'}.focus`, theme)\n\t})\n)`\n\ttransition: none;\n\t&:focus,\n\t&:active {\n\t\tbackground: ${({ $focusBackgroundColor }): string => $focusBackgroundColor};\n\t\t${CustomListItemHelper} {\n\t\t\tbackground: ${({ $focusBackgroundColor }): string => $focusBackgroundColor};\n\t\t}\n\t}\n\n\t&:hover {\n\t\tbackground: ${({ $baseBackgroundColor }): string => $baseBackgroundColor};\n\t\t&:focus,\n\t\t&:active {\n\t\t\tbackground: ${({ $focusBackgroundColor }): string => $focusBackgroundColor};\n\t\t}\n\t}\n`;\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { ListV2 } from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\nexport const CustomList = styled(ListV2)`\n\tpadding-bottom: 0.25rem;\n\tmin-height: 0;\n`;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable import/extensions */\n\nimport React, { FC, ReactElement, useMemo } from 'react';\n\nimport { Container, Button, Padding, Divider, Tooltip } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport type { ModalFooterProps } from '../../types';\n\nconst ModalFooter: FC<ModalFooterProps> = ({\n\tmainAlignment = 'center',\n\tcrossAlignment = 'center',\n\tonConfirm,\n\tlabel,\n\tsecondaryAction,\n\tsecondaryLabel,\n\tprimaryBtnType = 'default',\n\tsecondaryBtnType = 'default',\n\tdisabled,\n\tsecondaryDisabled,\n\tbackground = 'primary',\n\tsecondarybackground,\n\tcolor = 'primary',\n\tsecondaryColor = 'secondary',\n\tsize = 'medium',\n\tshowDivider = true,\n\ttooltip,\n\tsecondaryTooltip,\n\tpaddingTop = 'medium',\n\tadditionalAction,\n\tadditionalBtnType = 'outlined',\n\tadditionalColor = 'secondary',\n\tadditionalLabel,\n\tprimaryButtonIcon\n}): ReactElement => {\n\tconst [t] = useTranslation();\n\n\tconst cancelLabel = useMemo(() => t('label.cancel', 'cancel'), [t]);\n\n\treturn (\n\t\t<Container\n\t\t\tmainAlignment={mainAlignment}\n\t\t\tcrossAlignment={crossAlignment}\n\t\t\tpadding={{\n\t\t\t\ttop: paddingTop\n\t\t\t}}\n\t\t>\n\t\t\t{showDivider && (\n\t\t\t\t<Container\n\t\t\t\t\tpadding={{ top: 'small', bottom: 'small' }}\n\t\t\t\t\tmainAlignment=\"center\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\theight=\"fit\"\n\t\t\t\t>\n\t\t\t\t\t<Divider />\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"space-between\">\n\t\t\t\t{additionalAction && (\n\t\t\t\t\t<Container orientation=\"horizontal\" width=\"fit\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor={additionalColor}\n\t\t\t\t\t\t\ttype={additionalBtnType}\n\t\t\t\t\t\t\tonClick={additionalAction}\n\t\t\t\t\t\t\tlabel={additionalLabel ?? cancelLabel}\n\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Padding horizontal=\"extrasmall\" />\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\t\t\t\t<Container\n\t\t\t\t\tpadding={{ top: 'small', bottom: 'small' }}\n\t\t\t\t\tmainAlignment=\"flex-end\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\theight=\"fit\"\n\t\t\t\t>\n\t\t\t\t\t{secondaryAction && (\n\t\t\t\t\t\t<Padding right=\"small\" vertical=\"small\">\n\t\t\t\t\t\t\t{secondaryTooltip ? (\n\t\t\t\t\t\t\t\t<Tooltip label={secondaryTooltip} placement=\"top\" maxWidth=\"fit\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={secondarybackground}\n\t\t\t\t\t\t\t\t\t\tcolor={secondaryColor}\n\t\t\t\t\t\t\t\t\t\ttype={secondaryBtnType}\n\t\t\t\t\t\t\t\t\t\tonClick={secondaryAction}\n\t\t\t\t\t\t\t\t\t\tlabel={secondaryLabel ?? cancelLabel}\n\t\t\t\t\t\t\t\t\t\tdisabled={secondaryDisabled}\n\t\t\t\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tbackgroundColor={secondarybackground}\n\t\t\t\t\t\t\t\t\tcolor={secondaryColor}\n\t\t\t\t\t\t\t\t\ttype={secondaryBtnType}\n\t\t\t\t\t\t\t\t\tonClick={secondaryAction}\n\t\t\t\t\t\t\t\t\tlabel={secondaryLabel ?? cancelLabel}\n\t\t\t\t\t\t\t\t\tdisabled={secondaryDisabled}\n\t\t\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Padding vertical=\"small\">\n\t\t\t\t\t\t{tooltip ? (\n\t\t\t\t\t\t\t<Tooltip label={tooltip} placement=\"top\" maxWidth=\"fit\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\tonClick={onConfirm}\n\t\t\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\t\t\ttype={primaryBtnType}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\tbackgroundColor={color || background}\n\t\t\t\t\t\t\t\t\ticon={primaryButtonIcon}\n\t\t\t\t\t\t\t\t\ticonPlacement=\"left\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tonClick={onConfirm}\n\t\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\t\ttype={primaryBtnType}\n\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\tbackgroundColor={color || background}\n\t\t\t\t\t\t\t\ticon={primaryButtonIcon}\n\t\t\t\t\t\t\t\ticonPlacement=\"left\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Padding>\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\nexport default ModalFooter;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC } from 'react';\n\nimport {\n\tDivider,\n\tText,\n\tRow,\n\tIconButton,\n\tPadding,\n\tContainer\n} from '@zextras/carbonio-design-system';\n\nconst ModalHeader: FC<{ title: string; onClose?: () => void; showCloseIcon?: boolean }> = ({\n\ttitle,\n\tonClose,\n\tshowCloseIcon = true\n}) => (\n\t<Container mainAlignment=\"space-between\" width=\"100%\">\n\t\t<Row takeAvailableSpace mainAlignment=\"space-between\" width=\"100%\">\n\t\t\t<Row width=\"calc(100% - 1.5rem)\" takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t<Text weight=\"bold\" size=\"large\">\n\t\t\t\t\t{title}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t{onClose && showCloseIcon && (\n\t\t\t\t<Row mainAlignment=\"flex-start\">\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tstyle={{ padding: 0, margin: 0 }}\n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\ticon=\"CloseOutline\"\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</Row>\n\t\t<Padding top=\"medium\" />\n\t\t<Divider />\n\t\t<Padding bottom=\"medium\" />\n\t</Container>\n);\n\nexport default ModalHeader;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\ntype ErrorResponse<K> = { error: K };\n\ntype DataResponse<T> = { data: T };\n\nexport async function apiWrapper<T, K>(\n\tpromise: Promise<Response>\n): Promise<DataResponse<T> | ErrorResponse<K>> {\n\treturn Promise.allSettled([promise]).then(async ([result]) => {\n\t\tif (result.status === 'fulfilled') {\n\t\t\tconst responseBody = await result.value.text();\n\t\t\treturn responseBody ? { data: JSON.parse(responseBody) as T } : { data: {} as T };\n\t\t}\n\t\treturn { error: result.reason };\n\t});\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo, useRef, useState } from 'react';\n\nimport { map, omit } from 'lodash';\n\nimport type { BackupSearchMessage, Conversation, IncompleteMessage } from '../types';\n\ntype UseSelectionProps = {\n\tcurrentFolderId: string;\n\tcount: number;\n\titems?: Array<IncompleteMessage | Conversation | BackupSearchMessage>;\n\tsetCount: (value: number | ((prevState: number) => number)) => void;\n};\n\ntype UseSelectionReturnType = {\n\tselected: Record<string, boolean>;\n\tisSelectModeOn: boolean;\n\tsetIsSelectModeOn: (value: boolean | ((prev: boolean) => boolean)) => void;\n\ttoggle: (id: string) => void;\n\tdeselectAll: () => void;\n\tselectAll: () => void;\n\tisAllSelected: boolean;\n\tselectAllModeOff: () => void;\n};\n\nexport const useSelection = ({\n\tsetCount,\n\tcount,\n\titems = []\n}: UseSelectionProps): UseSelectionReturnType => {\n\tconst selected = useRef<Record<string, boolean>>({});\n\tconst [isSelectModeOn, setIsSelectModeOn] = useState(false);\n\tconst isAllSelected = useMemo(() => count === items.length, [count, items.length]);\n\n\tconst selectItem = useCallback(\n\t\t(id) => {\n\t\t\tif (selected.current[id]) {\n\t\t\t\tselected.current = omit(selected.current, [id]);\n\t\t\t\tsetCount((prev: number) => prev - 1);\n\t\t\t\tif (count - 1 === 0) {\n\t\t\t\t\tsetIsSelectModeOn(false);\n\t\t\t\t} else if (count === 0) {\n\t\t\t\t\tsetIsSelectModeOn(true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tselected.current = { ...selected.current, [id]: true };\n\t\t\t\tsetCount((prev: number) => prev + 1);\n\t\t\t\tsetIsSelectModeOn(true);\n\t\t\t}\n\t\t},\n\t\t[count, setCount]\n\t);\n\n\tconst deselectAll = useCallback(() => {\n\t\tselected.current = {};\n\t\tsetCount(0);\n\t\tsetIsSelectModeOn(false);\n\t}, [setCount, setIsSelectModeOn]);\n\n\tconst selectAll = useCallback(() => {\n\t\tmap(items, (item) => {\n\t\t\tif (!selected.current[item.id]) {\n\t\t\t\tselectItem(item.id);\n\t\t\t}\n\t\t});\n\t}, [items, selectItem, selected]);\n\n\tconst selectAllModeOff = useCallback(() => {\n\t\tselected.current = {};\n\t\tsetCount(0);\n\t\tsetTimeout(() => {\n\t\t\tsetIsSelectModeOn(true);\n\t\t});\n\t}, [setCount]);\n\n\treturn {\n\t\tselected: selected.current,\n\t\ttoggle: selectItem,\n\t\tdeselectAll,\n\t\tisSelectModeOn,\n\t\tsetIsSelectModeOn,\n\t\tselectAll,\n\t\tisAllSelected,\n\t\tselectAllModeOff\n\t};\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport styled, { DefaultTheme } from 'styled-components';\n\ntype BackgroundAndThemeProps = {\n\tbackground: keyof DefaultTheme['palette'];\n\ttheme: DefaultTheme;\n};\n\nexport const HoverBarContainer = styled(Container)<{ background: keyof DefaultTheme['palette'] }>`\n\ttop: 0;\n\tright: 0;\n\tdisplay: none;\n\tposition: absolute;\n\tbackground: linear-gradient(\n\t\tto right,\n\t\ttransparent,\n\t\t${({ background, theme }: BackgroundAndThemeProps): string => theme.palette[background].hover}\n\t);\n\twidth: calc(100% - 4rem);\n\theight: 45%;\n\n\t& > * {\n\t\tmargin-top: ${({ theme }): string => theme.sizes.padding.small};\n\t\tmargin-right: ${({ theme }): string => theme.sizes.padding.small};\n\t}\n`;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport styled, { DefaultTheme } from 'styled-components';\n\nimport { HoverBarContainer } from './hover-bar-container';\n\nexport const HoverContainer = styled(Container).attrs(() => ({\n\tbackground: 'transparent'\n}))<{ $hoverBackground: keyof DefaultTheme['palette'] }>`\n\twidth: 100%;\n\tposition: relative;\n\tcursor: pointer;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\tbackground: ${({ $hoverBackground, theme }): string => theme.palette[$hoverBackground].hover};\n\n\t\t& ${HoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n`;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback } from 'react';\n\nimport {\n\tContainer,\n\tButton,\n\tText,\n\tDivider,\n\tChip,\n\tPadding,\n\tRow\n} from '@zextras/carbonio-design-system';\nimport { removeRoute, replaceHistory, t, useUserSettings } from '@zextras/carbonio-shell-ui';\n\nimport { BACKUP_SEARCH_ROUTE, MAILS_ROUTE } from '../../../constants';\nimport { useBackupSearchStore } from '../../../store/zustand/backup-search/store';\n\nexport const BackupSearchHeader = (): React.JSX.Element => {\n\tconst clearSearchText = t('label.clear_search_query', 'CLEAR SEARCH');\n\tconst endDateString = t('label.end_date', 'End Date');\n\tconst startDateString = t('label.start_date', 'Start Date');\n\tconst { searchParams: queryParams } = useBackupSearchStore();\n\tconst { zimbraPrefLocale } = useUserSettings().prefs;\n\n\tconst queryParamsArray = [];\n\n\tif (queryParams.searchString)\n\t\tqueryParamsArray.push({\n\t\t\tvalue: queryParams.searchString,\n\t\t\thasAvatarIcon: false\n\t\t});\n\n\tif (queryParams.startDate)\n\t\tqueryParamsArray.push({\n\t\t\tvalue: `${startDateString}: ${queryParams.startDate.toLocaleDateString(zimbraPrefLocale)}`,\n\t\t\thasAvatarIcon: true,\n\t\t\tavatarIcon: 'CalendarOutline'\n\t\t});\n\n\tif (queryParams.endDate)\n\t\tqueryParamsArray.push({\n\t\t\tvalue: `${endDateString}: ${queryParams.endDate.toLocaleDateString(zimbraPrefLocale)}`,\n\t\t\thasAvatarIcon: true,\n\t\t\tavatarIcon: 'CalendarOutline'\n\t\t});\n\n\tconst clearSearchCallback = useCallback(() => {\n\t\tconst backupSearchStoreState = useBackupSearchStore.getState();\n\t\tbackupSearchStoreState.setMessages([]);\n\t\tbackupSearchStoreState.setSearchParams({});\n\t\tremoveRoute(BACKUP_SEARCH_ROUTE);\n\t\treplaceHistory({ route: MAILS_ROUTE, path: '/' });\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\tbackground={'gray5'}\n\t\t\t\theight=\"fit\"\n\t\t\t\tminHeight=\"3rem\"\n\t\t\t\tmaxHeight=\"7.5rem\"\n\t\t\t\tstyle={{ overflow: 'hidden' }}\n\t\t\t\tpadding={{ horizontal: 'large', vertical: 'medium' }}\n\t\t\t>\n\t\t\t\t<Row takeAvailableSpace orientation=\"horizontal\" mainAlignment=\"flex-start\">\n\t\t\t\t\t<Text color=\"secondary\">{t('label.results_for', 'Results for: ')}</Text>\n\t\t\t\t\t{queryParamsArray.map(({ value, hasAvatarIcon, avatarIcon }, index) => (\n\t\t\t\t\t\t<Padding left=\"small\" key={`query-params-${index}`}>\n\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\tlabel={value}\n\t\t\t\t\t\t\t\tbackground=\"gray2\"\n\t\t\t\t\t\t\t\tavatarBackground=\"secondary\"\n\t\t\t\t\t\t\t\tavatarColor=\"white\"\n\t\t\t\t\t\t\t\tcolor=\"text\"\n\t\t\t\t\t\t\t\tavatarIcon={avatarIcon}\n\t\t\t\t\t\t\t\thasAvatar={hasAvatarIcon}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t\t<Row mainAlignment=\"space-between\" crossAlignment=\"flex-end\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel={clearSearchText}\n\t\t\t\t\t\ticon=\"CloseOutline\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t\tonClick={clearSearchCallback}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t\t<Divider color=\"gray3\" />\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { Avatar, Chip, Container, Padding, Row, Text } from '@zextras/carbonio-design-system';\nimport { getUserAccount, replaceHistory, t, useUserSettings } from '@zextras/carbonio-shell-ui';\nimport { find } from 'lodash';\n\nimport { getFolder } from '../../../carbonio-ui-commons/store/zustand/folder/hooks';\nimport { BackupSearchMessage } from '../../../types';\nimport { HoverContainer } from '../../app/folder-panel/parts/hover-container';\n\ntype BackupSearchMessageListmessageProps = {\n\tmessage: BackupSearchMessage;\n\tmessageIsSelected: boolean;\n\ttoggle: (id: string) => void;\n};\n\nexport const BackupSearchMessageListItem = ({\n\tmessage,\n\tmessageIsSelected,\n\ttoggle\n}: BackupSearchMessageListmessageProps): React.JSX.Element => {\n\tconst accountName = getUserAccount()?.name;\n\tconst { zimbraPrefLocale } = useUserSettings().prefs;\n\tconst active = true;\n\tconst emailToDisplay =\n\t\tfind([message.to, message.sender], (email) => !email.includes(accountName ?? '')) ??\n\t\taccountName;\n\tconst dateToDisplay = new Date(message?.creationDate).toLocaleDateString(zimbraPrefLocale);\n\tconst messageId = message.id;\n\tconst folder = getFolder(message.folderId);\n\n\tconst handleComponentOnClick = useCallback(() => {\n\t\treplaceHistory(`/${messageId}`);\n\t}, [messageId]);\n\tconst handleAvatarOnClick = useCallback(() => {\n\t\ttoggle(messageId);\n\t}, [messageId, toggle]);\n\n\treturn (\n\t\t<HoverContainer\n\t\t\t$hoverBackground={active ? 'highlight' : 'gray6'}\n\t\t\torientation=\"horizontal\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tpadding={{ all: 'medium' }}\n\t\t>\n\t\t\t<div style={{ alignSelf: 'center' }}>\n\t\t\t\t<Avatar\n\t\t\t\t\tonClick={handleAvatarOnClick}\n\t\t\t\t\tselecting\n\t\t\t\t\tselected={messageIsSelected}\n\t\t\t\t\tlabel={message.to}\n\t\t\t\t\tcolorLabel={message.to}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Row\n\t\t\t\tonClick={handleComponentOnClick}\n\t\t\t\twrap=\"wrap\"\n\t\t\t\ttakeAvailableSpace\n\t\t\t\tpadding={{ left: 'medium' }}\n\t\t\t>\n\t\t\t\t<Container height=\"fit\" width=\"fill\" crossAlignment=\"flex-start\">\n\t\t\t\t\t<Row wrap=\"nowrap\" takeAvailableSpace width=\"fill\" mainAlignment=\"space-between\">\n\t\t\t\t\t\t<Text size=\"medium\">{emailToDisplay}</Text>\n\t\t\t\t\t\t<Text size=\"small\">{dateToDisplay}</Text>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Padding bottom=\"small\" />\n\t\t\t\t\t<Row wrap=\"nowrap\" takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t\t<Text size=\"medium\">{message?.subject}</Text>\n\t\t\t\t\t\t{folder && (\n\t\t\t\t\t\t\t<Chip label={folder.name} background=\"gray2\" color=\"text\" hasAvatar={false} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Row>\n\t\t</HoverContainer>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Container, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nimport ModalFooter from '../../../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../../../carbonio-ui-commons/components/modals/modal-header';\n\ntype BackupSearchRecoveryModalPropType = {\n\tonConfirm: () => void;\n\tonClose: () => void;\n};\nexport const BackupSearchRecoveryModal = ({\n\tonConfirm,\n\tonClose\n}: BackupSearchRecoveryModalPropType): React.JSX.Element => {\n\tconst modalHeaderTitle = t('label.start_recovery_process', 'Start recovery process');\n\tconst modalContent = t(\n\t\t'label.start_recovery_description',\n\t\t'Once the process is completed you will receive a notification in your Inbox and find the recovered e-mails in a brand new folder.'\n\t);\n\n\tconst modalFooterLabel = t('label.start_recovery', 'Start Recovery');\n\treturn (\n\t\t<Container\n\t\t\tpadding={{ all: 'large' }}\n\t\t\tmainAlignment=\"center\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\theight=\"fit\"\n\t\t>\n\t\t\t<ModalHeader onClose={onClose} title={modalHeaderTitle} />\n\t\t\t<Container\n\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\theight=\"fit\"\n\t\t\t>\n\t\t\t\t<Text style={{ whiteSpace: 'pre-line' }}>{modalContent}</Text>\n\t\t\t\t<ModalFooter onConfirm={onConfirm} label={modalFooterLabel} />\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport {\n\tButton,\n\tContainer,\n\tPadding,\n\tRow,\n\tuseModal,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { replaceHistory, t } from '@zextras/carbonio-shell-ui';\nimport { map } from 'lodash';\nimport { useParams } from 'react-router-dom';\n\nimport { BackupSearchMessageListItem } from './backup-search-message-list-item';\nimport { BackupSearchRecoveryModal } from './backup-search-recovery-modal';\nimport { restoreMessagesAPI } from '../../../api/restore-messages';\nimport { CustomList } from '../../../carbonio-ui-commons/components/list/list';\nimport { CustomListItem } from '../../../carbonio-ui-commons/components/list/list-item';\nimport { BACKUP_SEARCH_STATUS, MAILS_ROUTE } from '../../../constants';\nimport { useSelection } from '../../../hooks/use-selection';\nimport { StoreProvider } from '../../../store/redux';\nimport { useBackupSearchStore } from '../../../store/zustand/backup-search/store';\nimport { DragItemWrapper } from '../../app/folder-panel/parts/drag-item-wrapper';\n\nexport const BackupSearchList = (): React.JSX.Element => {\n\tconst [count, setCount] = useState(0);\n\tconst { messages } = useBackupSearchStore();\n\tconst { itemId } = useParams<{ itemId: string }>();\n\n\tconst {\n\t\tselected: selectedMessage,\n\t\ttoggle,\n\t\tdeselectAll,\n\t\tselectAll,\n\t\tisAllSelected\n\t} = useSelection({\n\t\tcurrentFolderId: 'backup-search',\n\t\tsetCount,\n\t\tcount,\n\t\titems: [...Object.values(messages ?? {})]\n\t});\n\n\tconst selectedIds = useMemo(() => Object.keys(selectedMessage), [selectedMessage]);\n\tconst createSnackbar = useSnackbar();\n\n\tconst recoverEmailsCallback = useCallback(\n\t\tasync (closeModal: () => void) => {\n\t\t\tconst response = await restoreMessagesAPI(selectedIds);\n\t\t\tcloseModal();\n\t\t\tif ('error' in response) {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_recovering_emails', 'Error recovering emails'),\n\t\t\t\t\tautoHideTimeout: 5000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tuseBackupSearchStore.getState().setStatus(BACKUP_SEARCH_STATUS.empty);\n\t\t\tuseBackupSearchStore.getState().setMessages([]);\n\t\t\treplaceHistory({ route: MAILS_ROUTE, path: '/' });\n\t\t\tcreateSnackbar({\n\t\t\t\treplace: true,\n\t\t\t\ttype: 'info',\n\t\t\t\tlabel: t(\n\t\t\t\t\t'label.recover_emails',\n\t\t\t\t\t'The recovery process has started, you will be informed once it is complete'\n\t\t\t\t),\n\t\t\t\tautoHideTimeout: 5000,\n\t\t\t\thideButton: true\n\t\t\t});\n\t\t},\n\t\t[createSnackbar, selectedIds]\n\t);\n\n\tconst createModal = useModal();\n\tconst handleRecoverCallback = useCallback(() => {\n\t\tconst closeModal = createModal(\n\t\t\t{\n\t\t\t\tmaxHeight: '90vh',\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<BackupSearchRecoveryModal\n\t\t\t\t\t\t\tonConfirm={(): Promise<void> => recoverEmailsCallback((): void => closeModal?.())}\n\t\t\t\t\t\t\tonClose={(): void => closeModal?.()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}, [createModal, recoverEmailsCallback]);\n\n\tconst listItems = useMemo(\n\t\t() =>\n\t\t\tmap(messages, (message) => {\n\t\t\t\tconst active = itemId === message.id;\n\t\t\t\tconst isSelected = selectedMessage[message.id];\n\t\t\t\treturn (\n\t\t\t\t\t<CustomListItem\n\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\tactive={active}\n\t\t\t\t\t\tselected={isSelected}\n\t\t\t\t\t\tbackground={'gray6'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{(visible: boolean): ReactElement =>\n\t\t\t\t\t\t\tvisible ? (\n\t\t\t\t\t\t\t\t<BackupSearchMessageListItem\n\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\tmessageIsSelected={isSelected}\n\t\t\t\t\t\t\t\t\ttoggle={toggle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div style={{ height: '4rem' }} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</CustomListItem>\n\t\t\t\t);\n\t\t\t}),\n\t\t[itemId, messages, selectedMessage, toggle]\n\t);\n\n\tconst selectAllOnClick = useCallback(() => {\n\t\tselectAll();\n\t\tcreateSnackbar({\n\t\t\tkey: 'selected-all-backupMessages',\n\t\t\treplace: true,\n\t\t\ttype: 'info',\n\t\t\tlabel: t('label.all_items_selected', 'All visible backupMessages have been selected'),\n\t\t\tautoHideTimeout: 5000,\n\t\t\thideButton: true\n\t\t});\n\t}, [selectAll, createSnackbar]);\n\n\treturn (\n\t\t<Container background=\"gray6\" width=\"25%\" height=\"fill\" mainAlignment=\"flex-start\">\n\t\t\t<Container\n\t\t\t\tbackground=\"gray5\"\n\t\t\t\theight=\"fit\"\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tpadding={{ all: 'extrasmall' }}\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\twidth=\"100%\"\n\t\t\t>\n\t\t\t\t<Row\n\t\t\t\t\theight=\"100%\"\n\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\tpadding={{ all: 'extrasmall' }}\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\tisAllSelected\n\t\t\t\t\t\t\t\t? t('label.deselect_all', 'DESELECT all')\n\t\t\t\t\t\t\t\t: t('label.select_all', 'SELECT all')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={isAllSelected ? deselectAll : selectAllOnClick}\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Padding left=\"small\" />\n\t\t\t\t\t<Row takeAvailableSpace>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel={t('label.recover_selected_emails', 'RECOVER SELECTED E-MAILS')}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={handleRecoverCallback}\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\t\tdisabled={!selectedIds.length}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Row>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t\t<CustomList>{listItems}</CustomList>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { apiWrapper } from '../carbonio-ui-commons/helpers/api-wrapper';\n\nexport async function restoreMessagesAPI(\n\tmessages: Array<string>\n): Promise<{ data: Response } | { error: unknown }> {\n\tconst apiCall = fetch(`/zx/backup/v1/restoreMessages`, {\n\t\tmethod: 'POST',\n\t\tcredentials: 'same-origin',\n\t\tbody: JSON.stringify({ messages })\n\t});\n\n\treturn apiWrapper(apiCall);\n}\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { Row, Text } from '@zextras/carbonio-design-system';\n\nexport const BackupSearchPanelTextLine = ({\n\ttitle,\n\ttext\n}: {\n\ttitle: string;\n\ttext: string | undefined;\n}): React.JSX.Element => {\n\tconst titleString = `${title} :\\u00A0`;\n\treturn text ? (\n\t\t<Row padding=\"small\" mainAlignment=\"flex-start\" width={'fill'}>\n\t\t\t<Text color=\"gray1\" overflow=\"break-word\" weight=\"bold\" size=\"large\">\n\t\t\t\t{titleString}\n\t\t\t</Text>\n\t\t\t<Text color=\"gray1\" overflow=\"break-word\" size=\"large\">\n\t\t\t\t{text}\n\t\t\t</Text>\n\t\t</Row>\n\t) : (\n\t\t<></>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Container, Icon, Padding, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { BackupSearchPanelTextLine } from './backup-search-panel-text-line';\nimport { getFolder } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { useBackupSearchStore } from '../../../store/zustand/backup-search/store';\n\nconst SearchIcon = styled(Icon)`\n\twidth: 3.3rem;\n\theight: 3.3rem;\n`;\n\nexport const BackupSearchPanel = (): React.JSX.Element => {\n\tconst restoreEmailsTitle = t(\n\t\t'label.displayer_restore_emails_title',\n\t\t'Select the e-mails you want to restore'\n\t);\n\tconst restoreEmailsDescription = t(\n\t\t'label.displayer_restore_emails_description',\n\t\t'Once the selected email recovery is complete, \\n you will receive an email with information regarding the results.'\n\t);\n\n\tconst { itemId } = useParams<{ itemId: string }>();\n\tconst message = useBackupSearchStore((state) => state.messages[itemId ?? '']);\n\tconst subject = { title: t('label.subject', 'Subject'), text: message?.subject };\n\tconst sender = { title: t('label.from', 'From'), text: message?.sender };\n\tconst to = { title: t('label.to', 'To'), text: message?.to };\n\tconst dateCreated = {\n\t\ttitle: t('label.date_created', 'Date created'),\n\t\ttext: new Date(message?.creationDate).toUTCString()\n\t};\n\tconst dateDeleted = {\n\t\ttitle: t('label.date_deleted', 'Date deleted'),\n\t\ttext: new Date(message?.deletionDate).toUTCString()\n\t};\n\n\tconst folder = getFolder(message?.folderId);\n\tconst folderName = { title: t('label.folder', 'Folder'), text: folder?.name };\n\n\treturn message ? (\n\t\t<Container padding={{ left: '8rem' }} background=\"gray5\" width={'fill'}>\n\t\t\t<BackupSearchPanelTextLine title={subject.title} text={subject.text} />\n\t\t\t<BackupSearchPanelTextLine title={sender.title} text={sender.text} />\n\t\t\t<BackupSearchPanelTextLine title={to.title} text={to.text} />\n\t\t\t<BackupSearchPanelTextLine title={dateCreated.title} text={dateCreated.text} />\n\t\t\t<BackupSearchPanelTextLine title={dateDeleted.title} text={dateDeleted.text} />\n\t\t\t<BackupSearchPanelTextLine title={folderName.title} text={folderName.text} />\n\t\t</Container>\n\t) : (\n\t\t<Container background=\"gray5\">\n\t\t\t<SearchIcon icon=\"Search\" color=\"gray1\" />\n\t\t\t<Padding all=\"medium\">\n\t\t\t\t<Text\n\t\t\t\t\tcolor=\"gray1\"\n\t\t\t\t\toverflow=\"break-word\"\n\t\t\t\t\tweight=\"bold\"\n\t\t\t\t\tsize=\"extralarge\"\n\t\t\t\t\tstyle={{ whiteSpace: 'pre-line', textAlign: 'center' }}\n\t\t\t\t>\n\t\t\t\t\t{restoreEmailsTitle}\n\t\t\t\t</Text>\n\t\t\t</Padding>\n\t\t\t<Text\n\t\t\t\tsize=\"small\"\n\t\t\t\tcolor=\"gray1\"\n\t\t\t\toverflow=\"break-word\"\n\t\t\t\tstyle={{ whiteSpace: 'pre-line', textAlign: 'center' }}\n\t\t\t>\n\t\t\t\t{restoreEmailsDescription}\n\t\t\t</Text>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\n\nimport { BackupSearchHeader } from './parts/backup-search-header';\nimport { BackupSearchList } from './parts/backup-search-list';\nimport { BackupSearchPanel } from './parts/backup-search-panel';\n\nconst BackupSearchView = (): React.JSX.Element => (\n\t<>\n\t\t<BackupSearchHeader />\n\t\t<Container\n\t\t\torientation=\"horizontal\"\n\t\t\tbackground=\"gray4\"\n\t\t\tstyle={{ overflowY: 'auto' }}\n\t\t\tmainAlignment=\"flex-start\"\n\t\t>\n\t\t\t<BackupSearchList />\n\t\t\t<BackupSearchPanel />\n\t\t</Container>\n\t</>\n);\n\nexport default BackupSearchView;\n"],"names":["CustomListItemHelper","styled","ListItem","withConfig","displayName","componentId","CustomListItem","attrs","background","active","activeBackground","selected","selectedBackground","theme","$baseBackgroundColor","getColor","$focusBackgroundColor","CustomList","ListV2","ModalFooter","mainAlignment","crossAlignment","onConfirm","label","secondaryAction","secondaryLabel","primaryBtnType","secondaryBtnType","disabled","secondaryDisabled","secondarybackground","color","secondaryColor","size","showDivider","tooltip","secondaryTooltip","paddingTop","additionalAction","additionalBtnType","additionalColor","additionalLabel","primaryButtonIcon","t","useTranslation","cancelLabel","useMemo","React","Container","padding","top","bottom","orientation","height","Divider","width","Button","type","onClick","Padding","horizontal","right","vertical","Tooltip","placement","maxWidth","backgroundColor","icon","iconPlacement","ModalHeader","title","onClose","showCloseIcon","Row","takeAvailableSpace","Text","weight","IconButton","style","margin","async","apiWrapper","promise","Promise","allSettled","then","result","status","responseBody","value","text","data","JSON","parse","error","reason","useSelection","setCount","count","items","useRef","isSelectModeOn","setIsSelectModeOn","useState","isAllSelected","length","selectItem","useCallback","id","current","omit","prev","deselectAll","selectAll","map","item","selectAllModeOff","setTimeout","toggle","HoverBarContainer","palette","hover","sizes","small","HoverContainer","$hoverBackground","BackupSearchHeader","clearSearchText","endDateString","startDateString","searchParams","queryParams","useBackupSearchStore","zimbraPrefLocale","useUserSettings","prefs","queryParamsArray","searchString","push","hasAvatarIcon","startDate","toLocaleDateString","avatarIcon","endDate","clearSearchCallback","backupSearchStoreState","getState","setMessages","setSearchParams","removeRoute","BACKUP_SEARCH_ROUTE","replaceHistory","route","MAILS_ROUTE","path","minHeight","maxHeight","overflow","index","left","key","Chip","avatarBackground","avatarColor","hasAvatar","BackupSearchMessageListItem","message","messageIsSelected","accountName","getUserAccount","name","emailToDisplay","find","to","sender","email","includes","dateToDisplay","Date","creationDate","messageId","folder","getFolder","folderId","handleComponentOnClick","handleAvatarOnClick","all","alignSelf","Avatar","selecting","colorLabel","wrap","subject","BackupSearchRecoveryModal","modalHeaderTitle","modalContent","modalFooterLabel","whiteSpace","BackupSearchList","messages","itemId","useParams","selectedMessage","currentFolderId","Object","values","selectedIds","keys","createSnackbar","useSnackbar","recoverEmailsCallback","response","apiCall","fetch","method","credentials","body","stringify","restoreMessagesAPI","closeModal","replace","autoHideTimeout","hideButton","setStatus","BACKUP_SEARCH_STATUS","empty","createModal","useModal","handleRecoverCallback","children","StoreProvider","listItems","isSelected","visible","selectAllOnClick","BackupSearchPanelTextLine","titleString","SearchIcon","Icon","BackupSearchPanel","restoreEmailsTitle","restoreEmailsDescription","state","dateCreated","toUTCString","dateDeleted","deletionDate","folderName","textAlign","BackupSearchView","overflowY"],"sourceRoot":""}