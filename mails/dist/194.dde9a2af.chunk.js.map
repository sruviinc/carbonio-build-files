{"version":3,"file":"194.dde9a2af.chunk.js","mappings":"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","sources":["webpack://carbonio-mails-ui/./src/app-utils/add-shell-components.tsx","webpack://carbonio-mails-ui/./src/app-utils/register-shell-actions.ts","webpack://carbonio-mails-ui/./src/app-utils/toggle-backup-search-component.tsx","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/soap/get-folder.ts","webpack://carbonio-mails-ui/./src/views/sidebar/sync-data-handler.tsx","webpack://carbonio-mails-ui/./src/app.tsx","webpack://carbonio-mails-ui/./src/api/advanced-account.ts","webpack://carbonio-mails-ui/./src/app-utils/register-shell-integrations.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/hooks/use-folders-controller.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/constants/utils/index.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/constants/participants.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/soap/get-share-info.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/store/zustand/folder/utils.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/store/zustand/folder/hooks.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/store/zustand/folder/store.ts","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/worker/index.ts","webpack://carbonio-mails-ui/./src/commons/utilities.tsx","webpack://carbonio-mails-ui/./src/commons/utils.tsx","webpack://carbonio-mails-ui/./src/constants/index.ts","webpack://carbonio-mails-ui/./src/helpers/attachments.ts","webpack://carbonio-mails-ui/./src/helpers/folders.ts","webpack://carbonio-mails-ui/./src/helpers/identities.ts","webpack://carbonio-mails-ui/./src/helpers/messages.ts","webpack://carbonio-mails-ui/./src/hooks/redux.ts","webpack://carbonio-mails-ui/./src/integrations/shared-functions.ts","webpack://carbonio-mails-ui/./src/normalizations/normalize-conversation.ts","webpack://carbonio-mails-ui/./src/normalizations/normalize-message.ts","webpack://carbonio-mails-ui/./src/store/actions/delete-all-attachments.ts","webpack://carbonio-mails-ui/./src/store/actions/get-conv.ts","webpack://carbonio-mails-ui/./src/store/actions/get-msg.ts","webpack://carbonio-mails-ui/./src/store/actions/conv-action.ts","webpack://carbonio-mails-ui/./src/store/actions/msg-action.ts","webpack://carbonio-mails-ui/./src/store/actions/search-conv.ts","webpack://carbonio-mails-ui/./src/store/actions/redirect-action.ts","webpack://carbonio-mails-ui/./src/store/actions/get-msg-for-print.ts","webpack://carbonio-mails-ui/./src/store/actions/save-draft.ts","webpack://carbonio-mails-ui/./src/store/actions/search.ts","webpack://carbonio-mails-ui/./src/store/conversations-slice.ts","webpack://carbonio-mails-ui/./src/store/sync/conversation.ts","webpack://carbonio-mails-ui/./src/store/messages-slice.ts","webpack://carbonio-mails-ui/./src/store/sync/message.ts","webpack://carbonio-mails-ui/./src/store/reducers.ts","webpack://carbonio-mails-ui/./src/store/redux/index.tsx","webpack://carbonio-mails-ui/./src/store/utils.ts","webpack://carbonio-mails-ui/./src/store/searches-slice.ts","webpack://carbonio-mails-ui/./src/store/search-slice-reducers.ts","webpack://carbonio-mails-ui/./src/store/zustand/advanced-account/store.ts","webpack://carbonio-mails-ui/./src/store/zustand/backup-search/store.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/editor-transformations.ts","webpack://carbonio-mails-ui/./src/store/zustand/editor/editor-utils.ts","webpack://carbonio-mails-ui/./src/views/app/extra-windows/extra-window-manager.tsx","webpack://carbonio-mails-ui/./src/views/app/extra-windows/new-window.js","webpack://carbonio-mails-ui/./src/views/app/extra-windows/extra-window.tsx","webpack://carbonio-mails-ui/./src/views/app/extra-windows/global-extra-window-manager.tsx","webpack://carbonio-mails-ui/./src/views/global-modal-manager.tsx","webpack://carbonio-mails-ui/./src/views/settings/subsections.ts","webpack://carbonio-mails-ui/./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { Suspense, lazy } from 'react';\n\nimport { ModalManager } from '@zextras/carbonio-design-system';\nimport {\n\tSpinner,\n\taddRoute,\n\taddSearchView,\n\taddBoardView,\n\taddSettingsView,\n\tSearchViewProps,\n\tt,\n\tSecondaryBarComponentProps\n} from '@zextras/carbonio-shell-ui';\n\nimport { advancedAccountAPI } from '../api/advanced-account';\nimport { MAILS_ROUTE } from '../constants';\nimport { StoreProvider } from '../store/redux';\nimport { ExtraWindowsManager } from '../views/app/extra-windows/extra-window-manager';\nimport { getSettingsSubSections } from '../views/settings/subsections';\n\nconst LazyAppView = lazy(\n\t() => import(/* webpackChunkName: \"mails-folder-panel-view\" */ '../views/app-view')\n);\n\nconst LazyEditView = lazy(\n\t() =>\n\t\timport(\n\t\t\t/* webpackChunkName: \"mails-edit-view\" */ '../views/app/detail-panel/edit/edit-view-controller'\n\t\t)\n);\n\nconst LazySettingsView = lazy(\n\t() => import(/* webpackChunkName: \"mail-setting-view\" */ '../views/settings/settings-view')\n);\n\nconst LazySearchView = lazy(\n\t() => import(/* webpackChunkName: \"mail-search-view\" */ '../views/search/search-view')\n);\n\nconst LazySidebarView = lazy(\n\t() => import(/* webpackChunkName: \"mail-sidebar-view\" */ '../views/sidebar/sidebar')\n);\n\nconst AppView = (): React.JSX.Element => (\n\t<Suspense fallback={<Spinner />}>\n\t\t<StoreProvider>\n\t\t\t<ModalManager>\n\t\t\t\t<ExtraWindowsManager>\n\t\t\t\t\t<LazyAppView />\n\t\t\t\t</ExtraWindowsManager>\n\t\t\t</ModalManager>\n\t\t</StoreProvider>\n\t</Suspense>\n);\n\nconst EditView = (): React.JSX.Element => (\n\t<Suspense fallback={<Spinner />}>\n\t\t<StoreProvider>\n\t\t\t<ModalManager>\n\t\t\t\t<LazyEditView />\n\t\t\t</ModalManager>\n\t\t</StoreProvider>\n\t</Suspense>\n);\n\nconst SettingsView = (): React.JSX.Element => (\n\t<Suspense fallback={<Spinner />}>\n\t\t<StoreProvider>\n\t\t\t<ModalManager>\n\t\t\t\t<LazySettingsView />\n\t\t\t</ModalManager>\n\t\t</StoreProvider>\n\t</Suspense>\n);\n\nconst SearchView = (props: SearchViewProps): React.JSX.Element => (\n\t<Suspense fallback={<Spinner />}>\n\t\t<StoreProvider>\n\t\t\t<ExtraWindowsManager>\n\t\t\t\t<ModalManager>\n\t\t\t\t\t<LazySearchView {...props} />\n\t\t\t\t</ModalManager>\n\t\t\t</ExtraWindowsManager>\n\t\t</StoreProvider>\n\t</Suspense>\n);\n\nconst SidebarView = (props: SecondaryBarComponentProps): React.JSX.Element => (\n\t<Suspense fallback={<Spinner />}>\n\t\t<StoreProvider>\n\t\t\t<ModalManager>\n\t\t\t\t<LazySidebarView {...props} />\n\t\t\t</ModalManager>\n\t\t</StoreProvider>\n\t</Suspense>\n);\n\nexport const addComponentsToShell = async (): Promise<void> => {\n\tconst label = t('label.app_name', 'Mails');\n\taddRoute({\n\t\troute: MAILS_ROUTE,\n\t\tposition: 100,\n\t\tvisible: true,\n\t\tlabel,\n\t\tprimaryBar: 'MailModOutline',\n\t\tsecondaryBar: SidebarView,\n\t\tappView: AppView\n\t});\n\taddSearchView({\n\t\troute: MAILS_ROUTE,\n\t\tcomponent: SearchView,\n\t\tlabel\n\t});\n\taddBoardView({\n\t\troute: MAILS_ROUTE,\n\t\tcomponent: EditView\n\t});\n\tconst { backupSelfUndeleteAllowed } = await advancedAccountAPI();\n\taddSettingsView({\n\t\troute: MAILS_ROUTE,\n\t\tlabel,\n\t\tsubSections: getSettingsSubSections(backupSelfUndeleteAllowed),\n\t\tcomponent: SettingsView\n\t});\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { SyntheticEvent } from 'react';\n\nimport { ACTION_TYPES, addBoard, registerActions, t } from '@zextras/carbonio-shell-ui';\nimport { isArray, some } from 'lodash';\n\nimport { ParticipantRole } from '../carbonio-ui-commons/constants/participants';\nimport { EditViewActions, MAILS_ROUTE, MAIL_APP_ID } from '../constants';\nimport { mailToSharedFunction } from '../integrations/shared-functions';\n\ntype MailToActionType = {\n\tid: string;\n\tlabel: string;\n\ticon: string;\n\tonClick: (e: SyntheticEvent<HTMLElement, Event> | KeyboardEvent) => void;\n\tdisabled: boolean;\n};\n\nexport const mailToActionOnClick = (\n\te: SyntheticEvent<HTMLElement, Event> | KeyboardEvent,\n\tcontacts: unknown\n): void => {\n\te?.preventDefault?.();\n\tconst participant =\n\t\tisArray(contacts) &&\n\t\t'email' in contacts[0] &&\n\t\t!!contacts[0].email &&\n\t\tObject.keys(contacts[0].email).length !== 0\n\t\t\t? [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: ParticipantRole.TO,\n\t\t\t\t\t\taddress: contacts[0].email.email.mail,\n\t\t\t\t\t\tfullName: `${contacts[0].firstName} ${contacts[0].middleName}`.trim()\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t: [];\n\tmailToSharedFunction(participant);\n};\n\nexport const mailToAction = (contacts: unknown): MailToActionType => ({\n\tid: 'mail-to',\n\tlabel: t('label.send_mail', 'Send Mail'),\n\ticon: 'MailModOutline',\n\tonClick: (e) => mailToActionOnClick(e, contacts),\n\tdisabled: isArray(contacts) && some(contacts, (contact) => !contact.address)\n});\n\ntype NewEmailActionType = {\n\tid: string;\n\tlabel: string;\n\ticon: string;\n\tonClick: (e: SyntheticEvent<HTMLElement, Event> | KeyboardEvent) => void;\n\tdisabled: boolean;\n\tgroup: string;\n\tprimary: boolean;\n};\n\nexport const newEmailActionOnClick = (\n\te: SyntheticEvent<HTMLElement, Event> | KeyboardEvent\n): void => {\n\te?.preventDefault?.();\n\taddBoard({\n\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.NEW}`,\n\t\ttitle: t('label.new_email', 'New E-mail')\n\t\t// TOFIX provide the context filled with the current folder id\n\t});\n};\n\nexport const newEmailAction = (): NewEmailActionType => ({\n\tid: 'new-email',\n\tlabel: t('label.new_email', 'New E-mail'),\n\ticon: 'MailModOutline',\n\tonClick: newEmailActionOnClick,\n\tdisabled: false,\n\tgroup: MAIL_APP_ID,\n\tprimary: true\n});\n\nexport const registerShellActions = (): void => {\n\tregisterActions(\n\t\t{\n\t\t\t// TOFIX-SHELL: update the action type definition\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\taction: mailToAction,\n\t\t\tid: 'mail-to',\n\t\t\ttype: 'contact-list'\n\t\t},\n\t\t{\n\t\t\taction: newEmailAction,\n\t\t\tid: 'new-email',\n\t\t\ttype: ACTION_TYPES.NEW\n\t\t}\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { ModalManager } from '@zextras/carbonio-design-system';\nimport { addRoute, removeRoute, t } from '@zextras/carbonio-shell-ui';\nimport { Route, useRouteMatch } from 'react-router-dom';\n\nimport { BACKUP_SEARCH_ROUTE } from '../constants';\nimport { StoreProvider } from '../store/redux';\n\nconst LazyBackupSearchView = React.lazy(\n\t() =>\n\t\timport(\n\t\t\t/* webpackChunkName: \"mails-backup-search-view\" */ '../views/backup-search/backup-search-view'\n\t\t)\n);\n\nconst BackupSearchViewComponent = (): React.JSX.Element => {\n\tconst { path } = useRouteMatch();\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<ModalManager>\n\t\t\t\t<Route path={`${path}/:itemId?`}>\n\t\t\t\t\t<LazyBackupSearchView />\n\t\t\t\t</Route>\n\t\t\t</ModalManager>\n\t\t</StoreProvider>\n\t);\n};\n\nexport const toggleBackupSearchComponent = async (hasMessages: boolean): Promise<void> => {\n\tif (!hasMessages) {\n\t\tremoveRoute(BACKUP_SEARCH_ROUTE);\n\t\treturn;\n\t}\n\n\taddRoute({\n\t\troute: BACKUP_SEARCH_ROUTE,\n\t\tposition: 1000,\n\t\tvisible: true,\n\t\tlabel: t('label.backup_search', 'Backup Search'),\n\t\tprimaryBar: 'RestoreOutline',\n\t\tappView: BackupSearchViewComponent\n\t});\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\nimport { isNil, omitBy } from 'lodash';\n\nimport { FolderView } from '../types/folder';\n\nexport const getFolderRequest = async (\n\t{ id, view }: { id?: string; view?: FolderView },\n\taccount?: string\n): Promise<any> => {\n\tconst body = omitBy(\n\t\t{\n\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\tfolder: id\n\t\t\t\t? {\n\t\t\t\t\t\tl: id\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t\tview,\n\t\t\ttr: 1\n\t\t},\n\t\tisNil\n\t);\n\treturn soapFetch('GetFolder', body, account);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useEffect, useState } from 'react';\n\nimport {\n\tFOLDERS,\n\tgetTags,\n\tupdatePrimaryBadge,\n\tuseNotify,\n\tuseRefresh\n} from '@zextras/carbonio-shell-ui';\nimport { filter, find, forEach, isEmpty, keyBy, map, reduce, sortBy } from 'lodash';\n\nimport { useFolder } from '../../carbonio-ui-commons/store/zustand/folder';\nimport { MAILS_ROUTE } from '../../constants';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\nimport { normalizeConversation } from '../../normalizations/normalize-conversation';\nimport { normalizeMailMessageFromSoap } from '../../normalizations/normalize-message';\nimport {\n\thandleAddMessagesInConversation,\n\thandleCreatedMessagesInConversation,\n\thandleDeletedMessagesInConversation,\n\thandleModifiedMessagesInConversation,\n\thandleNotifyCreatedConversations,\n\thandleNotifyDeletedConversations,\n\thandleNotifyModifiedConversations,\n\tselectCurrentFolder,\n\tsetSearchedInFolder\n} from '../../store/conversations-slice';\nimport {\n\thandleCreatedMessages,\n\thandleDeletedMessages,\n\thandleModifiedMessages,\n\tselectMessages\n} from '../../store/messages-slice';\nimport {\n\thandleAddMessagesInSearchConversation,\n\thandleCreatedMessagesInSearchConversation,\n\thandleDeletedMessagesInSearchConversation,\n\thandleDeletedSearchMessages,\n\thandleModifiedMessagesInSearchConversation,\n\thandleNotifyCreatedSearchConversations,\n\thandleNotifyDeletedSearchConversations,\n\thandleNotifyModifiedSearchConversations\n} from '../../store/searches-slice';\nimport type { Conversation } from '../../types';\n\nconst InboxBadgeUpdater = (): null => {\n\tconst inbox = useFolder(FOLDERS.INBOX);\n\tuseEffect(() => {\n\t\tif (inbox)\n\t\t\tupdatePrimaryBadge(\n\t\t\t\t{\n\t\t\t\t\tshow: !!inbox.u,\n\t\t\t\t\tcount: inbox.u,\n\t\t\t\t\tshowCount: true\n\t\t\t\t},\n\t\t\t\tMAILS_ROUTE\n\t\t\t);\n\t}, [inbox]);\n\treturn null;\n};\n\nexport const SyncDataHandler: FC = () => {\n\tconst notifyList = useNotify();\n\tconst [seq, setSeq] = useState(-1);\n\tconst dispatch = useAppDispatch();\n\tconst [initialized, setInitialized] = useState(false);\n\tconst currentFolder = useAppSelector(selectCurrentFolder);\n\tconst messagesState = useAppSelector(selectMessages);\n\n\tconst refresh = useRefresh();\n\tuseEffect(() => {\n\t\tif (!isEmpty(refresh) && !initialized) {\n\t\t\tsetInitialized(true);\n\t\t}\n\t}, [dispatch, initialized, refresh]);\n\n\tuseEffect(() => {\n\t\tforEach(notifyList, (notify) => {\n\t\t\t// this intercept all changes made from different folders towards the current one, it triggers a search request if it finds at least one item which affect currentFolder\n\t\t\tif (find(notify?.modified?.m, ['l', currentFolder])) {\n\t\t\t\tdispatch(setSearchedInFolder({ [currentFolder]: 'incomplete' }));\n\t\t\t}\n\t\t});\n\t}, [currentFolder, dispatch, notifyList]);\n\n\tuseEffect(() => {\n\t\tif (initialized) {\n\t\t\tif (notifyList.length > 0) {\n\t\t\t\tforEach(sortBy(notifyList, 'seq'), (notify: any) => {\n\t\t\t\t\tif (!isEmpty(notify) && (notify.seq > seq || (seq > 1 && notify.seq === 1))) {\n\t\t\t\t\t\tconst tags = getTags();\n\t\t\t\t\t\tif (notify.created) {\n\t\t\t\t\t\t\tif (notify.created.c && notify.created.m) {\n\t\t\t\t\t\t\t\tconst conversations = map(notify.created.c, (i) =>\n\t\t\t\t\t\t\t\t\tnormalizeConversation({ c: i, m: notify.created.m, tags })\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdispatch(handleNotifyCreatedConversations(conversations));\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdispatch(handleNotifyCreatedSearchConversations(keyBy(conversations, 'id')));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (notify.created.m) {\n\t\t\t\t\t\t\t\tdispatch(handleCreatedMessages({ m: notify.created.m }));\n\t\t\t\t\t\t\t\tdispatch(handleCreatedMessagesInConversation({ m: notify.created.m }));\n\t\t\t\t\t\t\t\tdispatch(handleCreatedMessagesInSearchConversation({ m: notify.created.m }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (notify.modified) {\n\t\t\t\t\t\t\tif (notify.modified.c) {\n\t\t\t\t\t\t\t\tconst conversations = map(notify.modified.c, (i) =>\n\t\t\t\t\t\t\t\t\tnormalizeConversation({ c: i, tags })\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdispatch(handleNotifyModifiedConversations(keyBy(conversations, 'id')));\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdispatch(handleNotifyModifiedSearchConversations(keyBy(conversations, 'id')));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (notify.modified.m) {\n\t\t\t\t\t\t\t\tconst messages = map(notify.modified.m, (obj) => normalizeMailMessageFromSoap(obj));\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tdispatch(handleModifiedMessages(messages));\n\n\t\t\t\t\t\t\t\t// the condition filters messages with parent property (the only ones we need to update)\n\t\t\t\t\t\t\t\tconst toUpdate = filter(messages, 'parent');\n\t\t\t\t\t\t\t\tif (toUpdate?.length > 0) {\n\t\t\t\t\t\t\t\t\t// this function updates messages' parent in conversations. If parent never changes it does not need to be called\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tdispatch(handleModifiedMessagesInConversation(toUpdate));\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tdispatch(handleModifiedMessagesInSearchConversation(toUpdate));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// the condition filters messages with conversation property (the only ones we need to add to conversation)\n\t\t\t\t\t\t\t\tconst conversationToUpdate = filter(messages, 'conversation');\n\t\t\t\t\t\t\t\tif (conversationToUpdate?.length > 0) {\n\t\t\t\t\t\t\t\t\tconst msgsReference = reduce(\n\t\t\t\t\t\t\t\t\t\tconversationToUpdate,\n\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\tacc: Array<{\n\t\t\t\t\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\t\t\t\t\tparent: string | undefined;\n\t\t\t\t\t\t\t\t\t\t\t\tdate: number | undefined;\n\t\t\t\t\t\t\t\t\t\t\t\tconversation: Conversation;\n\t\t\t\t\t\t\t\t\t\t\t}>,\n\t\t\t\t\t\t\t\t\t\t\tmsg: any\n\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\tif (messagesState?.[msg?.id]) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: messagesState?.[msg?.id].id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparent: messagesState?.[msg?.id].parent,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate: messagesState?.[msg?.id].date,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconversation: msg.conversation\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tdispatch(handleAddMessagesInConversation(msgsReference));\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tdispatch(handleAddMessagesInSearchConversation(msgsReference));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (notify.deleted) {\n\t\t\t\t\t\t\tdispatch(handleNotifyDeletedConversations(notify.deleted));\n\t\t\t\t\t\t\tdispatch(handleNotifyDeletedSearchConversations(notify.deleted));\n\t\t\t\t\t\t\tdispatch(handleDeletedMessages(notify.deleted));\n\t\t\t\t\t\t\tdispatch(handleDeletedSearchMessages(notify.deleted));\n\t\t\t\t\t\t\tdispatch(handleDeletedMessagesInConversation(notify.deleted));\n\t\t\t\t\t\t\tdispatch(handleDeletedMessagesInSearchConversation(notify.deleted));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetSeq(notify.seq);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [dispatch, initialized, messagesState, notifyList, seq]);\n\treturn <InboxBadgeUpdater />;\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect } from 'react';\n\nimport { isEmpty } from 'lodash';\n\nimport { addComponentsToShell } from './app-utils/add-shell-components';\nimport { registerShellActions } from './app-utils/register-shell-actions';\nimport { registerShellIntegrations } from './app-utils/register-shell-integrations';\nimport { toggleBackupSearchComponent } from './app-utils/toggle-backup-search-component';\nimport { FOLDER_VIEW } from './carbonio-ui-commons/constants';\nimport { useFoldersController } from './carbonio-ui-commons/hooks/use-folders-controller';\nimport { StoreProvider } from './store/redux';\nimport { useBackupSearchStore } from './store/zustand/backup-search/store';\nimport { GlobalExtraWindowManager } from './views/app/extra-windows/global-extra-window-manager';\nimport { GlobalModalManager } from './views/global-modal-manager';\nimport { SyncDataHandler } from './views/sidebar/sync-data-handler';\n\nconst App = (): React.JSX.Element => {\n\tconst hasBackupSearchMessages = !isEmpty(useBackupSearchStore().messages);\n\n\tuseEffect(() => {\n\t\taddComponentsToShell();\n\t\tregisterShellIntegrations();\n\t\tregisterShellActions();\n\t}, []);\n\n\tuseEffect(() => {\n\t\ttoggleBackupSearchComponent(hasBackupSearchMessages);\n\t}, [hasBackupSearchMessages]);\n\n\tuseFoldersController(FOLDER_VIEW.message);\n\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<GlobalModalManager>\n\t\t\t\t<GlobalExtraWindowManager>\n\t\t\t\t\t<SyncDataHandler />\n\t\t\t\t</GlobalExtraWindowManager>\n\t\t\t</GlobalModalManager>\n\t\t</StoreProvider>\n\t);\n};\n\nexport default App;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport {\n\ttype AdvancedAccountStore,\n\tuseAdvancedAccountStore\n} from '../store/zustand/advanced-account/store';\n\nexport const advancedAccountAPI = (): Promise<AdvancedAccountStore> =>\n\tfetch('/zx/login/v3/account')\n\t\t.then(async (data) => {\n\t\t\tconst { backupSelfUndeleteAllowed } = await data.json();\n\t\t\tif (data.status === 200) {\n\t\t\t\tuseAdvancedAccountStore\n\t\t\t\t\t.getState()\n\t\t\t\t\t.updateBackupSelfUndeleteAllowed(!!backupSelfUndeleteAllowed);\n\t\t\t}\n\t\t\treturn useAdvancedAccountStore.getState();\n\t\t})\n\t\t.catch(() => {\n\t\t\tuseAdvancedAccountStore.getState().updateBackupSelfUndeleteAllowed(false);\n\t\t\treturn useAdvancedAccountStore.getState();\n\t\t});\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { registerFunctions } from '@zextras/carbonio-shell-ui';\n\nimport {\n\topenComposerSharedFunction,\n\topenPrefilledComposerSharedFunction\n} from '../integrations/shared-functions';\n\nexport const registerShellIntegrations = (): void => {\n\tregisterFunctions(\n\t\t{\n\t\t\tid: 'compose',\n\t\t\t// TOFIX-SHELL: fix the function type definition\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tfn: openComposerSharedFunction\n\t\t},\n\t\t{\n\t\t\tid: 'composePrefillMessage',\n\t\t\tfn: openPrefilledComposerSharedFunction\n\t\t}\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useEffect, useState } from 'react';\n\nimport { useNotify } from '@zextras/carbonio-shell-ui';\nimport { filter, forEach, isEmpty, map, reject, sortBy } from 'lodash';\n\nimport { getFolderRequest } from '../soap/get-folder';\nimport { getShareInfoRequest } from '../soap/get-share-info';\nimport { useFolderStore } from '../store/zustand/folder';\nimport { FolderView } from '../types/folder';\nimport { folderWorker } from '../worker';\n\nconst getFoldersByAccounts = async (sharedAccounts: unknown[], view: FolderView): Promise<any> =>\n\tPromise.all(\n\t\tmap(sharedAccounts, async ({ ownerEmail }: { ownerEmail: string }) => {\n\t\t\tconst response = await getFolderRequest({ view }, ownerEmail);\n\t\t\tif (response?.folder?.length) {\n\t\t\t\treturn {\n\t\t\t\t\t...response.folder[0],\n\t\t\t\t\toname: response.folder[0].name,\n\t\t\t\t\towner: ownerEmail,\n\t\t\t\t\tname: ownerEmail\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t);\n\nexport const useFoldersController = (view: FolderView): null => {\n\tconst [initializing, setInitializing] = useState(true);\n\tconst [seq, setSeq] = useState(-1);\n\n\tconst notify = useNotify();\n\n\tuseEffect(() => {\n\t\tif (initializing && view) {\n\t\t\tsetInitializing((previous) => !previous);\n\t\t\tgetFolderRequest({ view })\n\t\t\t\t.then((rootFolders: { folder: any }) => {\n\t\t\t\t\tgetShareInfoRequest().then((sharedFolders) => {\n\t\t\t\t\t\tif (sharedFolders?.folders) {\n\t\t\t\t\t\t\tconst sharedAccounts = filter(sharedFolders.folders, ['folderId', 1]);\n\t\t\t\t\t\t\tif (sharedAccounts.length) {\n\t\t\t\t\t\t\t\tconst filteredLinks = reject(rootFolders.folder[0].link, ['rid', 1]);\n\t\t\t\t\t\t\t\tgetFoldersByAccounts(sharedAccounts, view).then((response) => {\n\t\t\t\t\t\t\t\t\tif (!response.Fault) {\n\t\t\t\t\t\t\t\t\t\tconst folders = [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t...rootFolders.folder[0],\n\t\t\t\t\t\t\t\t\t\t\t\tlink: filteredLinks\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t...response\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\tfolderWorker.postMessage({\n\t\t\t\t\t\t\t\t\t\t\top: 'refresh',\n\t\t\t\t\t\t\t\t\t\t\tcurrentView: view,\n\t\t\t\t\t\t\t\t\t\t\tfolder: folders ?? []\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tconst folders = [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t...rootFolders.folder[0],\n\t\t\t\t\t\t\t\t\t\t\t\tlink: filteredLinks\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t\tfolderWorker.postMessage({\n\t\t\t\t\t\t\t\t\t\t\top: 'refresh',\n\t\t\t\t\t\t\t\t\t\t\tcurrentView: view,\n\t\t\t\t\t\t\t\t\t\t\tfolder: folders ?? []\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfolderWorker.postMessage({\n\t\t\t\t\t\t\t\t\top: 'refresh',\n\t\t\t\t\t\t\t\t\tcurrentView: view,\n\t\t\t\t\t\t\t\t\tfolder: rootFolders?.folder ?? []\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetInitializing(true);\n\t\t\t\t});\n\t\t}\n\t}, [initializing, view]);\n\n\tuseEffect(() => {\n\t\tif (!initializing && notify.length > 0) {\n\t\t\tforEach(sortBy(notify, 'seq'), (item) => {\n\t\t\t\tif (!isEmpty(notify) && (item.seq > seq || (seq > 1 && item.seq === 1))) {\n\t\t\t\t\tconst isNotifyRelatedToFolders =\n\t\t\t\t\t\t!isEmpty(notify) &&\n\t\t\t\t\t\t(item?.created?.folder ||\n\t\t\t\t\t\t\titem?.modified?.folder ||\n\t\t\t\t\t\t\titem.deleted ||\n\t\t\t\t\t\t\titem?.created?.link ||\n\t\t\t\t\t\t\titem?.modified?.link);\n\n\t\t\t\t\tif (isNotifyRelatedToFolders) {\n\t\t\t\t\t\tfolderWorker.postMessage({\n\t\t\t\t\t\t\top: 'notify',\n\t\t\t\t\t\t\tnotify: item,\n\t\t\t\t\t\t\tstate: useFolderStore.getState().folders\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tsetSeq(item.seq);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [initializing, notify, seq, view]);\n\treturn null;\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const FOLDER_VIEW = {\n\tsearch_folder: 'search folder',\n\ttag: 'tag',\n\tconversation: 'conversation',\n\tmessage: 'message',\n\tcontact: 'contact',\n\tdocument: 'document',\n\tappointment: 'appointment',\n\tvirtual_conversation: 'virtual conversation',\n\tremote_folder: 'remote folder',\n\twiki: 'wiki',\n\ttask: 'task',\n\tchat: 'chat'\n} as const;\n\n// eslint-disable-next-line no-shadow\nexport enum TagsActionsType {\n\tNEW = 'new',\n\tDELETE = 'delete',\n\tEDIT = 'edit',\n\tApply = 'apply'\n}\n\nexport const DRAG_DATA_TYPE = {\n\tMESSAGE: 'message',\n\tCONVERSATION: 'conversation',\n\tFOLDER: 'folder',\n\tCONTACT: 'contact'\n} as const;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nexport const ParticipantRole = {\n\tFROM: 'f',\n\tTO: 't',\n\tCARBON_COPY: 'c',\n\tBLIND_CARBON_COPY: 'b',\n\tREPLY_TO: 'r',\n\tSENDER: 's',\n\tREAD_RECEIPT_NOTIFICATION: 'n',\n\tRESENT_FROM: 'rf'\n} as const;\n\nexport type ParticipantRoleType = (typeof ParticipantRole)[keyof typeof ParticipantRole];\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { ErrorSoapBodyResponse, soapFetch } from '@zextras/carbonio-shell-ui';\nimport { isEmpty } from 'lodash';\n\nimport { ResFolder } from '../utils';\n\ntype GetShareInfoRequest = {\n\t_jsns: string;\n\tincludeSelf: number;\n};\n\ntype GetShareInfoResponse = {\n\t_jsns: string;\n\tshare: Array<ResFolder>;\n};\n\nexport const getShareInfoRequest = async (): Promise<{\n\tisFulfilled: boolean;\n\tfolders: Array<ResFolder>;\n}> => {\n\tconst result = await soapFetch<GetShareInfoRequest, GetShareInfoResponse | ErrorSoapBodyResponse>(\n\t\t'GetShareInfo',\n\t\t{\n\t\t\t_jsns: 'urn:zimbraAccount',\n\t\t\tincludeSelf: 0\n\t\t}\n\t);\n\n\tif ('Fault' in result) {\n\t\treturn Promise.reject(result.Fault);\n\t}\n\n\treturn Promise.resolve({ isFulfilled: !isEmpty(result), folders: result?.share ?? [] });\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { FOLDERS, ROOT_NAME } from '@zextras/carbonio-shell-ui';\nimport { sortBy } from 'lodash';\n\nimport { Folders } from '../../../types/folder';\nimport type { Folder, FolderView, LinkFolder, TreeNode } from '../../../types/folder';\n\nconst hasId = (f: { id: string }, id: string): boolean => f.id.split(':').includes(id);\nconst getOriginalId = (f: { id: string }): string => {\n\tconst parts = f.id.split(':');\n\treturn parts[1] ?? parts[0];\n};\n\n// TODO check if is still used by Calendars or Contacts\nexport const sortFolders = (f: Folder): string => {\n\tconst id = getOriginalId(f);\n\tif (id === FOLDERS.TRASH) {\n\t\treturn FOLDERS.LAST_SYSTEM_FOLDER_POSITION;\n\t}\n\treturn parseInt(id, 10) < 17 ? `   ${id}` : f.name.toLowerCase();\n};\n\nexport const isRoot = (f: Folder): boolean =>\n\tf.id === FOLDERS.USER_ROOT || (f as LinkFolder).oname === ROOT_NAME;\n\nexport const isTrash = (f: { id: string }): boolean => hasId(f, FOLDERS.TRASH);\n\nexport const isNestedInTrash = (item: { absFolderPath?: string }): boolean =>\n\t!!item?.absFolderPath?.includes(`/Trash/`);\n\nexport const isTrashOrNestedInIt = (item: { id: string; absFolderPath?: string }): boolean =>\n\tisTrash(item) || isNestedInTrash(item);\n\nexport const folderViewFilter =\n\t(v: FolderView) =>\n\t(deep?: boolean) =>\n\t(f: Folder): boolean =>\n\t\tf.view === v || !deep || (typeof f.view === 'undefined' && !isRoot(f));\n\nexport const filterNodes = <T>(\n\tchildren: TreeNode<T>[],\n\tf: (deep?: boolean) => (i: TreeNode<T>) => boolean,\n\tsortFunction?: (i: TreeNode<T>) => number | string,\n\tdeep?: boolean\n): TreeNode<T>[] => {\n\tconst childrenSorted = sortFunction ? sortBy(children, sortFunction) : children;\n\treturn childrenSorted\n\t\t.filter(f(deep))\n\t\t.map((i) => ({ ...i, children: filterNodes<TreeNode<T>>(i.children, f, sortFunction, true) }));\n};\n\ntype MapNodesOptions<T, U> = {\n\tmapFunction: (i: TreeNode<T>) => U;\n\tfilterFunction: (deep?: boolean) => (i: TreeNode<T>) => boolean;\n\trecursionKey: keyof U;\n\tsortFunction: (i: TreeNode<T>) => number | string;\n\tdeep: boolean;\n};\nexport const mapNodes = <T, U>(\n\tchildren: TreeNode<T>[],\n\t{ mapFunction, filterFunction, recursionKey, sortFunction, deep }: MapNodesOptions<T, U>\n): U[] =>\n\tsortBy(children, sortFunction).reduce((acc, folder) => {\n\t\tif (filterFunction(deep)(folder)) {\n\t\t\tacc.push({\n\t\t\t\t...mapFunction(folder),\n\t\t\t\t[recursionKey]: mapNodes<TreeNode<T>, U>(folder.children, {\n\t\t\t\t\tmapFunction,\n\t\t\t\t\tfilterFunction,\n\t\t\t\t\trecursionKey,\n\t\t\t\t\tsortFunction,\n\t\t\t\t\tdeep: true\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t\treturn acc;\n\t}, [] as U[]);\n\n/**\n * Recursive function that returns a flat map of the children folders\n * @param children\n */\nexport const getFlatChildrenFolders = (children: Array<Folder>): Folders => {\n\tlet destination: Folders = {};\n\tchildren.forEach((child) => {\n\t\tdestination[child.id] = child;\n\t\tif (child.children) {\n\t\t\tdestination = { ...destination, ...getFlatChildrenFolders(child.children) };\n\t\t}\n\t});\n\n\treturn destination;\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useMemo } from 'react';\n\nimport { FOLDERS, ROOT_NAME } from '@zextras/carbonio-shell-ui';\nimport { filter, find, keyBy, some, values } from 'lodash';\n\nimport { useFolderStore } from './store';\nimport { getFlatChildrenFolders } from './utils';\nimport type { Folder, Folders, LinkFolder, SearchFolder, Searches } from '../../../types';\n\n/**\n * Returns the folder with given ID or undefined\n * @params id */\nexport const useFolder = (id: string): Folder | undefined => useFolderStore((s) => s.folders?.[id]);\n\n/**\n * Returns the folder with given ID or undefined\n * @params id */\nexport const getFolder = (id: string): Folder | undefined =>\n\tuseFolderStore.getState()?.folders?.[id];\n\n/**\n * Returns a folders' map including roots and links. Each folder has its own tree structure included inside its children\n */\nexport const useFoldersMap = (): Folders => useFolderStore((s) => s.folders);\n\n/**\n * Returns a folders' map including roots and links. Each folder has its own tree structure included inside its children\n */\nexport const getFoldersMap = (): Folders => useFolderStore.getState().folders;\n\n/**\n * Returns a folders' array including only links. Each folder has its own tree structure included inside its children\n */\nexport const getLinksArray = (view?: string): Array<LinkFolder> =>\n\tfilter(values(useFolderStore.getState().folders), (folder: Folder) => {\n\t\tif (view && folder.view !== view) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn folder.isLink;\n\t}) as Array<LinkFolder>;\n\n/**\n * Returns the root folder id for a given folder\n * @param folder a Folder or LinkFolder\n * @returns the root folder id or null if the folder is not a link or the root folder\n */\nfunction getRootFolderId(folder: Folder | LinkFolder): string {\n\tconst parent = folder?.parent && getFolder(folder.parent);\n\tif ('oname' in folder && folder?.oname === ROOT_NAME) {\n\t\treturn folder.id;\n\t}\n\tif (parent) {\n\t\treturn getRootFolderId(parent);\n\t}\n\treturn folder.id;\n}\n\n/**\n * Returns the root folder of the provided folderId or undefined\n * @params id\n * @returns the root folder or undefined\n * */\nexport const useRoot = (id: string): Folder | undefined =>\n\tuseFolderStore((s) => {\n\t\tconst folder = s.folders?.[id];\n\t\tif (folder) {\n\t\t\tconst rootFolderId = getRootFolderId(folder);\n\t\t\treturn s.folders?.[rootFolderId];\n\t\t}\n\t\treturn undefined;\n\t});\n\n/**\n * Returns the root folder of the provided folderId or undefined\n * @params id\n * @returns the root folder or undefined\n * */\nexport const getRoot = (id: string): Folder | undefined => {\n\tconst folder = useFolderStore.getState().folders?.[id];\n\tif (folder) {\n\t\tconst rootFolderId = getRootFolderId(folder);\n\t\treturn useFolderStore.getState().folders?.[rootFolderId];\n\t}\n\treturn undefined;\n};\n\n/**\n * Returns a roots' array. Each root has its own tree structure included inside its children\n */\nexport const useRootsArray = (): Array<Folder> =>\n\tuseFolderStore((s) => filter(s.folders, (f) => f.id?.split(':')?.includes(FOLDERS.USER_ROOT)));\n\n/**\n * Returns a roots' array. Each root has its own tree structure included inside its children\n */\nexport const getRootsArray = (): Array<Folder> =>\n\tfilter(useFolderStore.getState().folders, (f) => f.id?.split(':')?.includes(FOLDERS.USER_ROOT));\n\n/**\n * Returns a roots' map. Each root has its own tree structure included inside its children\n */\nexport const useRootsMap = (): Record<string, Folder> =>\n\tuseFolderStore((s) =>\n\t\tkeyBy(\n\t\t\tfilter(s.folders, (f) => f.id?.split(':')?.includes(FOLDERS.USER_ROOT)),\n\t\t\t'id'\n\t\t)\n\t);\n\n/**\n * Returns a roots' map. Each root has its own tree structure included inside its children\n */\nexport const getRootsMap = (): Record<string, Folder> =>\n\tkeyBy(\n\t\tfilter(useFolderStore.getState().folders, (f) => f.id?.split(':')?.includes(FOLDERS.USER_ROOT)),\n\t\t'id'\n\t);\n\n// ROOTS BY VIEW\n/**\n * Returns a root with given user ID.\n * @params userId\n */\nexport const useRootByUser = (\n\tuserId: string\n): Folder | SearchFolder | Record<string, never> | undefined =>\n\tuseFolderStore((s) => find(s.folders, (f) => f.name === userId));\n\n/**\n * Returns a root with given user ID.\n * @params userId\n */\nexport const getRootByUser = (\n\tuserId: string\n): Folder | SearchFolder | Record<string, never> | undefined => {\n\tconst { folders } = useFolderStore.getState();\n\treturn find(folders, (f) => f.name === userId);\n};\n\n/**\n * Returns the root account id for a given folder\n * @param folder a Folder or LinkFolder\n * @returns the root account id or null if the folder is not a link or the root folder\n */\nexport function getRootAccountId(id: string): string | undefined {\n\tconst roots = getRootsArray();\n\tconst root = find(roots, (r) => some(r.id?.split(':'), (v) => id?.split(':')?.includes(v)));\n\n\treturn root?.id;\n}\n\n/**\n * Return a flat array of folder that are children of the given root\n * @param rootId\n */\nexport const useFoldersMapByRoot = (rootId: string): Folders => {\n\tconst root = useRoot(rootId);\n\n\treturn useMemo(() => getFlatChildrenFolders(root?.children ?? []), [root?.children]);\n};\n\n/**\n * Return a flat array of folder that are children of the given root\n * @param rootId\n */\nexport const getFoldersArrayByRoot = (rootId: string): Array<Folder> => {\n\tconst root = getRoot(rootId);\n\tif (!root) {\n\t\treturn [];\n\t}\n\n\treturn Object.values(getFlatChildrenFolders(root.children));\n};\n\n// SEARCHES\nexport const useSearchFolder = (id: string): SearchFolder | undefined =>\n\tuseFolderStore((s) => s.searches?.[id]);\nexport const getSearchFolder = (id: string): SearchFolder | undefined =>\n\tuseFolderStore.getState().searches[id];\nexport const useSearchFolders = (): Searches => useFolderStore((s) => s.searches);\nexport const getSearchFolders = (): Searches => useFolderStore.getState().searches;\n\n// useful hooks to update the value of a folder. Created because we don't receive acl data from notify when we modify folder grants.\n\n/**\n * Returns a callback function to update a specific folder.\n *\n * @returns callback function to update a specific folder\n */\nexport const useUpdateFolder = (): ((id: string, opt: Partial<Folder>) => void) =>\n\tuseFolderStore((s) => s.updateFolder);\n\n/**\n * Returns a callback function to update a specific folder.\n *\n * @returns callback function to update a specific folder\n */\nexport const getUpdateFolder = (): ((id: string, opt: Partial<Folder>) => void) =>\n\tuseFolderStore.getState().updateFolder;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport produce from 'immer';\nimport { create } from 'zustand';\n\nimport { Folder, FolderState } from '../../../types/folder';\nimport { folderWorker } from '../../../worker';\n\n// extra currying as suggested in https://github.com/pmndrs/zustand/blob/main/docs/guides/typescript.md#basic-usage\nexport const useFolderStore = create<FolderState>()((set) => ({\n\tfolders: {},\n\tlinksIdMap: {},\n\tsearches: {},\n\tupdateFolder: (id: string, opt: Partial<Folder>): void => {\n\t\tset(\n\t\t\tproduce((state) => {\n\t\t\t\tif (state?.folders?.[id]) {\n\t\t\t\t\tstate.folders[id] = {\n\t\t\t\t\t\t...state.folders[id],\n\t\t\t\t\t\t...opt\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}));\n\nfolderWorker.onmessage = ({ data }): void => {\n\tuseFolderStore.setState(data);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const folderWorker = new Worker(new URL('./folder', import.meta.url));\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { isNil } from 'lodash';\nimport { DefaultTheme } from 'styled-components';\n\nimport type { EditorAttachmentFiles } from '../types/editor';\nimport type { AttachmentPart } from '../types/messages';\n\nconst FileExtensionRegex = /^.+\\.([^.]+)$/;\n\nexport const calcColor = (label: string, theme: DefaultTheme): string => {\n\tlet sum = 0;\n\tfor (let i = 0; i < label.length; i += 1) {\n\t\tsum += label.charCodeAt(i);\n\t}\n\treturn theme.avatarColors[`avatar_${(sum % 50) + 1}`];\n};\n\n/**\n * @deprecated use the getAttachmentExtension on helpers/attachments.ts\n * @param file\n */\nexport const getFileExtension = (\n\tfile: EditorAttachmentFiles | AttachmentPart\n): { value: string; displayName?: string } => {\n\tswitch (file.contentType) {\n\t\tcase 'text/html':\n\t\t\treturn { value: 'html' };\n\n\t\tcase 'text/css':\n\t\t\treturn { value: 'css' };\n\n\t\tcase 'text/xml':\n\t\t\treturn { value: 'xml' };\n\n\t\tcase 'image/gif':\n\t\t\treturn { value: 'gif' };\n\n\t\tcase 'image/jpeg':\n\t\t\treturn { value: 'jpg' };\n\n\t\tcase 'application/x-javascript':\n\t\t\treturn { value: 'js' };\n\n\t\tcase 'application/atom+xml':\n\t\t\treturn { value: 'atom' };\n\n\t\tcase 'application/rss+xml':\n\t\t\treturn { value: 'rss' };\n\n\t\tcase 'text/mathml':\n\t\t\treturn { value: 'mml' };\n\n\t\tcase 'text/plain':\n\t\t\treturn { value: 'txt' };\n\n\t\tcase 'text/vnd.sun.jme.app-descriptor':\n\t\t\treturn { value: 'jad' };\n\n\t\tcase 'text/vnd.wap.wml':\n\t\t\treturn { value: 'wml' };\n\n\t\tcase 'text/x-component':\n\t\t\treturn { value: 'htc' };\n\n\t\tcase 'image/png':\n\t\t\treturn { value: 'png' };\n\n\t\tcase 'image/tiff':\n\t\t\treturn { value: 'tif,tiff', displayName: 'tif' };\n\n\t\tcase 'image/vnd.wap.wbmp':\n\t\t\treturn { value: 'wbmp' };\n\n\t\tcase 'image/x-icon':\n\t\t\treturn { value: 'ico' };\n\n\t\tcase 'image/x-jng':\n\t\t\treturn { value: 'jng' };\n\n\t\tcase 'image/x-ms-bmp':\n\t\t\treturn { value: 'bmp' };\n\n\t\tcase 'image/svg+xml':\n\t\t\treturn { value: 'svg' };\n\n\t\tcase 'image/webp':\n\t\t\treturn { value: 'webp' };\n\n\t\tcase 'application/java-archive':\n\t\t\treturn { value: 'jar,war,ear' };\n\n\t\tcase 'application/mac-binhex':\n\t\t\treturn { value: 'hqx' };\n\n\t\tcase 'application/msword':\n\t\t\treturn { value: 'doc' };\n\n\t\tcase 'application/pdf':\n\t\t\treturn { value: 'pdf' };\n\n\t\tcase 'application/postscript':\n\t\t\treturn { value: 'ps,eps,ai' };\n\n\t\tcase 'application/rtf':\n\t\t\treturn { value: 'rtf' };\n\n\t\tcase 'application/vnd.ms-excel':\n\t\t\treturn { value: 'xls' };\n\n\t\tcase 'application/vnd.ms-powerpoint':\n\t\t\treturn { value: 'ppt' };\n\n\t\tcase 'application/vnd.wap.wmlc':\n\t\t\treturn { value: 'wmlc' };\n\n\t\tcase 'application/vnd.google-earth.kml+xml':\n\t\t\treturn { value: 'kml' };\n\n\t\tcase 'application/vnd.google-earth.kmz':\n\t\t\treturn { value: 'kmz' };\n\n\t\tcase 'application/x-z-compressed':\n\t\t\treturn { value: 'z' };\n\n\t\tcase 'application/x-cocoa':\n\t\t\treturn { value: 'cco' };\n\n\t\tcase 'application/x-java-archive-diff':\n\t\t\treturn { value: 'jardiff' };\n\n\t\tcase 'application/x-java-jnlp-file':\n\t\t\treturn { value: 'jnlp' };\n\n\t\tcase 'application/x-makeself':\n\t\t\treturn { value: 'run' };\n\n\t\tcase 'application/x-perl':\n\t\t\treturn { value: 'pl,pm' };\n\n\t\tcase 'application/x-pilot':\n\t\t\treturn { value: 'prc,pdb' };\n\n\t\tcase 'application/x-rar-compressed':\n\t\t\treturn { value: 'rar' };\n\n\t\tcase 'application/x-redhat-package-manager':\n\t\t\treturn { value: 'rpm' };\n\n\t\tcase 'application/x-sea':\n\t\t\treturn { value: 'sea' };\n\n\t\tcase 'application/x-shockwave-flash':\n\t\t\treturn { value: 'swf' };\n\n\t\tcase 'application/x-stuffit':\n\t\t\treturn { value: 'sit' };\n\n\t\tcase 'application/x-tcl':\n\t\t\treturn { value: 'tcl' };\n\n\t\tcase 'application/x-x-ca-cert':\n\t\t\treturn { value: 'der' };\n\n\t\tcase 'application/x-xpinstall':\n\t\t\treturn { value: 'xpi' };\n\n\t\tcase 'application/xhtml+xml':\n\t\t\treturn { value: 'xhtml' };\n\n\t\tcase 'application/zip':\n\t\t\treturn { value: 'zip' };\n\n\t\tcase 'audio/midi':\n\t\t\treturn { value: 'midi' };\n\n\t\tcase 'audio/mpeg':\n\t\t\treturn { value: 'mp' };\n\n\t\tcase 'audio/ogg':\n\t\t\treturn { value: 'ogg' };\n\n\t\tcase 'audio/x-realaudio':\n\t\t\treturn { value: 'ra' };\n\n\t\tcase 'video/gpp':\n\t\t\treturn { value: 'gp' };\n\n\t\tcase 'video/mpeg':\n\t\t\treturn { value: 'mpeg' };\n\n\t\tcase 'video/quicktime':\n\t\t\treturn { value: 'mov' };\n\n\t\tcase 'video/x-flv':\n\t\t\treturn { value: 'flv' };\n\n\t\tcase 'video/x-mng':\n\t\t\treturn { value: 'mng' };\n\n\t\tcase 'video/x-ms-asf':\n\t\t\treturn { value: 'asf' };\n\n\t\tcase 'video/x-ms-wmv':\n\t\t\treturn { value: 'wmv' };\n\n\t\tcase 'video/x-msvideo':\n\t\t\treturn { value: 'avi' };\n\n\t\tcase 'video/mp':\n\t\t\treturn { value: 'mp' };\n\n\t\tcase 'message/rfc822':\n\t\t\treturn { value: 'EML' };\n\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\tvalue: isNil(FileExtensionRegex.exec(file?.filename ?? ''))\n\t\t\t\t\t? '?'\n\t\t\t\t\t: FileExtensionRegex.exec(file?.filename ?? '')?.[1] ?? ''\n\t\t\t};\n\t}\n};\n\nexport const FOLDER_ACTIONS = {\n\tMOVE: 'move',\n\tEMPTY_TRASH: 'emptyTrash',\n\tREMOVE_FROM_LIST: 'removeFromList',\n\tSHARES_INFO: 'sharesInfo',\n\tEDIT: 'edit',\n\tNEW: 'new',\n\tDELETE: 'delete',\n\tSHARE: 'share',\n\tSHARE_URL: 'share_url',\n\tTRASH: 'trash'\n} as const;\n\nexport const CONVACTIONS = {\n\tMOVE: 'move',\n\tFLAG: 'flag',\n\tUNFLAG: '!flag',\n\tMARK_READ: 'read',\n\tMARK_UNREAD: '!read',\n\tTAG: 'tag',\n\tUNTAG: '!tag',\n\tTRASH: 'trash',\n\tDELETE: 'delete',\n\tMARK_SPAM: 'spam',\n\tMARK_NOT_SPAM: '!spam'\n} as const;\n\nexport const convertToDecimal = (source: string): string => {\n\tlet result = '';\n\tfor (let i = 0; i < source.length; i += 1) {\n\t\tconst charCode = source.charCodeAt(i);\n\t\t// Encode non-ascii or double quotes\n\t\tif (charCode > 127 || charCode === 34) {\n\t\t\tlet temp = charCode.toString(10);\n\t\t\twhile (temp.length < 4) {\n\t\t\t\ttemp = `0${temp}`;\n\t\t\t}\n\t\t\tresult += `&#${temp};`;\n\t\t} else {\n\t\t\tresult += source.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { Account, t } from '@zextras/carbonio-shell-ui';\nimport { find, isArray } from 'lodash';\nimport moment from 'moment';\n\nimport type { Participant } from '../types';\n\nexport const getTimeLabel = (date: number): string => {\n\tconst momentDate = moment(date);\n\tif (momentDate.isSame(new Date(), 'day')) {\n\t\treturn momentDate.format('LT');\n\t}\n\tif (momentDate.isSame(new Date(), 'week')) {\n\t\treturn momentDate.format('dddd, LT');\n\t}\n\tif (momentDate.isSame(new Date(), 'month')) {\n\t\treturn momentDate.format('DD MMMM');\n\t}\n\treturn momentDate.format('DD/MM/YYYY');\n};\n\nexport const participantToString = (\n\tparticipant: Participant | undefined,\n\taccounts: Array<Account>\n): string => {\n\tconst me = find(accounts, ['name', participant?.address]);\n\tif (me) {\n\t\treturn t('label.me', 'Me');\n\t}\n\treturn participant?.fullName || participant?.name || participant?.address || '';\n};\n\nexport const isAvailableInTrusteeList = (\n\ttrusteeList: string | number | Array<number | string>,\n\taddress: string\n): boolean => {\n\tlet trusteeAddress: Array<string> = [];\n\tlet availableInTrusteeList = false;\n\tif (trusteeList) {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\ttrusteeAddress = isArray(trusteeList)\n\t\t\t? (trusteeList as string[])\n\t\t\t: typeof trusteeList === 'string'\n\t\t\t\t? trusteeList?.split(',')\n\t\t\t\t: [`${trusteeList}`];\n\t}\n\tif (trusteeAddress.length > 0) {\n\t\tconst domain = address.substring(address.lastIndexOf('@') + 1);\n\t\ttrusteeAddress.forEach((ta) => {\n\t\t\tif (ta === domain || ta === address) {\n\t\t\t\tavailableInTrusteeList = true;\n\t\t\t}\n\t\t});\n\t}\n\treturn availableInTrusteeList;\n};\n\nexport const LineType = {\n\tORIG_UNKNOWN: 'UNKNOWN',\n\tORIG_QUOTED: 'QUOTED',\n\tORIG_SEP_STRONG: 'SEP_STRONG',\n\tORIG_WROTE_STRONG: 'WROTE_STRONG',\n\tORIG_WROTE_WEAK: 'WROTE_WEAK',\n\tORIG_HEADER: 'HEADER',\n\tORIG_LINE: 'LINE',\n\tHTML_SEP_ID: 'zwchr',\n\tPLAINTEXT_SEP: '---------------------------',\n\tNOTES_SEPARATOR: '*~*~*~*~*~*~*~*~*~*',\n\tSIGNATURE_CLASS: 'signature-div',\n\tSIGNATURE_PRE_SEP: '---'\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const omitBy = (obj: any, check: (arg: unknown) => boolean): any => {\n\t// eslint-disable-next-line no-param-reassign\n\tobj = { ...obj };\n\t// eslint-disable-next-line no-param-reassign\n\tObject.entries(obj).forEach(([key, value]) => check(value) && delete obj[key]);\n\treturn obj;\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { FOLDERS } from '@zextras/carbonio-shell-ui';\nimport { TFunction } from 'i18next';\n\nexport const MAILS_ROUTE = 'mails';\nexport const BACKUP_SEARCH_ROUTE = 'backup-search';\n\nexport const MAIL_APP_ID = 'carbonio-mails-ui';\n\nexport const NO_ACCOUNT_NAME = 'No account';\n\nexport const RECOVER_MESSAGES_INTERVAL = 3;\n\ntype AttachmentTypeItemsConstantProps = {\n\tid: string;\n\tlabel: string;\n\ticon: string;\n\tsearchString: string;\n};\n\nexport const attachmentTypeItemsConstant = (\n\tt: TFunction\n): Array<AttachmentTypeItemsConstantProps> => [\n\t{\n\t\tid: 'application',\n\t\tlabel: t('attachment_type.application', 'Application'),\n\t\ticon: 'Code',\n\t\tsearchString: 'attachment:application/*'\n\t},\n\t{\n\t\tid: 'email',\n\t\tlabel: t('attachment_type.email', 'Email'),\n\t\ticon: 'Email',\n\t\tsearchString: 'attachment:message/rfc822'\n\t},\n\t{\n\t\tid: 'excel',\n\t\tlabel: t('attachment_type.excel', 'Excel'),\n\t\ticon: 'FileCalc',\n\t\tsearchString: 'attachment:application/vnd.ms-excel'\n\t},\n\t{\n\t\tid: 'html',\n\t\tlabel: t('attachment_type.html', 'HTML'),\n\t\ticon: 'FileHtml',\n\t\tsearchString: 'attachment:text/html'\n\t},\n\t{\n\t\tid: 'image',\n\t\tlabel: t('attachment_type.image', 'Image'),\n\t\ticon: 'Image',\n\t\tsearchString: 'attachment:image'\n\t},\n\t{\n\t\tid: 'pdf',\n\t\tlabel: t('attachment_type.pdf', 'PDF'),\n\t\ticon: 'FilePdf',\n\t\tsearchString: 'attachment:application/pdf'\n\t},\n\t{\n\t\tid: 'power-point',\n\t\tlabel: t('attachment_type.powerpoint', 'Powerpoint'),\n\t\ticon: 'FilePresentation',\n\t\tsearchString: 'attachment:application/vnd.ms-powerpoint'\n\t},\n\t{\n\t\tid: 'text-document',\n\t\tlabel: t('attachment_type.text_document', 'Text Document'),\n\t\ticon: 'FileText',\n\t\tsearchString: 'attachment:text'\n\t},\n\t{\n\t\tid: 'video',\n\t\tlabel: t('attachment_type.video', 'Video'),\n\t\ticon: 'Video',\n\t\tsearchString: 'attachment:video'\n\t},\n\t{\n\t\tid: 'word',\n\t\tlabel: t('attachment_type.word', 'Word'),\n\t\ticon: 'FileText',\n\t\tsearchString: 'attachment:word'\n\t},\n\t{\n\t\tid: 'zipped-file',\n\t\tlabel: t('attachment_type.zipped_file', 'Zipped File'),\n\t\ticon: 'FileZip',\n\t\tsearchString: 'attachment:application/zip OR attachment:application/x-zip-compressed'\n\t}\n];\n\ntype EmailStatusItemsConstantProps = {\n\tid: string;\n\tlabel: string;\n\tsearchString: string;\n};\n\nexport const emailStatusItemsConstant = (t: TFunction): Array<EmailStatusItemsConstantProps> => [\n\t{\n\t\tid: 'read',\n\t\tlabel: t('email_status.read', 'read'),\n\t\tsearchString: 'is:read'\n\t},\n\t{\n\t\tid: 'unread',\n\t\tlabel: t('email_status.unread', 'unread'),\n\t\tsearchString: 'is:unread'\n\t},\n\t{\n\t\tid: 'flagged',\n\t\tlabel: t('email_status.flagged', 'flagged'),\n\t\tsearchString: 'is:flagged'\n\t},\n\t{\n\t\tid: 'not-flagged',\n\t\tlabel: t('email_status.unflagged', 'not flagged'),\n\t\tsearchString: 'is:unflagged'\n\t},\n\t{\n\t\tid: 'draft',\n\t\tlabel: t('email_status.draft', 'draft'),\n\t\tsearchString: 'is:draft'\n\t},\n\t{\n\t\tid: 'send-by-me',\n\t\tlabel: t('email_status.sent', 'sent by me'),\n\t\tsearchString: 'is:sent'\n\t},\n\t{\n\t\tid: 'received-by-me',\n\t\tlabel: t('email_status.received', 'received by me'),\n\t\tsearchString: 'is:recevided'\n\t},\n\t{\n\t\tid: 'answered-by-me',\n\t\tlabel: t('email_status.replied', 'answered by me'),\n\t\tsearchString: 'is:replied'\n\t},\n\t{\n\t\tid: 'not-answered-by-me',\n\t\tlabel: t('email_status.unreplied', 'not answered by me'),\n\t\tsearchString: 'is:unreplied'\n\t},\n\t{\n\t\tid: 'forwarded',\n\t\tlabel: t('email_status.forwarded', 'forwarded'),\n\t\tsearchString: 'is:forwarded'\n\t},\n\t{\n\t\tid: 'not-forwarded',\n\t\tlabel: t('email_status.unforwarded', 'not forwarded'),\n\t\tsearchString: 'is:unforwarded'\n\t},\n\t{\n\t\tid: 'invitations',\n\t\tlabel: t('email_status.invitations', 'invitations'),\n\t\tsearchString: 'is:invite'\n\t},\n\t{\n\t\tid: 'conv-with-a-single-msg',\n\t\tlabel: t('email_status.solo', 'conversations with a single message'),\n\t\tsearchString: 'is:solo'\n\t},\n\t{\n\t\tid: 'from-me',\n\t\tlabel: t('email_status.fromme', 'from me'),\n\t\tsearchString: 'is:fromme'\n\t},\n\t{\n\t\tid: 'to-me',\n\t\tlabel: t('email_status.tome', 'to me'),\n\t\tsearchString: 'is:tome'\n\t},\n\t{\n\t\tid: 'in-copy-to-me',\n\t\tlabel: t('email_status.ccme', 'in copy to me'),\n\t\tsearchString: 'is:ccme'\n\t},\n\t{\n\t\tid: 'to-me-or-from-me',\n\t\tlabel: t('email_status.tofromme', 'to me or from me'),\n\t\tsearchString: 'is:tofromme'\n\t},\n\t{\n\t\tid: 'to-me-or-in-copy',\n\t\tlabel: t('email_status.toccme', 'to me or in copy to me'),\n\t\tsearchString: 'is:toccme'\n\t},\n\t{\n\t\tid: 'from-me-or-in-copy',\n\t\tlabel: t('email_status.fromccme', 'from me or in copy to me'),\n\t\tsearchString: 'is:fromccme'\n\t},\n\t{\n\t\tid: 'to-me-from-me',\n\t\tlabel: t('email_status.tofromccme', 'to me, from me or in copy to me'),\n\t\tsearchString: 'is:tofromccme'\n\t},\n\t{\n\t\tid: 'on-my-folders',\n\t\tlabel: t('email_status.local', 'on my folders'),\n\t\tsearchString: 'is:local'\n\t},\n\t{\n\t\tid: 'on-a-folder-shared-by-me',\n\t\tlabel: t('email_status.remote', 'on a folder shared by me'),\n\t\tsearchString: 'is:remote'\n\t},\n\t{\n\t\tid: 'in-all-the-folder',\n\t\tlabel: t('email_status.anywhere', 'in all the folders'),\n\t\tsearchString: 'is:anywhere'\n\t}\n];\n\nexport const MessageActionsDescriptors = {\n\tFLAG: {\n\t\tid: 'message-flag',\n\t\tdesc: 'Add flag'\n\t},\n\tUNFLAG: {\n\t\tid: 'message-unflag',\n\t\tdesc: 'Remove flag'\n\t},\n\tMARK_AS_READ: {\n\t\tid: 'message-mark_as_read',\n\t\tdesc: 'Mark as read'\n\t},\n\tMARK_AS_UNREAD: {\n\t\tid: 'message-mark_as_unread',\n\t\tdesc: 'Mark as unread'\n\t},\n\tMARK_AS_SPAM: {\n\t\tid: 'message-mark_as_spam',\n\t\tdesc: 'Mark as spam'\n\t},\n\tMARK_AS_NOT_SPAM: {\n\t\tid: 'message-mark_as_not_spam',\n\t\tdesc: 'Not spam'\n\t},\n\tPRINT: {\n\t\tid: 'message-print',\n\t\tdesc: 'Print'\n\t},\n\tSHOW_SOURCE: {\n\t\tid: 'message-show_original',\n\t\tdesc: 'Show original'\n\t},\n\tMOVE_TO_TRASH: {\n\t\tid: 'message-trash',\n\t\tdesc: 'Move to trash'\n\t},\n\tDELETE: {\n\t\tid: 'message-delete',\n\t\tdesc: 'Delete'\n\t},\n\tREPLY: {\n\t\tid: 'message-reply',\n\t\tdesc: 'Reply'\n\t},\n\tREPLY_ALL: {\n\t\tid: 'message-reply_all',\n\t\tdesc: 'Reply all'\n\t},\n\tFORWARD: {\n\t\tid: 'message-forward',\n\t\tdesc: 'Forward'\n\t},\n\tEDIT_AS_NEW: {\n\t\tid: 'message-edit_as_new',\n\t\tdesc: 'Edit as new'\n\t},\n\tEDIT_DRAFT: {\n\t\tid: 'message-edit_as_draft',\n\t\tdesc: 'Edit'\n\t},\n\tSEND: {\n\t\tid: 'message-send',\n\t\tdesc: 'Send'\n\t},\n\tREDIRECT: {\n\t\tid: 'message-redirect',\n\t\tdesc: 'Redirect'\n\t},\n\tMOVE: {\n\t\tid: 'message-move',\n\t\tdesc: 'Move'\n\t},\n\tRESTORE: {\n\t\tid: 'message-restore',\n\t\tdesc: 'Restore'\n\t},\n\tDELETE_PERMANENTLY: {\n\t\tid: 'message-delete-permanently',\n\t\tdesc: 'Delete Permanently'\n\t},\n\tPREVIEW_ON_SEPARATED_WINDOW: {\n\t\tid: 'preview-on-separated-window',\n\t\tdesc: 'Preview the message on a separated window'\n\t},\n\tDOWNLOAD_EML: {\n\t\tid: 'download-eml',\n\t\tdesc: 'Download EML'\n\t},\n\tCREATE_APPOINTMENT: {\n\t\tid: 'create-appointment',\n\t\tdesc: 'Create Appointment'\n\t}\n} as const;\n\nexport const ConversationActionsDescriptors = {\n\tPREVIEW_ON_SEPARATED_WINDOW: {\n\t\tid: 'preview-on-separated-window',\n\t\tdesc: 'Preview the conversation on a separated window'\n\t},\n\tFLAG: {\n\t\tid: 'flag-conversation',\n\t\tdesc: 'Add flag'\n\t},\n\tUNFLAG: {\n\t\tid: 'unflag-conversation',\n\t\tdesc: 'Remove flag'\n\t},\n\tMARK_AS_READ: {\n\t\tid: 'read-conversation',\n\t\tdesc: 'Mark as read'\n\t},\n\tMARK_AS_UNREAD: {\n\t\tid: 'unread-conversation',\n\t\tdesc: 'Mark as unread'\n\t},\n\tMOVE_TO_TRASH: {\n\t\tid: 'conversation-trash',\n\t\tdesc: 'Move to trash'\n\t},\n\tREPLY: {\n\t\tid: 'conversation-reply',\n\t\tdesc: 'Reply'\n\t},\n\tREPLY_ALL: {\n\t\tid: 'conversation-reply_all',\n\t\tdesc: 'Reply all'\n\t},\n\tFORWARD: {\n\t\tid: 'conversation-forward',\n\t\tdesc: 'Forward'\n\t}\n} as const;\n\nexport const GenericActionDescriptors = {\n\tSELECT_FOLDERS: {\n\t\tid: 'select-folders',\n\t\tdesc: 'Select folders'\n\t}\n};\n\nexport const FilterActionsDescriptors = {\n\tAPPLY: {\n\t\tid: 'apply-filter-on-folder',\n\t\tdesc: 'Apply filter to a folder'\n\t}\n} as const;\n\nexport const FOLDERS_DESCRIPTORS = {\n\tINBOX: {\n\t\tid: FOLDERS.INBOX,\n\t\tdesc: 'inbox'\n\t},\n\tSENT: {\n\t\tid: FOLDERS.SENT,\n\t\tdesc: 'sent'\n\t},\n\tDRAFTS: {\n\t\tid: FOLDERS.DRAFTS,\n\t\tdesc: 'drafts'\n\t},\n\tSPAM: {\n\t\tid: FOLDERS.SPAM,\n\t\tdesc: 'junk'\n\t},\n\tTRASH: {\n\t\tid: FOLDERS.TRASH,\n\t\tdesc: 'trash'\n\t},\n\tUSER_DEFINED: {\n\t\tid: '1234567',\n\t\tdesc: 'user defined'\n\t}\n};\n\nconst SNACKBAR_DEFAULT_TIMEOUT = 3000;\n\nexport const TIMEOUTS = {\n\tSNACKBAR_DEFAULT_TIMEOUT,\n\tDRAFT_SAVE_DELAY: 2000,\n\tSET_AS_SPAM: SNACKBAR_DEFAULT_TIMEOUT,\n\tREDIRECT: SNACKBAR_DEFAULT_TIMEOUT,\n\tDRAFT_INFO_HIDING_DELAY: 3000,\n\tCOMPLETED_UPLOAD_NOTIFICATION_VISIBILITY: 3000\n};\n\nexport const LIST_LIMIT = {\n\tINITIAL_LIMIT: 100,\n\tLOAD_MORE_LIMIT: 50\n};\n\nexport const LOCAL_STORAGES = {\n\tEXPANDED_FOLDERS: 'open_mails_folders'\n};\n\nexport const EditViewActions = {\n\tNEW: 'new',\n\tEDIT_AS_DRAFT: 'editAsDraft',\n\tEDIT_AS_NEW: 'editAsNew',\n\tREPLY: 'reply',\n\tREPLY_ALL: 'replyAll',\n\tFORWARD: 'forward',\n\tMAIL_TO: 'mailTo',\n\tCOMPOSE: 'compose',\n\tPREFILL_COMPOSE: 'prefillCompose',\n\tRESUME: 'resume'\n} as const;\n\nexport const PROCESS_STATUS = {\n\tRUNNING: 'running',\n\tCOMPLETED: 'completed',\n\tABORTED: 'aborted'\n} as const;\n\nexport const EDIT_VIEW_CLOSING_REASONS = {\n\tEXTERNAL_CLOSE_REQUEST: 'externalRequest',\n\tMESSAGE_SENT: 'send',\n\tMESSAGE_SEND_SCHEDULED: 'sendLater'\n} as const;\n\nexport const SORTING_OPTIONS = {\n\tunread: { label: 'unread', value: 'read' },\n\timportant: { label: 'important', value: 'priority' },\n\tflagged: { label: 'flagged', value: 'flag' },\n\tattachment: { label: 'attachment', value: 'attach' },\n\tfrom: { label: 'from', value: 'name' },\n\tto: { label: 'to', value: 'rcpt' },\n\tdate: { label: 'date', value: 'date' },\n\tsubject: { label: 'subject', value: 'subj' },\n\tsize: { label: 'size', value: 'size' }\n} as const;\n\nexport const SORTING_DIRECTION = {\n\tASCENDING: 'Asc',\n\tDESCENDING: 'Desc'\n} as const;\n\nexport const SORT_ICONS = {\n\tASCENDING: 'ZaListOutline',\n\tDESCENDING: 'AzListOutline'\n} as const;\n\nexport const API_REQUEST_STATUS = {\n\tpending: 'pending',\n\terror: 'error',\n\tfulfilled: 'fulfilled'\n} as const;\n\nexport const SEARCHED_FOLDER_STATE_STATUS = {\n\tempty: 'empty',\n\tpending: 'pending',\n\tcomplete: 'complete',\n\thasMore: 'hasMore',\n\thasChange: 'hasChange',\n\terror: 'error',\n\tincomplete: 'incomplete'\n} as const;\n\nexport const EXTRA_WINDOW_ACTION_ID = 'extraWindowActions';\n\nexport const BACKUP_SEARCH_STATUS = {\n\tempty: 'empty',\n\tloading: 'loading',\n\tcompleted: 'completed'\n} as const;\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useMemo } from 'react';\n\nimport { useTheme } from '@zextras/carbonio-design-system';\nimport { isNil, reduce } from 'lodash';\n\nimport { calcColor } from '../commons/utilities';\nimport type {\n\tAbstractAttachment,\n\tMailMessagePart,\n\tSavedAttachment,\n\tUnsavedAttachment\n} from '../types';\n\nconst FileExtensionRegex = /^.+\\.([^.]+)$/;\nexport const CIDURL_REGEX = '^(?:cid:)*(.+)$';\nexport const REFERRED_CIDURL_PATTERN = '\"cid:([^\"]+)\"';\nexport const DOWNLOADSERVICEURL_REGEX = '\\\\/service\\\\/home\\\\/~\\\\/\\\\?';\nexport const EML_FILENAME_REGEX = '^(.+)\\\\.eml$';\nexport const IMAGE_MIMETYPE_REGEX = '^image\\\\/';\nexport const MIMETYPE_MULTIPART_ALTERNATIVE = 'multipart/alternative';\nexport const MIMETYPE_PLAINTEXT = 'text/plain';\nexport const MIMETYPE_RICHTEXT = 'text/html';\nexport const MIMETYPE_EML = 'message/rfc822';\n\nexport function findAttachments(\n\tparts: MailMessagePart[],\n\tacc: Array<Omit<AbstractAttachment, 'isInline'>>\n): Array<Omit<AbstractAttachment, 'isInline'>> {\n\treturn reduce(\n\t\tparts,\n\t\t(found, part: MailMessagePart) => {\n\t\t\tif (part && (part.disposition === 'attachment' || part.disposition === 'inline') && part.ci) {\n\t\t\t\tfound.push({ ...part, filename: part.filename ?? '' });\n\t\t\t}\n\t\t\tif (part.parts) return findAttachments(part.parts, found);\n\t\t\treturn acc;\n\t\t},\n\t\tacc\n\t);\n}\n\nexport const isEml = (part: MailMessagePart): boolean =>\n\tpart.contentType === MIMETYPE_EML ||\n\t(part.filename !== undefined && new RegExp(EML_FILENAME_REGEX, 'gi').test(part.filename));\n\nexport const isImage = (part: MailMessagePart): boolean =>\n\tnew RegExp(IMAGE_MIMETYPE_REGEX, 'g').test(part.contentType);\n\n/**\n * Extract the inner part of the content id removing the\n * angle brackets (if present)\n * @param contentId\n */\nexport const extractContentIdInnerPart = (contentId: string): string | null => {\n\tconst regex = /^<?([^<>]+)>?$/;\n\tconst tokens = regex.exec(contentId);\n\tif (!tokens) {\n\t\treturn null;\n\t}\n\n\treturn tokens[1];\n};\n\n/**\n * Tells if the 2 given content-id are the same, ignoring the\n * angle brackets. If any of the 2 given arguments is not a\n * valid content-id the result will be false\n *\n * @param contentId\n * @param otherContentId\n */\nexport const isContentIdEqual = (contentId: string, otherContentId: string): boolean => {\n\tconst contentIdInnerPart = extractContentIdInnerPart(contentId);\n\tconst otherContentIdInnerPart = extractContentIdInnerPart(otherContentId);\n\tif (!contentIdInnerPart || !otherContentIdInnerPart) {\n\t\treturn false;\n\t}\n\n\treturn contentIdInnerPart === otherContentIdInnerPart;\n};\n\nexport const isCidUrl = (url: string): boolean => new RegExp(CIDURL_REGEX, 'gi').test(url);\n\nexport const getCidFromCidUrl = (cidUrl: string): string | null => {\n\tconst cidUrlTokens = new RegExp(CIDURL_REGEX, 'gi').exec(cidUrl);\n\tif (!cidUrlTokens) {\n\t\treturn null;\n\t}\n\treturn cidUrlTokens[1];\n};\n\nexport const getCidFromReference = (cidReference: string): string | null => {\n\tconst cidReferenceTokens = new RegExp(REFERRED_CIDURL_PATTERN, 'gi').exec(cidReference);\n\tif (!cidReferenceTokens) {\n\t\treturn null;\n\t}\n\treturn cidReferenceTokens[1];\n};\n\n/**\n *\n * @param richText\n */\nconst getCidReferences = (richText: string): Array<string> => {\n\tconst result: Array<string> = [];\n\tconst doc = new DOMParser().parseFromString(richText, MIMETYPE_RICHTEXT);\n\tconst escapedText = doc.documentElement.outerHTML;\n\tif (!escapedText) {\n\t\treturn result;\n\t}\n\n\tconst matches = escapedText.match(new RegExp(REFERRED_CIDURL_PATTERN, 'g'));\n\tmatches && result.push(...matches);\n\n\treturn result;\n};\n\n/**\n *\n * @param parts\n */\nexport const getReferredContentIds = (parts: Array<MailMessagePart>): Array<string> => {\n\tconst result: Array<string> = [];\n\tparts.forEach((part) => {\n\t\tif (part.contentType === MIMETYPE_RICHTEXT && part.content) {\n\t\t\tgetCidReferences(part.content).forEach((cidReference) => {\n\t\t\t\tconst cid = getCidFromReference(cidReference);\n\t\t\t\tif (cid) {\n\t\t\t\t\tresult.push(cid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (part.parts) {\n\t\t\tresult.push(...getReferredContentIds(part.parts));\n\t\t}\n\t});\n\treturn result;\n};\n\nexport const isReferredCid = (cid: string, referredCids: Array<string>): boolean =>\n\treferredCids.reduce((result, referredCid) => isContentIdEqual(cid, referredCid) || result, false);\n\n/**\n * Filters the message parts to collect body content and attachments.\n *\n *\n * @param parts\n * @param filtered\n */\nexport function filterAttachmentsParts(\n\tparts: Array<MailMessagePart>,\n\tfiltered: Array<MailMessagePart>,\n\treferredCids: Array<string>\n): Array<MailMessagePart> {\n\treturn reduce(\n\t\tparts,\n\t\t(filtered, part) => {\n\t\t\tconst isReferredByCid = part.ci && isReferredCid(part.ci, referredCids);\n\t\t\tif (\n\t\t\t\tpart.disposition === 'attachment' ||\n\t\t\t\t(part.disposition === 'inline' && part.filename) ||\n\t\t\t\t(part.disposition === undefined && isReferredByCid)\n\t\t\t) {\n\t\t\t\t// Force the inline disposition if the part is referred by something else in the body\n\t\t\t\tif (part.disposition === undefined && isReferredByCid) {\n\t\t\t\t\tfiltered.push({\n\t\t\t\t\t\t...part,\n\t\t\t\t\t\tdisposition: 'inline'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfiltered.push(part);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (part.parts && !isEml(part)) {\n\t\t\t\tfilterAttachmentsParts(part.parts, filtered, referredCids);\n\t\t\t}\n\t\t\treturn filtered;\n\t\t},\n\t\tfiltered\n\t);\n}\n\nexport function getAttachmentParts(parts: Array<MailMessagePart>): Array<MailMessagePart> {\n\tconst referredCids = getReferredContentIds(parts);\n\treturn filterAttachmentsParts(parts, [], referredCids);\n}\n\nexport const getAttachmentExtension = (\n\tfile: AbstractAttachment\n): { value: string; displayName?: string } => {\n\tswitch (file.contentType) {\n\t\tcase 'text/html':\n\t\t\treturn { value: 'html' };\n\n\t\tcase 'text/css':\n\t\t\treturn { value: 'css' };\n\n\t\tcase 'text/xml':\n\t\t\treturn { value: 'xml' };\n\n\t\tcase 'image/gif':\n\t\t\treturn { value: 'gif' };\n\n\t\tcase 'image/jpeg':\n\t\t\treturn { value: 'jpg' };\n\n\t\tcase 'application/x-javascript':\n\t\t\treturn { value: 'js' };\n\n\t\tcase 'application/atom+xml':\n\t\t\treturn { value: 'atom' };\n\n\t\tcase 'application/rss+xml':\n\t\t\treturn { value: 'rss' };\n\n\t\tcase 'text/mathml':\n\t\t\treturn { value: 'mml' };\n\n\t\tcase 'text/plain':\n\t\t\treturn { value: 'txt' };\n\n\t\tcase 'text/vnd.sun.jme.app-descriptor':\n\t\t\treturn { value: 'jad' };\n\n\t\tcase 'text/vnd.wap.wml':\n\t\t\treturn { value: 'wml' };\n\n\t\tcase 'text/x-component':\n\t\t\treturn { value: 'htc' };\n\n\t\tcase 'image/png':\n\t\t\treturn { value: 'png' };\n\n\t\tcase 'image/tiff':\n\t\t\treturn { value: 'tif,tiff', displayName: 'tif' };\n\n\t\tcase 'image/vnd.wap.wbmp':\n\t\t\treturn { value: 'wbmp' };\n\n\t\tcase 'image/x-icon':\n\t\t\treturn { value: 'ico' };\n\n\t\tcase 'image/x-jng':\n\t\t\treturn { value: 'jng' };\n\n\t\tcase 'image/x-ms-bmp':\n\t\t\treturn { value: 'bmp' };\n\n\t\tcase 'image/svg+xml':\n\t\t\treturn { value: 'svg' };\n\n\t\tcase 'image/webp':\n\t\t\treturn { value: 'webp' };\n\n\t\tcase 'application/java-archive':\n\t\t\treturn { value: 'jar,war,ear' };\n\n\t\tcase 'application/mac-binhex':\n\t\t\treturn { value: 'hqx' };\n\n\t\tcase 'application/msword':\n\t\t\treturn { value: 'doc' };\n\n\t\tcase 'application/pdf':\n\t\t\treturn { value: 'pdf' };\n\n\t\tcase 'application/postscript':\n\t\t\treturn { value: 'ps,eps,ai' };\n\n\t\tcase 'application/rtf':\n\t\t\treturn { value: 'rtf' };\n\n\t\tcase 'application/vnd.ms-excel':\n\t\t\treturn { value: 'xls' };\n\n\t\tcase 'application/vnd.ms-powerpoint':\n\t\t\treturn { value: 'ppt' };\n\n\t\tcase 'application/vnd.wap.wmlc':\n\t\t\treturn { value: 'wmlc' };\n\n\t\tcase 'application/vnd.google-earth.kml+xml':\n\t\t\treturn { value: 'kml' };\n\n\t\tcase 'application/vnd.google-earth.kmz':\n\t\t\treturn { value: 'kmz' };\n\n\t\tcase 'application/x-z-compressed':\n\t\t\treturn { value: 'z' };\n\n\t\tcase 'application/x-cocoa':\n\t\t\treturn { value: 'cco' };\n\n\t\tcase 'application/x-java-archive-diff':\n\t\t\treturn { value: 'jardiff' };\n\n\t\tcase 'application/x-java-jnlp-file':\n\t\t\treturn { value: 'jnlp' };\n\n\t\tcase 'application/x-makeself':\n\t\t\treturn { value: 'run' };\n\n\t\tcase 'application/x-perl':\n\t\t\treturn { value: 'pl,pm' };\n\n\t\tcase 'application/x-pilot':\n\t\t\treturn { value: 'prc,pdb' };\n\n\t\tcase 'application/x-rar-compressed':\n\t\t\treturn { value: 'rar' };\n\n\t\tcase 'application/x-redhat-package-manager':\n\t\t\treturn { value: 'rpm' };\n\n\t\tcase 'application/x-sea':\n\t\t\treturn { value: 'sea' };\n\n\t\tcase 'application/x-shockwave-flash':\n\t\t\treturn { value: 'swf' };\n\n\t\tcase 'application/x-stuffit':\n\t\t\treturn { value: 'sit' };\n\n\t\tcase 'application/x-tcl':\n\t\t\treturn { value: 'tcl' };\n\n\t\tcase 'application/x-x-ca-cert':\n\t\t\treturn { value: 'der' };\n\n\t\tcase 'application/x-xpinstall':\n\t\t\treturn { value: 'xpi' };\n\n\t\tcase 'application/xhtml+xml':\n\t\t\treturn { value: 'xhtml' };\n\n\t\tcase 'application/zip':\n\t\t\treturn { value: 'zip' };\n\n\t\tcase 'audio/midi':\n\t\t\treturn { value: 'midi' };\n\n\t\tcase 'audio/mpeg':\n\t\t\treturn { value: 'mp' };\n\n\t\tcase 'audio/ogg':\n\t\t\treturn { value: 'ogg' };\n\n\t\tcase 'audio/x-realaudio':\n\t\t\treturn { value: 'ra' };\n\n\t\tcase 'video/gpp':\n\t\t\treturn { value: 'gp' };\n\n\t\tcase 'video/mpeg':\n\t\t\treturn { value: 'mpeg' };\n\n\t\tcase 'video/quicktime':\n\t\t\treturn { value: 'mov' };\n\n\t\tcase 'video/x-flv':\n\t\t\treturn { value: 'flv' };\n\n\t\tcase 'video/x-mng':\n\t\t\treturn { value: 'mng' };\n\n\t\tcase 'video/x-ms-asf':\n\t\t\treturn { value: 'asf' };\n\n\t\tcase 'video/x-ms-wmv':\n\t\t\treturn { value: 'wmv' };\n\n\t\tcase 'video/x-msvideo':\n\t\t\treturn { value: 'avi' };\n\n\t\tcase 'video/mp':\n\t\t\treturn { value: 'mp' };\n\n\t\tcase 'message/rfc822':\n\t\t\treturn { value: 'EML' };\n\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\tvalue: isNil(FileExtensionRegex.exec(file?.filename ?? ''))\n\t\t\t\t\t? '?'\n\t\t\t\t\t: FileExtensionRegex.exec(file?.filename ?? '')?.[1] ?? ''\n\t\t\t};\n\t}\n};\n\nexport const getSizeDescription = (size: number): string => {\n\tlet value = '';\n\tif (size < 1024000) {\n\t\tvalue = `${Math.round((size / 1024) * 100) / 100} KB`;\n\t} else if (size < 1024000000) {\n\t\tvalue = `${Math.round((size / 1024 / 1024) * 100) / 100} MB`;\n\t} else {\n\t\tvalue = `${Math.round((size / 1024 / 1024 / 1024) * 100) / 100} GB`;\n\t}\n\treturn value;\n};\n\nexport const useAttachmentIconColor = (attachment: UnsavedAttachment | SavedAttachment): string => {\n\tconst theme = useTheme();\n\treturn useMemo<string>(\n\t\t(): string => calcColor(attachment.contentType ?? '', theme),\n\t\t[attachment.contentType, theme]\n\t);\n};\n\nexport const isDownloadServicedUrl = (url: string): boolean =>\n\tnew RegExp(DOWNLOADSERVICEURL_REGEX, 'g').test(url);\n\nexport const composeAttachmentDownloadUrl = (attachment: SavedAttachment): string =>\n\t`/service/home/~/?auth=co&id=${attachment.messageId}&part=${attachment.partName}`;\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { FOLDERS, getUserAccount } from '@zextras/carbonio-shell-ui';\nimport { find } from 'lodash';\n\nimport { isConversation } from './messages';\nimport { useFolderStore } from '../carbonio-ui-commons/store/zustand/folder/store';\nimport type { Folder, Folders } from '../carbonio-ui-commons/types/folder';\nimport { NO_ACCOUNT_NAME } from '../constants';\nimport type { MailMessage, Conversation } from '../types';\n\n/*\n * Describe the folder id syntax\n *\n * [<zid>:]<folderId>\n *\n * e.g. a79fa996-e90e-4f04-97c4-c84209bb8277:2\n */\nconst FOLDERID_REGEX = /^([^:]+(?=:))*:?(\\d+)$/;\n\ntype FolderIdType = { zid: string | null; id: string | null };\n\n/**\n * Parse the given folder id and returns on object with the composing parts of the folder id\n * @param folderId\n */\nexport const getFolderIdParts = (folderId: string): FolderIdType => {\n\tconst result: FolderIdType = { zid: null, id: null };\n\n\tif (!folderId || !folderId.match(FOLDERID_REGEX)) {\n\t\treturn result;\n\t}\n\n\tconst parts = FOLDERID_REGEX.exec(folderId);\n\tif (!parts) {\n\t\treturn result;\n\t}\n\n\t[, result.zid = null, result.id = null] = parts;\n\treturn result;\n};\n\n/**\n * Get the account name of the owner of the given folder, if the owner is an\n * \"other\" account, different from the primary account of the current user.\n * If the owner is the primary account then <code>null</code> is returned\n * @param folderId\n * @param folderRoots\n */\nexport const getFolderOtherOwnerAccountName = (\n\tfolderId: string,\n\tfolderRoots: Folders\n): string | null => {\n\tif (!folderId) {\n\t\treturn null;\n\t}\n\n\tconst { zid } = getFolderIdParts(folderId);\n\tif (!zid) {\n\t\treturn null;\n\t}\n\n\t/** find the folderRoots for which the id corresponds to the message zid\n\t * if the folderRoots has an owner, return the owner\n\t * if not, return null\n\t * */\n\n\tconst matchingFolderRoot = find(folderRoots, (c) => c.id.includes(zid));\n\tif (!matchingFolderRoot) {\n\t\treturn null;\n\t}\n\n\treturn 'owner' in matchingFolderRoot && matchingFolderRoot.owner\n\t\t? matchingFolderRoot.owner\n\t\t: null;\n};\n\n/**\n * Returns the account name of the owner of the folder, based on the folder id\n * @param folderId\n * @param folderRoots\n */\nexport const getFolderOwnerAccountName = (folderId: string, folderRoots: Folders): string => {\n\tconst primaryAccount = getUserAccount();\n\n\t/*\n\t * Try to get the account of the \"other\" owner, aka an owner which\n\t * is not the primary account of the current user\n\t */\n\tconst otherOwnerAccount = getFolderOtherOwnerAccountName(folderId, folderRoots);\n\n\tif (!otherOwnerAccount) {\n\t\treturn primaryAccount?.name ?? NO_ACCOUNT_NAME;\n\t}\n\n\treturn otherOwnerAccount;\n};\n\n/**\n * Returns the account name of the owner of the message, based on the message's parent folder\n * @param message\n * @param folderRoots\n */\nexport const getMessageOwnerAccountName = (message: MailMessage, folderRoots: Folders): string =>\n\tgetFolderOwnerAccountName(message.parent, folderRoots);\n\n/**\n * Returns the parent folder id for a given folder\n * @param folderPath a Folder or LinkFolder\n * @returns the path to pass down as props to the Breadcrumb component\n */\nexport const getFolderPathForBreadcrumb = (\n\tfolderPath: string\n): { folderPathFirstPart: string; folderPathLastPart: string } => {\n\tif (folderPath === '') return { folderPathFirstPart: '', folderPathLastPart: '' };\n\tconst folderPathArray = folderPath.split('/');\n\tconst folderPathLastPart = `/ ${folderPathArray[folderPathArray.length - 1]}`;\n\tfolderPathArray.pop();\n\tconst folderPathFirstPart = folderPathArray.join('/');\n\treturn { folderPathFirstPart, folderPathLastPart };\n};\n\n/**\n * Tells if a folder with the given id is a spam folder\n * @param folderId\n * @param folderType\n */\nexport const isA = (folderId: string, folderType: keyof Folders): boolean => {\n\tif (!folderId) {\n\t\treturn false;\n\t}\n\treturn getFolderIdParts(folderId).id === folderType;\n};\n\n/**\n * Tells if a folder with the given id is a root folder\n * @param folderId\n */\nexport const isRoot = (folderId: string): boolean => isA(folderId, FOLDERS.USER_ROOT);\n\n/**\n * Tells if a folder with the given id is am inbox folder\n * @param folderId\n */\nexport const isInbox = (folderId: string): boolean => isA(folderId, FOLDERS.INBOX);\n\n/**\n * Tells if a folder with the given id is a trash folder\n * @param folderId\n */\nexport const isTrash = (folderId: string): boolean => isA(folderId, FOLDERS.TRASH);\n\n/**\n * Tells if a folder with the given id is a spam folder\n * @param folderId\n */\nexport const isSpam = (folderId: string): boolean => isA(folderId, FOLDERS.SPAM);\n\n/**\n * Tells if a folder with the given id is a spam folder\n * @param folderId\n */\nexport const isSent = (folderId: string): boolean => isA(folderId, FOLDERS.SENT);\n\n/**\n * Tells if a folder with the given id is a draft folder\n * @param folderId\n */\nexport const isDraft = (folderId: string): boolean => isA(folderId, FOLDERS.DRAFTS);\n\n/**\n * Tells if a folder is a trashed folder\n * @param folder\n * @param folderId\n */\nexport const isTrashed = ({\n\tfolder,\n\tfolderId\n}: {\n\tfolder?: Folder;\n\tfolderId?: string;\n}): boolean => {\n\tif (!folder && !folderId) {\n\t\treturn false;\n\t}\n\tconst folderIdAbsPath = useFolderStore.getState()?.folders?.[folderId ?? '']?.absFolderPath;\n\n\tconst path = folder ? folder.absFolderPath : folderIdAbsPath;\n\tif (!path) {\n\t\treturn false;\n\t}\n\n\treturn path.toLowerCase().startsWith('/trash');\n};\n\n/**\n * Tells if a folder is a subfolder of the inbox folder\n * @param folderId\n */\nexport const isInboxSubfolder = ({\n\tfolder,\n\tfolderId\n}: {\n\tfolder?: Folder;\n\tfolderId?: string;\n}): boolean => {\n\tif (!folder && !folderId) {\n\t\treturn false;\n\t}\n\n\tconst folderIdAbsPath = useFolderStore.getState()?.folders?.[folderId ?? '']?.absFolderPath;\n\tconst path = folder ? folder.absFolderPath : folderIdAbsPath;\n\tif (!path) {\n\t\treturn false;\n\t}\n\n\treturn path.toLowerCase().startsWith('/inbox');\n};\n\n/**\n * Returns the parent folder id of the given message.\n *\n * In most of the cases the id coincide with the \"parent\" property of\n * the message, but they differ when the message is contained in a linked folder: in this\n * case the \"parent\" refers to the original owner folder zid and id, so there is the need\n * to \"translate\" those ids\n *\n * @param item - Message or conversation\n */\nexport const getParentFolderId = (item: MailMessage | Conversation): string | null => {\n\tif (!item) {\n\t\treturn null;\n\t}\n\n\tconst parentId = isConversation(item) ? item.messages[0].parent : item.parent;\n\tconst parentParts = getFolderIdParts(parentId);\n\n\t/*\n\t * If the zid is not present the id is referring to a normal user's folder\n\t * so there is no need to search among the stored folders\n\t */\n\tif (!parentParts.zid) {\n\t\treturn parentId;\n\t}\n\n\t/*\n\t * If the parentId is in the form zid:(r)id it could refer to a shared account folder\n\t * or a linked folder.\n\t */\n\n\t// First attempt: search for a shared account folder among the stored folders.\n\tif (useFolderStore.getState()?.folders?.[parentId]) {\n\t\treturn parentId;\n\t}\n\n\t// Second attempt: search for an entry on the links id map, or return null otherwise\n\tconst state = useFolderStore.getState();\n\treturn state.linksIdMap[parentId] ?? null;\n};\n\n/*\n * Tells if a folder is a folder of a shared account\n * @param folderId\n */\nexport function isSharedAccountFolder(folderId: string): boolean {\n\treturn getFolderIdParts(folderId).zid !== null;\n}\n\nexport function getFoldersArray(folders: Folders): Folder[] {\n\treturn Object.values(folders);\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { Account, getUserAccount, getUserSettings, t } from '@zextras/carbonio-shell-ui';\nimport { TFunction } from 'i18next';\nimport { filter, findIndex, flatten, isArray, map, remove } from 'lodash';\n\nimport { getFolderIdParts, getMessageOwnerAccountName } from './folders';\nimport { ParticipantRole } from '../carbonio-ui-commons/constants/participants';\nimport { getRootsMap } from '../carbonio-ui-commons/store/zustand/folder/hooks';\nimport type { Folders } from '../carbonio-ui-commons/types/folder';\nimport { NO_ACCOUNT_NAME } from '../constants';\nimport type { MailMessage, Participant } from '../types';\n\n/**\n * The name of the primary identity\n */\nconst PRIMARY_IDENTITY_NAME = 'DEFAULT';\n\n/**\n * The type of the identities whose address does not match with any of the available addresses\n */\nconst UNKNOWN_IDENTITY_DEFAULT_TYPE = 'alias';\n\n/**\n * The type of the address that doesn't match with any of the listed identities' addresses\n */\nconst UNKNOWN_ADDRESS_DEFAULT_TYPE = 'alias';\n\n/**\n * The type of the identities:\n * - primary: the identity is the primary identity of the account\n * - alias: the identity is an alias of the primary account\n * - delegation: the identity is a shared account for which the user is a delegate\n */\ntype IdentityType = 'primary' | 'alias' | 'delegation';\n\n/**\n * The type describe the possibility of a match between the account that owns the message's folder\n * and the account that owns an identity\n */\ntype AccountOwnershipMatchType = 'match' | 'nomatch';\n\n/**\n * The type describe all the available addresses for an account\n */\ntype AvailableAddress = {\n\taddress: string;\n\ttype: IdentityType;\n\tright?: string;\n\townerAccount: string;\n};\n\n/**\n * The type describe the identity, its type and the addresses used to\n * receive and send the message\n */\ntype IdentityDescriptor = {\n\tid: string;\n\townerAccount: string;\n\tidentityName: string;\n\tidentityDisplayName: string;\n\tfromDisplay: string | undefined;\n\treceivingAddress: string;\n\tfromAddress: string;\n\ttype: IdentityType;\n\tright?: string;\n\tdefaultSignatureId?: string;\n\tforwardReplySignatureId?: string;\n};\n\ntype MatchingReplyIdentity = {\n\taddress: string;\n\tname: string;\n\tidentityId: string | undefined;\n\tidentityName: string | undefined;\n\tdefaultSignatureId?: string;\n\tforwardReplySignatureId?: string;\n};\n\n/**\n * The type describe the recipient of a message, its matching identity\n * and the weight to sort it within the list of other recipients\n */\ntype RecipientWeight = {\n\trecipientAddress: string;\n\trecipientFullName: string | undefined;\n\trole:\n\t\t| typeof ParticipantRole.TO\n\t\t| typeof ParticipantRole.CARBON_COPY\n\t\t| typeof ParticipantRole.BLIND_CARBON_COPY;\n\tmatchingIdentity?: IdentityDescriptor;\n\tmatchingAddress?: boolean;\n\tweight?: number;\n};\n\n/**\n * Weights of the match/nomatch between the owner of a folder and the owner of an identity\n */\nconst AccountOwnershipWeights: Record<AccountOwnershipMatchType, number> = {\n\tmatch: 1000,\n\tnomatch: 1\n};\n\n/**\n * Weights of the recipient based on its role in the message (e.g. the\n * recipient in the TO field has a higher weight)\n */\nconst RoleWeights = {\n\t[ParticipantRole.TO]: 100,\n\t[ParticipantRole.CARBON_COPY]: 10,\n\t[ParticipantRole.BLIND_CARBON_COPY]: 1\n};\n\n/**\n * Weights of the identity based on its type (e.g. the primary identity\n * has a higher weight)\n */\nconst IdentityTypeWeights = {\n\tprimary: 3,\n\talias: 2,\n\tdelegation: 1\n};\n\nconst getNoIdentityPlaceholder = (): string =>\n\tt('label.no_identity_selected', '<No identity selected>');\n\n/**\n * Returns the list of all the available addresses for the account and their type\n */\nconst getAvailableAddresses = (): Array<AvailableAddress> => {\n\tconst account = getUserAccount();\n\tconst settings = getUserSettings();\n\tconst result: Array<AvailableAddress> = [];\n\n\t// Adds the email address of the primary account\n\tresult.push({\n\t\taddress: account?.name ?? NO_ACCOUNT_NAME,\n\t\ttype: 'primary',\n\t\townerAccount: account?.name ?? NO_ACCOUNT_NAME\n\t});\n\n\t// Adds all the aliases\n\tif (settings.attrs.zimbraMailAlias) {\n\t\tif (isArray(settings.attrs.zimbraMailAlias)) {\n\t\t\tresult.push(\n\t\t\t\t...(settings.attrs.zimbraMailAlias as string[]).map<AvailableAddress>((alias: string) => ({\n\t\t\t\t\taddress: alias,\n\t\t\t\t\ttype: 'alias',\n\t\t\t\t\townerAccount: account?.name ?? NO_ACCOUNT_NAME\n\t\t\t\t}))\n\t\t\t);\n\t\t} else {\n\t\t\tresult.push({\n\t\t\t\taddress: settings.attrs.zimbraMailAlias as string,\n\t\t\t\ttype: 'alias',\n\t\t\t\townerAccount: account?.name ?? NO_ACCOUNT_NAME\n\t\t\t});\n\t\t}\n\t}\n\n\t// Adds the email addresses of all the delegation accounts\n\tif (account?.rights?.targets) {\n\t\taccount.rights.targets.forEach((target) => {\n\t\t\tif (target.target && (target.right === 'sendAs' || target.right === 'sendOnBehalfOf')) {\n\t\t\t\ttarget.target.forEach((user) => {\n\t\t\t\t\tif (user.type === 'account' && user.email) {\n\t\t\t\t\t\tuser.email.forEach((email) => {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\taddress: email.addr,\n\t\t\t\t\t\t\t\ttype: 'delegation',\n\t\t\t\t\t\t\t\tright: target.right,\n\t\t\t\t\t\t\t\townerAccount: email.addr\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\treturn result;\n};\n\n/**\n * Returns the name of the account that owns the given address\n *\n * @param address\n */\nconst getAddressOwnerAccount = (address: string): string | null => {\n\tif (!address) {\n\t\treturn null;\n\t}\n\tconst addressInfo = getAvailableAddresses().filter((info) => info.address === address);\n\tif (addressInfo.length === 0) {\n\t\treturn null;\n\t}\n\n\treturn addressInfo[0].ownerAccount;\n};\n\n/**\n * @param email\n * @param rights\n */\nconst generateIdentityId = (email: string, rights: string): string => email + rights;\n\n/**\n *\n * @param identities\n */\nconst sortIdentities = (\n\tidentities: Account['identities']['identity']\n): Account['identities']['identity'] => {\n\tconst allIdentities = [...identities];\n\tconst defaultIdentity = remove(\n\t\tallIdentities,\n\t\t(identity) => identity.name === PRIMARY_IDENTITY_NAME\n\t);\n\treturn [...defaultIdentity, ...allIdentities];\n};\n\n/**\n * Returns the list of all the identities for the account. For each identity a type\n * is give, by matching the email address with all the available addresses, or by\n * setting a default one if the address does not match any of the available addresses.\n *\n * The function returns also an identity for each account for which the user is a delegate\n * (sendAs or sendOnBehalfOf) if there is no an already existing identity\n */\nconst getIdentitiesDescriptors = (): Array<IdentityDescriptor> => {\n\tconst account = getUserAccount();\n\tconst identities: Array<IdentityDescriptor> = [];\n\n\t// Get the list of all the available email addresses for the account and their type\n\tconst availableEmailAddresses = getAvailableAddresses();\n\n\t// sortIdentities(account.identities?.identity)?.forEach((identity) => {\n\taccount?.identities?.identity &&\n\t\tsortIdentities(account.identities.identity)?.forEach((identity) => {\n\t\t\tconst fromAddress = identity._attrs?.zimbraPrefFromAddress ?? '';\n\t\t\tconst fromDisplay = identity._attrs?.zimbraPrefFromDisplay;\n\n\t\t\t// The receiving address for the primary identity is the account name\n\t\t\tconst receivingAddress = identity.name === PRIMARY_IDENTITY_NAME ? account.name : fromAddress;\n\n\t\t\t// Find the first match between the identity receiving email address and the available email addresses\n\t\t\tconst matchingReceivingAddress = availableEmailAddresses.find(\n\t\t\t\t(availableAddress) => availableAddress.address === receivingAddress\n\t\t\t);\n\n\t\t\tconst type = matchingReceivingAddress\n\t\t\t\t? matchingReceivingAddress.type\n\t\t\t\t: UNKNOWN_IDENTITY_DEFAULT_TYPE;\n\n\t\t\tconst right =\n\t\t\t\ttype === 'delegation' && matchingReceivingAddress\n\t\t\t\t\t? matchingReceivingAddress.right\n\t\t\t\t\t: undefined;\n\n\t\t\tidentities.push({\n\t\t\t\townerAccount: matchingReceivingAddress?.ownerAccount ?? account.name,\n\t\t\t\treceivingAddress,\n\t\t\t\tid: identity._attrs?.zimbraPrefIdentityId ?? '',\n\t\t\t\tidentityName: identity.name ?? '',\n\t\t\t\tidentityDisplayName: identity._attrs?.zimbraPrefIdentityName ?? '',\n\t\t\t\tfromDisplay,\n\t\t\t\tfromAddress,\n\t\t\t\ttype,\n\t\t\t\tright,\n\t\t\t\tdefaultSignatureId: identity._attrs?.zimbraPrefDefaultSignatureId,\n\t\t\t\tforwardReplySignatureId: identity._attrs?.zimbraPrefForwardReplySignatureId\n\t\t\t});\n\t\t});\n\n\tconst delegationAccounts = filter(\n\t\taccount?.rights?.targets,\n\t\t(rts) => rts.right === 'sendAs' || rts.right === 'sendOnBehalfOf'\n\t);\n\n\tconst delegationIdentities = flatten(\n\t\tmap(delegationAccounts, (ele) =>\n\t\t\tmap(ele?.target, (item: { d: string; type: string; email: Array<{ addr: string }> }) => ({\n\t\t\t\townerAccount: item.email[0].addr ?? account?.name ?? NO_ACCOUNT_NAME,\n\t\t\t\treceivingAddress: item.email[0].addr,\n\t\t\t\tid: generateIdentityId(item.email[0].addr, ele.right),\n\t\t\t\tidentityName: item.d,\n\t\t\t\tidentityDisplayName: item.d,\n\t\t\t\tfromDisplay: item.d,\n\t\t\t\tfromAddress: item.email[0].addr,\n\t\t\t\ttype: 'delegation',\n\t\t\t\tright: ele.right\n\t\t\t}))\n\t\t)\n\t);\n\n\tconst uniqueIdentityList: IdentityDescriptor[] = [...identities];\n\tif (delegationIdentities?.length) {\n\t\tmap(delegationIdentities, (ele: IdentityDescriptor) => {\n\t\t\tconst uniqIdentity = findIndex(identities, { fromAddress: ele.fromAddress });\n\t\t\tif (uniqIdentity < 0) uniqueIdentityList.push(ele);\n\t\t});\n\t\treturn uniqueIdentityList;\n\t}\n\n\treturn identities;\n};\n\n/**\n *\n * @param id\n */\nexport const getIdentityDescriptor = (id: string): IdentityDescriptor | null =>\n\tgetIdentitiesDescriptors().find((identityDescriptor) => identityDescriptor.id === id) ?? null;\n\n/**\n * Returns the list of all the recipients of the message, with their weight\n * based on their role in the message\n *\n * @param message\n */\nconst getRecipients = (message: MailMessage): Array<RecipientWeight> => {\n\tconst recipients: Array<RecipientWeight> = [];\n\n\tmessage.participants?.forEach((participant) => {\n\t\tif (\n\t\t\tparticipant.type !== ParticipantRole.TO &&\n\t\t\tparticipant.type !== ParticipantRole.CARBON_COPY &&\n\t\t\tparticipant.type !== ParticipantRole.BLIND_CARBON_COPY\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\trecipients.push({\n\t\t\trecipientAddress: participant.address,\n\t\t\trecipientFullName: participant.fullName,\n\t\t\trole: participant.type\n\t\t});\n\t});\n\n\treturn recipients;\n};\n\n/**\n * Checks if the recipient address matches one of the account available addresses\n *\n * @param recipients\n * @param availableAddresses\n *\n * @returns the list of recipients with the matchingAddress flag set\n */\nconst checkMatchingAddress = (\n\trecipients: Array<RecipientWeight>,\n\tavailableAddresses: Array<AvailableAddress>\n): Array<RecipientWeight> =>\n\trecipients.map((recipient) => ({\n\t\t...recipient,\n\t\tmatchingAddress: availableAddresses.some(\n\t\t\t(availableAddress) => availableAddress.address === recipient.recipientAddress\n\t\t)\n\t}));\n\n/**\n * Computes the weight of the recipient based on its role in the message, the type of\n * the matching identity, and the matching between the accounts that own the identity and\n * the message's folder\n *\n * @param recipients\n * @param identities\n * @param folderOwnerAccount\n *\n * @returns the list of recipients with their weight\n */\nconst computeIdentityWeight = (\n\trecipients: Array<RecipientWeight>,\n\tidentities: Array<IdentityDescriptor>,\n\tfolderOwnerAccount: string\n): Array<RecipientWeight> => {\n\tconst result: Array<RecipientWeight> = [];\n\n\t// Cycle for every recipient in the message\n\trecipients.forEach((recipient) => {\n\t\t// Check if the recipient has a matching identity\n\t\tconst matchingIdentity = identities.find(\n\t\t\t(identity) => identity.fromAddress === recipient.recipientAddress\n\t\t);\n\n\t\t/*\n\t\t * Check if the owner account of the matching identity\n\t\t * is the same of the message's folder owner account\n\t\t */\n\t\tconst accountMatch =\n\t\t\tmatchingIdentity?.ownerAccount === folderOwnerAccount ? 'match' : 'nomatch';\n\n\t\tresult.push({\n\t\t\t...recipient,\n\t\t\tmatchingIdentity,\n\t\t\tweight:\n\t\t\t\tAccountOwnershipWeights[accountMatch] *\n\t\t\t\tRoleWeights[recipient.role] *\n\t\t\t\tIdentityTypeWeights[matchingIdentity?.type || UNKNOWN_ADDRESS_DEFAULT_TYPE]\n\t\t});\n\t});\n\n\treturn result;\n};\n\nconst filterMatchingRecipients = (recipients: Array<RecipientWeight>): Array<RecipientWeight> => {\n\tconst result: Array<RecipientWeight> = [];\n\n\trecipients.forEach((recipient) => {\n\t\tif (recipient.matchingAddress || recipient.matchingIdentity) {\n\t\t\tresult.push(recipient);\n\t\t}\n\t});\n\n\treturn result;\n};\n\n/**\n *\n */\nconst getDefaultIdentity = (): IdentityDescriptor =>\n\tgetIdentitiesDescriptors().reduce((result, identity) =>\n\t\tidentity.identityName === PRIMARY_IDENTITY_NAME ? identity : result\n\t);\n\n/**\n * Analyze the message and return the identity that should be used to reply it.\n * @param folderRoots - The list of all the folder roots\n * @param message - The message to analyze\n */\nconst getRecipientReplyIdentity = (\n\tfolderRoots: Folders,\n\tmessage: MailMessage\n): MatchingReplyIdentity => {\n\t// Get all the available identities for the account\n\tconst identities = getIdentitiesDescriptors();\n\n\tconst messageFolderOwnerAccount = getMessageOwnerAccountName(message, folderRoots);\n\n\t// Extract all the recipients addresses from the message\n\tconst recipients = getRecipients(message);\n\n\t// Check if the recipient address matches one of the account available addresses\n\tconst recipientsWithMatchingAddress = checkMatchingAddress(recipients, getAvailableAddresses());\n\n\t/*\n\t * Filter out the recipients that do not match any of the available addresses\n\t * and any address of the available identities\n\t */\n\tconst filteredRecipients = filterMatchingRecipients(recipientsWithMatchingAddress);\n\n\t// For each recipient, compute the identity weight based on the recipients address and position in the message\n\tconst recipientWeights = computeIdentityWeight(\n\t\tfilteredRecipients,\n\t\tidentities,\n\t\tmessageFolderOwnerAccount\n\t);\n\n\t// Sort the recipient by weight\n\tconst replyIdentity = recipientWeights.sort((a, b) => (b.weight ?? 0) - (a.weight ?? 0))?.[0];\n\n\tif (!replyIdentity) {\n\t\t// Return the default identity if not getting the matching recipient\n\t\tconst defaultIdentity = getDefaultIdentity();\n\t\treturn {\n\t\t\tname: defaultIdentity?.fromDisplay ?? '',\n\t\t\taddress: defaultIdentity?.fromAddress ?? defaultIdentity?.receivingAddress ?? '',\n\t\t\tidentityId: defaultIdentity?.id,\n\t\t\tidentityName: defaultIdentity?.identityName,\n\t\t\tdefaultSignatureId: defaultIdentity?.defaultSignatureId,\n\t\t\tforwardReplySignatureId: defaultIdentity?.forwardReplySignatureId\n\t\t};\n\t}\n\t// Return the identity with the highest weight\n\treturn {\n\t\tname: replyIdentity?.recipientFullName ?? '',\n\t\taddress: replyIdentity?.matchingIdentity?.fromAddress ?? replyIdentity?.recipientAddress ?? '',\n\t\tidentityId: replyIdentity?.matchingIdentity?.id,\n\t\tidentityName: replyIdentity?.matchingIdentity?.identityName,\n\t\tdefaultSignatureId: replyIdentity?.matchingIdentity?.defaultSignatureId,\n\t\tforwardReplySignatureId: replyIdentity?.matchingIdentity?.forwardReplySignatureId\n\t};\n};\n\n/**\n *\n * @param participant\n */\nconst getIdentityFromParticipant = (participant: Participant): IdentityDescriptor | null =>\n\tgetIdentitiesDescriptors().reduce<IdentityDescriptor | null>((result, identity) => {\n\t\tif (identity.fromAddress !== participant.address) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// TODO maybe handle the scenario when 2 identity has the same address but they differ by the name\n\n\t\treturn identity;\n\t}, null);\n\n/**\n * Returns the message's sender obtained from the message's participants\n * @param message\n */\nconst getMessageSenderAddress = (message: MailMessage): string | null => {\n\tif (!message || !message.participants) {\n\t\treturn null;\n\t}\n\n\tconst senders = message.participants.filter(\n\t\t(participant) => participant.type === ParticipantRole.FROM\n\t);\n\tif (senders.length === 0) {\n\t\treturn null;\n\t}\n\n\treturn senders[0].address;\n};\n\n/**\n * Returns the account of the message's sender obtained from the message's participants\n * @param message\n */\nconst getMessageSenderAccount = (message: MailMessage): string | null => {\n\tconst address = getMessageSenderAddress(message);\n\tif (!address) {\n\t\treturn null;\n\t}\n\n\treturn getAddressOwnerAccount(address);\n};\n\n/**\n *\n * @param identity\n * @param t\n */\nconst getIdentityDescription = (identity: IdentityDescriptor, t: TFunction): string | null => {\n\tif (!identity) {\n\t\treturn null;\n\t}\n\n\tconst defaultIdentity = getDefaultIdentity();\n\n\treturn identity.right === 'sendOnBehalfOf'\n\t\t? `${defaultIdentity.fromDisplay} ${t('label.on_behalf_of', 'on behalf of')} ${\n\t\t\t\tidentity.fromDisplay ?? identity.identityName\n\t\t\t} <${identity.fromAddress}>`\n\t\t: `${identity.fromDisplay ?? identity.identityName} <${identity.fromAddress}>`;\n};\n\nexport function getExtraAccountsIds(): Array<string> {\n\tconst roots = Object.keys(getRootsMap());\n\tconst rootsZids: Array<string> = roots?.reduce((acc: Array<string>, root) => {\n\t\tconst { zid } = getFolderIdParts(root);\n\t\tif (zid) {\n\t\t\tacc.push(zid);\n\t\t}\n\t\treturn acc;\n\t}, []);\n\treturn rootsZids;\n}\n\nexport {\n\tIdentityDescriptor,\n\tMatchingReplyIdentity,\n\tRecipientWeight,\n\tgetNoIdentityPlaceholder,\n\tgetDefaultIdentity,\n\tcheckMatchingAddress,\n\tcomputeIdentityWeight,\n\tfilterMatchingRecipients,\n\tgetAddressOwnerAccount,\n\tgetAvailableAddresses,\n\tgetIdentitiesDescriptors,\n\tgetIdentityFromParticipant,\n\tgetMessageSenderAccount,\n\tgetMessageSenderAddress,\n\tgetRecipientReplyIdentity,\n\tgetRecipients,\n\tgetIdentityDescription\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport {\n\tParticipantRole,\n\tParticipantRoleType\n} from '../carbonio-ui-commons/constants/participants';\nimport type { Conversation, MailMessage, Participant } from '../types';\n\n/**\n * Collect all the participants of the given type (or any type if the type params is not set)\n * from the given message\n * @param message\n * @param type\n */\nexport const getParticipantsFromMessage = (\n\tmessage: MailMessage,\n\ttype?: ParticipantRoleType\n): Array<Participant> => {\n\tif (!message || !message.participants) {\n\t\treturn [];\n\t}\n\n\t// Filter and return the participants that match the type, or any participant if type is not specified\n\treturn message.participants.filter((participant) => !type || participant.type === type);\n};\n\n/**\n *\n * Collect all the participants of the given type (or any type if the type params is not set)\n * from the given messages\n * @param messages\n * @param type\n */\nexport const getParticipantsFromMessages = (\n\tmessages: Array<MailMessage>,\n\ttype?: ParticipantRoleType\n): Array<Participant> => {\n\tif (!messages || !messages.length) {\n\t\treturn [];\n\t}\n\n\t// Collect and return the filtered participant from each message\n\treturn messages.reduce<Array<Participant>>((result, message): Array<Participant> => {\n\t\tresult.push(...getParticipantsFromMessage(message, type));\n\t\treturn result;\n\t}, []);\n};\n\n/**\n *\n * @param message\n */\nexport const getFromParticipantFromMessage = (message: MailMessage): Participant | null => {\n\tconst result = getParticipantsFromMessage(message, ParticipantRole.FROM);\n\tif (result.length <= 0) {\n\t\treturn null;\n\t}\n\n\treturn result[0];\n};\n\n/**\n * @param item\n */\nexport const isConversation = (item: MailMessage | Conversation): item is Conversation =>\n\t'messages' in (item || {});\n\n/**\n *\n * @param item\n */\nexport const isSingleMessageConversation = (item: MailMessage | Conversation): boolean =>\n\tisConversation(item) && item.messages.length === 1;\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { AppDispatch, RootState } from '../store/redux';\n\nexport type DispatchFunc = () => AppDispatch;\n\nexport const useAppDispatch: DispatchFunc = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { addBoard } from '@zextras/carbonio-shell-ui';\n\nimport { EditViewActions, MAILS_ROUTE } from '../constants';\nimport { EditorPrefillData } from '../types';\nimport type { Participant } from '../types';\n\nexport const mailToSharedFunction: (contacts: Array<Partial<Participant>>) => void = (contacts) => {\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\taddBoard({\n\t\turl: `${MAILS_ROUTE}/new?action=mailTo`,\n\t\tcontext: {\n\t\t\tcompositionData: {\n\t\t\t\trecipients: contacts\n\t\t\t}\n\t\t}\n\t});\n};\n\nexport const openComposerSharedFunction: (\n\tonConfirm: () => void,\n\tcompositionData: EditorPrefillData,\n\t...rest: never[]\n) => void = (onConfirm, compositionData, ...rest) => {\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\taddBoard({\n\t\turl: `${MAILS_ROUTE}/new?action=compose`,\n\t\tcontext: {\n\t\t\tonConfirm,\n\t\t\tcompositionData,\n\t\t\t...rest\n\t\t}\n\t});\n};\n\n// function used to open a new mail editor board with prefilled fields set by other modules\nexport const openPrefilledComposerSharedFunction: (\n\teditorPrefillData?: EditorPrefillData,\n\t...rest: never[]\n) => void = (editorPrefillData, ...rest) => {\n\t// add board with custom editor\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\taddBoard({\n\t\turl: `${MAILS_ROUTE}/new?action=${EditViewActions.PREFILL_COMPOSE}`,\n\t\tcontext: {\n\t\t\tcompositionData: editorPrefillData,\n\t\t\t...rest\n\t\t}\n\t});\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { Tags } from '@zextras/carbonio-shell-ui';\nimport { filter, find, isNil, map } from 'lodash';\n\nimport { normalizeParticipantsFromSoap } from './normalize-message';\nimport { omitBy } from '../commons/utils';\nimport type { Conversation, SoapConversation, SoapIncompleteMessage } from '../types';\n\nconst getTagIdsFromName = (names: string | undefined, tags?: Tags): Array<string | undefined> =>\n\tmap(names?.split(','), (name) =>\n\t\tfind(tags, { name }) ? find(tags, { name })?.id : `nil:${name}`\n\t);\nconst getTagIds = (\n\tt: string | undefined,\n\ttn: string | undefined,\n\ttags?: Tags\n): Array<string | undefined> => {\n\tif (!isNil(t)) {\n\t\treturn filter(t.split(','), (tag) => tag !== '');\n\t}\n\tif (!isNil(tn)) {\n\t\treturn getTagIdsFromName(tn, tags);\n\t}\n\treturn [];\n};\n\nexport type NormalizeConversationProps = {\n\tc: SoapConversation;\n\ttags: Tags;\n\tm?: Array<SoapIncompleteMessage>;\n};\n\nexport const normalizeConversation = ({\n\tc,\n\tm,\n\ttags\n}: NormalizeConversationProps): Partial<Conversation> => {\n\tconst filteredMsgs = c?.m ?? filter(m ?? [], ['cid', c?.id]);\n\tconst messages = filteredMsgs?.length\n\t\t? map(filteredMsgs, (msg) => ({\n\t\t\t\tid: msg.id,\n\t\t\t\tparent: msg.l,\n\t\t\t\tdate: Number(msg?.d)\n\t\t\t}))\n\t\t: undefined;\n\n\treturn omitBy(\n\t\t{\n\t\t\ttags: getTagIds(c.t, c.tn, tags),\n\t\t\tid: c.id,\n\t\t\tdate: c.d,\n\t\t\tmessages,\n\t\t\tparticipants: c.e ? map(c.e, normalizeParticipantsFromSoap) : undefined,\n\t\t\tsubject: c.su,\n\t\t\tfragment: c.fr,\n\t\t\tread: !isNil(c.f) ? !/u/.test(c.f) : !(c.u > 0),\n\t\t\thasAttachment: !isNil(c.f) ? /a/.test(c.f) : undefined,\n\t\t\tflagged: !isNil(c.f) ? /f/.test(c.f) : undefined,\n\t\t\turgent: !isNil(c.f) ? /!/.test(c.f) : undefined,\n\t\t\t// Number of (nondeleted) messages. messages in trash or spam are in the count\n\t\t\tmessagesInConversation: c.n\n\t\t},\n\t\tisNil\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { getTags } from '@zextras/carbonio-shell-ui';\nimport { filter, find, forEach, isArray, isNil, map, omitBy, reduce } from 'lodash';\n\nimport {\n\tParticipantRole,\n\tParticipantRoleType\n} from '../carbonio-ui-commons/constants/participants';\nimport type {\n\tAttachmentPart,\n\tIncompleteMessage,\n\tMailMessagePart,\n\tParticipant,\n\tSoapEmailParticipantRole,\n\tSoapIncompleteMessage,\n\tSoapMailMessagePart,\n\tSoapMailParticipant\n} from '../types';\n\n// extract ids of attachments from html content. the ids are preceded by \"cid: and end with \" or with &\nexport const extractAttachmentIdsFromHtmlContent = (content: string): Array<string> => {\n\tconst matches = content.match(/cid:(.*?)(?=\"|&)/g);\n\treturn matches ? map(matches, (match) => match.replace('cid:', '')) : [];\n};\n\n// examine the multipart and return an array of ids referenced in the body of the html\nconst getAttachmentsAnchoredOnHtmlBody = (\n\tmultipart: Array<SoapMailMessagePart> | undefined | AttachmentPart | Array<AttachmentPart>\n): Array<string> => {\n\tconst result: Array<string> = [];\n\n\tconst extractCid = (\n\t\tmp: Array<SoapMailMessagePart> | undefined | AttachmentPart | Array<AttachmentPart>\n\t): void => {\n\t\tforEach(mp, (item: SoapMailMessagePart) => {\n\t\t\tif (item.mp) {\n\t\t\t\textractCid(item.mp);\n\t\t\t}\n\t\t\tif (item.content) {\n\t\t\t\tresult.push(...extractAttachmentIdsFromHtmlContent(item.content));\n\t\t\t}\n\t\t});\n\t};\n\n\textractCid(multipart);\n\treturn result;\n};\n\n// removes all charachters after \"@\" and the leading \"<\" character of a ci\nconst cleanUpCi = (id: string): string => id.slice(1, id.indexOf('@'));\n\nconst isIgnoreAttachment = (item: AttachmentPart): boolean => {\n\tif ((item && item.ct === 'multipart/appledouble') || item.ct === 'application/applefile') {\n\t\treturn true;\n\t}\n\tif (item.body && (item.ct === 'text/html' || item.ct === 'text/plain')) {\n\t\treturn true;\n\t}\n\tif (item.ct === 'multipart/digest') {\n\t\treturn true;\n\t}\n\tif (item.ci && item.ci === 'text-body') {\n\t\treturn true;\n\t}\n\tif (item.ct === 'text/calendar' && !item.filename) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nexport const getAttachmentsFromParts = (\n\tmailParts: Array<AttachmentPart> | AttachmentPart\n): Array<AttachmentPart> => {\n\tconst anchoredAttachmentsList = getAttachmentsAnchoredOnHtmlBody(mailParts);\n\tlet results: Array<AttachmentPart> = [];\n\tif (mailParts) {\n\t\tif (isArray(mailParts)) {\n\t\t\tforEach(mailParts, (part) => {\n\t\t\t\tconst attachmentParts = getAttachmentsFromParts(part);\n\t\t\t\tforEach(attachmentParts, (attachmentPart: AttachmentPart) => {\n\t\t\t\t\tif (!isIgnoreAttachment(attachmentPart)) {\n\t\t\t\t\t\tconst item = {\n\t\t\t\t\t\t\t...attachmentPart,\n\t\t\t\t\t\t\tcontentType: attachmentPart.ct,\n\t\t\t\t\t\t\tname: attachmentPart?.part,\n\t\t\t\t\t\t\tsize: attachmentPart?.s\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(item.cd && item.cd === 'attachment') ||\n\t\t\t\t\t\t\t(item.ct && (item.ct === 'message/rfc822' || item.ct === 'text/calendar')) ||\n\t\t\t\t\t\t\titem.filename ||\n\t\t\t\t\t\t\titem.ci\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\titem.cd &&\n\t\t\t\t\t\t\t\titem.cd === 'inline' &&\n\t\t\t\t\t\t\t\titem.ci &&\n\t\t\t\t\t\t\t\tanchoredAttachmentsList.includes(cleanUpCi(item.ci))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\titem.cd = 'inline';\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tpart.ct === 'multipart/related' &&\n\t\t\t\t\t\t\t\titem.ci &&\n\t\t\t\t\t\t\t\titem.cd &&\n\t\t\t\t\t\t\t\titem.cd === 'attachment' &&\n\t\t\t\t\t\t\t\tanchoredAttachmentsList.includes(cleanUpCi(item.ci))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\titem.cd = 'inline';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\titem.cd = 'attachment';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (item.ct === 'message/rfc822' && !item.filename) {\n\t\t\t\t\t\t\t\titem.filename = 'Unknown <message/rfc822>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (item.ct === 'text/html' && !item.filename) {\n\t\t\t\t\t\t\t\titem.filename = 'Unknown <text/html>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (item.ct && item.ct !== 'application/pkcs7-signature') {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tresults.push(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (\n\t\t\t(mailParts && mailParts.cd && mailParts.cd === 'attachment') ||\n\t\t\t(mailParts.ct && (mailParts.ct === 'message/rfc822' || mailParts.ct === 'text/calendar')) ||\n\t\t\tmailParts.filename ||\n\t\t\tmailParts.ci\n\t\t) {\n\t\t\tconst updatedMailPart: AttachmentPart = { ...mailParts };\n\t\t\tif (isIgnoreAttachment(mailParts)) {\n\t\t\t\textractAttachmentIdsFromHtmlContent(updatedMailPart.content || '');\n\t\t\t\tif (\n\t\t\t\t\tupdatedMailPart.cd &&\n\t\t\t\t\tupdatedMailPart.cd === 'inline' &&\n\t\t\t\t\tupdatedMailPart.ci &&\n\t\t\t\t\tanchoredAttachmentsList.includes(cleanUpCi(updatedMailPart.ci))\n\t\t\t\t) {\n\t\t\t\t\tupdatedMailPart.cd = 'inline';\n\t\t\t\t} else if (\n\t\t\t\t\tupdatedMailPart.ct === 'multipart/related' &&\n\t\t\t\t\tupdatedMailPart.ci &&\n\t\t\t\t\tupdatedMailPart.cd &&\n\t\t\t\t\tupdatedMailPart.cd === 'attachment' &&\n\t\t\t\t\tanchoredAttachmentsList.includes(cleanUpCi(updatedMailPart.ci))\n\t\t\t\t) {\n\t\t\t\t\tupdatedMailPart.cd = 'inline';\n\t\t\t\t} else {\n\t\t\t\t\tupdatedMailPart.cd = 'attachment';\n\t\t\t\t}\n\t\t\t}\n\t\t\tresults.push(updatedMailPart);\n\t\t} else if (mailParts.mp) {\n\t\t\tresults = results.concat(getAttachmentsFromParts(mailParts.mp));\n\t\t}\n\t}\n\treturn results;\n};\n\nconst normalizeMailPartMapFn = (v: SoapMailMessagePart): MailMessagePart => {\n\tconst ret: MailMessagePart = {\n\t\tcontentType: v.ct,\n\t\tsize: v.s || 0,\n\t\tname: v.part,\n\t\tdisposition: v.cd,\n\t\trequiresSmartLinkConversion: v?.requiresSmartLinkConversion ?? false\n\t};\n\tif (v.mp) {\n\t\tret.parts = map(v.mp || [], normalizeMailPartMapFn);\n\t}\n\tif (v.filename) ret.filename = v.filename;\n\tif (v.content) ret.content = v.content;\n\tif (v.ci) ret.ci = v.ci;\n\tif (v.cd) ret.disposition = v.cd;\n\treturn ret;\n};\n\nconst findBodyPart = (\n\tmp: Array<SoapMailMessagePart>,\n\tacc: { contentType: string; content: string },\n\tid: string\n): { contentType: string; content: string } =>\n\treduce(\n\t\tmp,\n\t\t(found, part) => {\n\t\t\tif (part.mp) return findBodyPart(part.mp, found, id);\n\t\t\tif (part && part.body) {\n\t\t\t\tif (!found.contentType.length) {\n\t\t\t\t\treturn { contentType: part.ct, content: part.content ?? '' };\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tpart.part &&\n\t\t\t\t\tpart.part.indexOf('.') === -1 &&\n\t\t\t\t\tpart.cd &&\n\t\t\t\t\tpart.cd === 'inline' &&\n\t\t\t\t\t!part.ci &&\n\t\t\t\t\t!(part.ct && part.ct === 'text/plain')\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...found,\n\t\t\t\t\t\tcontent: found.content.concat(\n\t\t\t\t\t\t\t`<img src='/service/home/~/?auth=co&loc=en&id=${id}&part=${part?.part}'>` ?? ''\n\t\t\t\t\t\t)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn { ...found, content: found.content.concat(part.content ?? '') };\n\t\t\t}\n\t\t\treturn found;\n\t\t},\n\t\tacc\n\t);\n\nconst generateBody = (\n\tmp: Array<SoapMailMessagePart>,\n\tid: string\n): {\n\tcontentType: string;\n\tcontent: string;\n} => findBodyPart(mp, { contentType: '', content: '' }, id);\n\nconst participantTypeFromSoap = (t: SoapEmailParticipantRole): ParticipantRoleType => {\n\tswitch (t) {\n\t\tcase 'f':\n\t\t\treturn ParticipantRole.FROM;\n\t\tcase 't':\n\t\t\treturn ParticipantRole.TO;\n\t\tcase 'c':\n\t\t\treturn ParticipantRole.CARBON_COPY;\n\t\tcase 'b':\n\t\t\treturn ParticipantRole.BLIND_CARBON_COPY;\n\t\tcase 'r':\n\t\t\treturn ParticipantRole.REPLY_TO;\n\t\tcase 's':\n\t\t\treturn ParticipantRole.SENDER;\n\t\tcase 'n':\n\t\t\treturn ParticipantRole.READ_RECEIPT_NOTIFICATION;\n\t\tcase 'rf':\n\t\t\treturn ParticipantRole.RESENT_FROM;\n\t\tdefault:\n\t\t\tthrow new Error(`Participant type not handled: '${t}'`);\n\t}\n};\n\nexport const normalizeParticipantsFromSoap = (e: SoapMailParticipant): Participant => ({\n\ttype: participantTypeFromSoap(e.t),\n\taddress: e.a,\n\tname: e.d || e.a,\n\tfullName: e.p,\n\temail: e.a,\n\texp: e.exp,\n\tisGroup: e.isGroup\n});\n\nconst getTagIdsFromName = (names: string | undefined): Array<string | undefined> => {\n\tconst tags = getTags();\n\treturn map(names?.split(','), (name) =>\n\t\tfind(tags, { name }) ? find(tags, { name })?.id : `nil:${name}`\n\t);\n};\n\nconst getTagIds = (t: string | undefined, tn: string | undefined): Array<string | undefined> => {\n\tif (!isNil(t)) {\n\t\treturn filter(t.split(','), (tag) => tag !== '');\n\t}\n\tif (!isNil(tn)) {\n\t\treturn getTagIdsFromName(tn);\n\t}\n\treturn [];\n};\n\nexport const normalizeMailMessageFromSoap = (\n\tm: SoapIncompleteMessage,\n\tisComplete?: boolean\n): IncompleteMessage => <IncompleteMessage>omitBy(\n\t\t{\n\t\t\tconversation: m.cid,\n\t\t\tid: m.id,\n\t\t\tdate: m.d,\n\t\t\tsize: m.s,\n\t\t\tparent: m.l,\n\t\t\tfragment: m.fr,\n\t\t\tsubject: m.su,\n\t\t\tparticipants: m.e ? map(m.e || [], normalizeParticipantsFromSoap) : undefined,\n\t\t\ttags: getTagIds(m.t, m.tn),\n\t\t\tparts: m.mp ? map(m.mp || [], normalizeMailPartMapFn) : undefined,\n\t\t\tattachments: m.mp ? getAttachmentsFromParts(m.mp) : undefined,\n\t\t\tinvite: m.inv,\n\t\t\tshr: m.shr,\n\t\t\tbody: m.mp ? generateBody(m.mp || [], m.id) : undefined,\n\t\t\tisComplete,\n\t\t\tisScheduled: !!m.autoSendTime,\n\t\t\tautoSendTime: m.autoSendTime,\n\t\t\tread: !isNil(m.f) ? !/u/.test(m.f) : true,\n\t\t\thasAttachment: !isNil(m.f) ? /a/.test(m.f) : undefined,\n\t\t\tflagged: !isNil(m.f) ? /f/.test(m.f) : undefined,\n\t\t\turgent: !isNil(m.f) ? /!/.test(m.f) : undefined,\n\t\t\tisDeleted: !isNil(m.f) ? /x/.test(m.f) : undefined,\n\t\t\tisDraft: !isNil(m.f) ? /d/.test(m.f) : undefined,\n\t\t\tisForwarded: !isNil(m.f) ? /w/.test(m.f) : undefined,\n\t\t\tisSentByMe: !isNil(m.f) ? /s/.test(m.f) : undefined,\n\t\t\tisInvite: !isNil(m.f) ? /v/.test(m.f) : undefined,\n\t\t\tisReplied: !isNil(m.f) ? /r/.test(m.f) : undefined,\n\t\t\tisReadReceiptRequested: !isNil(m.f) ? !/n/.test(m.f) : true\n\t\t},\n\t\tisNil\n\t);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\n\ntype removeAttachmentsPayload = {\n\tid: string;\n\tattachments: string[];\n};\n\ntype RemoveAttachmentsResponse = {\n\tm: {\n\t\tid: string;\n\t\tpart: Array<string>;\n\t};\n};\n\nexport const deleteAttachments = createAsyncThunk(\n\t'mails/deleteAttachments',\n\tasync ({ id, attachments }: removeAttachmentsPayload) => {\n\t\tconst res: RemoveAttachmentsResponse = await soapFetch('RemoveAttachments', {\n\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\tm: {\n\t\t\t\tid,\n\t\t\t\tpart: attachments.join(',')\n\t\t\t}\n\t\t});\n\t\treturn { res, attachments };\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getTags, soapFetch } from '@zextras/carbonio-shell-ui';\nimport { map } from 'lodash';\n\nimport { API_REQUEST_STATUS } from '../../constants';\nimport { normalizeConversation } from '../../normalizations/normalize-conversation';\nimport { normalizeMailMessageFromSoap } from '../../normalizations/normalize-message';\nimport type {\n\tConversation,\n\tGetConvParameters,\n\tGetConvRequest,\n\tGetConvResponse,\n\tIncompleteMessage\n} from '../../types';\n\nexport const getConv = createAsyncThunk<\n\t{ conversation: Partial<Conversation>; messages: Array<IncompleteMessage> },\n\tGetConvParameters\n>(\n\t'conversations/getConv',\n\tasync ({ conversationId, fetch = 'all' }) => {\n\t\tconst result = (await soapFetch<GetConvRequest, GetConvResponse>('GetConv', {\n\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\tc: {\n\t\t\t\tid: conversationId,\n\t\t\t\thtml: 1,\n\t\t\t\tneedExp: 1,\n\t\t\t\tfetch\n\t\t\t}\n\t\t})) as GetConvResponse;\n\t\tconst tags = getTags();\n\t\tconst conversation = normalizeConversation({ c: result.c[0], tags });\n\t\tconst messages = map(result.c[0].m, (item) =>\n\t\t\tnormalizeMailMessageFromSoap(item, false)\n\t\t) as unknown as Array<IncompleteMessage>;\n\t\treturn { conversation, messages };\n\t},\n\t{\n\t\tcondition: ({ folderId, conversationId }: GetConvParameters, { getState }: any) => {\n\t\t\tif (!folderId) return true;\n\t\t\treturn (\n\t\t\t\tgetState().conversations?.expandedStatus[conversationId] !== API_REQUEST_STATUS.fulfilled &&\n\t\t\t\tgetState().conversations?.expandedStatus[conversationId] !== API_REQUEST_STATUS.pending\n\t\t\t);\n\t\t}\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport { normalizeMailMessageFromSoap } from '../../normalizations/normalize-message';\nimport type { GetMsgParameters, MailMessage, GetMsgRequest, GetMsgResponse } from '../../types';\n\nexport const getMsgCall = async ({ msgId }: GetMsgParameters): Promise<MailMessage> => {\n\tconst result = (await soapFetch<GetMsgRequest, GetMsgResponse>('GetMsg', {\n\t\t_jsns: 'urn:zimbraMail',\n\t\tm: {\n\t\t\thtml: 1,\n\t\t\tid: msgId,\n\t\t\tneedExp: 1\n\t\t}\n\t})) as GetMsgResponse;\n\tconst msg = result?.m[0];\n\treturn normalizeMailMessageFromSoap(msg, true) as MailMessage;\n};\n\nexport const getMsg = createAsyncThunk<MailMessage, GetMsgParameters>(\n\t'messages/getMsg',\n\tgetMsgCall\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\nimport { isNil } from 'lodash';\nimport { omitBy } from '../../commons/utils';\nimport type {\n\tConvActionParameters,\n\tConvActionRequest,\n\tConvActionResponse,\n\tConvActionResult\n} from '../../types';\n\nexport const convAction = createAsyncThunk<ConvActionResult, ConvActionParameters>(\n\t'convAction',\n\tasync ({ ids, operation, parent, tagName }) => {\n\t\tconst { action } = (await soapFetch<ConvActionRequest, ConvActionResponse>('ConvAction', {\n\t\t\t_jsns: 'urn:zimbraMail',\n\n\t\t\taction: omitBy(\n\t\t\t\t{\n\t\t\t\t\tid: ids.join(','),\n\t\t\t\t\top: operation,\n\t\t\t\t\tl: parent,\n\t\t\t\t\ttn: tagName\n\t\t\t\t},\n\t\t\t\tisNil\n\t\t\t)\n\t\t})) as ConvActionResponse;\n\t\treturn {\n\t\t\tids: action.id.split(','),\n\t\t\toperation: action.op\n\t\t};\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\nimport { isNil, omitBy } from 'lodash';\nimport type {\n\tMsgActionRequest,\n\tMsgActionResponse,\n\tMsgActionResult,\n\tMsgActionParameters\n} from '../../types';\n\nexport const msgAction = createAsyncThunk<MsgActionResult, MsgActionParameters>(\n\t'msgAction',\n\tasync ({ ids, operation, parent, tagName, flag }) => {\n\t\tconst { action } = (await soapFetch<MsgActionRequest, MsgActionResponse>('MsgAction', {\n\t\t\t_jsns: 'urn:zimbraMail',\n\n\t\t\taction: omitBy(\n\t\t\t\t{\n\t\t\t\t\tid: ids.join(','),\n\t\t\t\t\top: operation,\n\t\t\t\t\tl: parent,\n\t\t\t\t\ttn: tagName,\n\t\t\t\t\tf: flag\n\t\t\t\t},\n\t\t\t\tisNil\n\t\t\t)\n\t\t})) as MsgActionResponse;\n\t\treturn {\n\t\t\tids: action.id.split(','),\n\t\t\toperation: action.op\n\t\t};\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\nimport { map } from 'lodash';\n\nimport { API_REQUEST_STATUS } from '../../constants';\nimport { normalizeMailMessageFromSoap } from '../../normalizations/normalize-message';\nimport type {\n\tSearchConvParameters,\n\tSearchConvRequest,\n\tSearchConvResponse,\n\tSearchConvReturn\n} from '../../types';\n\nexport const searchConv = createAsyncThunk<SearchConvReturn, SearchConvParameters>(\n\t'conversations/searchConv',\n\tasync ({ conversationId, folderId, fetch = 'all' }) => {\n\t\tconst result = (await soapFetch<SearchConvRequest, SearchConvResponse>('SearchConv', {\n\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\tcid: conversationId,\n\t\t\tquery: `inId: \"${folderId}\"`,\n\t\t\trecip: '2',\n\t\t\tsortBy: 'dateDesc',\n\t\t\toffset: 0,\n\t\t\tfetch,\n\t\t\tneedExp: 1,\n\t\t\tlimit: 250,\n\t\t\thtml: 1\n\t\t})) as SearchConvResponse;\n\t\tconst messages = map(result?.m ?? [], (msg) => normalizeMailMessageFromSoap(msg, true));\n\n\t\treturn {\n\t\t\tmessages,\n\t\t\torderBy: result.orderBy,\n\t\t\thasMore: result.more,\n\t\t\toffset: result.offset\n\t\t};\n\t},\n\t{\n\t\tcondition: ({ conversationId }: SearchConvParameters, { getState }: any) =>\n\t\t\tgetState().conversations?.expandedStatus[conversationId] !== API_REQUEST_STATUS.fulfilled &&\n\t\t\tgetState().conversations?.expandedStatus[conversationId] !== API_REQUEST_STATUS.pending\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { ErrorSoapBodyResponse, SoapBody, soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport type { RedirectMessageActionRequest, MessageSpecification } from '../../types';\n\nexport const redirectMessageAction = ({\n\tid,\n\te\n}: MessageSpecification): Promise<SoapBody | ErrorSoapBodyResponse> =>\n\tsoapFetch<RedirectMessageActionRequest, SoapBody | ErrorSoapBodyResponse>('BounceMsg', {\n\t\t_jsns: 'urn:zimbraMail',\n\t\tm: {\n\t\t\tid,\n\t\t\te\n\t\t}\n\t});\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\nimport { isNull, map, omitBy } from 'lodash';\n\nimport { normalizeMailMessageFromSoap } from '../../normalizations/normalize-message';\nimport type {\n\tGetMsgForPrintParameter,\n\tGetMsgResponse as GetMsgResponseType,\n\tMailMessage\n} from '../../types';\n\nexport const getMsgsForPrint = async ({\n\tids,\n\tpart\n}: GetMsgForPrintParameter): Promise<Array<MailMessage>> => {\n\tconst { GetMsgResponse } = (await soapFetch('Batch', {\n\t\tGetMsgRequest: map(ids, (id) => ({\n\t\t\tm: omitBy(\n\t\t\t\t{\n\t\t\t\t\thtml: 1,\n\t\t\t\t\tid,\n\t\t\t\t\tneedExp: 1,\n\t\t\t\t\tpart,\n\t\t\t\t\tread: 1\n\t\t\t\t},\n\t\t\t\tisNull\n\t\t\t),\n\t\t\t_jsns: 'urn:zimbraMail'\n\t\t})),\n\t\t_jsns: 'urn:zimbra'\n\t})) as { GetMsgResponse: Array<GetMsgResponseType> };\n\treturn map(GetMsgResponse, (re) => {\n\t\tconst msg = re.m[0];\n\t\treturn normalizeMailMessageFromSoap(msg, true) as MailMessage;\n\t});\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport type { SaveDraftParameters, SaveDraftRequest, SaveDraftResponse } from '../../types';\nimport { createSoapDraftRequestFromEditor } from '../zustand/editor/editor-transformations';\n\nexport const saveDraftV3 = ({ editor, signal }: SaveDraftParameters): Promise<SaveDraftResponse> =>\n\tsoapFetch<SaveDraftRequest, SaveDraftResponse>(\n\t\t'SaveDraft',\n\t\t{\n\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\tm: createSoapDraftRequestFromEditor(editor)\n\t\t},\n\t\tundefined,\n\t\tsignal\n\t);\n\nexport const saveDraftAsyncThunk = createAsyncThunk<{ resp: SaveDraftResponse }, SaveDraftResponse>(\n\t'saveDraft',\n\t(resp) => ({\n\t\tresp\n\t})\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"conversation\"] }] */\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ErrorSoapBodyResponse, getTags, soapFetch } from '@zextras/carbonio-shell-ui';\nimport { keyBy, map, reduce } from 'lodash';\n\nimport { normalizeConversation } from '../../normalizations/normalize-conversation';\nimport { normalizeMailMessageFromSoap } from '../../normalizations/normalize-message';\nimport type {\n\tFetchConversationsParameters,\n\tFetchConversationsReturn,\n\tSearchRequest,\n\tSearchResponse\n} from '../../types';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/explicit-module-boundary-types\nexport const search = createAsyncThunk<\n\tFetchConversationsReturn | undefined,\n\tFetchConversationsParameters\n>(\n\t'fetchConversations',\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tasync (\n\t\t{\n\t\t\tfolderId,\n\t\t\tlimit = 100,\n\t\t\tbefore,\n\t\t\ttypes = 'conversation',\n\t\t\tsortBy = 'dateDesc',\n\t\t\tquery,\n\t\t\toffset,\n\t\t\trecip = '2',\n\t\t\twantContent = 'full',\n\t\t\tlocale\n\t\t},\n\t\t{ rejectWithValue }\n\t) => {\n\t\tconst queryPart = [`inId:\"${folderId}\"`];\n\t\tlet finalsortBy = sortBy;\n\t\tif (before) queryPart.push(`before:${before.getTime()}`);\n\t\tswitch (sortBy) {\n\t\t\tcase 'readAsc':\n\t\t\t\tqueryPart.push('is:unread');\n\t\t\t\tfinalsortBy = 'dateAsc';\n\t\t\t\tbreak;\n\t\t\tcase 'readDesc':\n\t\t\t\tqueryPart.push('is:unread');\n\t\t\t\tfinalsortBy = 'dateDesc';\n\t\t\t\tbreak;\n\t\t\tcase 'priorityAsc':\n\t\t\tcase 'priorityDesc':\n\t\t\t\tqueryPart.push('priority:high');\n\t\t\t\tbreak;\n\t\t\tcase 'flagAsc':\n\t\t\tcase 'flagDesc':\n\t\t\t\tqueryPart.push('is:flagged');\n\t\t\t\tbreak;\n\t\t\tcase 'attachAsc':\n\t\t\tcase 'attachDesc':\n\t\t\t\tqueryPart.push('has:attachment');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet finalQuery = '';\n\n\t\tif (folderId) {\n\t\t\tfinalQuery = queryPart.join(' ');\n\t\t}\n\t\tif (!folderId && query) {\n\t\t\tfinalQuery = query;\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await soapFetch<SearchRequest, SearchResponse | ErrorSoapBodyResponse>(\n\t\t\t\t'Search',\n\t\t\t\t{\n\t\t\t\t\t_jsns: 'urn:zimbraMail',\n\t\t\t\t\tlimit,\n\t\t\t\t\tneedExp: 1,\n\t\t\t\t\trecip,\n\t\t\t\t\tfullConversation: 1,\n\t\t\t\t\twantContent,\n\t\t\t\t\tsortBy: finalsortBy,\n\t\t\t\t\tquery: finalQuery,\n\t\t\t\t\toffset,\n\t\t\t\t\ttypes,\n\t\t\t\t\t...(locale\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tlocale: {\n\t\t\t\t\t\t\t\t\t_content: locale\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined)\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (!result) {\n\t\t\t\treturn rejectWithValue(undefined);\n\t\t\t}\n\n\t\t\tif ('Fault' in result) {\n\t\t\t\treturn rejectWithValue(result.Fault);\n\t\t\t}\n\n\t\t\tconst tags = getTags();\n\t\t\tif (types === 'conversation') {\n\t\t\t\tconst conversations = map(result?.c ?? [], (obj, index) => ({\n\t\t\t\t\t...normalizeConversation({ c: obj, tags }),\n\t\t\t\t\tsortIndex: index + (offset ?? 0)\n\t\t\t\t}));\n\t\t\t\treturn {\n\t\t\t\t\tconversations: keyBy(conversations, 'id'),\n\t\t\t\t\thasMore: result.more,\n\t\t\t\t\toffset: result.offset,\n\t\t\t\t\ttypes\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (types === 'message') {\n\t\t\t\treturn {\n\t\t\t\t\tmessages: reduce(\n\t\t\t\t\t\tresult.m ?? [],\n\t\t\t\t\t\t(acc, msg, index) => {\n\t\t\t\t\t\t\tconst normalized = {\n\t\t\t\t\t\t\t\t...normalizeMailMessageFromSoap(msg, false),\n\t\t\t\t\t\t\t\tsortIndex: index + (offset ?? 0)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn { ...acc, [normalized.id]: normalized };\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{}\n\t\t\t\t\t),\n\t\t\t\t\thasMore: result.more,\n\t\t\t\t\toffset: result.offset,\n\t\t\t\t\ttypes\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (err: any) {\n\t\t\treturn rejectWithValue(err);\n\t\t}\n\t\treturn undefined;\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n/* eslint-disable no-param-reassign */\n\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"state\", \"conversation\", \"message\", \"cache\"] }] */\n\nimport { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { FOLDERS } from '@zextras/carbonio-shell-ui';\nimport produce from 'immer';\nimport { forEach, merge, reduce } from 'lodash';\n\nimport { convAction, getConv, searchConv, search } from './actions';\nimport {\n\thandleAddMessagesInConversationReducer,\n\thandleCreatedConversationsReducer,\n\thandleCreatedMessagesInConversationsReducer,\n\thandleDeletedConversationsReducer,\n\thandleDeletedMessagesInConversationReducer,\n\thandleModifiedConversationsReducer,\n\thandleModifiedMessagesInConversationReducer\n} from './sync/conversation';\nimport { API_REQUEST_STATUS, SEARCHED_FOLDER_STATE_STATUS } from '../constants';\nimport type {\n\tConversationsStateType,\n\tMailsStateType,\n\tFetchConversationsReturn,\n\tConvMessage,\n\tConvActionParameters,\n\tConvActionResult,\n\tConversation,\n\tSearchRequestStatus\n} from '../types';\n\nfunction fetchConversationsPending(state: ConversationsStateType, { payload, meta }: any): void {\n\tif (meta?.arg?.types === 'conversation') {\n\t\tstate.searchRequestStatus = meta.requestStatus;\n\t}\n}\n\nfunction fetchConversationsFulfilled(\n\tstate: ConversationsStateType,\n\t{ payload, meta }: { payload: FetchConversationsReturn | undefined; meta: any }\n): void {\n\tif (payload?.types === 'conversation' && payload?.conversations) {\n\t\tstate.searchRequestStatus = meta.requestStatus;\n\t\tconst newConversationsState =\n\t\t\tpayload.offset && payload.offset > 0\n\t\t\t\t? { ...state.conversations, ...payload.conversations }\n\t\t\t\t: { ...payload.conversations };\n\t\tstate.conversations = newConversationsState;\n\t\tstate.searchedInFolder = {\n\t\t\t...state.searchedInFolder,\n\t\t\t[meta.arg.folderId]: payload?.hasMore\n\t\t\t\t? SEARCHED_FOLDER_STATE_STATUS.hasMore\n\t\t\t\t: SEARCHED_FOLDER_STATE_STATUS.complete\n\t\t};\n\t\tstate.expandedStatus = {};\n\t}\n}\n\nfunction fetchConversationsRejected(state: ConversationsStateType, { payload, meta }: any): void {\n\tif (payload?.types === 'conversation' && payload?.conversations) {\n\t\tstate.searchRequestStatus = meta.requestStatus;\n\t\tstate.searchedInFolder = {\n\t\t\t...state.searchedInFolder,\n\t\t\t[meta.arg.folderId]: SEARCHED_FOLDER_STATE_STATUS.incomplete\n\t\t};\n\t}\n}\n\nfunction searchConvFulfilled(state: ConversationsStateType, { payload, meta }: any): void {\n\tstate.expandedStatus[meta.arg.conversationId] = meta.requestStatus;\n\tconst conversation = state.conversations[meta.arg.conversationId];\n\tif (conversation) {\n\t\tconversation.messages = reduce(\n\t\t\tpayload.messages,\n\t\t\t(acc, v) => [...acc, { id: v.id, parent: v.parent, date: Number(v.date) }],\n\t\t\t[] as Array<ConvMessage>\n\t\t);\n\t}\n}\n\nfunction searchConvPending(state: ConversationsStateType, { meta }: any): void {\n\tstate.expandedStatus[meta.arg.conversationId] = meta.requestStatus;\n}\n\nfunction searchConvRejected(state: ConversationsStateType, { meta }: any): void {\n\tstate.expandedStatus[meta.arg.conversationId] = meta.requestStatus;\n}\n\nfunction convActionPending(\n\t{ conversations }: ConversationsStateType,\n\t{ meta }: { meta: { arg: ConvActionParameters; requestId: string; requestStatus: string } }\n): void {\n\tconst { ids, operation } = meta.arg;\n\n\tforEach(ids, (id: string) => {\n\t\tif (conversations?.[id]) {\n\t\t\tif (operation.includes('flag')) {\n\t\t\t\tconversations[id].flagged = !operation.startsWith('!');\n\t\t\t} else if (operation.includes('read')) {\n\t\t\t\tconversations[id].read = !operation.startsWith('!');\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction convActionFulfilled(\n\t{ conversations }: ConversationsStateType,\n\t{\n\t\tpayload\n\t}: {\n\t\tpayload: ConvActionResult;\n\t\tmeta: { arg: ConvActionParameters; requestId: string; requestStatus: string };\n\t}\n): void {\n\tconst { ids, operation } = payload;\n\n\tforEach(ids, (id: string) => {\n\t\tif (conversations?.[id]) {\n\t\t\tif (operation === 'delete') {\n\t\t\t\tdelete conversations[id];\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction convActionRejected(\n\t{ conversations }: ConversationsStateType,\n\t{ meta }: { meta: { arg: ConvActionParameters; requestId: string; requestStatus: string } }\n): void {\n\tconst { ids, operation } = meta.arg;\n\n\tforEach(ids, (id: string) => {\n\t\tif (conversations?.[id]) {\n\t\t\tif (operation.includes('flag')) {\n\t\t\t\tconversations[id].flagged = operation.startsWith('!');\n\t\t\t} else if (operation.includes('read')) {\n\t\t\t\tconversations[id].read = operation.startsWith('!');\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function setCurrentFolderReducer(\n\tstate: ConversationsStateType,\n\t{ payload }: { payload: string }\n): void {\n\tstate.currentFolder = payload;\n}\n\nexport function setSearchedInFolderReducer(\n\tstate: ConversationsStateType,\n\t{ payload }: { payload: Record<string, string> }\n): void {\n\tstate.searchedInFolder = merge(state.searchedInFolder, payload);\n}\nfunction getConvFulfilled(state: ConversationsStateType, { payload }: any): void {\n\tconst conv = payload.conversation;\n\tif (conv?.id && state.conversations?.[conv.id]) {\n\t\tstate.conversations[conv.id] = merge(state.conversations[conv.id], conv);\n\t\tstate.expandedStatus[conv.id] = API_REQUEST_STATUS.fulfilled;\n\t} else if (conv?.id && !state.conversations?.[conv.id]) {\n\t\tstate.conversations[conv.id] = conv;\n\t\tstate.expandedStatus[conv.id] = API_REQUEST_STATUS.fulfilled;\n\t}\n}\n\nfunction getConvPending(state: ConversationsStateType, { meta }: any): void {\n\tstate.expandedStatus[meta.arg.conversationId] = meta.requestStatus;\n}\n\nfunction getConvRejected(state: ConversationsStateType, { meta }: any): void {\n\tstate.expandedStatus[meta.arg.conversationId] = meta.requestStatus;\n}\n\nexport const getConversationsSliceInitialState = (): ConversationsStateType =>\n\t({\n\t\tcurrentFolder: FOLDERS.INBOX,\n\t\tconversations: {},\n\t\texpandedStatus: {},\n\t\tsearchedInFolder: {},\n\t\tsearchRequestStatus: null\n\t}) as ConversationsStateType;\n\nexport const conversationsSlice = createSlice({\n\tname: 'conversations',\n\tinitialState: getConversationsSliceInitialState(),\n\treducers: {\n\t\thandleNotifyCreatedConversations: produce(handleCreatedConversationsReducer),\n\t\thandleNotifyModifiedConversations: produce(handleModifiedConversationsReducer),\n\t\thandleNotifyDeletedConversations: produce(handleDeletedConversationsReducer),\n\t\thandleCreatedMessagesInConversation: produce(handleCreatedMessagesInConversationsReducer),\n\t\thandleModifiedMessagesInConversation: produce(handleModifiedMessagesInConversationReducer),\n\t\thandleDeletedMessagesInConversation: produce(handleDeletedMessagesInConversationReducer),\n\t\thandleAddMessagesInConversation: produce(handleAddMessagesInConversationReducer),\n\t\tsetCurrentFolder: produce(setCurrentFolderReducer),\n\t\tsetSearchedInFolder: produce(setSearchedInFolderReducer)\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(search.pending, produce(fetchConversationsPending));\n\t\tbuilder.addCase(search.fulfilled, produce(fetchConversationsFulfilled));\n\t\tbuilder.addCase(search.rejected, produce(fetchConversationsRejected));\n\t\tbuilder.addCase(searchConv.pending, produce(searchConvPending));\n\t\tbuilder.addCase(searchConv.fulfilled, produce(searchConvFulfilled));\n\t\tbuilder.addCase(searchConv.rejected, produce(searchConvRejected));\n\t\tbuilder.addCase(convAction.pending, produce(convActionPending));\n\t\tbuilder.addCase(convAction.rejected, produce(convActionRejected));\n\t\tbuilder.addCase(convAction.fulfilled, produce(convActionFulfilled));\n\t\tbuilder.addCase(getConv.pending, produce(getConvPending));\n\t\tbuilder.addCase(getConv.fulfilled, produce(getConvFulfilled));\n\t\tbuilder.addCase(getConv.rejected, produce(getConvRejected));\n\t}\n});\n\nexport const {\n\thandleNotifyCreatedConversations,\n\thandleNotifyModifiedConversations,\n\thandleNotifyDeletedConversations,\n\thandleCreatedMessagesInConversation,\n\thandleModifiedMessagesInConversation,\n\thandleAddMessagesInConversation,\n\thandleDeletedMessagesInConversation,\n\tsetSearchedInFolder\n} = conversationsSlice.actions;\nexport const conversationsSliceReducer = conversationsSlice.reducer;\n\nconst selectConversationsSlice = (state: MailsStateType): MailsStateType['conversations'] =>\n\tstate.conversations;\n\nexport function selectCurrentFolderExpandedStatus({\n\tconversations\n}: MailsStateType): Record<string, SearchRequestStatus> {\n\treturn conversations.expandedStatus;\n}\n\nexport function selectConversationExpandedStatus(\n\t{ conversations }: MailsStateType,\n\tid: string\n): SearchRequestStatus | undefined {\n\treturn conversations?.expandedStatus?.[id];\n}\n\nexport function selectCurrentFolder({ conversations }: MailsStateType): string {\n\treturn conversations?.currentFolder;\n}\n\nexport function selectSearchedFolder({ conversations }: MailsStateType, id: string): string {\n\treturn conversations?.searchedInFolder?.[id];\n}\n\nexport const selectConversationsArray = createSelector([selectConversationsSlice], (slice) =>\n\tObject.values(slice.conversations ?? [])\n);\n\nexport const selectConversation =\n\t(id: string) =>\n\t({ conversations }: MailsStateType): Conversation =>\n\t\tconversations?.conversations?.[id] ?? {};\n\nexport const selectFolderSearchStatus =\n\t(folderId: string) =>\n\t({ conversations }: MailsStateType): string | undefined =>\n\t\tconversations?.searchedInFolder?.[folderId];\n\nexport function selectConversationsSearchRequestStatus(\n\tstate: MailsStateType\n): MailsStateType['conversations']['searchRequestStatus'] {\n\treturn state?.conversations?.searchRequestStatus;\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { FOLDERS } from '@zextras/carbonio-shell-ui';\nimport { filter, find, forEach, map, merge, omit, reduce, some, last, sortBy } from 'lodash';\n\nimport type { ConvMessage, ConversationsStateType, Payload } from '../../types';\n\nexport const handleCreatedConversationsReducer = (\n\tstate: ConversationsStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (conv) => {\n\t\tif (conv?.id) {\n\t\t\tstate.conversations = merge(state.conversations, {\n\t\t\t\t[conv.id]: { ...conv, sortIndex: -JSON.stringify(Date.now()) }\n\t\t\t});\n\t\t}\n\t});\n};\n\nexport const handleModifiedConversationsReducer = (\n\tstate: ConversationsStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (conv) => {\n\t\tif (conv?.id && state?.conversations?.[conv.id]) {\n\t\t\tstate.conversations[conv.id] = {\n\t\t\t\t...merge(state.conversations[conv.id], conv),\n\t\t\t\ttags: conv.tags\n\t\t\t};\n\t\t}\n\t});\n};\n\nexport const handleCreatedMessagesInConversationsReducer = (\n\tstate: ConversationsStateType,\n\t{ payload }: Payload\n): void => {\n\tconst { m } = payload;\n\n\tforEach(m, (msg) => {\n\t\tconst conversation = state.conversations?.[msg.cid];\n\t\tif (msg?.cid && msg?.id && msg?.l && conversation) {\n\t\t\tconst messages = find(conversation.messages, ['id', msg.id])\n\t\t\t\t? conversation.messages\n\t\t\t\t: [...conversation.messages, { id: msg.id, parent: msg.l, date: Number(msg.d) }];\n\n\t\t\tconst date =\n\t\t\t\tmsg.l === FOLDERS.DRAFTS\n\t\t\t\t\t? conversation.date\n\t\t\t\t\t: (last(sortBy(filter(messages, { parent: state.currentFolder }), 'date')) as ConvMessage)\n\t\t\t\t\t\t\t?.date;\n\n\t\t\tconst conv = {\n\t\t\t\t[msg.cid]: {\n\t\t\t\t\t...conversation,\n\t\t\t\t\tmessages,\n\t\t\t\t\tfragment: msg?.fr ?? '',\n\t\t\t\t\tdate,\n\t\t\t\t\tsortIndex: -JSON.stringify(Date.now())\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tstate.conversations = { ...state.conversations, ...conv };\n\t\t}\n\t});\n};\n\nexport const handleModifiedMessagesInConversationReducer = (\n\tstate: ConversationsStateType,\n\t{ payload }: Payload\n): void => {\n\tstate.conversations = reduce(\n\t\tstate.conversations,\n\t\t(acc, conv) => ({\n\t\t\t...acc,\n\t\t\t[conv.id]: {\n\t\t\t\t...conv,\n\t\t\t\tmessages: map(conv.messages, (msg) => {\n\t\t\t\t\tconst messageToUpdate = find(payload, (item) => item.id === msg.id);\n\t\t\t\t\treturn messageToUpdate ? { ...msg, ...messageToUpdate } : msg;\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n};\n\nexport const handleAddMessagesInConversationReducer = (\n\tstate: ConversationsStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (msg) => {\n\t\tconst addMsg = omit(msg, ['conversation']) as ConvMessage;\n\n\t\tif (msg?.conversation && state?.conversations?.[msg?.conversation]) {\n\t\t\tstate.conversations[msg.conversation] = {\n\t\t\t\t...state.conversations[msg.conversation],\n\t\t\t\tmessages: [...state.conversations[msg.conversation].messages, addMsg]\n\t\t\t};\n\t\t}\n\t});\n};\n\nexport const handleDeletedConversationsReducer = (\n\tstate: ConversationsStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (id) => {\n\t\tstate.conversations = omit(state.conversations, id);\n\t});\n};\n\nexport const handleDeletedMessagesInConversationReducer = (\n\tstate: ConversationsStateType,\n\t{ payload }: Payload\n): void => {\n\tstate.conversations = reduce(\n\t\tstate.conversations,\n\t\t(acc, conv) => ({\n\t\t\t...acc,\n\t\t\t[conv.id]: {\n\t\t\t\t...conv,\n\t\t\t\tmessages: filter(conv.messages, (msg) => !some(payload, (id) => id === msg.id))\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable unused-imports/no-unused-vars */\n/* eslint-disable no-param-reassign */\n/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { FOLDERS } from '@zextras/carbonio-shell-ui';\nimport produce from 'immer';\nimport { forEach, map, merge } from 'lodash';\n\nimport { search, getMsg, msgAction, getConv, searchConv } from './actions';\nimport { deleteAttachments } from './actions/delete-all-attachments';\nimport { saveDraftAsyncThunk } from './actions/save-draft';\nimport {\n\thandleCreatedMessagesReducer,\n\thandleModifiedMessagesReducer,\n\thandleDeletedMessagesReducer\n} from './sync/message';\nimport { CONVACTIONS } from '../commons/utilities';\nimport { SEARCHED_FOLDER_STATE_STATUS } from '../constants';\nimport { normalizeMailMessageFromSoap } from '../normalizations/normalize-message';\nimport type {\n\tMsgMap,\n\tMsgStateType,\n\tMailsStateType,\n\tConversation,\n\tMailMessage,\n\tFetchConversationsReturn,\n\tSearchConvReturn,\n\tDeleteAttachmentsReturn,\n\tMsgMapValue,\n\tSaveDraftResponse\n} from '../types';\n\nfunction getMsgFulfilled({ messages }: MsgStateType, { payload }: { payload: MailMessage }): void {\n\tif (payload?.id) {\n\t\tconst mergedMessages = merge(messages?.[payload.id] ?? {}, { ...payload, isComplete: true });\n\t\tmessages[payload.id] = {\n\t\t\t...mergedMessages,\n\t\t\tparticipants: payload.participants\n\t\t};\n\t}\n}\n\nfunction fetchMessagesRejected(state: MsgStateType, { meta }: { meta: any }): void {\n\tif (meta.arg.types === 'message') {\n\t\tstate.searchRequestStatus = meta.requestStatus;\n\t\tstate.searchedInFolder = {\n\t\t\t...state.searchedInFolder,\n\t\t\t[meta.arg.folderId]: meta.requestStatus\n\t\t};\n\t}\n}\n\nfunction fetchMessagesFulfilled(\n\tstate: MsgStateType,\n\t{ payload, meta }: { payload: FetchConversationsReturn | undefined; meta: any }\n): void {\n\tif (payload?.messages && payload?.types === 'message') {\n\t\tstate.searchRequestStatus = meta.requestStatus;\n\t\tconst newMessagesState =\n\t\t\tpayload.offset !== undefined && payload.offset >= 0\n\t\t\t\t? { ...state.messages, ...payload.messages }\n\t\t\t\t: { ...payload.messages };\n\t\tstate.messages = newMessagesState;\n\t\tstate.searchedInFolder = {\n\t\t\t...state.searchedInFolder,\n\t\t\t[meta.arg.folderId]: payload.hasMore\n\t\t\t\t? SEARCHED_FOLDER_STATE_STATUS.hasMore\n\t\t\t\t: SEARCHED_FOLDER_STATE_STATUS.complete\n\t\t};\n\t}\n}\n\nfunction deleteAttachmentsFulfilled(\n\tstate: MsgStateType,\n\t{ payload, meta }: { payload: DeleteAttachmentsReturn | undefined; meta: any }\n): void {\n\tif (payload?.attachments?.length && state.messages[meta.arg.id]) {\n\t\tconst normalizeMsg = normalizeMailMessageFromSoap(payload.res.m[0], true);\n\t\tstate.messages[meta.arg.id] = { ...state.messages[meta.arg.id], parts: normalizeMsg.parts };\n\t}\n}\n\nfunction saveDraftFulfilled(\n\t{ messages, searchRequestStatus }: MsgStateType,\n\t{ payload, meta }: { payload: { resp: SaveDraftResponse }; meta: any }\n): void {\n\tif (payload.resp.m) {\n\t\tconst message = normalizeMailMessageFromSoap(payload.resp?.m?.[0], true);\n\t\tsearchRequestStatus = meta.requestStatus;\n\t\tmessages[message.id] = message;\n\t}\n}\n\nfunction searchConvFulfilled(\n\t{ messages }: MsgStateType,\n\t{ payload }: { payload: SearchConvReturn }\n): void {\n\tforEach(payload.messages, (m) => {\n\t\tmessages[m.id] = { ...m, isComplete: true };\n\t});\n}\n\nfunction msgActionRejected({ messages }: MsgStateType, { meta }: { meta: any }): void {\n\tmessages = meta.arg.prevCache;\n}\nfunction msgActionPending(\n\t{ messages, searchRequestStatus }: MsgStateType,\n\t{ meta }: { meta: any }\n): void {\n\tconst { operation, ids } = meta.arg;\n\tsearchRequestStatus = meta.requestStatus;\n\tmeta.arg.prevCache = messages;\n\tforEach(ids, (id) => {\n\t\tconst message = messages[id];\n\t\tif (message) {\n\t\t\tif (operation.includes(CONVACTIONS.FLAG)) {\n\t\t\t\tmessage.flagged = !operation.startsWith('!');\n\t\t\t} else if (operation.includes(CONVACTIONS.MARK_READ)) {\n\t\t\t\tmessage.read = !operation.startsWith('!');\n\t\t\t} else if (operation === CONVACTIONS.TRASH) {\n\t\t\t\tmessage.parent = FOLDERS.TRASH;\n\t\t\t} else if (operation === CONVACTIONS.DELETE) {\n\t\t\t\tdelete message[id];\n\t\t\t} else if (operation === CONVACTIONS.MOVE) {\n\t\t\t\tmessage.parent = meta.arg.parent;\n\t\t\t} else if (operation === CONVACTIONS.MARK_SPAM) {\n\t\t\t\tmessage.parent = FOLDERS.SPAM;\n\t\t\t} else if (operation === CONVACTIONS.MARK_NOT_SPAM) {\n\t\t\t\tmessage.parent = FOLDERS.INBOX;\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction getConvFulfilled(\n\t{ messages }: MsgStateType,\n\t{ payload }: { payload: Partial<Conversation> }\n): void {\n\tforEach(payload.messages, (m) => {\n\t\tmessages[m.id] = m;\n\t\tmessages[m.id].status = SEARCHED_FOLDER_STATE_STATUS.complete;\n\t});\n}\n\nexport const getMessagesSliceInitialState = (): MsgStateType =>\n\t({\n\t\tmessages: {} as MsgMap,\n\t\tsearchRequestStatus: null\n\t}) as MsgStateType;\n\nconst selectMessagesSlice = (state: MailsStateType): MailsStateType['messages'] => state.messages;\n\nexport const messagesSlice = createSlice({\n\tname: 'messages',\n\tinitialState: getMessagesSliceInitialState(),\n\treducers: {\n\t\thandleCreatedMessages: produce(handleCreatedMessagesReducer),\n\t\thandleModifiedMessages: produce(handleModifiedMessagesReducer),\n\t\thandleDeletedMessages: produce(handleDeletedMessagesReducer)\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(getMsg.fulfilled, produce(getMsgFulfilled));\n\t\tbuilder.addCase(searchConv.fulfilled, produce(searchConvFulfilled));\n\t\tbuilder.addCase(msgAction.pending, produce(msgActionPending));\n\t\tbuilder.addCase(msgAction.rejected, produce(msgActionRejected));\n\t\tbuilder.addCase(getConv.fulfilled, produce(getConvFulfilled));\n\t\tbuilder.addCase(saveDraftAsyncThunk.fulfilled, produce(saveDraftFulfilled));\n\t\tbuilder.addCase(search.fulfilled, produce(fetchMessagesFulfilled));\n\t\tbuilder.addCase(search.rejected, produce(fetchMessagesRejected));\n\t\tbuilder.addCase(deleteAttachments.fulfilled, produce(deleteAttachmentsFulfilled));\n\t}\n});\n\nexport const { handleCreatedMessages, handleModifiedMessages, handleDeletedMessages } =\n\tmessagesSlice.actions;\nexport const messageSliceReducer = messagesSlice.reducer;\n\nexport function selectMessage(state: MailsStateType, id: string): MailMessage {\n\treturn state?.messages?.messages?.[id];\n}\n\nexport function selectMessages(state: MailsStateType): MsgMap {\n\treturn state?.messages?.messages;\n}\n\nexport const selectConvMessages =\n\t(convIds: Array<string>) =>\n\t(state: MailsStateType): MsgMap =>\n\t\tmap(convIds, (id) => ({ [id]: state?.messages?.messages[id] }));\n\nexport const selectMessagesArray = createSelector(\n\t[selectMessagesSlice],\n\t(slice): Array<MsgMapValue> => Object.values(slice.messages ?? [])\n);\n\nexport function selectMessagesSearchRequestStatus(\n\tstate: MailsStateType\n): MailsStateType['messages']['searchRequestStatus'] {\n\treturn state?.messages?.searchRequestStatus;\n}\n\nexport const selectFolderMsgSearchStatus =\n\t(id: string): (({ messages }: MailsStateType) => string | undefined) =>\n\t({ messages }: MailsStateType): string | undefined =>\n\t\tmessages?.searchedInFolder?.[id];\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport {\n\tFOLDERS,\n\tt,\n\tgetNotificationManager,\n\tgetUserSettings,\n\treplaceHistory,\n\tNotificationConfig\n} from '@zextras/carbonio-shell-ui';\nimport {\n\tforEach,\n\tpick,\n\tmerge,\n\tomit,\n\treduce,\n\tmap,\n\tfilter,\n\tsortBy,\n\treverse,\n\tfind,\n\treject\n} from 'lodash';\n\nimport { MAILS_ROUTE } from '../../constants';\nimport { normalizeMailMessageFromSoap } from '../../normalizations/normalize-message';\nimport type { SoapIncompleteMessage, MsgStateType, IncompleteMessage, Payload } from '../../types';\n\nconst triggerNotification = (m: Array<SoapIncompleteMessage>): void => {\n\tconst { props, prefs } = getUserSettings();\n\tconst isShowNotificationEnabled = prefs?.zimbraPrefMailToasterEnabled ?? 'TRUE';\n\tconst isAudioEnabled = find(props, ['name', 'mailNotificationSound'])?._content ?? 'TRUE';\n\tconst showAllNotifications = prefs?.zimbraPrefShowAllNewMailNotifications ?? 'FALSE';\n\n\tconst messages = map(m, (item: SoapIncompleteMessage) => {\n\t\tlet norm = normalizeMailMessageFromSoap(item, false);\n\t\tif (norm?.fragment && norm?.fragment?.length < 1) {\n\t\t\tnorm = {\n\t\t\t\t...norm,\n\t\t\t\tfragment: t('notification.no_content', 'Message without content')\n\t\t\t};\n\t\t}\n\t\tif (norm?.subject?.length < 1) {\n\t\t\tnorm = {\n\t\t\t\t...norm,\n\t\t\t\tsubject: t('notification.new_message', 'New Message')\n\t\t\t};\n\t\t}\n\t\treturn pick(norm, ['id', 'subject', 'fragment', 'date', 'parent', 'isSentByMe']);\n\t});\n\tconst messagesToNotify = reverse(\n\t\tsortBy(\n\t\t\tfilter(reject(messages, 'read'), (item) =>\n\t\t\t\tshowAllNotifications === 'TRUE'\n\t\t\t\t\t? !(item.isSentByMe === true)\n\t\t\t\t\t: !(item.isSentByMe === true) && item.parent === FOLDERS.INBOX\n\t\t\t),\n\t\t\t'date'\n\t\t)\n\t);\n\n\tif (!messagesToNotify?.length || !(isAudioEnabled || isShowNotificationEnabled)) {\n\t\treturn;\n\t}\n\n\tconst notificationConfig: NotificationConfig[] = messagesToNotify.map((msg) => ({\n\t\ttitle: msg.subject,\n\t\tmessage: msg.fragment ?? t('notification.no_content', 'Message without content') ?? '',\n\t\tplaySound: isAudioEnabled === 'TRUE',\n\t\tshowPopup: isShowNotificationEnabled === 'TRUE',\n\t\tonClick: (): void => {\n\t\t\twindow.focus();\n\t\t\treplaceHistory({\n\t\t\t\tpath: `/folder/${msg.parent}/message/${msg.id}`,\n\t\t\t\troute: MAILS_ROUTE\n\t\t\t});\n\t\t}\n\t}));\n\n\tgetNotificationManager().multipleNotify(notificationConfig);\n};\n\nexport const handleCreatedMessagesReducer = (state: MsgStateType, { payload }: Payload): void => {\n\tconst { m } = payload;\n\tconst mappedMsgs = <IncompleteMessage>reduce(\n\t\tm,\n\t\t(acc, v) => {\n\t\t\tconst msg = normalizeMailMessageFromSoap(v, false);\n\t\t\treturn { ...acc, [msg.id]: { ...msg, sortIndex: -JSON.stringify(Date.now()) } };\n\t\t},\n\t\t{}\n\t);\n\ttriggerNotification(m);\n\tstate.messages = merge(state.messages, mappedMsgs);\n};\n\nexport const handleModifiedMessagesReducer = (state: MsgStateType, { payload }: Payload): void => {\n\tforEach(payload, (msg) => {\n\t\tif (msg?.id && state?.messages?.[msg.id]) {\n\t\t\tstate.messages[msg.id] = { ...merge(state.messages[msg.id], msg), tags: msg.tags };\n\t\t}\n\t});\n};\n\nexport const handleDeletedMessagesReducer = (state: MsgStateType, { payload }: Payload): void => {\n\tforEach(payload, (id) => {\n\t\tstate.messages = omit(state.messages, id);\n\t});\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { combineReducers } from '@reduxjs/toolkit';\n\nimport { conversationsSliceReducer } from './conversations-slice';\nimport { messageSliceReducer } from './messages-slice';\nimport { searchesSliceReducer } from './searches-slice';\n\nexport const storeReducers = combineReducers({\n\tconversations: conversationsSliceReducer,\n\tmessages: messageSliceReducer,\n\tsearches: searchesSliceReducer\n});\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { configureStore } from '@reduxjs/toolkit';\nimport React, { FC } from 'react';\nimport { Provider } from 'react-redux';\nimport { MAIL_APP_ID } from '../../constants';\nimport { storeReducers } from '../reducers';\n\nconst store = configureStore({\n\tdevTools: {\n\t\tname: MAIL_APP_ID\n\t},\n\treducer: storeReducers\n});\n\nexport const StoreProvider: FC = ({ children }) => <Provider store={store}>{children}</Provider>;\n\n// @see https://redux.js.org/usage/usage-with-typescript#define-root-state-and-dispatch-types\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { includes, map } from 'lodash';\nimport type { Conversation, FetchConversationsReturn, MailMessage } from '../types';\n\n/**\n * Extracts all ids from conversations and messages\n * @param items conversations or messages\n * @returns array of ids\n */\nexport function extractIdsFromMessagesAndConversations(\n\titems: Record<string, Conversation> | Record<string, MailMessage> | undefined\n): Array<string> {\n\treturn Object.keys(items ?? []).reduce((acc: Array<string>, itemId) => {\n\t\tconst item = items?.[itemId];\n\t\titem && acc.push(itemId);\n\t\tif (item && 'messages' in item) {\n\t\t\tacc.push(...item.messages.map((msg) => msg.id));\n\t\t}\n\t\treturn acc;\n\t}, []);\n}\n\n/**\n * Extracts all ids from conversations and messages from fetchConversations payload\n * @param payload payload from fetchConversations\n * @returns array of ids\n */\nexport function extractIds(payload: FetchConversationsReturn | undefined): Array<string> {\n\tconst ids = extractIdsFromMessagesAndConversations(payload?.conversations);\n\tids.push(...extractIdsFromMessagesAndConversations(payload?.messages));\n\treturn ids;\n}\n\n/**\n * Checks if all items are in search results ids\n * @param ids ids to check\n * @param searchResultsIds ids alread present in search results\n * @returns boolean\n */\nexport const isItemInSearches = ({\n\tids,\n\tsearchResultsIds\n}: {\n\tids: Array<string>;\n\tsearchResultsIds: Array<string>;\n}): boolean =>\n\t!includes(\n\t\tmap(ids, (id) => searchResultsIds.includes(id)),\n\t\tfalse\n\t);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { FOLDERS } from '@zextras/carbonio-shell-ui';\nimport produce from 'immer';\nimport { forEach } from 'lodash';\n\nimport { msgAction } from './actions';\nimport { search } from './actions/search';\nimport {\n\thandleAddMessagesInConversationReducer,\n\thandleCreatedConversationsReducer,\n\thandleCreatedMessagesInConversationsReducer,\n\thandleDeletedConversationsReducer,\n\thandleDeletedMessagesInConversationReducer,\n\thandleDeletedMessagesReducer,\n\thandleModifiedConversationsReducer,\n\thandleModifiedMessagesInConversationReducer\n} from './search-slice-reducers';\nimport { extractIds, isItemInSearches } from './utils';\nimport { CONVACTIONS } from '../commons/utilities';\nimport { LIST_LIMIT } from '../constants';\nimport type {\n\tConvActionParameters,\n\tFetchConversationsReturn,\n\tSearchesStateType,\n\tMailsStateType\n} from '../types';\n\nexport const getSearchSliceInitialiState = (): SearchesStateType =>\n\t({\n\t\tsearchResults: undefined,\n\t\tsearchResultsIds: [],\n\t\tconversations: {},\n\t\tmessages: {},\n\t\tmore: false,\n\t\toffset: 0,\n\t\tlimit: LIST_LIMIT.INITIAL_LIMIT,\n\t\tsortBy: 'dateDesc',\n\t\tquery: '',\n\t\tstatus: 'empty',\n\t\tloadingMessage: '',\n\t\tparent: '',\n\t\terror: undefined\n\t}) as SearchesStateType;\n\nconst resetResultReducer = (state: SearchesStateType): SearchesStateType =>\n\tgetSearchSliceInitialiState();\n\nconst fetchSearchesPending = (state: SearchesStateType): void => {\n\tstate.status = 'pending';\n};\n\nconst fetchSearchesFulfilled = (\n\tstate: SearchesStateType,\n\t{ payload, meta }: { payload: FetchConversationsReturn | undefined; meta: any }\n): void => {\n\tif (meta.arg.query) {\n\t\tstate.status = meta.requestStatus;\n\t\tif (state.query === meta.arg.query) {\n\t\t\tstate.messages = { ...state.messages, ...payload?.messages };\n\t\t\tstate.conversations = { ...state.conversations, ...payload?.conversations };\n\t\t\tstate.searchResultsIds.concat(extractIds(payload) ?? []);\n\t\t} else {\n\t\t\tstate.conversations = payload?.conversations ?? {};\n\t\t\tstate.messages = payload?.messages ?? {};\n\t\t\tstate.searchResultsIds = extractIds(payload) ?? [];\n\t\t}\n\t\tstate.more = payload?.hasMore === true;\n\t\tstate.offset = meta?.arg.offset ?? 0;\n\t\tstate.sortBy = meta?.arg.sortBy ?? 'dateDesc';\n\t\tstate.error = undefined;\n\t\tstate.query = meta.arg.query;\n\t}\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nconst fetchSearchesRejected = (state: SearchesStateType, { payload }): void => {\n\tstate.status = 'error';\n\tstate.conversations = {};\n\tstate.messages = {};\n\tstate.error = {\n\t\tcode: payload?.Detail?.Error?.Code ?? 'generic error'\n\t};\n};\n\nconst msgActionFulfilled = (\n\tstate: SearchesStateType,\n\t{ meta }: { meta: { arg: ConvActionParameters; requestId: string; requestStatus: string } }\n): void => {\n\tconst itemIsInSearches = isItemInSearches({\n\t\tids: meta.arg.ids,\n\t\tsearchResultsIds: state.searchResultsIds\n\t});\n\n\tif (!itemIsInSearches) {\n\t\treturn;\n\t}\n\tconst { ids, operation } = meta.arg;\n\tstate.error = undefined;\n\tforEach(ids, (id) => {\n\t\tconst message = state?.messages?.[id];\n\t\tconst { conversations } = state;\n\n\t\tif (operation.includes(CONVACTIONS.FLAG)) {\n\t\t\tmessage.flagged = !operation.startsWith('!');\n\t\t\tif (conversations) conversations[id].flagged = !operation.startsWith('!');\n\t\t}\n\n\t\tif (operation.includes(CONVACTIONS.MARK_READ)) {\n\t\t\tmessage.read = !operation.startsWith('!');\n\t\t\tif (conversations) conversations[id].read = !operation.startsWith('!');\n\t\t}\n\n\t\tif (operation === CONVACTIONS.TRASH) {\n\t\t\tmessage.parent = FOLDERS.TRASH;\n\t\t}\n\n\t\tif (operation === CONVACTIONS.DELETE) {\n\t\t\tdelete message[id];\n\t\t}\n\n\t\tif (operation === CONVACTIONS.MOVE) {\n\t\t\tmessage.parent = meta.arg.parent;\n\t\t}\n\n\t\tif (operation === CONVACTIONS.MARK_SPAM) {\n\t\t\tmessage.parent = FOLDERS.SPAM;\n\t\t}\n\n\t\tif (operation === CONVACTIONS.MARK_NOT_SPAM) {\n\t\t\tmessage.parent = FOLDERS.INBOX;\n\t\t}\n\t});\n};\n\nexport const searchesSlice = createSlice({\n\tname: 'searches',\n\tinitialState: getSearchSliceInitialiState(),\n\treducers: {\n\t\tresetSearchResults: resetResultReducer,\n\t\thandleNotifyCreatedSearchConversations: produce(handleCreatedConversationsReducer),\n\t\thandleNotifyModifiedSearchConversations: produce(handleModifiedConversationsReducer),\n\t\thandleNotifyDeletedSearchConversations: produce(handleDeletedConversationsReducer),\n\t\thandleCreatedMessagesInSearchConversation: produce(handleCreatedMessagesInConversationsReducer),\n\t\thandleAddMessagesInSearchConversation: produce(handleAddMessagesInConversationReducer),\n\t\thandleDeletedMessagesInSearchConversation: produce(handleDeletedMessagesInConversationReducer),\n\t\thandleModifiedMessagesInSearchConversation: produce(\n\t\t\thandleModifiedMessagesInConversationReducer\n\t\t),\n\t\thandleDeletedSearchMessages: produce(handleDeletedMessagesReducer)\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(search.pending, produce(fetchSearchesPending));\n\t\tbuilder.addCase(search.fulfilled, produce(fetchSearchesFulfilled));\n\t\tbuilder.addCase(search.rejected, produce(fetchSearchesRejected));\n\t\tbuilder.addCase(msgAction.fulfilled, produce(msgActionFulfilled));\n\t}\n});\n\nexport const {\n\thandleCreatedMessagesInSearchConversation,\n\thandleAddMessagesInSearchConversation,\n\thandleModifiedMessagesInSearchConversation,\n\thandleDeletedMessagesInSearchConversation,\n\thandleNotifyCreatedSearchConversations,\n\thandleNotifyModifiedSearchConversations,\n\thandleNotifyDeletedSearchConversations,\n\thandleDeletedSearchMessages\n} = searchesSlice.actions;\nexport const searchesSliceReducer = searchesSlice.reducer;\nexport const selectSearches = ({ searches }: MailsStateType): SearchesStateType => searches;\nexport const { resetSearchResults } = searchesSlice.actions;\nexport const selectSearchesStatus = ({ searches }: MailsStateType): string => searches.status;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { filter, find, forEach, map, merge, omit, reduce, some } from 'lodash';\n\nimport type { ConvMessage, Payload, SearchesStateType } from '../types';\n\nexport const handleCreatedConversationsReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (conv) => {\n\t\tif (conv?.id) {\n\t\t\tstate.conversations = merge(state.conversations, { [conv.id]: conv });\n\t\t}\n\t});\n};\n\nexport const handleModifiedConversationsReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (conv) => {\n\t\tif (conv?.id && state?.conversations?.[conv.id]) {\n\t\t\tstate.conversations[conv.id] = {\n\t\t\t\t...merge(state.conversations[conv.id], conv),\n\t\t\t\ttags: conv.tags\n\t\t\t};\n\t\t}\n\t});\n};\nexport const handleCreatedMessagesInConversationsReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tconst { m } = payload;\n\tforEach(m, (msg) => {\n\t\tconst conversation = state.conversations?.[msg.cid];\n\t\tif (msg?.cid && msg?.id && msg?.l && conversation) {\n\t\t\tconst messages = find(conversation.messages, ['id', msg.id])\n\t\t\t\t? conversation.messages\n\t\t\t\t: [...conversation.messages, { id: msg.id, parent: msg.l, date: Number(msg.d) }];\n\n\t\t\tconst conv = {\n\t\t\t\t[msg.cid]: {\n\t\t\t\t\t...conversation,\n\t\t\t\t\tmessages,\n\t\t\t\t\tfragment: msg?.fr ?? ''\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tstate.conversations = { ...state.conversations, ...conv };\n\t\t}\n\t});\n};\n\nexport const handleModifiedMessagesInConversationReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tstate.conversations = reduce(\n\t\tstate.conversations,\n\t\t(acc, conv) => ({\n\t\t\t...acc,\n\t\t\t[conv.id]: {\n\t\t\t\t...conv,\n\t\t\t\tmessages: map(conv.messages, (msg) => {\n\t\t\t\t\tconst messageToUpdate = find(payload, (item) => item.id === msg.id);\n\t\t\t\t\treturn messageToUpdate\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...msg,\n\t\t\t\t\t\t\t\t...messageToUpdate\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: msg;\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n};\n\nexport const handleAddMessagesInConversationReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (msg) => {\n\t\tconst addMsg = omit(msg, ['conversation']) as ConvMessage;\n\t\tif (msg?.conversation && state?.conversations?.[msg?.conversation]) {\n\t\t\tstate.conversations[msg.conversation] = {\n\t\t\t\t...state.conversations[msg.conversation],\n\t\t\t\tmessages: [...state.conversations[msg.conversation].messages, addMsg]\n\t\t\t};\n\t\t}\n\t});\n};\n\nexport const handleDeletedConversationsReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (id) => {\n\t\tstate.conversations = omit(state.conversations, id);\n\t});\n};\n\nexport const handleDeletedMessagesInConversationReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tstate.conversations = reduce(\n\t\tstate.conversations,\n\t\t(acc, conv) => ({\n\t\t\t...acc,\n\t\t\t[conv.id]: {\n\t\t\t\t...conv,\n\t\t\t\tmessages: filter(conv.messages, (msg) => !some(payload, (id) => id === msg.id))\n\t\t\t}\n\t\t}),\n\t\t{}\n\t);\n};\nexport const handleDeletedMessagesReducer = (\n\tstate: SearchesStateType,\n\t{ payload }: Payload\n): void => {\n\tforEach(payload, (id) => {\n\t\tstate.messages = omit(state.messages, id);\n\t});\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { create } from 'zustand';\n\nexport type AdvancedAccountStore = {\n\tbackupSelfUndeleteAllowed: boolean;\n\tupdateBackupSelfUndeleteAllowed: (value: boolean) => void;\n};\n\nexport const useAdvancedAccountStore = create<AdvancedAccountStore>()((set) => ({\n\tbackupSelfUndeleteAllowed: false,\n\tupdateBackupSelfUndeleteAllowed: (value: boolean): void =>\n\t\tset({ backupSelfUndeleteAllowed: value })\n}));\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n/* eslint-disable import/no-extraneous-dependencies */\n\nimport produce from 'immer';\nimport { omit, reduce } from 'lodash';\nimport { create } from 'zustand';\n\nimport type { BackupSearchStore, DeletedMessageFromAPI } from '../../../types';\n\nexport const useBackupSearchStore = create<BackupSearchStore>()((set) => ({\n\tmessages: {},\n\tsearchParams: {},\n\tstatus: 'empty',\n\tsetMessages: (messages: Array<DeletedMessageFromAPI>): void =>\n\t\tset(\n\t\t\tproduce((state) => {\n\t\t\t\tstate.messages = reduce(\n\t\t\t\t\tmessages,\n\t\t\t\t\t(acc, message) => {\n\t\t\t\t\t\tconst { messageId } = message;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t[messageId]: omit({ ...message, id: message.messageId }, ['messageId'])\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t);\n\t\t\t})\n\t\t),\n\tsetStatus: (status: BackupSearchStore['status']): void => set({ status }),\n\tsetSearchParams: (queryParams: BackupSearchStore['searchParams']): void =>\n\t\tset({ searchParams: queryParams })\n}));\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { getUserSettings } from '@zextras/carbonio-shell-ui';\nimport { filter, forEach, map, reduce } from 'lodash';\n\nimport {\n\tfilterSavedInlineAttachment,\n\tfilterSavedStandardAttachment,\n\tfilterUnsavedInlineAttachment,\n\tfilterUnsavedStandardAttachment\n} from './editor-utils';\nimport { ParticipantRole } from '../../../carbonio-ui-commons/constants/participants';\nimport {\n\tcomposeAttachmentDownloadUrl,\n\textractContentIdInnerPart,\n\tgetAttachmentParts,\n\tgetCidFromCidUrl,\n\tisCidUrl,\n\tisContentIdEqual,\n\tisDownloadServicedUrl\n} from '../../../helpers/attachments';\nimport {\n\tgetDefaultIdentity,\n\tgetIdentityDescriptor,\n\tIdentityDescriptor\n} from '../../../helpers/identities';\nimport {\n\tMailAttachment,\n\tMailAttachmentParts,\n\tMailMessage,\n\tMailsEditorV2,\n\tParticipant,\n\tSavedAttachment,\n\tSoapDraftMessageObj,\n\tSoapEmailMessagePartObj,\n\tUnsavedAttachment\n} from '../../../types';\n\nexport const composeCidUrlFromContentId = (contentId: string): string | null => {\n\tconst contentIdInnerPart = extractContentIdInnerPart(contentId);\n\treturn contentIdInnerPart ? `cid:${contentIdInnerPart}` : null;\n};\n\nexport const convertCidUrlToServiceUrl = (\n\tcidUrl: string,\n\tsavedInlineAttachments: Array<SavedAttachment>\n): string => {\n\tconst cid = getCidFromCidUrl(cidUrl);\n\tif (!cid) {\n\t\treturn cidUrl;\n\t}\n\tconst referredAttachment = reduce<SavedAttachment, SavedAttachment | null>(\n\t\tsavedInlineAttachments,\n\t\t(result, attachment) =>\n\t\t\tisContentIdEqual(attachment.contentId ?? '', cid) ? attachment : result,\n\t\tnull\n\t);\n\n\tif (!referredAttachment) {\n\t\treturn cidUrl;\n\t}\n\n\treturn composeAttachmentDownloadUrl(referredAttachment);\n};\n\nexport const replaceCidUrlWithServiceUrl = (\n\tcontent: string,\n\tsavedAttachment: Array<SavedAttachment>\n): string => {\n\tconst parser = new DOMParser();\n\tconst htmlDoc = parser.parseFromString(content, 'text/html');\n\tconst images = htmlDoc.getElementsByTagName('img');\n\n\tif (!images) {\n\t\treturn content;\n\t}\n\n\tconst someSrcChanged = reduce(\n\t\timages,\n\t\t(result, img): boolean => {\n\t\t\tconst src = img.getAttribute('src');\n\t\t\tconst pnsrc = img.getAttribute('pnsrc');\n\t\t\tconst dataSrc = img.getAttribute('data-src');\n\t\t\tconst dataMceSrc = img.getAttribute('data-mce-src');\n\n\t\t\tlet referenceCid;\n\t\t\tif (pnsrc && isCidUrl(pnsrc)) {\n\t\t\t\treferenceCid = pnsrc;\n\t\t\t} else if (dataSrc && isCidUrl(dataSrc)) {\n\t\t\t\treferenceCid = dataSrc;\n\t\t\t} else if (dataMceSrc && isCidUrl(dataMceSrc)) {\n\t\t\t\treferenceCid = dataMceSrc;\n\t\t\t} else if (src && isCidUrl(src)) {\n\t\t\t\treferenceCid = src;\n\t\t\t}\n\t\t\tif (!referenceCid) {\n\t\t\t\treturn false || result;\n\t\t\t}\n\n\t\t\tconst newSrc = convertCidUrlToServiceUrl(referenceCid, savedAttachment);\n\t\t\tif (newSrc === src) {\n\t\t\t\treturn false || result;\n\t\t\t}\n\t\t\timg.setAttribute('src', newSrc);\n\t\t\timg.setAttribute('pnsrc', referenceCid);\n\t\t\timg.setAttribute('data-src', referenceCid);\n\t\t\timg.setAttribute('data-mce-src', referenceCid);\n\t\t\treturn true || result;\n\t\t},\n\t\tfalse\n\t);\n\n\treturn someSrcChanged ? htmlDoc.body.innerHTML : content;\n};\n\nexport const replaceServiceUrlWithCidUrl = (content: string): string => {\n\tconst parser = new DOMParser();\n\tconst htmlDoc = parser.parseFromString(content, 'text/html');\n\tconst images = htmlDoc.getElementsByTagName('img');\n\n\tif (!images) {\n\t\treturn content;\n\t}\n\n\tforEach(images, (p: HTMLImageElement) => {\n\t\tconst src = p.getAttribute('src');\n\t\tif (!src || !isDownloadServicedUrl(src)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pnsrc = p.getAttribute('pnsrc');\n\t\tconst dataSrc = p.getAttribute('data-src');\n\t\tconst dataMceSrc = p.getAttribute('data-mce-src');\n\t\tif (pnsrc && isCidUrl(pnsrc)) {\n\t\t\tp.setAttribute('src', pnsrc);\n\t\t} else if (dataSrc && isCidUrl(dataSrc)) {\n\t\t\tp.setAttribute('src', dataSrc);\n\t\t} else if (dataMceSrc && isCidUrl(dataMceSrc)) {\n\t\t\tp.setAttribute('src', dataMceSrc);\n\t\t}\n\t});\n\n\treturn htmlDoc.body.innerHTML;\n};\n\n/**\n *\n * @param content\n * @param style\n */\nconst getHtmlWithPreAppliedStyled = (\n\tcontent: string,\n\tstyle: { font: string | undefined; fontSize: string | undefined; color: string | undefined }\n): string =>\n\t`<html><style>p {margin:0};</style><body><div style=\"font-family: ${style?.font}; font-size: ${style?.fontSize}; color: ${style?.color}\">${content}</div></body></html>`;\n\nexport const getMP = (editor: MailsEditorV2): SoapEmailMessagePartObj[] => {\n\tconst { prefs } = getUserSettings();\n\n\tconst style = {\n\t\tfont: prefs?.zimbraPrefHtmlEditorDefaultFontFamily as string,\n\t\tfontSize: prefs?.zimbraPrefHtmlEditorDefaultFontSize as string,\n\t\tcolor: prefs?.zimbraPrefHtmlEditorDefaultFontColor as string\n\t};\n\n\tconst unsavedInlineAttachment = filterUnsavedInlineAttachment(editor.unsavedAttachments);\n\tconst savedInlineAttachment = filterSavedInlineAttachment(editor.savedAttachments);\n\n\tconst contentWithCidUrl = {\n\t\tplainText: editor.text.plainText,\n\t\trichText: replaceServiceUrlWithCidUrl(editor.text.richText)\n\t};\n\n\tif (editor.isRichText) {\n\t\tif (unsavedInlineAttachment.length + savedInlineAttachment.length > 0) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tct: 'multipart/alternative',\n\t\t\t\t\tmp: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tct: 'text/plain',\n\t\t\t\t\t\t\tcontent: { _content: contentWithCidUrl.plainText }\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tct: 'multipart/related',\n\t\t\t\t\t\t\tmp: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tct: 'text/html',\n\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t_content: getHtmlWithPreAppliedStyled(contentWithCidUrl.richText, style) ?? ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...unsavedInlineAttachment.map((inlineAttachment) => ({\n\t\t\t\t\t\t\t\t\tci: inlineAttachment.contentId,\n\t\t\t\t\t\t\t\t\tct: inlineAttachment.contentType,\n\t\t\t\t\t\t\t\t\tattach: { aid: inlineAttachment.aid }\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t...savedInlineAttachment.map((inlineAttachment) => ({\n\t\t\t\t\t\t\t\t\tci: inlineAttachment.contentId,\n\t\t\t\t\t\t\t\t\tct: inlineAttachment.contentType,\n\t\t\t\t\t\t\t\t\tattach: {\n\t\t\t\t\t\t\t\t\t\tmp: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmid: inlineAttachment.messageId,\n\t\t\t\t\t\t\t\t\t\t\t\tpart: inlineAttachment.partName\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t\treturn [\n\t\t\t{\n\t\t\t\tct: 'multipart/alternative',\n\t\t\t\tmp: [\n\t\t\t\t\t{\n\t\t\t\t\t\tct: 'text/html',\n\t\t\t\t\t\tbody: true,\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t_content: getHtmlWithPreAppliedStyled(contentWithCidUrl.richText, style) ?? ''\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tct: 'text/plain',\n\t\t\t\t\t\tcontent: { _content: contentWithCidUrl.plainText }\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t}\n\treturn [\n\t\t{\n\t\t\tct: 'text/plain',\n\t\t\tbody: true,\n\t\t\tcontent: { _content: editor.text.plainText ?? '' }\n\t\t}\n\t];\n};\n\n/**\n *\n * @param identity\n * @param type\n */\nconst createParticipantFromIdentity = (\n\tidentity: IdentityDescriptor,\n\ttype: typeof ParticipantRole.FROM | typeof ParticipantRole.SENDER\n): Participant =>\n\t({\n\t\ttype,\n\t\taddress: identity.fromAddress,\n\t\tname: identity.identityDisplayName,\n\t\tfullName: identity.fromDisplay\n\t}) as Participant;\n\n/**\n *\n * @param identityId\n */\nconst createFromParticipantByIdentity = (identityId: string): Participant | null => {\n\tconst identity = getIdentityDescriptor(identityId);\n\tif (!identity) {\n\t\treturn null;\n\t}\n\n\treturn createParticipantFromIdentity(identity, ParticipantRole.FROM);\n};\n\n/**\n *\n * @param identityId\n */\nconst createSenderParticipantByIdentity = (identityId: string): Participant | null => {\n\tconst identity = getIdentityDescriptor(identityId);\n\tif (!identity) {\n\t\treturn null;\n\t}\n\n\tif (identity.right === 'sendOnBehalfOf') {\n\t\treturn createParticipantFromIdentity(getDefaultIdentity(), ParticipantRole.SENDER);\n\t}\n\n\treturn null;\n};\n\nconst composeAttachAidField = (attachments: Array<UnsavedAttachment>): string | null => {\n\tif (!attachments || !attachments.length) {\n\t\treturn null;\n\t}\n\treturn filter(attachments, (attachment) => attachment.aid !== undefined)\n\t\t.map((attachment) => attachment.aid)\n\t\t.join(',');\n};\n\nexport const composeAttachMpField = (\n\tattachments: Array<SavedAttachment>\n): Array<MailAttachmentParts> => {\n\tconst result: Array<MailAttachmentParts> = [];\n\tattachments.forEach((attachment) => {\n\t\tresult.push({\n\t\t\tmid: attachment.messageId,\n\t\t\tpart: attachment.partName,\n\t\t\trequiresSmartLinkConversion: attachment.requiresSmartLinkConversion\n\t\t});\n\t});\n\treturn result;\n};\n\n/*\n * Compose the \"attach\" field by listing the uploaded\n * files id in the \"aid\" field (comma separated) and\n * listing the previously saved attachment in the\n * \"mp\" field\n */\nconst composeAttachField = (editor: MailsEditorV2): MailAttachment | null => {\n\tconst attachAid = composeAttachAidField(\n\t\tfilterUnsavedStandardAttachment(editor.unsavedAttachments)\n\t);\n\tconst attachMp = composeAttachMpField(filterSavedStandardAttachment(editor.savedAttachments));\n\n\tif (!attachAid && (!attachMp || !attachMp.length)) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t...(attachAid && { aid: attachAid }),\n\t\tmp: attachMp\n\t};\n};\n\n/**\n *\n * @param editor\n * @param command\n */\nconst createSoapMessageRequestFromEditor = (\n\teditor: MailsEditorV2,\n\tcommand: 'sendmsg' | 'savedraft'\n): SoapDraftMessageObj => {\n\tconst participants: Array<Participant> = [\n\t\t...editor.recipients.to,\n\t\t...editor.recipients.cc,\n\t\t...editor.recipients.bcc\n\t];\n\tconst from = createFromParticipantByIdentity(editor.identityId);\n\tconst sender = createSenderParticipantByIdentity(editor.identityId);\n\n\tfrom && participants.push(from);\n\tsender && participants.push(sender);\n\n\tif (editor.requestReadReceipt && from) {\n\t\tparticipants.push({ ...from, type: ParticipantRole.READ_RECEIPT_NOTIFICATION });\n\t}\n\n\tconst soapParticipants = map(participants, (participant) => ({\n\t\tt: participant.type,\n\t\ta: participant.address,\n\t\tp: participant.fullName ?? participant.name\n\t}));\n\n\tconst result: SoapDraftMessageObj = {\n\t\tautoSendTime: editor.autoSendTime,\n\t\t...(command === 'savedraft' ? { id: editor.did } : {}),\n\t\t...(command === 'sendmsg' ? { did: editor.did } : {}),\n\t\tsu: { _content: editor.subject ?? '' },\n\t\trt: editor.replyType,\n\t\torigid: editor.originalId,\n\t\te: soapParticipants,\n\t\tmp: getMP(editor),\n\t\t...(editor.isUrgent ? { f: '!' } : {})\n\t};\n\n\tconst attach = composeAttachField(editor);\n\tattach && (result.attach = attach);\n\treturn result;\n};\n\nexport const createSoapDraftRequestFromEditor = (editor: MailsEditorV2): SoapDraftMessageObj =>\n\tcreateSoapMessageRequestFromEditor(editor, 'savedraft');\n\nexport const createSoapSendMsgRequestFromEditor = (editor: MailsEditorV2): SoapDraftMessageObj =>\n\tcreateSoapMessageRequestFromEditor(editor, 'sendmsg');\n\nexport const buildSavedAttachments = (message: MailMessage): Array<SavedAttachment> => {\n\tconst attachmentsParts = getAttachmentParts(message.parts);\n\treturn attachmentsParts.map<SavedAttachment>((part) => ({\n\t\tmessageId: message.id,\n\t\t// TODO create a function to determine if the attachment is an inline even when the disposition is not set\n\t\tisInline: part.disposition === 'inline' && !!part.filename && !!part.ci,\n\t\tcontentId: (part.ci && extractContentIdInnerPart(part.ci)) ?? undefined,\n\t\tfilename: part.filename ?? '',\n\t\tpartName: part.name,\n\t\tcontentType: part.contentType,\n\t\tsize: part.size,\n\t\trequiresSmartLinkConversion: part.requiresSmartLinkConversion\n\t}));\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { concat, filter, reduce, reject, some } from 'lodash';\n\nimport { PROCESS_STATUS } from '../../../constants';\nimport { isContentIdEqual } from '../../../helpers/attachments';\nimport type {\n\tEditorOperationAllowedStatus,\n\tMailsEditorV2,\n\tSavedAttachment,\n\tUnsavedAttachment\n} from '../../../types';\n\n/**\n *\n * @param editor\n */\nexport const computeDraftSaveAllowedStatus = (\n\teditor: MailsEditorV2\n): EditorOperationAllowedStatus => {\n\tif (editor.draftSaveProcessStatus?.status === PROCESS_STATUS.RUNNING) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.draft_save_in_progress', 'Saving draft in progress')\n\t\t};\n\t}\n\n\tif (\n\t\tsome(\n\t\t\teditor.unsavedAttachments,\n\t\t\t(unsavedAttachment) => unsavedAttachment.uploadStatus?.status === 'running'\n\t\t)\n\t) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.attachment_error_status.uploading', 'Attachments are being uploaded')\n\t\t};\n\t}\n\n\tif (\n\t\tsome(\n\t\t\teditor.unsavedAttachments,\n\t\t\t(unsavedAttachment) => unsavedAttachment.uploadStatus?.status === 'aborted'\n\t\t)\n\t) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.attachment_error_status.failed', 'one or more attachments failed to upload')\n\t\t};\n\t}\n\n\treturn { allowed: true };\n};\n\n/**\n *\n * @param editor\n */\nexport const computeSendAllowedStatus = (editor: MailsEditorV2): EditorOperationAllowedStatus => {\n\tif (editor.draftSaveProcessStatus?.status === PROCESS_STATUS.RUNNING) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.draft_save_in_progress', 'Saving draft in progress         ')\n\t\t};\n\t}\n\n\tif (editor.sendProcessStatus?.status === PROCESS_STATUS.RUNNING) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.message_send_in_progress', 'Sending message')\n\t\t};\n\t}\n\n\tif (!editor.identityId) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.missing_sender', 'the identity of the sender is not set')\n\t\t};\n\t}\n\n\tif (\n\t\t!editor.recipients.to.length &&\n\t\t!editor.recipients.cc.length &&\n\t\t!editor.recipients.bcc.length\n\t) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.missing_recipients', 'At least one recipient is required to send the email')\n\t\t};\n\t}\n\n\tconst participants = concat(editor.recipients.to, editor.recipients.bcc, editor.recipients.cc);\n\tif (some(participants, { error: true })) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.invalid_recipients', `A recipient's address is spelled incorrectly`)\n\t\t};\n\t}\n\n\tif (\n\t\tsome(\n\t\t\teditor.unsavedAttachments,\n\t\t\t(unsavedAttachment) => unsavedAttachment.uploadStatus?.status === 'running'\n\t\t)\n\t) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.attachment_error_status.uploading', 'Attachments are being uploaded')\n\t\t};\n\t}\n\n\tif (\n\t\tsome(\n\t\t\teditor.unsavedAttachments,\n\t\t\t(unsavedAttachment) => unsavedAttachment.uploadStatus?.status === 'aborted'\n\t\t)\n\t) {\n\t\treturn {\n\t\t\tallowed: false,\n\t\t\treason: t('label.attachment_error_status.failed', 'one or more attachments failed to upload')\n\t\t};\n\t}\n\n\treturn { allowed: true };\n};\n\nexport const isSavedAttachment = (\n\tattachment: SavedAttachment | UnsavedAttachment\n): attachment is SavedAttachment => 'partName' in attachment;\n\nexport const isUnsavedAttachment = (\n\tattachment: SavedAttachment | UnsavedAttachment\n): attachment is UnsavedAttachment => !isSavedAttachment(attachment);\n\nexport const isAttachmentUploading = (attachment: UnsavedAttachment): boolean =>\n\tattachment.uploadStatus?.status === 'running';\n\nexport const filterSavedStandardAttachment = (\n\tattachments: Array<SavedAttachment>\n): Array<SavedAttachment> => reject(attachments, 'isInline');\n\nexport const filterUnsavedStandardAttachment = (\n\tattachments: Array<UnsavedAttachment>\n): Array<UnsavedAttachment> => reject(attachments, 'isInline');\n\nexport const filterSavedInlineAttachment = (\n\tattachments: Array<SavedAttachment>\n): Array<SavedAttachment> => filter(attachments, 'isInline');\n\nexport const filterUnsavedInlineAttachment = (\n\tattachments: Array<UnsavedAttachment>\n): Array<UnsavedAttachment> => filter(attachments, 'isInline');\n\nexport const getSavedInlineAttachmentByContentId = (\n\tcontentId: string,\n\tsavedAttachments: Array<SavedAttachment>\n): SavedAttachment | null =>\n\treduce<SavedAttachment, SavedAttachment | null>(\n\t\tsavedAttachments,\n\t\t(result, attachment) =>\n\t\t\tattachment.isInline && isContentIdEqual(attachment.contentId ?? '', contentId)\n\t\t\t\t? attachment\n\t\t\t\t: result,\n\t\tnull\n\t);\n\nconst isContentIdWithinIdList = (contentId: string, idList: Array<string>): boolean =>\n\treduce(idList, (result, id) => result || isContentIdEqual(contentId, id), false);\n\nexport const getSavedInlineAttachmentsByContentId = (\n\tcontentIds: Array<string>,\n\tsavedAttachments: Array<SavedAttachment>\n): Array<SavedAttachment> =>\n\tfilter(\n\t\tsavedAttachments,\n\t\t(attachment) =>\n\t\t\tattachment.isInline &&\n\t\t\t!!attachment.contentId &&\n\t\t\tisContentIdWithinIdList(attachment.contentId, contentIds)\n\t);\n\nexport const filterUnsavedAttachmentsByUploadId = (\n\tunsavedAttachments: Array<UnsavedAttachment>,\n\tuploadIds: Array<string>\n): Array<UnsavedAttachment> =>\n\tfilter(\n\t\tunsavedAttachments,\n\t\t(attachment) => attachment.uploadId !== undefined && uploadIds.includes(attachment.uploadId)\n\t);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { Text, useModal } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport React, { FC, useCallback, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport type {\n\tExtraWindowCreationParams,\n\tExtraWindowsContextType,\n\tExtraWindowsCreationResult\n} from '../../../types';\nimport { ExtraWindow } from './extra-window';\n\n// Enable debug console output\nconst DEBUG = false;\n\n/**\n * Debug output\n * @param text console message\n * @param args console message arguments\n */\nconst debug = (text: string, ...args: unknown[]): void => {\n\t// eslint-disable-next-line no-console\n\tif (DEBUG) console.debug(`**** extra-window-manager **** ${text}`, args);\n};\n\n/**\n * Context for providing extra windows' related functions\n */\nconst ExtraWindowsContext = React.createContext<ExtraWindowsContextType>({});\n\n/**\n * A wrapper for the ExtraWindow context provider\n *\n * @param children\n */\nconst ExtraWindowsManager: FC = ({ children }) => {\n\tconst [windowsData, setWindowsData] = useState<Array<ExtraWindowsCreationResult>>([]);\n\tconst createModal = useModal();\n\n\tdebug('ExtraWindowsManager renders and the windows data is', windowsData);\n\n\t/**\n\t *\n\t * @param criteria\n\t */\n\tconst getWindow: ExtraWindowsContextType['getWindow'] = useCallback(\n\t\t({ windowId, windowName }) => {\n\t\t\tif (windowId) {\n\t\t\t\treturn windowsData.find((windowData) => windowData.id === windowId);\n\t\t\t}\n\n\t\t\tif (windowName) {\n\t\t\t\treturn windowsData.find((windowData) => windowData?.windowProps?.name === windowName);\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t},\n\t\t[windowsData]\n\t);\n\n\t/**\n\t * Adds a new window to the state\n\t * @param addedWindowData\n\t */\n\tconst addWindow = useCallback((addedWindowData: ExtraWindowsCreationResult): void => {\n\t\tsetWindowsData((currentData) => {\n\t\t\tcurrentData.push(addedWindowData);\n\t\t\treturn [...currentData];\n\t\t});\n\t}, []);\n\n\t/**\n\t * Replaces in the state the window data identified by the same id\n\t * @param updatedWindowData\n\t */\n\tconst updateWindow = useCallback((updatedWindowData: ExtraWindowsCreationResult): void => {\n\t\tsetWindowsData((currentData) => {\n\t\t\tconst updatedData = [...currentData];\n\t\t\tcurrentData.forEach((data, index) => {\n\t\t\t\tif (data.id === updatedWindowData.id) {\n\t\t\t\t\tupdatedData[index] = updatedWindowData;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn updatedData;\n\t\t});\n\t}, []);\n\n\t/**\n\t * Removes from the state a window data\n\t * @param windowId\n\t */\n\tconst removeWindow = useCallback((windowId: string): void => {\n\t\tsetWindowsData((currentData) => {\n\t\t\tconst updatedData = [...currentData];\n\t\t\tupdatedData.forEach((data, index) => {\n\t\t\t\tif (data.id === windowId) {\n\t\t\t\t\tdebug('removeWindow:before', { windowId, id: data.id, updatedData });\n\t\t\t\t\tupdatedData.splice(index, 1);\n\t\t\t\t\tdebug('removeWindow:after', { updatedData });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updatedData;\n\t\t});\n\t}, []);\n\n\t/**\n\t * Lists the information about all the opened extra windows\n\t */\n\tconst listWindows = useCallback((): Array<ExtraWindowsCreationResult> => {\n\t\tdebug('listWindows', windowsData);\n\t\treturn windowsData.map((data) => ({\n\t\t\t...data\n\t\t}));\n\t}, [windowsData]);\n\n\t/**\n\t * Returns information about the extra window currently focused. If no extra\n\t * window is present or focused <code>undefined</code> is returned\n\t */\n\tconst getFocusedWindow = useCallback(\n\t\t(): ExtraWindowsCreationResult | undefined =>\n\t\t\twindowsData.reduce<ExtraWindowsCreationResult | undefined>((result, data) => {\n\t\t\t\tif (data.window?.document && data.window.document.hasFocus()) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}, undefined),\n\t\t[windowsData]\n\t);\n\n\t/**\n\t * Creation of an extra window\n\t * @param props\n\t */\n\tconst createWindow = useCallback(\n\t\t(params: ExtraWindowCreationParams): ExtraWindowsCreationResult => {\n\t\t\t// Check if a window with the same name already exists\n\t\t\tconst existingWindow = getWindow({ windowName: params.name });\n\t\t\tdebug('check existing window', existingWindow);\n\t\t\tif (existingWindow && existingWindow.window) {\n\t\t\t\t// Get the current focused extra window\n\t\t\t\tconst currentWindow = getFocusedWindow();\n\n\t\t\t\t// Blur the current extra window and focus the selected one\n\t\t\t\tcurrentWindow && currentWindow.window?.blur();\n\t\t\t\texistingWindow.window.focus();\n\n\t\t\t\treturn existingWindow;\n\t\t\t}\n\n\t\t\t// Generates a unique id\n\t\t\tconst windowId = uuid();\n\n\t\t\tdebug('createWindow', windowId);\n\n\t\t\t// Creates a new data block\n\t\t\tconst windowData: ExtraWindowsCreationResult = {\n\t\t\t\tid: windowId\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Defines a callback to be notified when the new window will\n\t\t\t * open successfully. When invoked it will update the data block\n\t\t\t * with the window reference.\n\t\t\t *\n\t\t\t * Also, if defined in the params by the caller,\n\t\t\t * the caller's callback will be invoked\n\t\t\t */\n\t\t\tconst onOpen = (windowObj: Window): void => {\n\t\t\t\tconst openedWindow = getWindow({ windowId });\n\t\t\t\tdebug('onOpen', { windowId, windowObj, openedWindow });\n\t\t\t\tif (openedWindow) {\n\t\t\t\t\tconst updatedData = { ...openedWindow };\n\t\t\t\t\tupdatedData.window = windowObj;\n\t\t\t\t\tupdateWindow(updatedData);\n\t\t\t\t}\n\t\t\t\tparams.onOpen && params.onOpen(windowObj);\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Defines a callback to be notified if the opening of the new\n\t\t\t * window is blocked by the browser's policies\n\t\t\t * When invoked it will update windows data structure removing\n\t\t\t * the window's data block\n\t\t\t *\n\t\t\t * Also, if defined in the params by the caller,\n\t\t\t * the caller's callback will be invoked\n\t\t\t */\n\t\t\tconst onBlock = (): void => {\n\t\t\t\tparams.onBlock && params.onBlock();\n\t\t\t\tremoveWindow(windowId);\n\n\t\t\t\t// Get the focused extra window\n\t\t\t\tconst focusedExtraWindow = getFocusedWindow();\n\n\t\t\t\t/*\n\t\t\t\t * Create the modal message to notify the user.\n\t\t\t\t * If a focused extra window is present, the container\n\t\t\t\t * of the modal will be set to the window's document body\n\t\t\t\t *\n\t\t\t\t * FIXME texts\n\t\t\t\t */\n\t\t\t\tconst closeModal = createModal({\n\t\t\t\t\ttitle: t('label.extra_windows.opening_blocked.title', 'Cannot open new window'),\n\t\t\t\t\tcontainerWindow: focusedExtraWindow?.window,\n\t\t\t\t\tconfirmLabel: t('action.ok', 'Ok'),\n\t\t\t\t\tshowCloseIcon: false,\n\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t},\n\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t},\n\t\t\t\t\tonSecondaryAction: () => {\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t},\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t'messages.extra_windows.opening_blocked',\n\t\t\t\t\t\t\t\t'To complete the operation, Carbonio needs to open a new window. Check your browser settings'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t/*\n\t\t\t * Defines a callback to be notified when the window will be closed.\n\t\t\t * When invoked it will update windows data structure removing\n\t\t\t * the window's data block.\n\t\t\t *\n\t\t\t * Also, if defined in the params by the caller,\n\t\t\t * the caller's callback will be invoked\n\t\t\t */\n\t\t\tconst onUnload = (): void => {\n\t\t\t\tdebug('onUnload', windowId);\n\t\t\t\tparams.onUnload && params.onUnload();\n\t\t\t\tremoveWindow(windowId);\n\t\t\t};\n\n\t\t\t// Creates the props for the new ExtraWindow\n\t\t\tconst windowProps = {\n\t\t\t\tid: windowId,\n\t\t\t\t...params,\n\t\t\t\tonOpen,\n\t\t\t\tonBlock,\n\t\t\t\tonUnload\n\t\t\t};\n\t\t\twindowData.windowProps = windowProps;\n\n\t\t\t// Creates the component and adds it to the data block\n\t\t\tif (params.returnComponent) {\n\t\t\t\twindowData.component = <ExtraWindow key={windowId} {...windowProps} />;\n\t\t\t}\n\n\t\t\taddWindow(windowData);\n\t\t\treturn windowData;\n\t\t},\n\t\t[addWindow, createModal, getFocusedWindow, getWindow, removeWindow, updateWindow]\n\t);\n\n\t/**\n\t * Closes the window identified by the given id.\n\t * The function invoke the window close method, which in turn will\n\t * invoke the onUnload callback\n\t *\n\t * @param windowId\n\t */\n\tconst closeWindow = useCallback(\n\t\t(windowId: string): void => {\n\t\t\tconst closingWindowData = getWindow({ windowId });\n\t\t\tif (!closingWindowData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclosingWindowData.window?.close();\n\t\t\tremoveWindow(windowId);\n\t\t},\n\t\t[getWindow, removeWindow]\n\t);\n\n\treturn (\n\t\t<ExtraWindowsContext.Provider\n\t\t\tvalue={{ createWindow, closeWindow, listWindows, getWindow, getFocusedWindow }}\n\t\t>\n\t\t\t{Object.values(windowsData).map((window) =>\n\t\t\t\twindow && window.windowProps ? (\n\t\t\t\t\t<ExtraWindow key={window.id} {...window.windowProps} />\n\t\t\t\t) : null\n\t\t\t)}\n\t\t\t{children}\n\t\t</ExtraWindowsContext.Provider>\n\t);\n};\n\n/**\n * Return the context of the closest ExtraWindowManager or <code>undefined</code>\n * if no ancestor ExtraWindowManager exists\n */\nconst useExtraWindowsManager = (): ExtraWindowsContextType =>\n\tReact.useContext<ExtraWindowsContextType>(ExtraWindowsContext);\n\nexport { useExtraWindowsManager, ExtraWindowsManager };\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\n/*\n * MIT License\n *\n * Copyright (c) 2017 Rubens Mariuzzo\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * \tThe above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * \tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Component dependencies.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\n/**\n * Make keyframe rules.\n * @param {CSSRule} cssRule\n * @return {String}\n * @private\n */\n\nfunction getKeyFrameText(cssRule) {\n\tconst tokens = ['@keyframes', cssRule.name, '{'];\n\tArray.from(cssRule.cssRules).forEach((rule) => {\n\t\t// type === CSSRule.KEYFRAME_RULE should always be true\n\t\ttokens.push(rule.keyText, '{', rule.style.cssText, '}');\n\t});\n\ttokens.push('}');\n\treturn tokens.join(' ');\n}\n\n/**\n * Handle local import urls.\n * @param {CSSRule} cssRule\n * @return {String}\n * @private\n */\n\nfunction fixUrlForRule(cssRule) {\n\treturn cssRule.cssText\n\t\t.split('url(')\n\t\t.map((line) => {\n\t\t\tif (line[1] === '/') {\n\t\t\t\treturn `${line.slice(0, 1)}${window.location.origin}${line.slice(1)}`;\n\t\t\t}\n\t\t\treturn line;\n\t\t})\n\t\t.join('url(');\n}\n\n/**\n * Convert features props to window features format (name=value,other=value).\n * @param {Object} obj\n * @return {String}\n * @private\n */\n\nfunction toWindowFeatures(obj) {\n\treturn Object.keys(obj)\n\t\t.reduce((features, name) => {\n\t\t\tconst value = obj[name];\n\t\t\tif (typeof value === 'boolean') {\n\t\t\t\tfeatures.push(`${name}=${value ? 'yes' : 'no'}`);\n\t\t\t} else {\n\t\t\t\tfeatures.push(`${name}=${value}`);\n\t\t\t}\n\t\t\treturn features;\n\t\t}, [])\n\t\t.join(',');\n}\n\n/**\n * Copy styles from a source document to a target.\n * @param {Object} source\n * @param {Object} target\n * @private\n */\nfunction copyStyles(source, target) {\n\t// Store style tags, avoid reflow in the loop\n\tconst headFrag = target.createDocumentFragment();\n\n\tArray.from(source.styleSheets).forEach((styleSheet) => {\n\t\t// For <style> elements\n\t\tlet rules;\n\t\ttry {\n\t\t\trules = styleSheet.cssRules;\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\n\t\tif (rules) {\n\t\t\t// IE11 is very slow for appendChild, so use plain string here\n\t\t\tconst ruleText = [];\n\n\t\t\t// Write the text of each rule into the body of the style element\n\t\t\tArray.from(styleSheet.cssRules).forEach((cssRule) => {\n\t\t\t\tconst { type } = cssRule;\n\n\t\t\t\t// Skip unknown rules\n\t\t\t\tif (type === CSSRule.UNKNOWN_RULE) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet returnText;\n\n\t\t\t\tif (type === CSSRule.KEYFRAMES_RULE) {\n\t\t\t\t\t// IE11 will throw error when trying to access cssText property, so we\n\t\t\t\t\t// need to assemble them\n\t\t\t\t\treturnText = getKeyFrameText(cssRule);\n\t\t\t\t} else if ([CSSRule.IMPORT_RULE, CSSRule.FONT_FACE_RULE].includes(type)) {\n\t\t\t\t\t// Check if the cssRule type is CSSImportRule (3) or CSSFontFaceRule (5)\n\t\t\t\t\t// to handle local imports on a about:blank page\n\t\t\t\t\t// '/custom.css' turns to 'http://my-site.com/custom.css'\n\t\t\t\t\treturnText = fixUrlForRule(cssRule);\n\t\t\t\t} else {\n\t\t\t\t\treturnText = cssRule.cssText;\n\t\t\t\t}\n\t\t\t\truleText.push(returnText);\n\t\t\t});\n\n\t\t\tconst newStyleEl = target.createElement('style');\n\t\t\tnewStyleEl.textContent = ruleText.join('\\n');\n\t\t\theadFrag.appendChild(newStyleEl);\n\t\t} else if (styleSheet.href) {\n\t\t\t// for <link> elements loading CSS from a URL\n\t\t\tconst newLinkEl = target.createElement('link');\n\n\t\t\tnewLinkEl.rel = 'stylesheet';\n\t\t\tnewLinkEl.href = styleSheet.href;\n\t\t\theadFrag.appendChild(newLinkEl);\n\t\t}\n\t});\n\n\ttarget.head.appendChild(headFrag);\n}\n\n/**\n * Replace completely the styles in the target document\n * using a fresh copy from the styles of the source document\n * @param source\n * @param target\n */\nfunction replaceStyles(source, target) {\n\t// Remove all existing styles\n\tconst elements = target.head.getElementsByTagName('style');\n\twhile (elements[0]) elements[0].parentNode.removeChild(elements[0]);\n\n\tcopyStyles(source, target);\n}\n\n/**\n * The NewWindow class object.\n * @public\n */\n\nclass NewWindow extends React.PureComponent {\n\t/**\n\t * NewWindow default props.\n\t */\n\tstatic defaultProps = {\n\t\turl: '',\n\t\tname: '',\n\t\ttitle: '',\n\t\tfeatures: { width: '600px', height: '640px' },\n\t\tonBlock: null,\n\t\tonOpen: null,\n\t\tonUnload: null,\n\t\tcenter: 'parent',\n\t\tcopyStyles: true,\n\t\tcloseOnUnmount: true\n\t};\n\n\t/**\n\t * The NewWindow function constructor.\n\t * @param {Object} props\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.container = null;\n\t\tthis.window = null;\n\t\tthis.windowCheckerInterval = null;\n\t\tthis.released = false;\n\t\tthis.state = {\n\t\t\tmounted: false\n\t\t};\n\t}\n\n\t/**\n\t * Render the NewWindow component.\n\t */\n\trender() {\n\t\tif (!this.state.mounted) return null;\n\t\treturn ReactDOM.createPortal(this.props.children, this.container);\n\t}\n\n\tcomponentDidMount() {\n\t\t// In React 18, componentDidMount gets called twice\n\t\t// causing openChild to get called twice\n\t\tif (!this.window && !this.container) {\n\t\t\tthis.openChild();\n\t\t\t// this.setState({ mounted: true });\n\t\t}\n\t}\n\n\t/**\n\t * Create the new window when NewWindow component mount.\n\t */\n\topenChild() {\n\t\tconst { url, title, name, features, onBlock, onOpen, center } = this.props;\n\n\t\t// Prepare position of the new window to be centered against the 'parent' window or 'screen'.\n\t\tif (\n\t\t\ttypeof center === 'string' &&\n\t\t\t(features.width === undefined || features.height === undefined)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t'width and height window features must be present when a center prop is provided'\n\t\t\t);\n\t\t} else if (center === 'parent') {\n\t\t\tfeatures.left = window.top.outerWidth / 2 + window.top.screenX - features.width / 2;\n\t\t\tfeatures.top = window.top.outerHeight / 2 + window.top.screenY - features.height / 2;\n\t\t} else if (center === 'screen') {\n\t\t\tconst screenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screen.left;\n\t\t\tconst screenTop = window.screenTop !== undefined ? window.screenTop : window.screen.top;\n\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\tconst width = window.innerWidth\n\t\t\t\t? window.innerWidth\n\t\t\t\t: document.documentElement.clientWidth\n\t\t\t\t\t? document.documentElement.clientWidth\n\t\t\t\t\t: window.screen.width;\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\tconst height = window.innerHeight\n\t\t\t\t? window.innerHeight\n\t\t\t\t: document.documentElement.clientHeight\n\t\t\t\t\t? document.documentElement.clientHeight\n\t\t\t\t\t: window.screen.height;\n\n\t\t\tfeatures.left = width / 2 - features.width / 2 + screenLeft;\n\t\t\tfeatures.top = height / 2 - features.height / 2 + screenTop;\n\t\t}\n\n\t\t// Open a new window.\n\n\t\tthis.window = window.open(url, name, toWindowFeatures(features));\n\n\t\t// When a new window use content from a cross-origin there's no way we can attach event\n\t\t// to it. Therefore, we need to detect in a interval when the new window was destroyed\n\t\t// or was closed.\n\t\tthis.windowCheckerInterval = setInterval(() => {\n\t\t\tif (!this.window || this.window.closed) {\n\t\t\t\tthis.release();\n\t\t\t}\n\t\t}, 50);\n\n\t\t// Check if the new window was successfully opened.\n\t\tif (this.window) {\n\t\t\tthis.window.document.title = title;\n\n\t\t\t// Check if the container already exists as the window may have been already open\n\t\t\tthis.container = this.window.document.getElementById('new-window-container');\n\t\t\tif (this.container === null) {\n\t\t\t\tthis.container = this.window.document.createElement('div');\n\t\t\t\tthis.container.setAttribute('id', 'new-window-container');\n\t\t\t\tthis.window.document.body.appendChild(this.container);\n\t\t\t} else {\n\t\t\t\t// Remove any existing content\n\t\t\t\tconst staticContainer = this.window.document.getElementById('new-window-container-static');\n\t\t\t\tthis.window.document.body.removeChild(staticContainer);\n\t\t\t}\n\n\t\t\t// If specified, copy styles from parent window's document.\n\t\t\tif (this.props.copyStyles) {\n\t\t\t\tsetTimeout(() => copyStyles(document, this.window.document), 0);\n\t\t\t}\n\n\t\t\tif (typeof onOpen === 'function') {\n\t\t\t\tonOpen(this.window);\n\t\t\t}\n\n\t\t\t// Release anything bound to this component before the new window unload.\n\t\t\tthis.window.addEventListener('beforeunload', () => this.release());\n\t\t\tthis.setState({ mounted: true });\n\t\t} else {\n\t\t\t// Handle error on opening of new window.\n\t\t\t// eslint-disable-next-line no-lonely-if\n\t\t\tif (typeof onBlock === 'function') {\n\t\t\t\tonBlock(null);\n\t\t\t} else {\n\t\t\t\tconsole.warn('A new window could not be opened. Maybe it was blocked.');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Closes the opened window (if any) when NewWindow will unmount if the\n\t * prop {closeOnUnmount} is true, otherwise the NewWindow will remain open\n\t */\n\tcomponentWillUnmount() {\n\t\t// With React 18, componentWillUnmount gets called twice\n\t\t// so only call componentWillUnmount when the `mounted` state\n\t\t// is set\n\t\tif (this.state.mounted && this.window) {\n\t\t\tif (this.props.closeOnUnmount) {\n\t\t\t\tthis.window.close();\n\t\t\t} else if (this.props.children) {\n\t\t\t\t// Clone any children so they aren't removed when react stops rendering\n\t\t\t\tconst clone = this.container.cloneNode(true);\n\t\t\t\tclone.setAttribute('id', 'new-window-container-static');\n\t\t\t\tthis.window.document.body.appendChild(clone);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Release the new window and anything that was bound to it.\n\t */\n\trelease() {\n\t\t// This method can be called once.\n\t\tif (this.released) {\n\t\t\treturn;\n\t\t}\n\t\tthis.released = true;\n\n\t\t// Remove checker interval.\n\t\tclearInterval(this.windowCheckerInterval);\n\n\t\t// Call any function bound to the `onUnload` prop.\n\t\tconst { onUnload } = this.props;\n\n\t\tif (typeof onUnload === 'function') {\n\t\t\tonUnload(null);\n\t\t}\n\t}\n}\n\nNewWindow.propTypes = {\n\tchildren: PropTypes.node,\n\turl: PropTypes.string,\n\tname: PropTypes.string,\n\ttitle: PropTypes.string,\n\tfeatures: PropTypes.object,\n\tonUnload: PropTypes.func,\n\tonBlock: PropTypes.func,\n\tonOpen: PropTypes.func,\n\tcenter: PropTypes.oneOf(['parent', 'screen']),\n\tcopyStyles: PropTypes.bool,\n\tcloseOnUnmount: PropTypes.bool\n};\n\n/**\n * Utility functions.\n * @private\n */\n\n/**\n * Component export.\n * @private\n */\n\nexport default NewWindow;\nexport { copyStyles, replaceStyles };\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { ModalManager, ThemeProvider } from '@zextras/carbonio-design-system';\nimport { PreviewManager } from '@zextras/carbonio-ui-preview';\nimport { omit } from 'lodash';\nimport React, { createContext, FC, useCallback, useMemo, useRef, useState } from 'react';\nimport { DefaultTheme } from 'styled-components';\nimport type { ExtraWindowContextType, ExtraWindowProps } from '../../../types';\nimport NewWindow, { replaceStyles } from './new-window';\n\n// Enable debug console output\nconst DEBUG = false;\n\n/**\n * Debug output\n * @param text console message\n * @param args console message arguments\n */\nconst debug = (text: string, ...args: unknown[]): void => {\n\t// eslint-disable-next-line no-console\n\tif (DEBUG) console.debug(`**** extra-window **** ${text}`, args);\n};\n\n/**\n * Create a MutationObserver that monitors changes or additions of elements\n * with the class attribute inside the child window DOM tree.\n * When such a change occurs a fresh copy of the styles will be taken from the\n * parent window, and it will completely replace the styles in the child window.\n * This trick will ensure that also newly added components will have their\n * related style which didn't exist at the time of the child window opening\n *\n * Note: observing changes for \"style\" tags inside the parent window document head\n * is not possible since styled-component applies changes using CSSOM, so those\n * changes are not intercepted by MutationObserver.\n *\n * @param parentWindowDoc\n * @param newWindowObj\n */\nconst createStyledElementsObserver = (\n\tparentWindowDoc: Document,\n\tnewWindowObj: Window\n): MutationObserver => {\n\tdebug('creation of STYLED ELEMENTS observer for', parentWindowDoc);\n\tconst observer = new MutationObserver((mutationList) => {\n\t\tdebug('STYLED ELEMENTS mutation detected!', mutationList);\n\t\tsetTimeout(replaceStyles(parentWindowDoc, newWindowObj.document), 10);\n\t});\n\tobserver.observe(newWindowObj.document.body, {\n\t\tsubtree: true,\n\t\tchildList: true,\n\t\tattributes: true,\n\t\tattributeFilter: ['class']\n\t});\n\treturn observer;\n};\n\n/**\n * The context data of an extra window\n */\nconst ExtraWindowContext = createContext<ExtraWindowContextType | undefined>(undefined);\n\n/**\n * Renders the given children inside a new window/tab\n * @param props\n */\nconst ExtraWindow: FC<ExtraWindowProps> = (props) => {\n\tconst [windowObj, setWindowObj] = useState<Window | null>(null);\n\n\tconst styledElementsObserverRef = useRef<MutationObserver | null>(null);\n\n\t/*\n\t * Creates the new window's props in order to:\n\t * - fix the window.open features (workaround for a react-new-window bug)\n\t * - extract the children from the original props\n\t * - force the copyStyles property (another react-new-window bug?)\n\t * - replace the callback function to intercept and handle lifecycle events\n\t */\n\tconst newWindowProps = useMemo(\n\t\t() => ({\n\t\t\t// Workaround for default properties\n\t\t\tfeatures: {},\n\n\t\t\t// Extract children\n\t\t\t...omit(props, ['children']),\n\n\t\t\t// Workaround for default properties\n\t\t\tcopyStyles: true,\n\n\t\t\t// Intercept the opening event and update the state with the window object\n\t\t\tonOpen: (newWindowObj: Window): void => {\n\t\t\t\tnewWindowObj.focus();\n\t\t\t\tsetWindowObj(newWindowObj);\n\t\t\t\tstyledElementsObserverRef.current = createStyledElementsObserver(\n\t\t\t\t\twindow.document,\n\t\t\t\t\tnewWindowObj\n\t\t\t\t);\n\t\t\t\tprops.onOpen && props.onOpen(newWindowObj);\n\t\t\t},\n\n\t\t\t// Intercept the blocked opening and inform the user\n\t\t\tonBlock: (): void => {\n\t\t\t\tprops.onBlock && props.onBlock();\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Intercept the closing event\n\t\t\t * Since this event is based on the beforeUnload DOM event\n\t\t\t * it is not 100% reliable\n\t\t\t */\n\t\t\tonUnload: (): void => {\n\t\t\t\tstyledElementsObserverRef.current?.disconnect();\n\t\t\t\tprops.onUnload && props.onUnload();\n\t\t\t}\n\t\t}),\n\t\t[props]\n\t);\n\n\t/**\n\t * Generate a theme extensione to update the windowObj property\n\t * with the new opened window object.\n\t * This will impact the <code>Portal</code> component of\n\t * Carbonio Design System and all its dependant components\n\t * @param theme\n\t */\n\tconst themeExtension = useCallback(\n\t\t(theme: DefaultTheme): DefaultTheme => ({\n\t\t\t...theme,\n\t\t\twindowObj: windowObj || theme.windowObj\n\t\t}),\n\t\t[windowObj]\n\t);\n\n\t/*\n\t * Sometimes the status of the window is not synced, so we need\n\t * to check its real status.\n\t * The onUnload callback, which should be used to disable the component and\n\t * for cleanup operation, could be invoked asynchronously after the window\n\t * is already closed\n\t */\n\tconst windowIsClosed = useMemo<boolean>(() => windowObj?.closed === true, [windowObj]);\n\n\treturn !windowIsClosed ? (\n\t\t<NewWindow {...newWindowProps}>\n\t\t\t<ExtraWindowContext.Provider value={{ windowId: props.id }}>\n\t\t\t\t{windowObj && (\n\t\t\t\t\t<ThemeProvider extension={themeExtension}>\n\t\t\t\t\t\t<PreviewManager>\n\t\t\t\t\t\t\t<ModalManager>{props.children}</ModalManager>\n\t\t\t\t\t\t</PreviewManager>\n\t\t\t\t\t</ThemeProvider>\n\t\t\t\t)}\n\t\t\t</ExtraWindowContext.Provider>\n\t\t</NewWindow>\n\t) : null;\n};\n\nexport { ExtraWindowContext, ExtraWindow };\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useEffect } from 'react';\n\nimport { ExtraWindowsManager, useExtraWindowsManager } from './extra-window-manager';\nimport { ExtraWindowsContextType, ExtraWindowsCreationResult } from '../../../types';\n\nconst globalContext: ExtraWindowsContextType = {\n\tcreateWindow: (): ExtraWindowsCreationResult => {\n\t\tthrow new Error('global extra window manager not initialized');\n\t},\n\tcloseWindow: () => {\n\t\tthrow new Error('global extra window manager not initialized');\n\t},\n\tgetWindow: () => {\n\t\tthrow new Error('global extra window manager not initialized');\n\t},\n\tgetFocusedWindow: () => {\n\t\tthrow new Error('global extra window manager not initialized');\n\t}\n};\n\nconst GlobalExtraWindowManagerProvider = (): null => {\n\tconst context = useExtraWindowsManager();\n\tuseEffect(() => {\n\t\tglobalContext.createWindow = context.createWindow;\n\t\tglobalContext.closeWindow = context.closeWindow;\n\t\tglobalContext.listWindows = context.listWindows;\n\t\tglobalContext.getWindow = context.getWindow;\n\t\tglobalContext.getFocusedWindow = context.getFocusedWindow;\n\t}, [context]);\n\treturn null;\n};\n\nexport const GlobalExtraWindowManager = ({\n\tchildren\n}: React.PropsWithChildren<Record<string, unknown>>): React.JSX.Element => (\n\t<ExtraWindowsManager>\n\t\t<GlobalExtraWindowManagerProvider />\n\t\t{children}\n\t</ExtraWindowsManager>\n);\n\nexport const useGlobalExtraWindowManager = (): ExtraWindowsContextType => {\n\tif (!globalContext) {\n\t\tthrow new Error('global extra window manager not initialized');\n\t}\n\treturn globalContext;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useEffect } from 'react';\n\nimport { CreateModalFn, ModalManager, useModal } from '@zextras/carbonio-design-system';\n\nconst globalCreateModalObj: { createModal: CreateModalFn } = {\n\tcreateModal: () => {\n\t\tthrow new Error('global modal manager not initialized');\n\t}\n};\n\nconst GlobalModalManagerProvider = (): null => {\n\tconst createModal = useModal();\n\tuseEffect(() => {\n\t\tglobalCreateModalObj.createModal = createModal;\n\t}, [createModal]);\n\treturn null;\n};\n\nexport const GlobalModalManager = ({\n\tchildren\n}: React.PropsWithChildren<Record<string, unknown>>): React.JSX.Element => (\n\t<ModalManager>\n\t\t<GlobalModalManagerProvider />\n\t\t{children}\n\t</ModalManager>\n);\n\nexport const useGlobalModal = (): CreateModalFn => globalCreateModalObj.createModal;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { t, SettingsSubSection } from '@zextras/carbonio-shell-ui';\n\nimport { AdvancedAccountStore } from '../../store/zustand/advanced-account/store';\n\nexport const displayingMessagesSubSection = (): SettingsSubSection => ({\n\tlabel: t('settings.label.display_messages', 'Displaying Messages'),\n\tid: 'displaying_messages'\n});\n\nexport const receivingMessagesSubSection = (): SettingsSubSection => ({\n\tlabel: t('label.receive_message', 'Receiving Messages'),\n\tid: 'receiving_messages'\n});\n\nexport const recoverMessagesSubSection = (): SettingsSubSection => ({\n\tlabel: t('label.recover_messages', 'Recover Messages'),\n\tid: 'recover_messages'\n});\n\nexport const domainWhitelistSubSection = (): SettingsSubSection => ({\n\tlabel: t('label.trusted_addresses', 'Trusted addresses'),\n\tid: 'trusted_addresses'\n});\nexport const signaturesSubSection = (): SettingsSubSection => ({\n\tlabel: t('signatures.signature_heading', 'Signatures'),\n\tid: 'signatures'\n});\nexport const setDefaultSignaturesSubSection = (): SettingsSubSection => ({\n\tlabel: t('label.using_signatures', 'Signatures Usage'),\n\tid: 'using_signatures'\n});\nexport const filtersSubSection = (): SettingsSubSection => ({\n\tlabel: t('filters.filters', 'Filters'),\n\tid: 'filters'\n});\n\nexport const getSettingsSubSections = (\n\tbackupSelfUndeleteAllowed: AdvancedAccountStore['backupSelfUndeleteAllowed']\n): Array<SettingsSubSection> =>\n\t[displayingMessagesSubSection(), receivingMessagesSubSection()]\n\t\t.concat(backupSelfUndeleteAllowed ? recoverMessagesSubSection() : [])\n\t\t.concat([signaturesSubSection(), setDefaultSignaturesSubSection(), filtersSubSection()]);\n\nexport const composingMsgSubSection = (): SettingsSubSection => ({\n\tlabel: t('labels.composing_messages', 'Composing Messages'),\n\tid: 'compose'\n});\n","var map = {\n\t\"./af\": 5516,\n\t\"./af.js\": 5516,\n\t\"./ar\": 9664,\n\t\"./ar-dz\": 5903,\n\t\"./ar-dz.js\": 5903,\n\t\"./ar-kw\": 6115,\n\t\"./ar-kw.js\": 6115,\n\t\"./ar-ly\": 362,\n\t\"./ar-ly.js\": 362,\n\t\"./ar-ma\": 4915,\n\t\"./ar-ma.js\": 4915,\n\t\"./ar-ps\": 956,\n\t\"./ar-ps.js\": 956,\n\t\"./ar-sa\": 2689,\n\t\"./ar-sa.js\": 2689,\n\t\"./ar-tn\": 9563,\n\t\"./ar-tn.js\": 9563,\n\t\"./ar.js\": 9664,\n\t\"./az\": 4280,\n\t\"./az.js\": 4280,\n\t\"./be\": 8658,\n\t\"./be.js\": 8658,\n\t\"./bg\": 840,\n\t\"./bg.js\": 840,\n\t\"./bm\": 7786,\n\t\"./bm.js\": 7786,\n\t\"./bn\": 6711,\n\t\"./bn-bd\": 3562,\n\t\"./bn-bd.js\": 3562,\n\t\"./bn.js\": 6711,\n\t\"./bo\": 640,\n\t\"./bo.js\": 640,\n\t\"./br\": 8139,\n\t\"./br.js\": 8139,\n\t\"./bs\": 3044,\n\t\"./bs.js\": 3044,\n\t\"./ca\": 4383,\n\t\"./ca.js\": 4383,\n\t\"./cs\": 9185,\n\t\"./cs.js\": 9185,\n\t\"./cv\": 6046,\n\t\"./cv.js\": 6046,\n\t\"./cy\": 9959,\n\t\"./cy.js\": 9959,\n\t\"./da\": 9124,\n\t\"./da.js\": 9124,\n\t\"./de\": 2856,\n\t\"./de-at\": 5252,\n\t\"./de-at.js\": 5252,\n\t\"./de-ch\": 8738,\n\t\"./de-ch.js\": 8738,\n\t\"./de.js\": 2856,\n\t\"./dv\": 2017,\n\t\"./dv.js\": 2017,\n\t\"./el\": 8378,\n\t\"./el.js\": 8378,\n\t\"./en-au\": 5939,\n\t\"./en-au.js\": 5939,\n\t\"./en-ca\": 2945,\n\t\"./en-ca.js\": 2945,\n\t\"./en-gb\": 1004,\n\t\"./en-gb.js\": 1004,\n\t\"./en-ie\": 3451,\n\t\"./en-ie.js\": 3451,\n\t\"./en-il\": 8908,\n\t\"./en-il.js\": 8908,\n\t\"./en-in\": 5350,\n\t\"./en-in.js\": 5350,\n\t\"./en-nz\": 2213,\n\t\"./en-nz.js\": 2213,\n\t\"./en-sg\": 9467,\n\t\"./en-sg.js\": 9467,\n\t\"./eo\": 5287,\n\t\"./eo.js\": 5287,\n\t\"./es\": 5131,\n\t\"./es-do\": 4481,\n\t\"./es-do.js\": 4481,\n\t\"./es-mx\": 2753,\n\t\"./es-mx.js\": 2753,\n\t\"./es-us\": 7624,\n\t\"./es-us.js\": 7624,\n\t\"./es.js\": 5131,\n\t\"./et\": 1698,\n\t\"./et.js\": 1698,\n\t\"./eu\": 113,\n\t\"./eu.js\": 113,\n\t\"./fa\": 1298,\n\t\"./fa.js\": 1298,\n\t\"./fi\": 7562,\n\t\"./fi.js\": 7562,\n\t\"./fil\": 3876,\n\t\"./fil.js\": 3876,\n\t\"./fo\": 6316,\n\t\"./fo.js\": 6316,\n\t\"./fr\": 8943,\n\t\"./fr-ca\": 9172,\n\t\"./fr-ca.js\": 9172,\n\t\"./fr-ch\": 4067,\n\t\"./fr-ch.js\": 4067,\n\t\"./fr.js\": 8943,\n\t\"./fy\": 7978,\n\t\"./fy.js\": 7978,\n\t\"./ga\": 6979,\n\t\"./ga.js\": 6979,\n\t\"./gd\": 8672,\n\t\"./gd.js\": 8672,\n\t\"./gl\": 2168,\n\t\"./gl.js\": 2168,\n\t\"./gom-deva\": 8049,\n\t\"./gom-deva.js\": 8049,\n\t\"./gom-latn\": 9002,\n\t\"./gom-latn.js\": 9002,\n\t\"./gu\": 2951,\n\t\"./gu.js\": 2951,\n\t\"./he\": 9300,\n\t\"./he.js\": 9300,\n\t\"./hi\": 6832,\n\t\"./hi.js\": 6832,\n\t\"./hr\": 529,\n\t\"./hr.js\": 529,\n\t\"./hu\": 3012,\n\t\"./hu.js\": 3012,\n\t\"./hy-am\": 8187,\n\t\"./hy-am.js\": 8187,\n\t\"./id\": 3614,\n\t\"./id.js\": 3614,\n\t\"./is\": 8303,\n\t\"./is.js\": 8303,\n\t\"./it\": 4094,\n\t\"./it-ch\": 7080,\n\t\"./it-ch.js\": 7080,\n\t\"./it.js\": 4094,\n\t\"./ja\": 4886,\n\t\"./ja.js\": 4886,\n\t\"./jv\": 7127,\n\t\"./jv.js\": 7127,\n\t\"./ka\": 9623,\n\t\"./ka.js\": 9623,\n\t\"./kk\": 9201,\n\t\"./kk.js\": 9201,\n\t\"./km\": 1211,\n\t\"./km.js\": 1211,\n\t\"./kn\": 2414,\n\t\"./kn.js\": 2414,\n\t\"./ko\": 5629,\n\t\"./ko.js\": 5629,\n\t\"./ku\": 8691,\n\t\"./ku-kmr\": 7684,\n\t\"./ku-kmr.js\": 7684,\n\t\"./ku.js\": 8691,\n\t\"./ky\": 6575,\n\t\"./ky.js\": 6575,\n\t\"./lb\": 4181,\n\t\"./lb.js\": 4181,\n\t\"./lo\": 8130,\n\t\"./lo.js\": 8130,\n\t\"./lt\": 5207,\n\t\"./lt.js\": 5207,\n\t\"./lv\": 8697,\n\t\"./lv.js\": 8697,\n\t\"./me\": 1945,\n\t\"./me.js\": 1945,\n\t\"./mi\": 8285,\n\t\"./mi.js\": 8285,\n\t\"./mk\": 1899,\n\t\"./mk.js\": 1899,\n\t\"./ml\": 8466,\n\t\"./ml.js\": 8466,\n\t\"./mn\": 9496,\n\t\"./mn.js\": 9496,\n\t\"./mr\": 732,\n\t\"./mr.js\": 732,\n\t\"./ms\": 8835,\n\t\"./ms-my\": 4330,\n\t\"./ms-my.js\": 4330,\n\t\"./ms.js\": 8835,\n\t\"./mt\": 5146,\n\t\"./mt.js\": 5146,\n\t\"./my\": 1709,\n\t\"./my.js\": 1709,\n\t\"./nb\": 5559,\n\t\"./nb.js\": 5559,\n\t\"./ne\": 7030,\n\t\"./ne.js\": 7030,\n\t\"./nl\": 5389,\n\t\"./nl-be\": 4743,\n\t\"./nl-be.js\": 4743,\n\t\"./nl.js\": 5389,\n\t\"./nn\": 7512,\n\t\"./nn.js\": 7512,\n\t\"./oc-lnc\": 8787,\n\t\"./oc-lnc.js\": 8787,\n\t\"./pa-in\": 438,\n\t\"./pa-in.js\": 438,\n\t\"./pl\": 5787,\n\t\"./pl.js\": 5787,\n\t\"./pt\": 3267,\n\t\"./pt-br\": 3032,\n\t\"./pt-br.js\": 3032,\n\t\"./pt.js\": 3267,\n\t\"./ro\": 7712,\n\t\"./ro.js\": 7712,\n\t\"./ru\": 6370,\n\t\"./ru.js\": 6370,\n\t\"./sd\": 5156,\n\t\"./sd.js\": 5156,\n\t\"./se\": 1035,\n\t\"./se.js\": 1035,\n\t\"./si\": 6151,\n\t\"./si.js\": 6151,\n\t\"./sk\": 2793,\n\t\"./sk.js\": 2793,\n\t\"./sl\": 1180,\n\t\"./sl.js\": 1180,\n\t\"./sq\": 3871,\n\t\"./sq.js\": 3871,\n\t\"./sr\": 34,\n\t\"./sr-cyrl\": 5901,\n\t\"./sr-cyrl.js\": 5901,\n\t\"./sr.js\": 34,\n\t\"./ss\": 7921,\n\t\"./ss.js\": 7921,\n\t\"./sv\": 6366,\n\t\"./sv.js\": 6366,\n\t\"./sw\": 5677,\n\t\"./sw.js\": 5677,\n\t\"./ta\": 7988,\n\t\"./ta.js\": 7988,\n\t\"./te\": 1720,\n\t\"./te.js\": 1720,\n\t\"./tet\": 502,\n\t\"./tet.js\": 502,\n\t\"./tg\": 2130,\n\t\"./tg.js\": 2130,\n\t\"./th\": 2883,\n\t\"./th.js\": 2883,\n\t\"./tk\": 9414,\n\t\"./tk.js\": 9414,\n\t\"./tl-ph\": 2252,\n\t\"./tl-ph.js\": 2252,\n\t\"./tlh\": 9095,\n\t\"./tlh.js\": 9095,\n\t\"./tr\": 8509,\n\t\"./tr.js\": 8509,\n\t\"./tzl\": 3261,\n\t\"./tzl.js\": 3261,\n\t\"./tzm\": 6990,\n\t\"./tzm-latn\": 8902,\n\t\"./tzm-latn.js\": 8902,\n\t\"./tzm.js\": 6990,\n\t\"./ug-cn\": 6185,\n\t\"./ug-cn.js\": 6185,\n\t\"./uk\": 8771,\n\t\"./uk.js\": 8771,\n\t\"./ur\": 7588,\n\t\"./ur.js\": 7588,\n\t\"./uz\": 7260,\n\t\"./uz-latn\": 2244,\n\t\"./uz-latn.js\": 2244,\n\t\"./uz.js\": 7260,\n\t\"./vi\": 9530,\n\t\"./vi.js\": 9530,\n\t\"./x-pseudo\": 4154,\n\t\"./x-pseudo.js\": 4154,\n\t\"./yo\": 2051,\n\t\"./yo.js\": 2051,\n\t\"./zh-cn\": 8867,\n\t\"./zh-cn.js\": 8867,\n\t\"./zh-hk\": 3163,\n\t\"./zh-hk.js\": 3163,\n\t\"./zh-mo\": 3702,\n\t\"./zh-mo.js\": 3702,\n\t\"./zh-tw\": 8195,\n\t\"./zh-tw.js\": 8195\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;"],"names":["LazyAppView","lazy","LazyEditView","LazySettingsView","LazySearchView","LazySidebarView","AppView","React","Suspense","fallback","Spinner","StoreProvider","ModalManager","ExtraWindowsManager","EditView","SettingsView","SearchView","props","SidebarView","mailToAction","contacts","id","label","t","icon","onClick","e","mailToActionOnClick","preventDefault","participant","isArray","email","Object","keys","length","type","ParticipantRole","TO","address","mail","fullName","firstName","middleName","trim","mailToSharedFunction","disabled","some","contact","newEmailActionOnClick","addBoard","url","MAILS_ROUTE","EditViewActions","NEW","title","newEmailAction","group","MAIL_APP_ID","primary","LazyBackupSearchView","BackupSearchViewComponent","path","useRouteMatch","Route","getFolderRequest","async","view","account","body","omitBy","_jsns","folder","l","undefined","tr","isNil","soapFetch","InboxBadgeUpdater","inbox","useFolder","FOLDERS","INBOX","useEffect","updatePrimaryBadge","show","u","count","showCount","SyncDataHandler","notifyList","useNotify","seq","setSeq","useState","dispatch","useAppDispatch","initialized","setInitialized","currentFolder","useAppSelector","selectCurrentFolder","messagesState","selectMessages","refresh","useRefresh","isEmpty","forEach","notify","find","modified","m","setSearchedInFolder","sortBy","tags","getTags","created","c","conversations","map","i","normalizeConversation","handleNotifyCreatedConversations","handleNotifyCreatedSearchConversations","keyBy","handleCreatedMessages","handleCreatedMessagesInConversation","handleCreatedMessagesInSearchConversation","handleNotifyModifiedConversations","handleNotifyModifiedSearchConversations","messages","obj","normalizeMailMessageFromSoap","handleModifiedMessages","toUpdate","filter","handleModifiedMessagesInConversation","handleModifiedMessagesInSearchConversation","conversationToUpdate","msgsReference","reduce","acc","msg","parent","date","conversation","handleAddMessagesInConversation","handleAddMessagesInSearchConversation","deleted","handleNotifyDeletedConversations","handleNotifyDeletedSearchConversations","handleDeletedMessages","handleDeletedSearchMessages","handleDeletedMessagesInConversation","handleDeletedMessagesInSearchConversation","App","hasBackupSearchMessages","useBackupSearchStore","addRoute","route","position","visible","primaryBar","secondaryBar","appView","addSearchView","component","addBoardView","backupSelfUndeleteAllowed","fetch","then","data","json","status","useAdvancedAccountStore","getState","updateBackupSelfUndeleteAllowed","catch","addSettingsView","subSections","getSettingsSubSections","addComponentsToShell","registerFunctions","fn","openComposerSharedFunction","openPrefilledComposerSharedFunction","registerActions","action","ACTION_TYPES","hasMessages","BACKUP_SEARCH_ROUTE","removeRoute","toggleBackupSearchComponent","initializing","setInitializing","previous","rootFolders","getShareInfoRequest","sharedFolders","folders","sharedAccounts","filteredLinks","reject","link","Promise","all","ownerEmail","response","oname","name","owner","getFoldersByAccounts","Fault","folderWorker","postMessage","op","currentView","item","state","useFolderStore","useFoldersController","FOLDER_VIEW","message","GlobalModalManager","GlobalExtraWindowManager","search_folder","tag","document","appointment","virtual_conversation","remote_folder","wiki","task","chat","TagsActionsType","FROM","CARBON_COPY","BLIND_CARBON_COPY","REPLY_TO","SENDER","READ_RECEIPT_NOTIFICATION","RESENT_FROM","result","includeSelf","resolve","isFulfilled","share","s","getFolder","useFoldersMap","getRootFolderId","ROOT_NAME","useRoot","rootFolderId","getRoot","useRootsArray","f","split","includes","USER_ROOT","getRootsMap","create","set","linksIdMap","searches","updateFolder","opt","produce","onmessage","setState","Worker","URL","FileExtensionRegex","calcColor","theme","sum","charCodeAt","avatarColors","getFileExtension","file","contentType","value","displayName","exec","filename","FOLDER_ACTIONS","MOVE","EMPTY_TRASH","REMOVE_FROM_LIST","SHARES_INFO","EDIT","DELETE","SHARE","SHARE_URL","TRASH","CONVACTIONS","FLAG","UNFLAG","MARK_READ","MARK_UNREAD","TAG","UNTAG","MARK_SPAM","MARK_NOT_SPAM","convertToDecimal","source","charCode","temp","toString","charAt","getTimeLabel","momentDate","moment","isSame","Date","format","participantToString","accounts","isAvailableInTrusteeList","trusteeList","trusteeAddress","availableInTrusteeList","domain","substring","lastIndexOf","ta","LineType","ORIG_UNKNOWN","ORIG_QUOTED","ORIG_SEP_STRONG","ORIG_WROTE_STRONG","ORIG_WROTE_WEAK","ORIG_HEADER","ORIG_LINE","HTML_SEP_ID","PLAINTEXT_SEP","NOTES_SEPARATOR","SIGNATURE_CLASS","SIGNATURE_PRE_SEP","check","entries","key","NO_ACCOUNT_NAME","RECOVER_MESSAGES_INTERVAL","attachmentTypeItemsConstant","searchString","emailStatusItemsConstant","MessageActionsDescriptors","desc","MARK_AS_READ","MARK_AS_UNREAD","MARK_AS_SPAM","MARK_AS_NOT_SPAM","PRINT","SHOW_SOURCE","MOVE_TO_TRASH","REPLY","REPLY_ALL","FORWARD","EDIT_AS_NEW","EDIT_DRAFT","SEND","REDIRECT","RESTORE","DELETE_PERMANENTLY","PREVIEW_ON_SEPARATED_WINDOW","DOWNLOAD_EML","CREATE_APPOINTMENT","ConversationActionsDescriptors","GenericActionDescriptors","SELECT_FOLDERS","FilterActionsDescriptors","APPLY","SNACKBAR_DEFAULT_TIMEOUT","SENT","DRAFTS","SPAM","TIMEOUTS","DRAFT_SAVE_DELAY","SET_AS_SPAM","DRAFT_INFO_HIDING_DELAY","COMPLETED_UPLOAD_NOTIFICATION_VISIBILITY","LIST_LIMIT","INITIAL_LIMIT","LOAD_MORE_LIMIT","LOCAL_STORAGES","EXPANDED_FOLDERS","EDIT_AS_DRAFT","MAIL_TO","COMPOSE","PREFILL_COMPOSE","RESUME","PROCESS_STATUS","RUNNING","COMPLETED","ABORTED","EDIT_VIEW_CLOSING_REASONS","EXTERNAL_CLOSE_REQUEST","MESSAGE_SENT","MESSAGE_SEND_SCHEDULED","SORTING_OPTIONS","unread","important","flagged","attachment","from","to","subject","size","SORTING_DIRECTION","ASCENDING","DESCENDING","SORT_ICONS","API_REQUEST_STATUS","pending","error","fulfilled","SEARCHED_FOLDER_STATE_STATUS","empty","complete","hasMore","hasChange","incomplete","EXTRA_WINDOW_ACTION_ID","BACKUP_SEARCH_STATUS","loading","completed","CIDURL_REGEX","REFERRED_CIDURL_PATTERN","MIMETYPE_RICHTEXT","findAttachments","parts","found","part","disposition","ci","push","isEml","RegExp","test","extractContentIdInnerPart","contentId","tokens","isContentIdEqual","otherContentId","contentIdInnerPart","otherContentIdInnerPart","isCidUrl","getCidFromCidUrl","cidUrl","cidUrlTokens","getReferredContentIds","content","richText","escapedText","DOMParser","parseFromString","documentElement","outerHTML","matches","match","getCidReferences","cidReference","cid","cidReferenceTokens","getCidFromReference","isReferredCid","referredCids","referredCid","filterAttachmentsParts","filtered","isReferredByCid","getAttachmentParts","getAttachmentExtension","getSizeDescription","Math","round","useAttachmentIconColor","useTheme","useMemo","isDownloadServicedUrl","composeAttachmentDownloadUrl","messageId","partName","FOLDERID_REGEX","getFolderIdParts","folderId","zid","getMessageOwnerAccountName","folderRoots","getFolderOwnerAccountName","primaryAccount","getUserAccount","otherOwnerAccount","getFolderOtherOwnerAccountName","matchingFolderRoot","getFolderPathForBreadcrumb","folderPath","folderPathFirstPart","folderPathLastPart","folderPathArray","pop","join","isA","folderType","isRoot","isTrash","isSpam","isDraft","isTrashed","folderIdAbsPath","absFolderPath","toLowerCase","startsWith","getParentFolderId","parentId","isConversation","isSharedAccountFolder","PRIMARY_IDENTITY_NAME","AccountOwnershipWeights","nomatch","RoleWeights","IdentityTypeWeights","alias","delegation","getNoIdentityPlaceholder","getAvailableAddresses","settings","getUserSettings","ownerAccount","attrs","zimbraMailAlias","rights","targets","target","right","user","addr","getAddressOwnerAccount","addressInfo","info","getIdentitiesDescriptors","identities","availableEmailAddresses","identity","allIdentities","remove","sortIdentities","fromAddress","_attrs","zimbraPrefFromAddress","fromDisplay","zimbraPrefFromDisplay","receivingAddress","matchingReceivingAddress","availableAddress","zimbraPrefIdentityId","identityName","identityDisplayName","zimbraPrefIdentityName","defaultSignatureId","zimbraPrefDefaultSignatureId","forwardReplySignatureId","zimbraPrefForwardReplySignatureId","delegationAccounts","rts","delegationIdentities","flatten","ele","d","generateIdentityId","uniqueIdentityList","findIndex","getIdentityDescriptor","identityDescriptor","getDefaultIdentity","getRecipientReplyIdentity","messageFolderOwnerAccount","recipients","participants","recipientAddress","recipientFullName","role","getRecipients","recipientsWithMatchingAddress","checkMatchingAddress","availableAddresses","recipient","matchingAddress","filteredRecipients","matchingIdentity","filterMatchingRecipients","recipientWeights","computeIdentityWeight","folderOwnerAccount","accountMatch","weight","replyIdentity","sort","a","b","defaultIdentity","identityId","getIdentityFromParticipant","getIdentityDescription","getParticipantsFromMessage","getFromParticipantFromMessage","isSingleMessageConversation","useDispatch","useSelector","context","compositionData","onConfirm","rest","editorPrefillData","getTagIds","tn","getTagIdsFromName","names","filteredMsgs","Number","normalizeParticipantsFromSoap","su","fragment","fr","read","hasAttachment","urgent","messagesInConversation","n","extractAttachmentIdsFromHtmlContent","replace","cleanUpCi","slice","indexOf","isIgnoreAttachment","ct","getAttachmentsFromParts","mailParts","anchoredAttachmentsList","multipart","extractCid","mp","getAttachmentsAnchoredOnHtmlBody","results","attachmentParts","attachmentPart","cd","updatedMailPart","concat","normalizeMailPartMapFn","v","ret","requiresSmartLinkConversion","findBodyPart","participantTypeFromSoap","Error","p","exp","isGroup","isComplete","attachments","invite","inv","shr","isScheduled","autoSendTime","isDeleted","isForwarded","isSentByMe","isInvite","isReplied","isReadReceiptRequested","deleteAttachments","createAsyncThunk","res","getConv","conversationId","html","needExp","condition","expandedStatus","getMsgCall","msgId","getMsg","convAction","ids","operation","tagName","msgAction","flag","searchConv","query","recip","offset","limit","orderBy","more","redirectMessageAction","getMsgsForPrint","GetMsgResponse","GetMsgRequest","isNull","re","saveDraftV3","editor","signal","createSoapDraftRequestFromEditor","saveDraftAsyncThunk","resp","search","before","types","wantContent","locale","rejectWithValue","queryPart","finalsortBy","getTime","finalQuery","fullConversation","_content","index","sortIndex","normalized","err","fetchConversationsPending","payload","meta","arg","searchRequestStatus","requestStatus","fetchConversationsFulfilled","newConversationsState","searchedInFolder","fetchConversationsRejected","searchConvFulfilled","searchConvPending","searchConvRejected","convActionPending","convActionFulfilled","convActionRejected","getConvFulfilled","conv","merge","getConvPending","getConvRejected","conversationsSlice","createSlice","initialState","reducers","handleCreatedConversationsReducer","JSON","stringify","now","handleModifiedConversationsReducer","handleDeletedConversationsReducer","omit","handleCreatedMessagesInConversationsReducer","last","handleModifiedMessagesInConversationReducer","messageToUpdate","handleDeletedMessagesInConversationReducer","handleAddMessagesInConversationReducer","addMsg","setCurrentFolder","extraReducers","builder","addCase","rejected","actions","conversationsSliceReducer","reducer","selectCurrentFolderExpandedStatus","selectConversationExpandedStatus","selectConversationsArray","createSelector","values","selectConversation","selectFolderSearchStatus","selectConversationsSearchRequestStatus","getMsgFulfilled","mergedMessages","fetchMessagesRejected","fetchMessagesFulfilled","newMessagesState","deleteAttachmentsFulfilled","normalizeMsg","saveDraftFulfilled","msgActionRejected","prevCache","msgActionPending","messagesSlice","handleCreatedMessagesReducer","mappedMsgs","prefs","isShowNotificationEnabled","zimbraPrefMailToasterEnabled","isAudioEnabled","showAllNotifications","zimbraPrefShowAllNewMailNotifications","norm","pick","messagesToNotify","reverse","notificationConfig","playSound","showPopup","window","focus","replaceHistory","getNotificationManager","multipleNotify","triggerNotification","handleModifiedMessagesReducer","handleDeletedMessagesReducer","messageSliceReducer","selectMessage","selectMessagesArray","selectMessagesSearchRequestStatus","selectFolderMsgSearchStatus","storeReducers","combineReducers","searchesSliceReducer","store","configureStore","devTools","children","Provider","extractIdsFromMessagesAndConversations","items","itemId","extractIds","getSearchSliceInitialiState","searchResults","searchResultsIds","loadingMessage","fetchSearchesPending","fetchSearchesFulfilled","fetchSearchesRejected","code","Detail","Code","msgActionFulfilled","itemIsInSearches","isItemInSearches","searchesSlice","resetSearchResults","selectSearches","searchParams","setMessages","setStatus","setSearchParams","queryParams","composeCidUrlFromContentId","replaceCidUrlWithServiceUrl","savedAttachment","htmlDoc","images","getElementsByTagName","img","src","getAttribute","pnsrc","dataSrc","dataMceSrc","referenceCid","newSrc","convertCidUrlToServiceUrl","savedInlineAttachments","referredAttachment","setAttribute","innerHTML","replaceServiceUrlWithCidUrl","getHtmlWithPreAppliedStyled","style","font","fontSize","color","getMP","zimbraPrefHtmlEditorDefaultFontFamily","zimbraPrefHtmlEditorDefaultFontSize","zimbraPrefHtmlEditorDefaultFontColor","unsavedInlineAttachment","filterUnsavedInlineAttachment","unsavedAttachments","savedInlineAttachment","filterSavedInlineAttachment","savedAttachments","contentWithCidUrl","plainText","text","isRichText","inlineAttachment","attach","aid","mid","createParticipantFromIdentity","createSoapMessageRequestFromEditor","command","cc","bcc","createFromParticipantByIdentity","sender","createSenderParticipantByIdentity","requestReadReceipt","soapParticipants","did","rt","replyType","origid","originalId","isUrgent","attachAid","filterUnsavedStandardAttachment","attachMp","composeAttachMpField","filterSavedStandardAttachment","composeAttachField","createSoapSendMsgRequestFromEditor","buildSavedAttachments","isInline","computeDraftSaveAllowedStatus","draftSaveProcessStatus","allowed","reason","unsavedAttachment","uploadStatus","computeSendAllowedStatus","sendProcessStatus","isSavedAttachment","isUnsavedAttachment","isAttachmentUploading","getSavedInlineAttachmentsByContentId","contentIds","idList","isContentIdWithinIdList","filterUnsavedAttachmentsByUploadId","uploadIds","uploadId","ExtraWindowsContext","windowsData","setWindowsData","createModal","useModal","getWindow","useCallback","windowId","windowName","windowData","windowProps","addWindow","addedWindowData","currentData","updateWindow","updatedWindowData","updatedData","removeWindow","splice","listWindows","getFocusedWindow","hasFocus","createWindow","params","existingWindow","currentWindow","blur","uuid","onOpen","windowObj","openedWindow","onBlock","focusedExtraWindow","closeModal","containerWindow","confirmLabel","showCloseIcon","onClose","onSecondaryAction","Text","overflow","onUnload","returnComponent","ExtraWindow","_extends","closeWindow","closingWindowData","close","useExtraWindowsManager","copyStyles","headFrag","createDocumentFragment","Array","styleSheets","styleSheet","rules","cssRules","console","ruleText","cssRule","CSSRule","UNKNOWN_RULE","returnText","KEYFRAMES_RULE","rule","keyText","cssText","getKeyFrameText","IMPORT_RULE","FONT_FACE_RULE","line","location","origin","fixUrlForRule","newStyleEl","createElement","textContent","appendChild","href","newLinkEl","rel","head","NewWindow","constructor","super","this","container","windowCheckerInterval","released","mounted","render","ReactDOM","componentDidMount","openChild","features","center","width","height","left","top","outerWidth","screenX","outerHeight","screenY","screenLeft","screen","screenTop","innerWidth","clientWidth","innerHeight","clientHeight","warn","open","setInterval","closed","release","getElementById","staticContainer","removeChild","setTimeout","addEventListener","componentWillUnmount","closeOnUnmount","clone","cloneNode","clearInterval","_defineProperty","propTypes","PropTypes","ExtraWindowContext","createContext","setWindowObj","styledElementsObserverRef","useRef","newWindowProps","newWindowObj","current","createStyledElementsObserver","parentWindowDoc","observer","MutationObserver","mutationList","elements","parentNode","replaceStyles","observe","subtree","childList","attributes","attributeFilter","disconnect","themeExtension","ThemeProvider","extension","PreviewManager","globalContext","GlobalExtraWindowManagerProvider","useGlobalExtraWindowManager","globalCreateModalObj","GlobalModalManagerProvider","useGlobalModal","displayingMessagesSubSection","receivingMessagesSubSection","recoverMessagesSubSection","domainWhitelistSubSection","signaturesSubSection","setDefaultSignaturesSubSection","filtersSubSection","composingMsgSubSection","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports"],"sourceRoot":""}