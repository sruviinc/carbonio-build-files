{"version":3,"file":"mails-folder-panel-view.b467e9ae.chunk.js","mappings":"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","sources":["webpack://carbonio-mails-ui/./node_modules/@mui/material/Typography/typographyClasses.js","webpack://carbonio-mails-ui/./node_modules/@mui/material/Typography/Typography.js","webpack://carbonio-mails-ui/./node_modules/@mui/icons-material/esm/Mail.js","webpack://carbonio-mails-ui/./src/views/app-view.tsx","webpack://carbonio-mails-ui/./node_modules/@mui/material/SvgIcon/svgIconClasses.js","webpack://carbonio-mails-ui/./node_modules/@mui/material/SvgIcon/SvgIcon.js","webpack://carbonio-mails-ui/./node_modules/@mui/material/utils/createSvgIcon.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Mail');","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, Suspense, lazy, useEffect, useMemo, useState } from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport { FOLDERS, Spinner, setAppContext, useUserSettings } from '@zextras/carbonio-shell-ui';\nimport { includes } from 'lodash';\nimport moment from 'moment';\nimport { Redirect, Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\n\nimport { getFolderIdParts } from '../helpers/folders';\nimport { useAppSelector } from '../hooks/redux';\nimport { selectCurrentFolder } from '../store/conversations-slice';\nimport { Modal, Typography } from '@mui/material';\nimport { Mail } from '@mui/icons-material';\n\nconst LazyFolderView = lazy(\n\t() => import(/* webpackChunkName: \"folder-panel-view\" */ './app/folder-panel')\n);\n\nconst LazyDetailPanel = lazy(\n\t() => import(/* webpackChunkName: \"folder-panel-view\" */ './app/detail-panel')\n);\n\nconst AppView: FC = () => {\n\tconst { path } = useRouteMatch();\n\tconst [count, setCount] = useState(0);\n\tconst { zimbraPrefGroupMailBy, zimbraPrefLocale } = useUserSettings().prefs;\n\tconst currentFolderId = useAppSelector(selectCurrentFolder);\n\n\tconst isMessageView = useMemo(\n\t\t() =>\n\t\t\t(zimbraPrefGroupMailBy && zimbraPrefGroupMailBy === 'message') ||\n\t\t\tincludes([FOLDERS.DRAFTS, FOLDERS.TRASH], getFolderIdParts(currentFolderId).id),\n\t\t[currentFolderId, zimbraPrefGroupMailBy]\n\t);\n\n\tif (zimbraPrefLocale) {\n\t\tmoment.locale(zimbraPrefLocale as string);\n\t}\n\n\tuseEffect(() => {\n\t\tsetAppContext({ isMessageView, count, setCount });\n\t}, [count, isMessageView]);\n\n\treturn (\n\t\t<div style={{ width: '100%', height: '100%' }}>\n\t\t\t<div style={{ padding: '16px', height: '72px' }}>\n\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t<Mail />\n\t\t\t\t\t<Typography variant=\"body1\" style={{ marginLeft: '16px' }}>\n\t\t\t\t\t\tE-Mail\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{ width: '100%', height: 'calc(100% - 72px)' }}>\n\t\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"flex-start\">\n\t\t\t\t\t<Container width=\"40%\">\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path={`${path}/folder/:folderId/:type?/:itemId?`}>\n\t\t\t\t\t\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t\t\t<LazyFolderView />\n\t\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Redirect strict from={path} to={`${path}/folder/2`} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Container>\n\n\t\t\t\t\t<Container width=\"60%\">\n\t\t\t\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<LazyDetailPanel />\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AppView;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSvgIconUtilityClass(slot) {\n  return generateUtilityClass('MuiSvgIcon', slot);\n}\nconst svgIconClasses = generateUtilityClasses('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default svgIconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette2, _palette3;\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    // the <svg> will define the property that has `currentColor`\n    // for example heroicons uses fill=\"none\" and stroke=\"currentColor\"\n    fill: ownerState.hasSvgAsChild ? undefined : 'currentColor',\n    flexShrink: 0,\n    transition: (_theme$transitions = theme.transitions) == null || (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, 'fill', {\n      duration: (_theme$transitions2 = theme.transitions) == null || (_theme$transitions2 = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2.shorter\n    }),\n    fontSize: {\n      inherit: 'inherit',\n      small: ((_theme$typography = theme.typography) == null || (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || '1.25rem',\n      medium: ((_theme$typography2 = theme.typography) == null || (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || '1.5rem',\n      large: ((_theme$typography3 = theme.typography) == null || (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || '2.1875rem'\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null || (_palette = _palette[ownerState.color]) == null ? void 0 : _palette.main) != null ? _palette$ownerState$c : {\n      action: (_palette2 = (theme.vars || theme).palette) == null || (_palette2 = _palette2.action) == null ? void 0 : _palette2.active,\n      disabled: (_palette3 = (theme.vars || theme).palette) == null || (_palette3 = _palette3.action) == null ? void 0 : _palette3.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n  const {\n      children,\n      className,\n      color = 'inherit',\n      component = 'svg',\n      fontSize = 'medium',\n      htmlColor,\n      inheritViewBox = false,\n      titleAccess,\n      viewBox = '0 0 24 24'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const hasSvgAsChild = /*#__PURE__*/React.isValidElement(children) && children.type === 'svg';\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox,\n    hasSvgAsChild\n  });\n  const more = {};\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, more, other, hasSvgAsChild && children.props, {\n    ownerState: ownerState,\n    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../SvgIcon';\n\n/**\n * Private module reserved for @mui packages.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return /*#__PURE__*/_jsx(SvgIcon, _extends({\n      \"data-testid\": `${displayName}Icon`,\n      ref: ref\n    }, props, {\n      children: path\n    }));\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}"],"names":["getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","theme","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","inProps","ref","themeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx","d","LazyFolderView","lazy","LazyDetailPanel","AppView","path","useRouteMatch","count","setCount","useState","zimbraPrefGroupMailBy","zimbraPrefLocale","useUserSettings","prefs","currentFolderId","useAppSelector","selectCurrentFolder","isMessageView","useMemo","includes","FOLDERS","DRAFTS","TRASH","getFolderIdParts","id","moment","useEffect","setAppContext","React","style","width","height","padding","display","flexDirection","alignItems","Mail","Typography","marginLeft","Container","orientation","mainAlignment","Switch","Route","Suspense","fallback","Spinner","Redirect","strict","from","to","getSvgIconUtilityClass","SvgIconRoot","fontSize","_theme$transitions","_theme$transitions$cr","_theme$transitions2","_theme$typography","_theme$typography$pxT","_theme$typography2","_theme$typography2$px","_theme$typography3","_theme$typography3$px","_palette$ownerState$c","_palette","_palette2","_palette3","userSelect","fill","hasSvgAsChild","undefined","flexShrink","transition","transitions","create","call","duration","shorter","small","pxToRem","medium","large","vars","palette","main","action","active","disabled","SvgIcon","children","htmlColor","inheritViewBox","titleAccess","viewBox","type","instanceFontSize","more","focusable","role","muiName","createSvgIcon","displayName"],"sourceRoot":""}