{"version":3,"file":"mails-edit-view.8d388537.chunk.js","mappings":"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","sources":["webpack://carbonio-mails-ui/./src/assets/animated-loader.tsx","webpack://carbonio-mails-ui/./src/commons/gap-container.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/check-subject-attachment.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/dropzone-attachment.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/attachment-upload-status.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/toggle-smart-link-button.tsx","webpack://carbonio-mails-ui/./src/styled-wrapper.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/attachment-preview.tsx","webpack://carbonio-mails-ui/./src/store/zustand/editor/hooks/updload.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/edit-view-styled-components.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/edit-attachments-block.tsx","webpack://carbonio-mails-ui/./src/helpers/files.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/edit-utils-hooks/use-get-public-url.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/add-attachments-dropdown.tsx","webpack://carbonio-mails-ui/./src/helpers/promises.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/edit-utils-hooks/use-upload-from-files.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/delete-draft.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/edit-view-draft-save-info.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/edit-view-identity-selector.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/date-picker-custom-component.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/send-later-modal.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/edit-view-send-buttons.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/options-dropdown.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/recipients-row.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/recipients-rows.tsx","webpack://carbonio-mails-ui/./src/carbonio-ui-commons/helpers/identities.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/warning-banner.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/size-exceeded-waring-banner.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/subject-row.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/parts/text-editor-container.tsx","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/edit-view.tsx","webpack://carbonio-mails-ui/./src/hooks/use-query-param.ts","webpack://carbonio-mails-ui/./src/views/app/detail-panel/edit/edit-view-controller.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n\tfrom {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst AnimatedLoaderSvg = styled.svg`\n\tanimation: ${rotate} 3s ease-in-out infinite normal forwards;\n`;\n\nexport const AnimatedLoader = (props: React.SVGAttributes<SVGSVGElement>): React.JSX.Element => (\n\t<AnimatedLoaderSvg\n\t\tid=\"e9AcbENh5Z71\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tshapeRendering=\"geometricPrecision\"\n\t\ttextRendering=\"geometricPrecision\"\n\t\tfill=\"currentColor\"\n\t\t{...props}\n\t>\n\t\t<g id=\"e9AcbENh5Z72\">\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z73\"\n\t\t\t\td=\"M12,2C11.734800,2,11.480400,2.105360,11.292900,2.292890C11.105400,2.480430,11,2.734780,11,3L11,5C11,5.265220,11.105400,5.519570,11.292900,5.707110C11.480400,5.894640,11.734800,6,12,6C12.265200,6,12.519600,5.894640,12.707100,5.707110C12.894600,5.519570,13,5.265220,13,5L13,3C13,2.734780,12.894600,2.480430,12.707100,2.292890C12.519600,2.105360,12.265200,2,12,2L12,2Z\"\n\t\t\t\tfill=\"rgb(65,65,65)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z74\"\n\t\t\t\td=\"M21,11L19,11C18.734800,11,18.480400,11.105400,18.292900,11.292900C18.105400,11.480400,18,11.734800,18,12C18,12.265200,18.105400,12.519600,18.292900,12.707100C18.480400,12.894600,18.734800,13,19,13L21,13C21.265200,13,21.519600,12.894600,21.707100,12.707100C21.894600,12.519600,22,12.265200,22,12C22,11.734800,21.894600,11.480400,21.707100,11.292900C21.519600,11.105400,21.265200,11,21,11Z\"\n\t\t\t\tfill=\"rgb(65,65,65)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z75\"\n\t\t\t\td=\"M6,12C6,11.734800,5.894640,11.480400,5.707110,11.292900C5.519570,11.105400,5.265220,11,5,11L3,11C2.734780,11,2.480430,11.105400,2.292890,11.292900C2.105360,11.480400,2,11.734800,2,12C2,12.265200,2.105360,12.519600,2.292890,12.707100C2.480430,12.894600,2.734780,13,3,13L5,13C5.265220,13,5.519570,12.894600,5.707110,12.707100C5.894640,12.519600,6,12.265200,6,12Z\"\n\t\t\t\ttransform=\"matrix(1 0 0 1 0.26234975000000 0)\"\n\t\t\t\tfill=\"rgb(65,65,65)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z76\"\n\t\t\t\td=\"M6.220230,4.999950C6.025300,4.815620,5.765120,4.716280,5.496950,4.723780C5.228770,4.731290,4.974560,4.845010,4.790230,5.039950C4.605910,5.234880,4.506570,5.495050,4.514070,5.763230C4.521570,6.031410,4.635300,6.285620,4.830230,6.469950L6.270230,7.859950C6.366870,7.953260,6.481310,8.026140,6.606730,8.074250C6.732150,8.122360,6.865980,8.144700,7.000230,8.139950C7.134940,8.139430,7.268150,8.111710,7.391870,8.058440C7.515600,8.005170,7.627280,7.927450,7.720230,7.829950C7.906480,7.642580,8.011020,7.389130,8.011020,7.124950C8.011020,6.860760,7.906480,6.607310,7.720230,6.419950L6.220230,4.999950Z\"\n\t\t\t\ttransform=\"matrix(1 0 0 1 0.02050050000000 0)\"\n\t\t\t\tfill=\"rgb(43,115,210)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z77\"\n\t\t\t\td=\"M16.999600,8.139990C17.257100,8.138970,17.504200,8.038670,17.689600,7.859990L19.129600,6.469990C19.305300,6.286440,19.404500,6.042910,19.407100,5.788860C19.409700,5.534810,19.315600,5.289290,19.143700,5.102160C18.971900,4.915030,18.735200,4.800340,18.481900,4.781360C18.228500,4.762380,17.977400,4.840550,17.779600,4.999990L16.339600,6.419990C16.153400,6.607350,16.048800,6.860810,16.048800,7.124990C16.048800,7.389180,16.153400,7.642630,16.339600,7.829990C16.512800,8.012710,16.748400,8.123410,16.999600,8.139990Z\"\n\t\t\t\tfill=\"rgb(65,65,65)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z78\"\n\t\t\t\td=\"M12,18C11.734800,18,11.480400,18.105400,11.292900,18.292900C11.105400,18.480400,11,18.734800,11,19L11,21C11,21.265200,11.105400,21.519600,11.292900,21.707100C11.480400,21.894600,11.734800,22,12,22C12.265200,22,12.519600,21.894600,12.707100,21.707100C12.894600,21.519600,13,21.265200,13,21L13,19C13,18.734800,12.894600,18.480400,12.707100,18.292900C12.519600,18.105400,12.265200,18,12,18Z\"\n\t\t\t\tfill=\"rgb(65,65,65)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z79\"\n\t\t\t\td=\"M17.729900,16.140000C17.538900,15.955600,17.282600,15.854700,17.017200,15.859400C16.751800,15.864100,16.499200,15.974000,16.314900,16.165000C16.130600,16.355900,16.029600,16.612300,16.034300,16.877600C16.039000,17.143000,16.148900,17.395600,16.339900,17.580000L17.779900,19C17.965300,19.178600,18.212400,19.278900,18.469900,19.280000C18.603900,19.280700,18.736700,19.254600,18.860300,19.203100C18.984000,19.151500,19.096100,19.075700,19.189900,18.980000C19.283600,18.887000,19.358000,18.776400,19.408800,18.654500C19.459600,18.532700,19.485700,18.402000,19.485700,18.270000C19.485700,18.138000,19.459600,18.007200,19.408800,17.885400C19.358000,17.763500,19.283600,17.652900,19.189900,17.560000L17.729900,16.140000Z\"\n\t\t\t\ttransform=\"matrix(1 0 0 1 -0.03194850000000 0)\"\n\t\t\t\tfill=\"rgb(65,65,65)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tid=\"e9AcbENh5Z710\"\n\t\t\t\td=\"M6.269980,16.140000L4.829980,17.530000C4.736250,17.623000,4.661860,17.733600,4.611090,17.855400C4.560320,17.977300,4.534180,18.108000,4.534180,18.240000C4.534180,18.372000,4.560320,18.502700,4.611090,18.624600C4.661860,18.746400,4.736250,18.857000,4.829980,18.950000C4.923770,19.045700,5.035840,19.121600,5.159520,19.173100C5.283210,19.224600,5.415990,19.250800,5.549980,19.250000C5.796490,19.252100,6.035090,19.163100,6.219980,19L7.659980,17.610000C7.850930,17.425700,7.960850,17.173000,7.965530,16.907700C7.970220,16.642300,7.869300,16.385900,7.684980,16.195000C7.500650,16.004000,7.248020,15.894100,6.982660,15.889400C6.717290,15.884800,6.460930,15.985700,6.269980,16.170000L6.269980,16.140000Z\"\n\t\t\t\tfill=\"rgb(65,65,65)\"\n\t\t\t\tstroke=\"none\"\n\t\t\t\tstrokeWidth=\"1\"\n\t\t\t/>\n\t\t</g>\n\t</AnimatedLoaderSvg>\n);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport {\n\tContainer,\n\tContainerProps,\n\tgetPadding,\n\tRow,\n\tRowProps\n} from '@zextras/carbonio-design-system';\nimport styled, { SimpleInterpolation } from 'styled-components';\n\ntype GapContainerProps = ContainerProps & { gap?: ContainerProps['padding'] };\n\ntype GapRowProps = RowProps & { gap?: RowProps['padding'] };\n\nconst StyledGapContainer = styled(Container)<GapContainerProps>`\n\tgap: ${({ theme, gap }): SimpleInterpolation => gap && getPadding(gap, theme)};\n`;\n\nconst StyledGapRow = styled(Row)<GapRowProps>`\n\tgap: ${({ theme, gap }): SimpleInterpolation => gap && getPadding(gap, theme)};\n`;\n\nconst GapContainer = React.forwardRef<HTMLDivElement, GapContainerProps>(function GapContainerFn(\n\t{ children, ...rest },\n\tref\n) {\n\treturn (\n\t\t<StyledGapContainer ref={ref} {...rest}>\n\t\t\t{children}\n\t\t</StyledGapContainer>\n\t);\n});\n\nconst GapRow = React.forwardRef<HTMLDivElement, GapRowProps>(function GapRowFn(\n\t{ children, ...rest },\n\tref\n) {\n\treturn (\n\t\t<StyledGapRow ref={ref} {...rest}>\n\t\t\t{children}\n\t\t</StyledGapRow>\n\t);\n});\n\nexport { GapContainer, GapRow, GapContainerProps, GapRowProps };\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { CreateModalFn, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nimport { LineType } from '../../../../commons/utils';\nimport { StoreProvider } from '../../../../store/redux';\nimport { getEditor } from '../../../../store/zustand/editor';\nimport type { MailsEditorV2 } from '../../../../types';\n\nexport const attachmentWords: Array<string> = [\n\tt('messages.modal.send_anyway.attach', 'attach'),\n\tt('messages.modal.send_anyway.attachment', 'attachment'),\n\tt('messages.modal.send_anyway.attachments', 'attachments'),\n\tt('messages.modal.send_anyway.attached', 'attached'),\n\tt('messages.modal.send_anyway.attaching', 'attaching'),\n\tt('messages.modal.send_anyway.enclose', 'enclose'),\n\tt('messages.modal.send_anyway.enclosed', 'enclosed'),\n\tt('messages.modal.send_anyway.enclosing', 'enclosing')\n];\n\nfunction getSubjectOrAttachmentError({\n\tattachmentIsExpected,\n\thasAttachments,\n\tsubject\n}: {\n\tattachmentIsExpected: boolean;\n\thasAttachments: boolean;\n\tsubject: MailsEditorV2['subject'];\n}): string {\n\tconst attachmentIsMissing = attachmentIsExpected && !hasAttachments;\n\tif (attachmentIsMissing && !subject) {\n\t\treturn t(\n\t\t\t'messages.modal.send_anyway.no_subject_no_attachments',\n\t\t\t'Email subject is empty and you didn’t attach any files.'\n\t\t);\n\t}\n\tif (!subject) {\n\t\treturn t('messages.modal.send_anyway.subject', 'Subject is missing');\n\t}\n\tif (attachmentIsMissing) {\n\t\treturn t('messages.modal.send_anyway.no_attachments', 'You didn’t attach any files.');\n\t}\n\treturn '';\n}\n\nexport function checkSubjectAndAttachment({\n\teditorId,\n\thasAttachments,\n\tonConfirmCallback,\n\tcreateModal\n}: {\n\teditorId: MailsEditorV2['id'];\n\thasAttachments: boolean;\n\tonConfirmCallback: () => void | Promise<void>;\n\tcreateModal: CreateModalFn;\n}): void {\n\tconst editor = getEditor({ id: editorId });\n\tif (!editor) {\n\t\treturn;\n\t}\n\tconst { text } = editor;\n\tconst { subject } = editor;\n\tconst attachmentIsExpected = attachmentWords.some((el) => {\n\t\tconst [msgContent] = text.richText\n\t\t\t? text.richText.split(LineType.HTML_SEP_ID)\n\t\t\t: text.plainText.split(LineType.PLAINTEXT_SEP);\n\t\treturn msgContent.toLowerCase().includes(el);\n\t});\n\tif ((attachmentIsExpected && !hasAttachments) || !subject) {\n\t\tconst closeModal = createModal({\n\t\t\ttitle: t('header.attention', 'Attention'),\n\t\t\tconfirmLabel: t('action.ok', 'Ok'),\n\t\t\tdismissLabel: t('label.cancel', 'Cancel'),\n\t\t\tshowCloseIcon: true,\n\t\t\tonConfirm: () => {\n\t\t\t\tonConfirmCallback();\n\t\t\t\tcloseModal();\n\t\t\t},\n\t\t\tonClose: () => {\n\t\t\t\tcloseModal();\n\t\t\t},\n\t\t\tonSecondaryAction: () => {\n\t\t\t\tcloseModal();\n\t\t\t},\n\t\t\tchildren: (\n\t\t\t\t<StoreProvider>\n\t\t\t\t\t<Text overflow=\"break-word\" style={{ paddingTop: '1rem' }}>\n\t\t\t\t\t\t{getSubjectOrAttachmentError({ attachmentIsExpected, hasAttachments, subject })}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text overflow=\"break-word\" style={{ paddingBottom: '1rem' }}>\n\t\t\t\t\t\t{t('messages.modal.send_anyway.second', 'Do you still want to send the email?')}\n\t\t\t\t\t</Text>\n\t\t\t\t</StoreProvider>\n\t\t\t)\n\t\t});\n\t} else {\n\t\tonConfirmCallback();\n\t}\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC } from 'react';\nimport { Container, Icon, Text, Padding } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport styled from 'styled-components';\n\nconst BackDropLayout = styled(Container)`\n\twidth: 100%;\n\tposition: absolute;\n\theight: 100%;\n\tz-index: 2;\n\ttop: 0;\n\tleft: 0;\n`;\n\nconst DropBackground = styled(Container)`\n\twidth: calc(100% - 0.625rem);\n\tbackground: ${(props): string => props.theme.palette.primary.regular}b9;\n\theight: calc(100% - 0.625rem);\n\tborder-radius: 0.25rem;\n\tleft: 0.3125rem;\n\tpointer-events: none;\n`;\nconst BackDropLayoutInnerBox = styled(Container)`\n\tbackground: ${(props): string => props.theme.palette.gray6.regular};\n\tborder-radius: 0.625rem;\n\tmin-height: 11.25rem;\n\tmax-width: 23.75rem;\n\tmax-height: 13.125rem;\n`;\n\nconst BackDropLayoutContentBox = styled(Container)`\n\tborder-style: dashed;\n\tborder-width: 0.125rem;\n\tborder-radius: 0.3125rem;\n\tborder-color: ${(props): string => props.theme.palette.primary.regular};\n\tbox-sizing: border-box;\n\tpadding: 2.5rem;\n`;\n\nconst DropBoxIconGroup = styled(Container)`\n\tmargin-bottom: 0.5rem;\n\theight: 2.5rem;\n`;\n\nconst DetailText = styled(Text)`\n\ttext-align: center;\n`;\ntype DropZoneAttachmentType = {\n\tonDragOverEvent: (arg: any) => void;\n\tonDropEvent: (arg: any) => void;\n\tonDragLeaveEvent: (arg: any) => void;\n};\nconst DropZoneAttachment: FC<DropZoneAttachmentType> = ({\n\tonDragOverEvent,\n\tonDropEvent,\n\tonDragLeaveEvent\n}) => (\n\t<>\n\t\t<BackDropLayout\n\t\t\tonDragOver={onDragOverEvent}\n\t\t\tonDrop={onDropEvent}\n\t\t\tonDragLeave={onDragLeaveEvent}\n\t\t\tborderRadius=\"half\"\n\t\t>\n\t\t\t<DropBackground>\n\t\t\t\t<BackDropLayoutInnerBox>\n\t\t\t\t\t<Padding all=\"medium\">\n\t\t\t\t\t\t<BackDropLayoutContentBox>\n\t\t\t\t\t\t\t<Container mainAlignment=\"center\">\n\t\t\t\t\t\t\t\t<DropBoxIconGroup mainAlignment=\"center\" orientation=\"horizontal\">\n\t\t\t\t\t\t\t\t\t<Padding right=\"small\" left=\"small\">\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\ticon=\"ImageOutline\"\n\t\t\t\t\t\t\t\t\t\t\theight=\"2.1875rem\"\n\t\t\t\t\t\t\t\t\t\t\twidth=\"2.1875rem\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t<Padding right=\"small\" left=\"small\">\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\ticon=\"FileAddOutline\"\n\t\t\t\t\t\t\t\t\t\t\theight=\"2.1875rem\"\n\t\t\t\t\t\t\t\t\t\t\twidth=\"2.1875rem\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t<Padding right=\"small\" left=\"small\">\n\t\t\t\t\t\t\t\t\t\t<Icon icon=\"FilmOutline\" height=\"2.1875rem\" width=\"2.1875rem\" color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t</DropBoxIconGroup>\n\t\t\t\t\t\t\t\t<Container mainAlignment=\"center\" height=\"auto\">\n\t\t\t\t\t\t\t\t\t<Text color=\"primary\" weight=\"bold\">\n\t\t\t\t\t\t\t\t\t\t{t('composer.attachment.drag_and_drop.title', 'Drag&Drop Mode')}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<Padding top=\"small\" />\n\t\t\t\t\t\t\t\t\t<DetailText size=\"medium\" weight=\"regular\" color=\"primary\" overflow=\"break-word\">\n\t\t\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t\t\t'composer.attachment.drag_and_drop.content',\n\t\t\t\t\t\t\t\t\t\t\t'Drop here your attachments to quickly add them to this e-mail'\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</DetailText>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</BackDropLayoutContentBox>\n\t\t\t\t\t</Padding>\n\t\t\t\t</BackDropLayoutInnerBox>\n\t\t\t</DropBackground>\n\t\t</BackDropLayout>\n\t</>\n);\n\nexport default DropZoneAttachment;\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, useEffect, useState } from 'react';\n\nimport { Container, Icon, IconButton, Padding, Row, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport styled from 'styled-components';\n\nimport { TIMEOUTS } from '../../../../constants';\nimport { AttachmentUploadProcessStatus } from '../../../../types';\n\nexport const UploadingRow = styled(Row)`\n\tdisplay: flex;\n`;\n\nexport const AttachmentUploadStatus: FC<{\n\tuploadStatus: AttachmentUploadProcessStatus;\n\tcancelUpload: () => void;\n}> = ({ uploadStatus, cancelUpload }) => {\n\tconst [showCompleted, setShowCompleted] = useState<boolean>(false);\n\n\t/**\n\t * Handle the visibility of the temporary notification for a completed upload\n\t */\n\tuseEffect(() => {\n\t\tlet timer: ReturnType<typeof setTimeout> | null = null;\n\t\tif (uploadStatus.status === 'completed') {\n\t\t\tsetShowCompleted(true);\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\tsetShowCompleted(false);\n\t\t\t}, TIMEOUTS.COMPLETED_UPLOAD_NOTIFICATION_VISIBILITY);\n\t\t}\n\n\t\treturn function cleanup() {\n\t\t\ttimer && clearTimeout(timer);\n\t\t};\n\t}, [uploadStatus.status]);\n\n\treturn (\n\t\t<UploadingRow padding={{ horizontal: 'small', vertical: 'small' }} crossAlignment={'center'}>\n\t\t\t{uploadStatus.status === 'running' && (\n\t\t\t\t<>\n\t\t\t\t\t<Text color=\"gray1\" size=\"small\">\n\t\t\t\t\t\t{uploadStatus.progress}%\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Padding right=\"extrasmall\" />\n\n\t\t\t\t\t<Icon icon={'AnimatedLoader'} color={'gray1'} size=\"large\" />\n\t\t\t\t\t<Padding right=\"extrasmall\" />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon=\"CloseCircleOutline\"\n\t\t\t\t\t\tcustomSize={{ iconSize: 'large', paddingSize: 0 }}\n\t\t\t\t\t\tonClick={cancelUpload}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{uploadStatus.status === 'aborted' && (\n\t\t\t\t<Container mainAlignment={'center'} crossAlignment={'flex-end'} height={'fit'}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Icon icon={'AlertCircle'} color={'error'} size=\"medium\" />\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Text size={'small'} color={'error'}>\n\t\t\t\t\t\t\t{t('label.upload_failed', 'Upload failed')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t\t{uploadStatus.status === 'completed' && showCompleted && (\n\t\t\t\t<Row mainAlignment={'center'} crossAlignment={'flex-end'}>\n\t\t\t\t\t<Text size={'small'}>100%</Text>\n\t\t\t\t\t<Icon icon={'CheckmarkCircle2'} color={'success'} size=\"medium\" />\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</UploadingRow>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { ReactElement, useCallback } from 'react';\n\nimport { IconButton, Tooltip } from '@zextras/carbonio-design-system';\nimport { getIntegratedFunction, t } from '@zextras/carbonio-shell-ui';\n\nimport {\n\tgetEditor,\n\tuseEditorAttachments,\n\tuseEditorDraftSave\n} from '../../../../../store/zustand/editor';\nimport { isSavedAttachment } from '../../../../../store/zustand/editor/editor-utils';\nimport { MailsEditorV2, SavedAttachment, UnsavedAttachment } from '../../../../../types';\n\nexport const ToggleSmartLinkButton = ({\n\teditorId,\n\tattachment\n}: {\n\teditorId: MailsEditorV2['id'];\n\tattachment: UnsavedAttachment | SavedAttachment;\n}): ReactElement => {\n\tconst [_, isFilesUiAvailable] = getIntegratedFunction('select-nodes');\n\tconst requiresSmartLinkConversion =\n\t\tisSavedAttachment(attachment) && attachment?.requiresSmartLinkConversion;\n\n\tconst { toggleSmartLink } = useEditorAttachments(editorId);\n\n\tconst { saveDraft } = useEditorDraftSave(editorId);\n\n\tconst editor = getEditor({ id: editorId });\n\n\tconst toggleSmartLinkAction = useCallback(() => {\n\t\tconst draftId = editor?.did;\n\t\tif (isSavedAttachment(attachment) && draftId) {\n\t\t\tconst { partName } = attachment;\n\t\t\ttoggleSmartLink(partName);\n\t\t\tsaveDraft();\n\t\t}\n\t}, [attachment, editor?.did, saveDraft, toggleSmartLink]);\n\n\treturn isFilesUiAvailable && isSavedAttachment(attachment) ? (\n\t\t<Tooltip\n\t\t\tlabel={\n\t\t\t\trequiresSmartLinkConversion\n\t\t\t\t\t? t('label.convert_back_to_attachment', 'Convert back to attachment')\n\t\t\t\t\t: t('label.convert_to_smart_link', 'Convert to smart link')\n\t\t\t}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\tsize=\"medium\"\n\t\t\t\ticon={requiresSmartLinkConversion ? 'Refresh' : 'Link2Outline'}\n\t\t\t\tonClick={toggleSmartLinkAction}\n\t\t\t\tstyle={requiresSmartLinkConversion ? { transform: 'scale(-1, 1)' } : {}}\n\t\t\t/>\n\t\t</Tooltip>\n\t) : (\n\t\t<></>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { ThemeProvider } from '@zextras/carbonio-design-system';\nimport type { Theme as DSTheme } from '@zextras/carbonio-design-system';\nimport { createGlobalStyle, DefaultTheme } from 'styled-components';\n\nimport { AnimatedLoader } from './assets/animated-loader';\n\nconst themeOverride = (theme: DSTheme): DefaultTheme => ({\n\t...theme,\n\ticons: {\n\t\t...theme.icons,\n\t\tAnimatedLoader\n\t} as DefaultTheme['icons'] // FIXME check how to remove this cast\n});\n\nconst GlobalStyle = createGlobalStyle`\n  .disable-hover, .disable-hover * {\n\t  &:hover {\n\t\t  background-color: transparent;\n\t  }\n  }\n`;\n\nconst StyledWrapper: React.FC = ({ children }) => (\n\t<ThemeProvider loadDefaultFont={false} extension={themeOverride}>\n\t\t<GlobalStyle />\n\t\t{children}\n\t</ThemeProvider>\n);\n\nexport default StyledWrapper;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, SyntheticEvent, useCallback, useMemo, useRef } from 'react';\n\nimport {\n\tContainer,\n\tgetColor,\n\tIcon,\n\tIconButton,\n\tPadding,\n\tRow,\n\tText,\n\tTooltip,\n\tuseTheme\n} from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport styled, { SimpleInterpolation } from 'styled-components';\n\nimport { AttachmentUploadStatus } from './attachment-upload-status';\nimport { ToggleSmartLinkButton } from './parts/toggle-smart-link-button';\nimport {\n\tcomposeAttachmentDownloadUrl,\n\tgetAttachmentExtension,\n\tgetSizeDescription,\n\tuseAttachmentIconColor\n} from '../../../../helpers/attachments';\nimport {\n\tgetEditor,\n\tuseEditorAttachments,\n\tuseEditorSubject\n} from '../../../../store/zustand/editor';\nimport {\n\tisAttachmentUploading,\n\tisSavedAttachment,\n\tisUnsavedAttachment\n} from '../../../../store/zustand/editor/editor-utils';\nimport { useEditorUploadProcess } from '../../../../store/zustand/editor/hooks/updload';\nimport StyledWrapper from '../../../../styled-wrapper';\nimport { MailsEditorV2, SavedAttachment, UnsavedAttachment } from '../../../../types';\nimport { getAttachmentsLink } from '../preview/utils';\n\nconst AttachmentHoverBarContainer = styled(Container)`\n\tdisplay: none;\n`;\n\nconst AttachmentContainer = styled(Container).attrs(\n\t(props: { hoverBarDisabled: boolean; requiresSmartLinkConversion: boolean }) => ({\n\t\thoverBarDisabled: props.hoverBarDisabled,\n\t\trequiresSmartLinkConversion: props.requiresSmartLinkConversion\n\t})\n)`\n\tborder-bottom: ${({ requiresSmartLinkConversion, theme, background }): string => {\n\t\tconst color = getColor(`${background}.regular`, theme);\n\t\treturn requiresSmartLinkConversion\n\t\t\t? `1px solid ${theme.palette.primary.regular}`\n\t\t\t: `1px solid ${color}`;\n\t}};\n\tborder-radius: 0.125rem;\n\twidth: calc(50% - 0.25rem);\n\ttransition: 0.2s ease-out;\n\tmargin-bottom: ${({ theme }): string => theme.sizes.padding.small};\n\t&:hover {\n\t\tborder-bottom: ${({ theme, background }): string => {\n\t\t\tconst color = getColor(`${background}.hover`, theme);\n\t\t\treturn `1px solid ${color}`;\n\t\t}};\n\t\tbackground-color: ${({ theme, background }): SimpleInterpolation =>\n\t\t\tbackground && getColor(`${background}.hover`, theme)};\n\t\t& ${AttachmentHoverBarContainer} {\n\t\t\tdisplay: ${(props): string => (props.hoverBarDisabled ? 'none' : 'flex')};\n\t\t}\n\t}\n\t&:focus {\n\t\tborder-bottom: ${({ theme, background }): string => {\n\t\t\tconst color = getColor(`${background}.focus`, theme);\n\t\t\treturn `1px solid ${color}`;\n\t\t}};\n\t\tbackground-color: ${({ theme, background }): SimpleInterpolation =>\n\t\t\tbackground && getColor(`${background}.focus`, theme)};\n\t}\n\tcursor: pointer;\n`;\n\nconst AttachmentLink = styled.a`\n\tmargin-bottom: ${({ theme }): string => theme.sizes.padding.small};\n\tposition: relative;\n\ttext-decoration: none;\n`;\n\nconst AttachmentExtension = styled(Text)<{\n\tbackground: string;\n}>`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 2rem;\n\theight: 2rem;\n\tborder-radius: ${({ theme }): string => theme.borderRadius};\n\tbackground-color: ${({ background }): string => background};\n\tcolor: ${({ theme }): string => theme.palette.gray6.regular};\n\tfont-size: calc(${({ theme }): string => theme.sizes.font.small} - 0.125rem);\n\ttext-transform: uppercase;\n\tmargin-right: ${({ theme }): string => theme.sizes.padding.small};\n`;\n\ntype AttachmentCardProps = {\n\teditorId: MailsEditorV2['id'];\n\tattachment: UnsavedAttachment | SavedAttachment;\n};\n\nexport const AttachmentPreview: FC<AttachmentCardProps> = ({ editorId, attachment }) => {\n\tconst extension = getAttachmentExtension(attachment).value;\n\n\tconst requiresSmartLinkConversion =\n\t\tisSavedAttachment(attachment) && attachment?.requiresSmartLinkConversion;\n\n\tconst attachmentExtensionContent = useMemo(\n\t\t() =>\n\t\t\trequiresSmartLinkConversion ? (\n\t\t\t\t<Icon icon=\"Link2Outline\" size=\"large\" color=\"primary\" />\n\t\t\t) : (\n\t\t\t\textension\n\t\t\t),\n\t\t[extension, requiresSmartLinkConversion]\n\t);\n\n\tconst sizeLabel = getSizeDescription(attachment.size);\n\tconst inputRef = useRef<HTMLAnchorElement>(null);\n\tconst inputRef2 = useRef<HTMLAnchorElement>(null);\n\tconst editor = getEditor({ id: editorId });\n\tif (!editor) {\n\t\tthrow new Error('Cannot find the given editor');\n\t}\n\tconst uploadProcess = useEditorUploadProcess(\n\t\teditorId,\n\t\tisUnsavedAttachment(attachment) ? (attachment.uploadId as string) : ''\n\t);\n\tconst { removeUnsavedAttachment, removeSavedAttachment } = useEditorAttachments(editorId);\n\tconst { subject } = useEditorSubject(editorId);\n\n\tconst removeAttachment = useCallback(() => {\n\t\tisUnsavedAttachment(attachment) && removeUnsavedAttachment(attachment.uploadId as string);\n\t\tisSavedAttachment(attachment) && removeSavedAttachment(attachment.partName);\n\t}, [attachment, removeSavedAttachment, removeUnsavedAttachment]);\n\n\tconst attachItemColor = useAttachmentIconColor(attachment);\n\tconst attachmentExtensionColor = useMemo(\n\t\t() => (requiresSmartLinkConversion ? 'transparent' : attachItemColor),\n\t\t[attachItemColor, requiresSmartLinkConversion]\n\t);\n\n\tconst isUploading = useMemo<boolean>(\n\t\t() => isUnsavedAttachment(attachment) && isAttachmentUploading(attachment),\n\t\t[attachment]\n\t);\n\n\tconst link = isSavedAttachment(attachment)\n\t\t? getAttachmentsLink({\n\t\t\t\tmessageId: editor?.did ?? '',\n\t\t\t\tmessageSubject: subject,\n\t\t\t\tattachments: [attachment.partName],\n\t\t\t\tattachmentType: attachment.contentType\n\t\t\t})\n\t\t: null;\n\n\tconst cancelUpload = useCallback(() => {\n\t\tif (uploadProcess?.status.status !== 'running') {\n\t\t\treturn;\n\t\t}\n\t\tuploadProcess && uploadProcess.cancel();\n\t}, [uploadProcess]);\n\n\tconst isDeletable = useMemo(\n\t\t() =>\n\t\t\tisSavedAttachment(attachment) ||\n\t\t\t(isUnsavedAttachment(attachment) && !isAttachmentUploading(attachment)),\n\t\t[attachment]\n\t);\n\n\tconst theme = useTheme();\n\n\tconst backgroundColor = useMemo(() => {\n\t\tif (requiresSmartLinkConversion) {\n\t\t\treturn theme.palette.infoBanner.regular;\n\t\t}\n\t\treturn 'gray3';\n\t}, [requiresSmartLinkConversion, theme.palette.infoBanner.regular]);\n\n\treturn (\n\t\t<StyledWrapper>\n\t\t\t<AttachmentContainer\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tcrossAlignment={'center'}\n\t\t\t\theight=\"fit\"\n\t\t\t\tbackground={backgroundColor}\n\t\t\t\tdata-testid={`attachment-container-${attachment.filename}`}\n\t\t\t\thoverBarDisabled={isUploading}\n\t\t\t\trequiresSmartLinkConversion={requiresSmartLinkConversion}\n\t\t\t>\n\t\t\t\t<Tooltip label={t('action.preview', 'Preview')}>\n\t\t\t\t\t<Row\n\t\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tonClick={(ev: SyntheticEvent): void => {\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\tif (inputRef2.current) {\n\t\t\t\t\t\t\t\tinputRef2.current.click();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t\t>\n\t\t\t\t\t\t<AttachmentExtension background={attachmentExtensionColor}>\n\t\t\t\t\t\t\t{attachmentExtensionContent}\n\t\t\t\t\t\t</AttachmentExtension>\n\t\t\t\t\t\t<Row orientation=\"vertical\" crossAlignment=\"flex-start\" takeAvailableSpace>\n\t\t\t\t\t\t\t{requiresSmartLinkConversion && <Padding top=\"small\" />}\n\t\t\t\t\t\t\t<Padding style={{ width: '100%' }} bottom=\"extrasmall\">\n\t\t\t\t\t\t\t\t<Text size={'small'}>\n\t\t\t\t\t\t\t\t\t{attachment.filename ||\n\t\t\t\t\t\t\t\t\t\tt('label.attachement_unknown', {\n\t\t\t\t\t\t\t\t\t\t\tmimeType: attachment?.contentType,\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue: 'Unknown <{{mimeType}}>'\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t{!requiresSmartLinkConversion ? (\n\t\t\t\t\t\t\t\t<Text color=\"gray1\" size={'small'}>\n\t\t\t\t\t\t\t\t\t{sizeLabel}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Padding top=\"small\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Row>\n\t\t\t\t</Tooltip>\n\t\t\t\t{uploadProcess?.status && (\n\t\t\t\t\t<AttachmentUploadStatus\n\t\t\t\t\t\tdata-testid={'attachmentuploadstatus-container'}\n\t\t\t\t\t\tuploadStatus={uploadProcess.status}\n\t\t\t\t\t\tcancelUpload={cancelUpload}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Row orientation=\"horizontal\" crossAlignment=\"center\">\n\t\t\t\t\t<AttachmentHoverBarContainer>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<ToggleSmartLinkButton editorId={editorId} attachment={attachment} />\n\t\t\t\t\t\t\t{isDeletable && (\n\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t<Tooltip label={t('label.delete', 'Delete')}>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\t\ticon=\"DeletePermanentlyOutline\"\n\t\t\t\t\t\t\t\t\t\t\tdata-testid={'btn-delete-attachment'}\n\t\t\t\t\t\t\t\t\t\t\tonClick={removeAttachment}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</AttachmentHoverBarContainer>\n\t\t\t\t</Row>\n\t\t\t\t{isSavedAttachment(attachment) && link && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<AttachmentLink\n\t\t\t\t\t\t\trel=\"noopener\"\n\t\t\t\t\t\t\tref={inputRef2}\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\thref={composeAttachmentDownloadUrl(attachment)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AttachmentLink ref={inputRef} rel=\"noopener\" target=\"_blank\" href={link} />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</AttachmentContainer>\n\t\t</StyledWrapper>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useMemo } from 'react';\n\nimport { computeAndUpdateEditorStatus } from './commons';\nimport { useSaveDraftFromEditor } from './save-draft';\nimport { AttachmentUploadProcessStatus, MailsEditorV2 } from '../../../../types';\nimport { useEditorsStore } from '../store';\nimport { getUnsavedAttachmentIndex } from '../store-utils';\n\nexport const useEditorUploadProcess = (\n\teditorId: MailsEditorV2['id'],\n\tuploadId: string\n): { status: AttachmentUploadProcessStatus; cancel: () => void } | null => {\n\tconst { debouncedSaveDraft } = useSaveDraftFromEditor();\n\tconst attachmentStateInfo = useEditorsStore((state) => {\n\t\tconst unsavedAttachmentIndex = getUnsavedAttachmentIndex(state, editorId, uploadId);\n\t\tif (unsavedAttachmentIndex === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tstatus: state.editors[editorId].unsavedAttachments[unsavedAttachmentIndex].uploadStatus,\n\t\t\tabortController:\n\t\t\t\tstate.editors[editorId].unsavedAttachments[unsavedAttachmentIndex].uploadAbortController\n\t\t};\n\t});\n\n\treturn useMemo(() => {\n\t\tif (\n\t\t\t!attachmentStateInfo ||\n\t\t\t!attachmentStateInfo.status ||\n\t\t\t!attachmentStateInfo.abortController\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tstatus: attachmentStateInfo.status,\n\t\t\tcancel: (): void => {\n\t\t\t\tattachmentStateInfo.abortController?.abort();\n\t\t\t\tuseEditorsStore.getState().removeUnsavedAttachment(editorId, uploadId);\n\t\t\t\tcomputeAndUpdateEditorStatus(editorId);\n\t\t\t\tdebouncedSaveDraft(editorId);\n\t\t\t}\n\t\t};\n\t}, [attachmentStateInfo, editorId, debouncedSaveDraft, uploadId]);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { Container, IconCheckbox, Row } from '@zextras/carbonio-design-system';\nimport styled, { DefaultTheme } from 'styled-components';\n\nexport const FileInput = styled.input`\n\tdisplay: none;\n`;\n\nexport const Divider = styled.div`\n\twidth: 100%;\n\tmin-height: 0.0625rem;\n\tmax-height: 0.0625rem;\n\tborder-bottom: 0.0625rem solid ${(props): string => props.theme.palette.gray2.regular};\n`;\n\nexport const ResizedIconCheckbox = styled(IconCheckbox)`\n\t[class^='Padding__Comp'] {\n\t\tpadding: 0.375rem;\n\t\tsvg {\n\t\t\theight: 1.25rem;\n\t\t\twidth: 1.25rem;\n\t\t}\n\t}\n`;\n\nexport const TextArea = styled.textarea`\n\tbox-sizing: border-box;\n\tmin-height: 15.625rem;\n\n\tflex-grow: 1;\n\twidth: 100%;\n\tborder: none;\n\tresize: vertical;\n\t& :focus,\n\t:active {\n\t\tbox-shadow: none;\n\t\tborder: none;\n\t\toutline: none;\n\t}\n`;\n\nexport const EditorWrapper = styled.div`\n\twidth: 100%;\n\theight: auto;\n\tposition: relative;\n\n\t> .tox:not(.tox-tinymce-inline) {\n\t\twidth: 100%;\n\t\tborder: none;\n\t\t.tox-editor-container {\n\t\t\tmin-height: 18.75rem;\n\t\t}\n\t\t.tox-editor-header {\n\t\t\tpadding: ${(props): string => props.theme.sizes.padding.large};\n\t\t\tbackground-color: ${(props): string => props.theme.palette.gray6.regular};\n\t\t}\n\t\t.tox-toolbar__primary {\n\t\t\tbackground: none;\n\t\t\tbackground-color: ${(props): string => props.theme.palette.gray4.regular};\n\t\t\tborder-radius: ${(props): string => props.theme.borderRadius};\n\t\t}\n\t}\n\t> .tox {\n\t\t.tox-edit-area {\n\t\t\tmargin-left: calc(-1rem + ${(props): string => props.theme.sizes.padding.large});\n\t\t\toverflow-y: auto;\n\t\t\tmax-height: 100%;\n\t\t}\n\t\t.tox-edit-area__iframe {\n\t\t\theight: 100%;\n\t\t\tpadding-bottom: ${(props): string => props.theme.sizes.padding.large};\n\t\t}\n\t\t&.tox-tinymce {\n\t\t\theight: 100% !important;\n\t\t}\n\t}\n`;\n\nexport const BannerContainer = styled(Container).attrs(() => ({\n\tbottomBorderColor: undefined\n}))<{ $bottomBorderColor: keyof DefaultTheme['palette'] }>`\n\tborder-bottom: 0.0625rem solid\n\t\t${({ theme, $bottomBorderColor }): string => theme.palette[$bottomBorderColor].regular};\n\tborder-top-right-radius: 0.25rem;\n\tborder-top-left-radius: 0.25rem;\n\tpadding: 1rem;\n`;\n\nexport const RowContainer = styled(Container)`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(12, 1fr);\n\tgrid-gap: 0.5rem;\n\theight: fit-content;\n`;\n\nexport const ColContainer = styled.div`\n\tgrid-column: ${({ occupyFull }: { occupyFull: boolean }): string =>\n\t\t`span  ${occupyFull ? 12 : 6}`};\n`;\n\nexport const StickyTime = styled(Row)`\n\tposition: relative;\n\tbottom: 2.375rem;\n\tright: -0.125rem;\n`;\n\nexport const StickyTimeContainer = styled(Row)`\n\tposition: sticky;\n\tbottom: 0.625rem;\n\tright: 0.625rem;\n\theight: 0;\n`;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useMemo, useState } from 'react';\n\nimport { Container, Icon, Link, Padding, Row, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { map } from 'lodash';\n\nimport { AttachmentPreview } from './attachment-preview';\nimport * as StyledComp from './parts/edit-view-styled-components';\nimport { useEditorAttachments } from '../../../../store/zustand/editor';\nimport type { MailsEditorV2, SavedAttachment, UnsavedAttachment } from '../../../../types';\n\nexport const EditAttachmentsBlock: FC<{\n\teditorId: MailsEditorV2['id'];\n}> = ({ editorId }): ReactElement => {\n\tconst [expanded, setExpanded] = useState(false);\n\tconst { savedStandardAttachments, unsavedStandardAttachments, removeStandardAttachments } =\n\t\tuseEditorAttachments(editorId);\n\n\tconst allAttachments = useMemo<Array<UnsavedAttachment | SavedAttachment>>(\n\t\t() => [...unsavedStandardAttachments, ...savedStandardAttachments],\n\t\t[savedStandardAttachments, unsavedStandardAttachments]\n\t);\n\n\tconst attachmentsLabel = t('label.attachment', {\n\t\tcount: allAttachments.length,\n\t\tdefaultValue_one: '{{count}} attachment',\n\t\tdefaultValue_other: '{{count}} attachments'\n\t});\n\n\treturn allAttachments.length > 0 ? (\n\t\t<StyledComp.RowContainer background=\"gray6\">\n\t\t\t<StyledComp.ColContainer occupyFull>\n\t\t\t\t<Container crossAlignment=\"flex-start\">\n\t\t\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"space-between\" wrap=\"wrap\">\n\t\t\t\t\t\t{map(expanded ? allAttachments : allAttachments.slice(0, 2), (attachment, index) =>\n\t\t\t\t\t\t\t// FIXME: This ternary is a temporary fix. Remove once the backend is exposing the correct data\n\t\t\t\t\t\t\t// REF IRIS-4205\n\t\t\t\t\t\t\tattachment.filename !== 'unnamed' ? (\n\t\t\t\t\t\t\t\t<AttachmentPreview\n\t\t\t\t\t\t\t\t\tkey={`att-${attachment.filename}-${index}`}\n\t\t\t\t\t\t\t\t\teditorId={editorId}\n\t\t\t\t\t\t\t\t\tattachment={attachment}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Row mainAlignment=\"flex-start\" padding={{ vertical: 'extrasmall' }}>\n\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t{allAttachments.length > 0 && allAttachments.length <= 2 && (\n\t\t\t\t\t\t\t\t<Text color=\"gray1\">{attachmentsLabel}</Text>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{allAttachments.length > 2 &&\n\t\t\t\t\t\t\t\t(expanded ? (\n\t\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\t\tonClick={(): void => setExpanded(false)}\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"attachment-list-collapse-link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t<Text color=\"primary\">{attachmentsLabel}</Text>\n\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t\t<Icon icon=\"ArrowIosUpward\" color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\t\tonClick={(): void => setExpanded(true)}\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"attachment-list-expand-link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t<Text color=\"primary\">\n\t\t\t\t\t\t\t\t\t\t\t\t{t('label.show_all_attachments', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcount: allAttachments.length,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue_other: 'Show all {{count}} attachments'\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t\t\t\t<Icon icon=\"ArrowIosDownward\" color=\"primary\" />\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t<Link size=\"medium\" onClick={removeStandardAttachments}>\n\t\t\t\t\t\t\t{t('label.remove', {\n\t\t\t\t\t\t\t\tcount: allAttachments.length,\n\t\t\t\t\t\t\t\tdefaultValue_one: 'Remove',\n\t\t\t\t\t\t\t\tdefaultValue_other: 'Remove all {{count}}'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</StyledComp.ColContainer>\n\t\t</StyledComp.RowContainer>\n\t) : (\n\t\t<></>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nexport const buildArrayFromFileList = (filesList: FileList): Array<File> => {\n\tconst files: Array<File> = [];\n\tif (!filesList) {\n\t\treturn files;\n\t}\n\tfor (let fileIndex = 0; fileIndex < filesList.length; fileIndex += 1) {\n\t\tfiles.push(filesList[fileIndex]);\n\t}\n\n\treturn files;\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useCallback } from 'react';\n\nimport { t, useIntegratedFunction } from '@zextras/carbonio-shell-ui';\nimport { filter, map } from 'lodash';\n\nimport { useUiUtilities } from '../../../../../hooks/use-ui-utilities';\n\ntype UseGetPublicUrlPropType = {\n\taddPublicLinkFromFiles: (filesResponse: UseGetPublicUrlRespType[]) => void;\n};\n\nexport type UseGetPublicUrlRespType = {\n\tstatus: string;\n\tvalue: {\n\t\t__typename?: 'Link';\n\t\tid: string;\n\t\turl?: string | null;\n\t\tdescription?: string | null;\n\t\texpires_at?: number | null;\n\t\tcreated_at: number;\n\t\tnode: {\n\t\t\t__typename?: string;\n\t\t\tid: string;\n\t\t};\n\t};\n};\n\nexport const useGetPublicUrl = ({\n\taddPublicLinkFromFiles\n}: UseGetPublicUrlPropType): [(nodes: any) => void, boolean] => {\n\tconst { createSnackbar } = useUiUtilities();\n\tconst [getLink, getLinkAvailable] = useIntegratedFunction('get-link');\n\n\tconst getPublicUrl = useCallback(\n\t\t(nodes) => {\n\t\t\tconst promises = map(nodes, (node) =>\n\t\t\t\tgetLink({ node, type: 'createLink', description: node.id })\n\t\t\t);\n\n\t\t\tPromise.allSettled(promises).then((res) => {\n\t\t\t\tconst success = filter(res, ['status', 'fulfilled']);\n\t\t\t\tconst allSuccess = res.length === success?.length;\n\t\t\t\tconst allFails = res.length === filter(res, ['status', 'rejected'])?.length;\n\t\t\t\tconst type = allSuccess ? 'info' : 'warning';\n\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\tconst label = allSuccess\n\t\t\t\t\t? t('message.snackbar.all_link_copied', 'Public link copied successfully')\n\t\t\t\t\t: allFails\n\t\t\t\t\t\t? t(\n\t\t\t\t\t\t\t\t'message.snackbar.link_copying_error',\n\t\t\t\t\t\t\t\t'There seems to be a problem while generating public link, please try again'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: t(\n\t\t\t\t\t\t\t\t'message.snackbar.some_link_copying_error',\n\t\t\t\t\t\t\t\t'There seems to be a problem while generating public url for some files, please try again'\n\t\t\t\t\t\t\t);\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `public-link`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype,\n\t\t\t\t\thideButton: true,\n\t\t\t\t\tlabel,\n\t\t\t\t\tautoHideTimeout: 4000\n\t\t\t\t});\n\t\t\t\taddPublicLinkFromFiles(success as UseGetPublicUrlRespType[]);\n\t\t\t});\n\t\t},\n\t\t[addPublicLinkFromFiles, createSnackbar, getLink]\n\t);\n\treturn [getPublicUrl, getLinkAvailable];\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useCallback, useMemo, useRef } from 'react';\n\nimport {\n\tDropdown,\n\tRow,\n\tText,\n\tTooltip,\n\tIcon,\n\tPadding,\n\tDropdownItem\n} from '@zextras/carbonio-design-system';\nimport { getIntegratedFunction, t } from '@zextras/carbonio-shell-ui';\nimport { compact, map } from 'lodash';\nimport { Controller, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport * as StyledComp from './edit-view-styled-components';\nimport { buildArrayFromFileList } from '../../../../../helpers/files';\nimport { isFulfilled } from '../../../../../helpers/promises';\nimport { useEditorAttachments, useEditorText } from '../../../../../store/zustand/editor';\nimport { MailsEditorV2 } from '../../../../../types';\nimport { useGetPublicUrl } from '../edit-utils-hooks/use-get-public-url';\nimport {\n\tuseUploadFromFiles,\n\tUseUploadFromFilesResult\n} from '../edit-utils-hooks/use-upload-from-files';\n\nconst SelectorContainer = styled(Row)`\n\tborder-radius: 4px;\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: ${({ theme }): string => theme.palette.gray6.focus};\n\t}\n`;\n\nexport type AddAttachmentsDropdownProps = {\n\teditorId: MailsEditorV2['id'];\n};\n\nexport const AddAttachmentsDropdown: FC<AddAttachmentsDropdownProps> = ({ editorId }) => {\n\tconst { control } = useForm();\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\n\tconst { text, setText } = useEditorText(editorId);\n\tconst { addStandardAttachments, addUploadedAttachment } = useEditorAttachments(editorId);\n\n\tconst addFilesFromLocal = useCallback(\n\t\t(fileList: FileList) => {\n\t\t\tconst files = buildArrayFromFileList(fileList);\n\t\t\taddStandardAttachments(files, {});\n\t\t},\n\t\t[addStandardAttachments]\n\t);\n\n\tconst onUploadFromFilesComplete = useCallback(\n\t\t(filesNodes: UseUploadFromFilesResult) => {\n\t\t\tfilesNodes.forEach((filesNode) => {\n\t\t\t\tisFulfilled(filesNode) &&\n\t\t\t\t\taddUploadedAttachment({\n\t\t\t\t\t\tattachmentId: filesNode.value.attachmentId,\n\t\t\t\t\t\tfileName: filesNode.value.fileName,\n\t\t\t\t\t\tcontentType: filesNode.value.contentType,\n\t\t\t\t\t\tsize: filesNode.value.size\n\t\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t[addUploadedAttachment]\n\t);\n\n\tconst addPublicLinkFromFiles = useCallback(\n\t\t(filesResponse) => {\n\t\t\tconst textWithLink = {\n\t\t\t\tplainText: map(filesResponse, (i: { value: { url: string } }) => i.value.url)\n\t\t\t\t\t.join('\\n')\n\t\t\t\t\t.concat(text.plainText),\n\t\t\t\trichText: ` ${map(\n\t\t\t\t\tfilesResponse,\n\t\t\t\t\t(i: { value: { url: string } }) => `<p><a href=\"${i.value.url}\"> ${i.value.url}</a></p>`\n\t\t\t\t).join('')}`.concat(text.richText)\n\t\t\t};\n\t\t\tsetText(textWithLink);\n\t\t},\n\t\t[setText, text]\n\t);\n\n\tconst [uploadFromFiles, isUploadFromFiles] = useUploadFromFiles({\n\t\tonComplete: onUploadFromFilesComplete\n\t});\n\tconst [getLink, isGetLinkAvailable] = useGetPublicUrl({ addPublicLinkFromFiles });\n\tconst [selectNodes, isSelectNodesAvailable] = getIntegratedFunction('select-nodes');\n\n\tconst uploadFromFilesSelectionConfig = useMemo(\n\t\t() => ({\n\t\t\ttitle: t('label.choose_file', 'Choose file'),\n\t\t\tconfirmAction: uploadFromFiles,\n\t\t\tconfirmLabel: t('label.select', 'Select'),\n\t\t\tallowFiles: true,\n\t\t\tallowFolders: false\n\t\t}),\n\t\t[uploadFromFiles]\n\t);\n\n\tconst getPublicLinkSelectionConfig = useMemo(\n\t\t() => ({\n\t\t\ttitle: t('label.choose_file', 'Choose file'),\n\t\t\tconfirmAction: getLink,\n\t\t\tconfirmLabel: t('label.share_public_link', 'Share Public Link'),\n\t\t\tallowFiles: true,\n\t\t\tallowFolders: false\n\t\t}),\n\t\t[getLink]\n\t);\n\n\tconst onLocalFileClick = useCallback(() => {\n\t\tif (inputRef.current) {\n\t\t\tinputRef.current.value = '';\n\t\t\tinputRef.current.click();\n\t\t}\n\t}, []);\n\n\tconst actionsItems = useMemo<Array<DropdownItem>>(() => {\n\t\tconst localFileAction: DropdownItem = {\n\t\t\tid: 'localAttachment',\n\t\t\ticon: 'MonitorOutline',\n\t\t\tlabel: t('composer.attachment.local', 'Add from local'),\n\t\t\tonClick: onLocalFileClick,\n\t\t\tcustomComponent: (\n\t\t\t\t<>\n\t\t\t\t\t<Icon icon=\"MonitorOutline\" size=\"medium\" />\n\t\t\t\t\t<Padding horizontal=\"extrasmall\" />\n\t\t\t\t\t<Text>{t('composer.attachment.local', 'Add from local')}</Text>\n\t\t\t\t</>\n\t\t\t)\n\t\t};\n\n\t\tconst filesNodeAction: DropdownItem | undefined =\n\t\t\tisSelectNodesAvailable && isUploadFromFiles\n\t\t\t\t? {\n\t\t\t\t\t\tid: 'driveItem',\n\t\t\t\t\t\tlabel: t('composer.attachment.files', 'Add from Files'),\n\t\t\t\t\t\ticon: 'DriveOutline',\n\t\t\t\t\t\tonClick: (): void => {\n\t\t\t\t\t\t\tselectNodes(uploadFromFilesSelectionConfig);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t: undefined;\n\n\t\tconst filesLinkAction: DropdownItem | undefined =\n\t\t\tisSelectNodesAvailable && isGetLinkAvailable\n\t\t\t\t? {\n\t\t\t\t\t\tid: 'fileUrl',\n\t\t\t\t\t\tlabel: t('composer.attachment.url', 'Add public link from Files'),\n\t\t\t\t\t\ticon: 'Link2',\n\t\t\t\t\t\tonClick: (): void => {\n\t\t\t\t\t\t\tselectNodes(getPublicLinkSelectionConfig);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t: undefined;\n\n\t\treturn compact([localFileAction, filesNodeAction, filesLinkAction]);\n\t}, [\n\t\tonLocalFileClick,\n\t\tisUploadFromFiles,\n\t\tuploadFromFilesSelectionConfig,\n\t\tisSelectNodesAvailable,\n\t\tisGetLinkAvailable,\n\t\tselectNodes,\n\t\tgetPublicLinkSelectionConfig\n\t]);\n\n\treturn (\n\t\t<SelectorContainer orientation=\"horizontal\" mainAlignment=\"space-between\">\n\t\t\t<Controller\n\t\t\t\tname=\"attach\"\n\t\t\t\tcontrol={control}\n\t\t\t\tdefaultValue={{}}\n\t\t\t\trender={(): ReactElement => (\n\t\t\t\t\t<StyledComp.FileInput\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\tdata-testid=\"file-input\"\n\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\taddFilesFromLocal &&\n\t\t\t\t\t\t\t\tinputRef?.current?.files &&\n\t\t\t\t\t\t\t\taddFilesFromLocal(inputRef.current.files);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Tooltip label={t('tooltip.add_attachments', 'Add attachments')}>\n\t\t\t\t<Dropdown items={actionsItems} display=\"inline-block\" width=\"fit\">\n\t\t\t\t\t<StyledComp.ResizedIconCheckbox onChange={(): null => null} icon=\"AttachOutline\" />\n\t\t\t\t</Dropdown>\n\t\t\t</Tooltip>\n\t\t</SelectorContainer>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nexport const isFulfilled = (\n\tpromise: PromiseSettledResult<unknown>\n): promise is PromiseFulfilledResult<unknown> => promise.status === 'fulfilled';\n\nexport const isRejected = (\n\tpromise: PromiseSettledResult<unknown>\n): promise is PromiseRejectedResult => promise.status === 'rejected';\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { t, useIntegratedFunction } from '@zextras/carbonio-shell-ui';\nimport { filter, map } from 'lodash';\n\nexport type FileNode = { id: string; name: string; size: number; mime_type: string };\n\nexport type UploadToTargetIntegratedFunction = (arg: {\n\tnodeId: string;\n\ttargetModule: string;\n}) => Promise<{ attachmentId: string }>;\n\nexport const uploadToTarget = async (\n\tnode: FileNode,\n\tuploadTo: UploadToTargetIntegratedFunction\n): Promise<{ attachmentId: string }> => uploadTo({ nodeId: node.id, targetModule: 'MAILS' });\n\nexport type UploadMetadata = {\n\tattachmentId: string;\n\tfileName: string;\n\tcontentType: string;\n\tsize: number;\n};\n\nexport type UseUploadFromFilesResult = Array<PromiseSettledResult<UploadMetadata>>;\n\nexport type UseUploadFromFilesParams = {\n\tonComplete: (filesResponse: UseUploadFromFilesResult) => void;\n};\n\nexport const useUploadFromFiles = ({\n\tonComplete\n}: UseUploadFromFilesParams): [(nodes: Array<FileNode>) => void, boolean] => {\n\tconst [uploadTo, isAvailable] = useIntegratedFunction('upload-to-target-and-get-target-id');\n\tconst createSnackbar = useSnackbar();\n\n\tconst confirmAction = useCallback(\n\t\t(nodes: Array<FileNode>) => {\n\t\t\tconst promises = map(nodes, (node) =>\n\t\t\t\tuploadToTarget(node, uploadTo as UploadToTargetIntegratedFunction).then<UploadMetadata>(\n\t\t\t\t\t({ attachmentId }) => ({\n\t\t\t\t\t\tattachmentId,\n\t\t\t\t\t\tfileName: node.name,\n\t\t\t\t\t\tcontentType: node.mime_type,\n\t\t\t\t\t\tsize: node.size\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (isAvailable) {\n\t\t\t\tPromise.allSettled(promises).then((res) => {\n\t\t\t\t\tconst success = filter(res, ['status', 'fulfilled']);\n\t\t\t\t\tconst allSuccess = res.length === success?.length;\n\t\t\t\t\tconst allFails = res.length === filter(res, ['status', 'rejected'])?.length;\n\t\t\t\t\tconst type = allSuccess ? 'info' : 'warning';\n\t\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\t\tconst label = allSuccess\n\t\t\t\t\t\t? t('message.snackbar.all_att_added', 'Attachments added successfully')\n\t\t\t\t\t\t: allFails\n\t\t\t\t\t\t\t? t(\n\t\t\t\t\t\t\t\t\t'message.snackbar.att_err_adding',\n\t\t\t\t\t\t\t\t\t'There seems to be a problem when adding attachments, please try again'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: t(\n\t\t\t\t\t\t\t\t\t'message.snackbar.some_att_add_fails',\n\t\t\t\t\t\t\t\t\t'There seems to be a problem when adding some attachments, please try again'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `calendar-moved-root`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tautoHideTimeout: 4000\n\t\t\t\t\t});\n\n\t\t\t\t\tonComplete(success);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[isAvailable, uploadTo, createSnackbar, onComplete]\n\t);\n\treturn [confirmAction, isAvailable];\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback } from 'react';\n\nimport { Padding, Text } from '@zextras/carbonio-design-system';\nimport { FOLDERS, t } from '@zextras/carbonio-shell-ui';\n\nimport ModalFooter from '../../../../../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../../../../../carbonio-ui-commons/components/modals/modal-header';\nimport { useAppDispatch } from '../../../../../hooks/redux';\nimport { StoreProvider } from '../../../../../store/redux';\nimport { deleteEditor } from '../../../../../store/zustand/editor';\nimport { MailsEditorV2 } from '../../../../../types';\nimport { useMoveMsgToTrash } from '../../../../../ui-actions/message-actions';\nimport { useGlobalModal } from '../../../../global-modal-manager';\n\ntype DeleteDraftModalProps = {\n\tids: Array<string>;\n\tonClose: () => void;\n\tonConfirm: () => void;\n\tonDelete: () => void;\n};\n\nexport const DeleteDraftModal = ({\n\tids,\n\tonClose,\n\tonConfirm,\n\tonDelete\n}: DeleteDraftModalProps): React.ReactElement => {\n\tconst dispatch = useAppDispatch();\n\n\tconst onCloseModal = useCallback(() => {\n\t\tonClose?.();\n\t}, [onClose]);\n\n\tconst onDraft = useCallback(() => {\n\t\tonConfirm?.();\n\t\tonClose?.();\n\t}, [onClose, onConfirm]);\n\n\tconst moveMsgToTrash = useMoveMsgToTrash();\n\tconst onDeleteAction = useCallback(\n\t\t(ev) => {\n\t\t\tmoveMsgToTrash({\n\t\t\t\tids,\n\t\t\t\tdispatch,\n\t\t\t\tfolderId: FOLDERS.DRAFTS\n\t\t\t})?.onClick(ev);\n\t\t\tonDelete?.();\n\t\t\tonClose?.();\n\t\t},\n\t\t[dispatch, ids, moveMsgToTrash, onClose, onDelete]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader title={t('label.before_you_leave', 'Before you leave')} onClose={onCloseModal} />\n\t\t\t<Padding vertical=\"medium\">\n\t\t\t\t<Text>\n\t\t\t\t\t{t('modal.delete_draft.message1', 'Do you want to keep this draft or delete it?')}\n\t\t\t\t</Text>\n\t\t\t</Padding>\n\t\t\t<ModalFooter\n\t\t\t\tsecondaryBtnType={'outlined'}\n\t\t\t\tonConfirm={onDraft}\n\t\t\t\tlabel={t('label.keep_draft', 'Keep Draft')}\n\t\t\t\tsecondaryAction={onDeleteAction}\n\t\t\t\tsecondaryLabel={t('label.delete_draft', 'Delete Draft')}\n\t\t\t\tsecondaryColor=\"primary\"\n\t\t\t\tpaddingTop=\"0\"\n\t\t\t/>\n\t\t</>\n\t);\n};\n\ntype KeepDraftModalProps = {\n\teditorId: MailsEditorV2['id'];\n\tdraftId?: MailsEditorV2['did'];\n\tonConfirm?: () => void;\n};\n\nexport const useKeepOrDiscardDraft = (): ((arg: KeepDraftModalProps) => void) => {\n\tconst createModal = useGlobalModal();\n\treturn useCallback(\n\t\t({ editorId, draftId, onConfirm }) => {\n\t\t\tconst onDelete = (): void => {\n\t\t\t\tdeleteEditor({ id: editorId });\n\t\t\t};\n\n\t\t\tif (draftId && editorId) {\n\t\t\t\tconst closeModal = createModal(\n\t\t\t\t\t{\n\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t\t<DeleteDraftModal\n\t\t\t\t\t\t\t\t\tids={[draftId]}\n\t\t\t\t\t\t\t\t\tonDelete={onDelete}\n\t\t\t\t\t\t\t\t\tonConfirm={(): void => onConfirm?.()}\n\t\t\t\t\t\t\t\t\tonClose={(): void => closeModal()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t[createModal]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useEffect, useRef, useState } from 'react';\n\nimport { Row, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport moment from 'moment';\n\nimport * as StyledComp from './edit-view-styled-components';\nimport { TIMEOUTS } from '../../../../../constants';\nimport { DraftSaveProcessStatus } from '../../../../../types';\n\nexport const EditViewDraftSaveInfo: FC<{ processStatus?: DraftSaveProcessStatus }> = ({\n\tprocessStatus\n}) => {\n\tconst [visible, setVisible] = useState(false);\n\tconst timeoutId = useRef<null | ReturnType<typeof setTimeout>>(null);\n\n\tuseEffect(() => {\n\t\tif (processStatus?.status === 'completed') {\n\t\t\tsetVisible(true);\n\t\t\ttimeoutId.current = setTimeout(() => setVisible(false), TIMEOUTS.DRAFT_INFO_HIDING_DELAY);\n\t\t}\n\t\treturn () => {\n\t\t\ttimeoutId.current && clearTimeout(timeoutId.current);\n\t\t};\n\t}, [processStatus]);\n\n\treturn (\n\t\t<>\n\t\t\t{visible && (\n\t\t\t\t<StyledComp.StickyTimeContainer>\n\t\t\t\t\t<StyledComp.StickyTime>\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\tcrossAlignment=\"flex-end\"\n\t\t\t\t\t\t\tbackground=\"gray5\"\n\t\t\t\t\t\t\tpadding={{ vertical: 'medium', horizontal: 'large' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text size=\"extrasmall\" color=\"secondary\">\n\t\t\t\t\t\t\t\t{t('message.email_saved_at', {\n\t\t\t\t\t\t\t\t\ttime: moment(processStatus?.lastSaveTimestamp).format('LTS'),\n\t\t\t\t\t\t\t\t\tdefaultValue: 'Email saved as draft at {{time}}'\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</StyledComp.StickyTime>\n\t\t\t\t</StyledComp.StickyTimeContainer>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useMemo, useState } from 'react';\n\nimport {\n\tAvatar,\n\tContainer,\n\tDropdown,\n\tDropdownItem,\n\tIconButton,\n\tRow,\n\tText,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { noop } from 'lodash';\nimport styled from 'styled-components';\n\nimport {\n\tgetIdentitiesDescriptors,\n\tgetIdentityDescription,\n\tgetIdentityDescriptor,\n\tgetNoIdentityPlaceholder,\n\tIdentityDescriptor\n} from '../../../../../helpers/identities';\nimport { getMailBodyWithSignature } from '../../../../../helpers/signatures';\nimport { useEditorIdentityId, useEditorText } from '../../../../../store/zustand/editor';\nimport { MailsEditorV2 } from '../../../../../types';\n\nconst SelectorContainer = styled(Row)`\n\tborder-radius: 4px;\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: ${({ theme }): string => theme.palette.gray6.focus};\n\t}\n`;\n\n/**\n *\n * @param identity - Identity to display\n * @param useExtendedDescription - Compose an extended description containing name and rights\n * @param fallbackDescription - Description to use if no one is available for the given identity\n */\nconst createIdentitySelectorItemElement = (\n\tidentity: IdentityDescriptor | null,\n\tuseExtendedDescription: boolean,\n\tfallbackDescription: string\n): React.JSX.Element => {\n\t// eslint-disable-next-line no-nested-ternary\n\tconst identityDescription = identity\n\t\t? useExtendedDescription\n\t\t\t? getIdentityDescription(identity, t)\n\t\t\t: identity.fromAddress\n\t\t: fallbackDescription;\n\n\treturn (\n\t\t<Container width=\"100%\" orientation=\"horizontal\" height=\"fit\">\n\t\t\t<Avatar label={identity?.identityName || identity?.fromDisplay || fallbackDescription} />\n\t\t\t<Container width=\"100%\" crossAlignment=\"flex-start\" height=\"fit\" padding={{ left: 'medium' }}>\n\t\t\t\t<Text weight=\"bold\">{identity?.identityDisplayName || fallbackDescription}</Text>\n\t\t\t\t<Text size=\"small\" color=\"gray1\">\n\t\t\t\t\t{identityDescription}\n\t\t\t\t</Text>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n\nexport type EditViewIdentitySelectorProps = {\n\teditorId: MailsEditorV2['id'];\n};\n\nexport const EditViewIdentitySelector: FC<EditViewIdentitySelectorProps> = ({ editorId }) => {\n\tconst { identityId, setIdentityId } = useEditorIdentityId(editorId);\n\tconst { text, setText } = useEditorText(editorId);\n\n\tconst [open, setOpen] = useState(false);\n\n\tconst noName = useMemo(() => getNoIdentityPlaceholder(), []);\n\tconst selected = useMemo<IdentityDescriptor | null>(\n\t\t() => getIdentityDescriptor(identityId),\n\t\t[identityId]\n\t);\n\tconst selectedDescription = selected ? getIdentityDescription(selected, t) : noName;\n\tconst identities = useMemo<Array<IdentityDescriptor>>(() => getIdentitiesDescriptors(), []);\n\n\tconst onIdentitySelected = useCallback(\n\t\t(identity: IdentityDescriptor): void => {\n\t\t\tsetIdentityId(identity.id);\n\t\t\tconst textWithSignature = getMailBodyWithSignature(text, identity.defaultSignatureId);\n\t\t\tsetText(textWithSignature);\n\t\t},\n\t\t[setIdentityId, setText, text]\n\t);\n\n\tconst toggleOpen = useCallback(() => {\n\t\tsetOpen((s) => !s);\n\t}, []);\n\n\tconst close = useCallback(() => {\n\t\tsetOpen(false);\n\t}, []);\n\n\tconst dropdownEntries = useMemo<Array<DropdownItem>>(\n\t\t() =>\n\t\t\tidentities.map((identity) => ({\n\t\t\t\tid: identity.id,\n\t\t\t\tlabel: getIdentityDescription(identity, t) ?? noName,\n\t\t\t\tselected: identity.id === selected?.id,\n\t\t\t\tonClick: (): void => {\n\t\t\t\t\tonIdentitySelected(identity);\n\t\t\t\t\tclose();\n\t\t\t\t},\n\t\t\t\tcustomComponent: createIdentitySelectorItemElement(identity, true, noName)\n\t\t\t})),\n\t\t[close, identities, noName, onIdentitySelected, selected]\n\t);\n\n\treturn (\n\t\t<SelectorContainer orientation=\"horizontal\" mainAlignment=\"space-between\">\n\t\t\t<Tooltip label={selectedDescription} maxWidth=\"100%\" placement=\"top-start\">\n\t\t\t\t<Dropdown\n\t\t\t\t\titems={dropdownEntries}\n\t\t\t\t\twidth=\"fit\"\n\t\t\t\t\tmaxWidth=\"100%\"\n\t\t\t\t\tselectedBackgroundColor=\"highlight\"\n\t\t\t\t\tdata-testid=\"from-dropdown\"\n\t\t\t\t>\n\t\t\t\t\t<Row\n\t\t\t\t\t\tonClick={toggleOpen}\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{createIdentitySelectorItemElement(selected, false, noName)}\n\t\t\t\t\t\t<IconButton icon={open ? 'ChevronUpOutline' : 'ChevronDownOutline'} onClick={noop} />\n\t\t\t\t\t</Row>\n\t\t\t\t</Dropdown>\n\t\t\t</Tooltip>\n\t\t</SelectorContainer>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useEffect, useState, forwardRef, MouseEvent } from 'react';\n\nimport { Row, IconButton, Input } from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\ntype CustomComponentProps = {\n\tvalue: string | number;\n\tonClick: ((e: MouseEvent | KeyboardEvent) => void) &\n\t\t((e: MouseEvent<HTMLButtonElement, MouseEvent> | KeyboardEvent) => void);\n\n\tlabel: string;\n};\n\nconst CustomInputWrapper = styled(Row)`\n\tborder-bottom: 1px solid ${({ theme }): string => theme.palette.gray4.regular};\n\tborder-radius: 0.125rem;\n\t&:hover {\n\t\tbackground: ${({ theme }): string => theme.palette.gray2.regular};\n\t}\n\n\t&:focus-within {\n\t\tborder-bottom: 1px solid ${({ theme }): string => theme.palette.primary.regular};\n\t}\n`;\nconst CustomButtonWrapper = styled(Row)`\n\tcursor: pointer;\n\tpadding: 0 !important;\n`;\nexport const DatePickerCustomComponent: FC<CustomComponentProps> = forwardRef(\n\tfunction DatePickerCustomComponentFn(\n\t\t{ value, onClick, label }: CustomComponentProps,\n\t\tref: React.Ref<HTMLInputElement>\n\t) {\n\t\tconst [input, setInput] = useState<string | number>(value);\n\n\t\tuseEffect(() => {\n\t\t\tsetInput(value);\n\t\t}, [value]);\n\n\t\treturn (\n\t\t\t<CustomInputWrapper background=\"gray4\">\n\t\t\t\t<Row takeAvailableSpace minWidth=\"9.375rem\" background=\"transparent\">\n\t\t\t\t\t<Input label={label} value={input} hideBorder disabled ref={ref} />\n\t\t\t\t</Row>\n\n\t\t\t\t<CustomButtonWrapper>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon=\"CalendarOutline\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\tbackgroundColor=\"transparent\"\n\t\t\t\t\t\ticonColor=\"text\"\n\t\t\t\t\t/>\n\t\t\t\t</CustomButtonWrapper>\n\t\t\t</CustomInputWrapper>\n\t\t);\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useMemo, useState } from 'react';\n\nimport { Container, DateTimePicker, Text } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { noop } from 'lodash';\nimport moment from 'moment';\n\nimport { DatePickerCustomComponent } from './date-picker-custom-component';\nimport ModalFooter from '../../../../../carbonio-ui-commons/components/modals/modal-footer';\nimport ModalHeader from '../../../../../carbonio-ui-commons/components/modals/modal-header';\n\ntype SendLaterModalProps = {\n\tonAutoSendTimeSelected: (autoSendTime: number) => void;\n\tonClose: () => void;\n};\n\nexport const SendLaterModal: FC<SendLaterModalProps> = ({ onAutoSendTimeSelected, onClose }) => {\n\tconst [selectedTime, setSelectedTime] = useState<Date | null>(null);\n\tconst modalTitle = t('label.send_later', 'Send Later');\n\tconst datePickerLabel = t('label.select_date_time', 'Select date and time');\n\tconst confirmLabel = t('label.schedule_send', 'Schedule send');\n\n\tconst onTimeSelected = useCallback((time: Date | null) => {\n\t\tsetSelectedTime(time);\n\t}, []);\n\n\tconst onConfirm = useCallback(() => {\n\t\tif (!selectedTime) {\n\t\t\treturn;\n\t\t}\n\t\tonAutoSendTimeSelected(moment(selectedTime).valueOf());\n\t}, [onAutoSendTimeSelected, selectedTime]);\n\n\tconst minTime = useMemo(() => {\n\t\tif (moment(selectedTime).isBefore(moment(), 'hour') || !selectedTime) {\n\t\t\treturn new Date();\n\t\t}\n\t\treturn moment().hours(0).minutes(0);\n\t}, [selectedTime]);\n\n\tconst maxTime = useMemo(() => new Date(0, 0, 0, 23, 45, 0, 0), []);\n\n\treturn (\n\t\t<Container mainAlignment=\"center\" crossAlignment=\"flex-start\" height=\"fit\">\n\t\t\t<ModalHeader onClose={onClose} title={modalTitle} />\n\t\t\t<Container\n\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\theight=\"fit\"\n\t\t\t>\n\t\t\t\t<Text>{t('message.select_date_time', 'Select a date and time to send this message')}</Text>\n\t\t\t\t<Container padding={{ vertical: 'medium' }}>\n\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\tlabel={datePickerLabel}\n\t\t\t\t\t\tisClearable\n\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\tonChange={onTimeSelected}\n\t\t\t\t\t\tdateFormat=\"dd/MM/yyyy HH:mm\"\n\t\t\t\t\t\tminDate={new Date()}\n\t\t\t\t\t\tminTime={minTime}\n\t\t\t\t\t\tmaxTime={maxTime}\n\t\t\t\t\t\ttimeCaption={t('label.time', 'Time')}\n\t\t\t\t\t\tcustomInput={\n\t\t\t\t\t\t\t<DatePickerCustomComponent\n\t\t\t\t\t\t\t\tlabel={datePickerLabel}\n\t\t\t\t\t\t\t\tvalue={selectedTime?.toDateString() ?? ''}\n\t\t\t\t\t\t\t\tonClick={noop}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t\t<ModalFooter\n\t\t\t\tonConfirm={onConfirm}\n\t\t\t\tlabel={confirmLabel}\n\t\t\t\tdisabled={!selectedTime}\n\t\t\t\tsecondaryAction={onClose}\n\t\t\t\tsecondaryLabel={t('label.cancel', 'Cancel')}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useMemo } from 'react';\n\nimport { Button, MultiButton, Tooltip, useModal } from '@zextras/carbonio-design-system';\nimport { t, useUserSettings } from '@zextras/carbonio-shell-ui';\n\nimport { SendLaterModal } from './send-later-modal';\nimport { AnimatedLoader } from '../../../../../assets/animated-loader';\nimport { StoreProvider } from '../../../../../store/redux';\n\nexport type EditViewSendButtonsProps = {\n\tonSendLater: (autoSendTime: number) => void;\n\tonSendNow: () => void;\n\tdisabled: boolean;\n\ttooltip: string;\n\tisLoading: boolean;\n};\n\nexport const EditViewSendButtons: FC<EditViewSendButtonsProps> = ({\n\tonSendLater,\n\tonSendNow,\n\tdisabled,\n\ttooltip,\n\tisLoading\n}) => {\n\tconst { attrs } = useUserSettings();\n\tconst createModal = useModal();\n\n\tconst onSendLaterClick = useCallback(() => {\n\t\tconst closeModal = createModal(\n\t\t\t{\n\t\t\t\tmaxHeight: '90vh',\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<SendLaterModal\n\t\t\t\t\t\t\tonAutoSendTimeSelected={(autoSendTime): void => {\n\t\t\t\t\t\t\t\tonSendLater(autoSendTime);\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClose={(): void => closeModal && closeModal()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}, [createModal, onSendLater]);\n\n\tconst isSendLaterAllowed = useMemo(\n\t\t() => attrs?.zimbraFeatureMailSendLaterEnabled === 'TRUE',\n\t\t[attrs?.zimbraFeatureMailSendLaterEnabled]\n\t);\n\n\tconst multiBtnActions = useMemo(\n\t\t() => [\n\t\t\t...(isSendLaterAllowed\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'delayed_mail',\n\t\t\t\t\t\t\ticon: 'ClockOutline',\n\t\t\t\t\t\t\tlabel: t('label.send_later', 'Send later'),\n\t\t\t\t\t\t\tonClick: onSendLaterClick\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t: [])\n\t\t],\n\t\t[isSendLaterAllowed, onSendLaterClick]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{multiBtnActions.length > 0 ? (\n\t\t\t\t<Tooltip label={tooltip} disabled={!disabled}>\n\t\t\t\t\t<MultiButton\n\t\t\t\t\t\tdata-testid=\"BtnSendMailMulti\"\n\t\t\t\t\t\tlabel={t('label.send', 'Send')}\n\t\t\t\t\t\tonClick={onSendNow}\n\t\t\t\t\t\tdisabledPrimary={disabled}\n\t\t\t\t\t\tdisabledSecondary={disabled}\n\t\t\t\t\t\t// TOFIX: remove this ts-ignore once SHELL 5.3.0 is released\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\ticon={isLoading ? AnimatedLoader : 'ChevronDownOutline'}\n\t\t\t\t\t\titems={multiBtnActions}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t) : (\n\t\t\t\t<Tooltip label={tooltip} disabled={!disabled}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdata-testid=\"BtnSendMail\"\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ticon={isLoading ? AnimatedLoader : 'PaperPlane'}\n\t\t\t\t\t\tonClick={onSendNow}\n\t\t\t\t\t\tlabel={t('label.send', 'Send')}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useMemo } from 'react';\n\nimport { Dropdown, IconButton } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\nimport { noop } from 'lodash';\n\nimport {\n\tuseEditorIsRichText,\n\tuseEditorIsUrgent,\n\tuseEditorRequestReadReceipt\n} from '../../../../../store/zustand/editor';\nimport { MailsEditorV2 } from '../../../../../types';\n\nexport type OptionsDropdownProps = {\n\teditorId: MailsEditorV2['id'];\n};\n\nexport const OptionsDropdown: FC<OptionsDropdownProps> = ({ editorId }) => {\n\tconst { isRichText, setIsRichText } = useEditorIsRichText(editorId);\n\tconst { isUrgent, setIsUrgent } = useEditorIsUrgent(editorId);\n\tconst { requestReadReceipt, setRequestReadReceipt } = useEditorRequestReadReceipt(editorId);\n\n\tconst toggleRichTextEditor = useCallback(() => {\n\t\tsetIsRichText(!isRichText);\n\t}, [isRichText, setIsRichText]);\n\n\tconst toggleImportant = useCallback(() => {\n\t\tsetIsUrgent(!isUrgent);\n\t}, [isUrgent, setIsUrgent]);\n\n\tconst toggleReceiptRequest = useCallback(() => {\n\t\tsetRequestReadReceipt(!requestReadReceipt);\n\t}, [requestReadReceipt, setRequestReadReceipt]);\n\n\tconst options = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tid: 'richText',\n\t\t\t\tlabel: isRichText\n\t\t\t\t\t? t('tooltip.disable_rich_text', 'Disable rich text editor')\n\t\t\t\t\t: t('tooltip.enable_rich_text', 'Enable rich text editor'),\n\t\t\t\tonClick: toggleRichTextEditor\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'urgent',\n\t\t\t\tlabel: isUrgent\n\t\t\t\t\t? t('label.mark_as_un_important', 'Mark as unimportant')\n\t\t\t\t\t: t('label.mark_as_important', 'Mark as important'),\n\t\t\t\tonClick: toggleImportant\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'read_receipt',\n\t\t\t\tlabel: requestReadReceipt\n\t\t\t\t\t? t('label.remove_request_receipt', 'Remove read receipt request')\n\t\t\t\t\t: t('label.request_receipt', 'Request read receipt'),\n\t\t\t\tonClick: toggleReceiptRequest\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\tisRichText,\n\t\t\ttoggleRichTextEditor,\n\t\t\tisUrgent,\n\t\t\ttoggleImportant,\n\t\t\trequestReadReceipt,\n\t\t\ttoggleReceiptRequest\n\t\t]\n\t);\n\n\treturn (\n\t\t<Dropdown items={options} selectedBackgroundColor={'gray5'} data-testid=\"options-dropdown\">\n\t\t\t<IconButton\n\t\t\t\tdata-testid=\"options-dropdown-icon\"\n\t\t\t\tsize=\"large\"\n\t\t\t\ticon=\"MoreVertical\"\n\t\t\t\tonClick={noop}\n\t\t\t/>\n\t\t</Dropdown>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback } from 'react';\n\nimport { ChipInput, ChipItem } from '@zextras/carbonio-design-system';\nimport { useIntegratedComponent } from '@zextras/carbonio-shell-ui';\nimport { map, reject, some } from 'lodash';\n\nimport { ParticipantRoleType } from '../../../../../carbonio-ui-commons/constants/participants';\nimport { Participant } from '../../../../../types';\n\nconst emailRegex =\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars, max-len, no-control-regex\n\t/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\nexport interface ContactType extends ChipItem {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tfullName?: string;\n\tlabel?: string;\n\terror?: boolean;\n}\n\nexport type RecipientsRowProps = {\n\ttype: ParticipantRoleType;\n\tlabel: string;\n\trecipients: Array<Participant>;\n\tonRecipientsChange: (recipients: Array<Participant>) => void;\n\tdataTestid?: string;\n\torderedAccountIds?: Array<string>;\n};\n\n/**\n * The component handle the input for participants of the given type\n * @param type\n * @param label\n * @param recipients\n * @param onRecipientsChange\n * @param dataTestid\n * @param orderedAccountIds\n * @constructor\n */\nexport const RecipientsRow: FC<RecipientsRowProps> = ({\n\ttype,\n\tlabel,\n\trecipients,\n\tonRecipientsChange,\n\tdataTestid,\n\torderedAccountIds\n}) => {\n\tconst [ContactInput, isAvailable] = useIntegratedComponent('contact-input');\n\n\tconst onContactInputChange = useCallback(\n\t\t(contacts: Array<ContactType>): void => {\n\t\t\tconst updatedRecipients = map<ContactType, Participant>(\n\t\t\t\tcontacts,\n\t\t\t\t(contact) =>\n\t\t\t\t\t({\n\t\t\t\t\t\t...contact,\n\t\t\t\t\t\temail: contact.email,\n\t\t\t\t\t\terror: contact.error,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\taddress: contact.email,\n\t\t\t\t\t\tname: contact.firstName,\n\t\t\t\t\t\tfullName: contact.fullName\n\t\t\t\t\t}) as Participant\n\t\t\t);\n\t\t\tonRecipientsChange(updatedRecipients);\n\t\t},\n\t\t[onRecipientsChange, type]\n\t);\n\n\tconst chipInputValues = map<Participant, ChipItem>(recipients, (recipient) => ({\n\t\tlabel: recipient.address\n\t}));\n\n\tconst onChipInputAdd = (value: string | unknown): ChipItem =>\n\t\ttypeof value === 'string'\n\t\t\t? { label: value, error: !emailRegex.test(value) }\n\t\t\t: { label: 'unknown data', error: true };\n\n\tconst onChipInputChange = (contacts: Array<ChipItem>): void => {\n\t\tconst data = map(\n\t\t\treject(contacts, ['error', true]),\n\t\t\t(contact) =>\n\t\t\t\t({\n\t\t\t\t\tname: contact.label,\n\t\t\t\t\taddress: contact.label,\n\t\t\t\t\tfullName: contact.label,\n\t\t\t\t\ttype\n\t\t\t\t}) as Participant\n\t\t);\n\t\tonRecipientsChange(data);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{isAvailable ? (\n\t\t\t\t<ContactInput\n\t\t\t\t\tdata-testid={dataTestid}\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tplaceholder={label}\n\t\t\t\t\tmaxChips={null}\n\t\t\t\t\tonChange={onContactInputChange}\n\t\t\t\t\tdefaultValue={recipients}\n\t\t\t\t\tbottomBorderColor=\"transparent\"\n\t\t\t\t\thasError={some(recipients || [], { error: true })}\n\t\t\t\t\tdragAndDropEnabled\n\t\t\t\t\torderedAccountIds={orderedAccountIds}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<ChipInput\n\t\t\t\t\tdata-testid={dataTestid}\n\t\t\t\t\tplaceholder={label}\n\t\t\t\t\tmaxChips={null}\n\t\t\t\t\tonAdd={onChipInputAdd}\n\t\t\t\t\tonChange={onChipInputChange}\n\t\t\t\t\tdefaultValue={chipInputValues}\n\t\t\t\t\tbackground=\"gray5\"\n\t\t\t\t\thasError={some(recipients || [], { error: true })}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Button, Container, Padding, useSnackbar } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nimport { RecipientsRow } from './recipients-row';\nimport { ParticipantRole } from '../../../../../carbonio-ui-commons/constants/participants';\nimport { getOrderedAccountIds } from '../../../../../carbonio-ui-commons/helpers/identities';\nimport { GapContainer } from '../../../../../commons/gap-container';\nimport { getIdentityDescriptor } from '../../../../../helpers/identities';\nimport {\n\tuseEditorBccRecipients,\n\tuseEditorCcRecipients,\n\tuseEditorIdentityId,\n\tuseEditorToRecipients\n} from '../../../../../store/zustand/editor';\nimport { MailsEditorV2, Participant } from '../../../../../types';\n\nexport type RecipientsRowsProps = {\n\teditorId: MailsEditorV2['id'];\n};\n\nexport const RecipientsRows = ({ editorId }: RecipientsRowsProps): React.JSX.Element => {\n\tconst { toRecipients, setToRecipients } = useEditorToRecipients(editorId);\n\tconst { ccRecipients, setCcRecipients } = useEditorCcRecipients(editorId);\n\tconst { bccRecipients, setBccRecipients } = useEditorBccRecipients(editorId);\n\n\tconst { identityId } = useEditorIdentityId(editorId);\n\tconst [showCc, setShowCc] = useState(ccRecipients.length > 0);\n\tconst [showBcc, setShowBcc] = useState(bccRecipients.length > 0);\n\n\tconst toggleCc = useCallback(() => setShowCc((show) => !show), []);\n\tconst toggleBcc = useCallback(() => setShowBcc((show) => !show), []);\n\tconst [orderedAccountIds, setOrderedAccountIds] = useState<Array<string>>([]);\n\tconst createSnackbar = useSnackbar();\n\n\tuseEffect(() => {\n\t\tconst selectedIdentity = getIdentityDescriptor(identityId);\n\t\tgetOrderedAccountIds(selectedIdentity ? selectedIdentity.ownerAccount : '')\n\t\t\t.then((ids) => {\n\t\t\t\tsetOrderedAccountIds(ids);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `ordered-account-ids`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t});\n\t}, [createSnackbar, identityId]);\n\n\tconst onToChange = useCallback(\n\t\t(updatedRecipients: Array<Participant>) => setToRecipients(updatedRecipients),\n\t\t[setToRecipients]\n\t);\n\n\tconst onCcChange = useCallback(\n\t\t(updatedRecipients: Array<Participant>) => setCcRecipients(updatedRecipients),\n\t\t[setCcRecipients]\n\t);\n\n\tconst onBccChange = useCallback(\n\t\t(updatedRecipients: Array<Participant>) => setBccRecipients(updatedRecipients),\n\t\t[setBccRecipients]\n\t);\n\n\treturn (\n\t\t<GapContainer gap={'small'}>\n\t\t\t<Container\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tbackground={'gray5'}\n\t\t\t\tstyle={{ overflow: 'hidden' }}\n\t\t\t\tpadding={{ all: 'none' }}\n\t\t\t>\n\t\t\t\t<Container background={'gray5'} style={{ overflow: 'hidden' }}>\n\t\t\t\t\t<RecipientsRow\n\t\t\t\t\t\ttype={ParticipantRole.TO}\n\t\t\t\t\t\tlabel={t('label.to', 'To')}\n\t\t\t\t\t\tdataTestid={'RecipientTo'}\n\t\t\t\t\t\trecipients={toRecipients}\n\t\t\t\t\t\tonRecipientsChange={onToChange}\n\t\t\t\t\t\torderedAccountIds={orderedAccountIds}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t\t<Container\n\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\tmaxWidth=\"fit\"\n\t\t\t\t\tbackground={'gray5'}\n\t\t\t\t\tpadding={{ right: 'medium', left: 'extrasmall' }}\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t>\n\t\t\t\t\t<Padding right={'extrasmall'}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel={t('label.cc', 'Cc')}\n\t\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t\t\tstyle={{ color: '#282828' }} // FIXME create a styled component and use theme colors\n\t\t\t\t\t\t\tonClick={toggleCc}\n\t\t\t\t\t\t\tforceActive={showCc}\n\t\t\t\t\t\t\tdata-testid=\"BtnCc\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Padding>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel={t('label.bcc', 'Bcc')}\n\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t\tstyle={{ color: '#282828' }} // FIXME create a styled component and use theme colors\n\t\t\t\t\t\tforceActive={showBcc}\n\t\t\t\t\t\tonClick={toggleBcc}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t</Container>\n\n\t\t\t{showCc && (\n\t\t\t\t<RecipientsRow\n\t\t\t\t\ttype={ParticipantRole.CARBON_COPY}\n\t\t\t\t\tlabel={t('label.cc', 'Cc')}\n\t\t\t\t\tdataTestid={'RecipientCc'}\n\t\t\t\t\trecipients={ccRecipients}\n\t\t\t\t\tonRecipientsChange={onCcChange}\n\t\t\t\t\torderedAccountIds={orderedAccountIds}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{showBcc && (\n\t\t\t\t<RecipientsRow\n\t\t\t\t\ttype={ParticipantRole.BLIND_CARBON_COPY}\n\t\t\t\t\tlabel={t('label.bcc', 'Bcc')}\n\t\t\t\t\tdataTestid={'RecipientBcc'}\n\t\t\t\t\trecipients={bccRecipients}\n\t\t\t\t\tonRecipientsChange={onBccChange}\n\t\t\t\t\torderedAccountIds={orderedAccountIds}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</GapContainer>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { getUserAccount } from '@zextras/carbonio-shell-ui';\nimport { filter, map, sortBy } from 'lodash';\n\nimport { getShareInfoRequest } from '../soap/get-share-info';\n\ntype AccountItem = {\n\tid: string;\n\taddress: string;\n};\n\nexport function getSharedAccounts(): Promise<Array<AccountItem>> {\n\treturn getShareInfoRequest().then((res) => {\n\t\tconst sharedAccounts: Array<AccountItem> = [];\n\t\tif (res?.folders) {\n\t\t\tconst sharedRootFolders = filter(res.folders, ['folderId', 1]);\n\t\t\tsharedRootFolders.forEach((account) => {\n\t\t\t\tif (account.ownerId && account.ownerEmail) {\n\t\t\t\t\tsharedAccounts.push({ id: account.ownerId, address: account.ownerEmail });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn sharedAccounts;\n\t});\n}\n\nexport function getDefaultAccount(): AccountItem | undefined {\n\tconst account = getUserAccount();\n\tif (!account) {\n\t\treturn undefined;\n\t}\n\treturn { id: account.id, address: account.name };\n}\n\nexport async function getOrderedAccountIds(\n\tpriorityAccountAddress?: string\n): Promise<Array<string>> {\n\tconst sharedAccounts = await getSharedAccounts();\n\tconst defaultAccount = getDefaultAccount();\n\tconst finalList = defaultAccount ? [defaultAccount].concat(...sharedAccounts) : sharedAccounts;\n\tconst sortedList = sortBy(finalList, (item: AccountItem) =>\n\t\titem.address === priorityAccountAddress ? 0 : 1\n\t);\n\treturn map(sortedList, (item: AccountItem) => item.id);\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Icon, IconProps, Padding, Text } from '@zextras/carbonio-design-system';\nimport { DefaultTheme } from 'styled-components';\n\nimport * as StyledComp from './edit-view-styled-components';\n\ntype WarningBannerProps = {\n\ttext: string;\n\ticon: IconProps['icon'];\n\ticonColor: IconProps['color'];\n\tbottomBorderColor: keyof DefaultTheme['palette'];\n};\n\nexport const WarningBanner = ({\n\ttext,\n\ticon,\n\ticonColor,\n\tbottomBorderColor\n}: WarningBannerProps): JSX.Element => (\n\t<StyledComp.BannerContainer\n\t\torientation=\"horizontal\"\n\t\tmainAlignment=\"flex-start\"\n\t\tcrossAlignment=\"center\"\n\t\tbackground=\"gray6\"\n\t\theight=\"fit\"\n\t\tpadding={{ all: 'large' }}\n\t\t$bottomBorderColor={bottomBorderColor}\n\t>\n\t\t<Padding right=\"large\">\n\t\t\t<Icon icon={icon} color={iconColor} size=\"large\" />\n\t\t</Padding>\n\t\t<Text>{text}</Text>\n\t</StyledComp.BannerContainer>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useEffect } from 'react';\n\nimport { useUserSettings } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { WarningBanner } from './warning-banner';\nimport { getEditor } from '../../../../../store/zustand/editor/hooks/editors';\nimport { MailsEditorV2 } from '../../../../../types';\n\nexport const calculateMailSize = (editor: MailsEditorV2): number => {\n\tconst saveDraftSize = editor?.size ?? 0;\n\tconst totalSmartLinksSize = editor?.totalSmartLinksSize ?? 0;\n\treturn saveDraftSize - totalSmartLinksSize * 0.9;\n};\n\nexport const SizeExceededWarningBanner = ({\n\teditorId,\n\tisMailSizeWarning,\n\tsetIsMailSizeWarning\n}: {\n\teditorId: MailsEditorV2['id'];\n\tisMailSizeWarning: boolean;\n\tsetIsMailSizeWarning: (isMailSizeWarning: boolean) => void;\n}): JSX.Element => {\n\tconst maxMessageSize = useUserSettings().attrs?.zimbraMtaMaxMessageSize;\n\tconst { t } = useTranslation();\n\tconst maxAllowedMailSize = parseInt(maxMessageSize as string, 10);\n\tconst editor = getEditor({ id: editorId });\n\tconst editorSize = editor ? calculateMailSize(editor) : 0;\n\n\tuseEffect(() => {\n\t\tsetIsMailSizeWarning(editorSize > maxAllowedMailSize);\n\t}, [editorSize, maxAllowedMailSize, setIsMailSizeWarning]);\n\n\tconst mailSizeWarningBannerText = t(\n\t\t'editor.warning.mail_size_exceeds_limit',\n\t\t'The message size exceeds the limit. Please convert some attachments to smart links.'\n\t);\n\tconst mailSizeWarningBannerIcon = 'CloseCircleOutline';\n\tconst mailSizeWarningBannerIconColor = 'error';\n\treturn editor && isMailSizeWarning ? (\n\t\t<WarningBanner\n\t\t\ttext={mailSizeWarningBannerText}\n\t\t\ticon={mailSizeWarningBannerIcon}\n\t\t\ticonColor={mailSizeWarningBannerIconColor}\n\t\t\tbottomBorderColor=\"error\"\n\t\t/>\n\t) : (\n\t\t<></>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { ChangeEvent, FC, useCallback } from 'react';\n\nimport { Container, Icon, Input, Padding, Tooltip } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nimport {\n\tuseEditorIsUrgent,\n\tuseEditorRequestReadReceipt,\n\tuseEditorSubject\n} from '../../../../../store/zustand/editor';\nimport { MailsEditorV2 } from '../../../../../types';\n\nexport type SubjectRowProps = {\n\teditorId: MailsEditorV2['id'];\n};\n\nexport const SubjectRow: FC<SubjectRowProps> = ({ editorId }: SubjectRowProps) => {\n\tconst { subject, setSubject } = useEditorSubject(editorId);\n\tconst { isUrgent } = useEditorIsUrgent(editorId);\n\tconst { requestReadReceipt } = useEditorRequestReadReceipt(editorId);\n\n\tconst onSubjectChange = useCallback(\n\t\t(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\tsetSubject(event.target.value);\n\t\t},\n\t\t[setSubject]\n\t);\n\n\treturn (\n\t\t<Container\n\t\t\torientation=\"horizontal\"\n\t\t\tbackground={'gray5'}\n\t\t\tstyle={{ overflow: 'hidden' }}\n\t\t\tpadding={{ all: 'none' }}\n\t\t>\n\t\t\t<Container background={'gray5'} style={{ overflow: 'hidden' }} padding=\"0\">\n\t\t\t\t<Input\n\t\t\t\t\tdata-testid={'subject'}\n\t\t\t\t\tlabel={t('label.subject', 'Subject')}\n\t\t\t\t\tvalue={subject}\n\t\t\t\t\tonChange={onSubjectChange}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t\t{(requestReadReceipt || isUrgent) && (\n\t\t\t\t<Container\n\t\t\t\t\twidth=\"fit\"\n\t\t\t\t\tbackground={'gray5'}\n\t\t\t\t\tpadding={{ right: 'medium', left: 'small' }}\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t>\n\t\t\t\t\t{requestReadReceipt && (\n\t\t\t\t\t\t<Tooltip label={t('label.request_receipt', 'Request read receipt')}>\n\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t<Icon icon=\"CheckmarkSquare\" color=\"secondary\" size=\"large\" />\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)}\n\t\t\t\t\t{isUrgent && (\n\t\t\t\t\t\t<Tooltip label={t('tooltip.marked_as_important', 'Marked as important')}>\n\t\t\t\t\t\t\t<Icon icon=\"ArrowUpward\" color=\"secondary\" size=\"large\" />\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, useCallback, useMemo, useState } from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport { useIntegratedComponent, useUserSettings } from '@zextras/carbonio-shell-ui';\nimport type { TinyMCE } from 'tinymce/tinymce';\n\nimport * as StyledComp from './edit-view-styled-components';\nimport { plainTextToHTML } from '../../../../../commons/mail-message-renderer';\nimport { useEditorIsRichText, useEditorText } from '../../../../../store/zustand/editor';\nimport { MailsEditorV2 } from '../../../../../types';\n\nexport type TextEditorContent = { plainText: string; richText: string };\n\nexport type TextEditorContainerProps = {\n\teditorId: MailsEditorV2['id'];\n\tonDragOver: (event: React.DragEvent) => void;\n\tonFilesSelected: ({ editor, files }: { editor: TinyMCE; files: FileList }) => void;\n\tminHeight: number;\n\tdisabled: boolean;\n};\n\nexport const TextEditorContainer: FC<TextEditorContainerProps> = ({\n\teditorId,\n\tonDragOver,\n\tonFilesSelected,\n\tminHeight,\n\tdisabled\n}) => {\n\tconst [Composer, composerIsAvailable] = useIntegratedComponent('composer');\n\tconst [isFirstChangeEventFired, setIsFirstChangeEventFired] = useState(false);\n\tconst { text, setText } = useEditorText(editorId);\n\tconst { isRichText } = useEditorIsRichText(editorId);\n\n\tconst onTextChanged = useCallback(\n\t\t(text: TextEditorContent): void => {\n\t\t\tsetText({ plainText: text.plainText, richText: text.richText });\n\t\t},\n\t\t[setText]\n\t);\n\n\tconst { prefs } = useUserSettings();\n\tconst defaultFontFamily = useMemo<string>(\n\t\t() => String(prefs?.zimbraPrefHtmlEditorDefaultFontFamily) ?? 'sans-serif',\n\t\t[prefs]\n\t);\n\n\tconst composerCustomOptions = {\n\t\ttoolbar_sticky: true,\n\t\tui_mode: 'split',\n\t\tcontent_style: 'p { margin: 0; }'\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{text && (\n\t\t\t\t<Container\n\t\t\t\t\theight=\"fit\"\n\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\t\tbackground=\"gray6\"\n\t\t\t\t\tcrossAlignment=\"flex-end\"\n\t\t\t\t>\n\t\t\t\t\t{isRichText && composerIsAvailable ? (\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\tbackground=\"gray6\"\n\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\tstyle={{ minHeight, overflow: 'hidden' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<StyledComp.EditorWrapper data-testid=\"MailEditorWrapper\">\n\t\t\t\t\t\t\t\t<Composer\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tvalue={text.richText}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\tonFileSelect={onFilesSelected}\n\t\t\t\t\t\t\t\t\tonEditorChange={(ev: [string, string]): void => {\n\t\t\t\t\t\t\t\t\t\tif (isFirstChangeEventFired)\n\t\t\t\t\t\t\t\t\t\t\tonTextChanged({ plainText: ev[0], richText: ev[1] });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonDragOver={onDragOver}\n\t\t\t\t\t\t\t\t\tcustomInitOptions={composerCustomOptions}\n\t\t\t\t\t\t\t\t\tonFocus={(): void => {\n\t\t\t\t\t\t\t\t\t\tif (!isFirstChangeEventFired) setIsFirstChangeEventFired(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</StyledComp.EditorWrapper>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Container background=\"gray6\" height=\"fit\">\n\t\t\t\t\t\t\t<StyledComp.TextArea\n\t\t\t\t\t\t\t\tdata-testid=\"MailPlainTextEditor\"\n\t\t\t\t\t\t\t\tvalue={text.plainText}\n\t\t\t\t\t\t\t\tstyle={{ fontFamily: defaultFontFamily }}\n\t\t\t\t\t\t\t\tonFocus={(ev): void => {\n\t\t\t\t\t\t\t\t\tev.currentTarget.setSelectionRange(0, null);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={(ev): void => {\n\t\t\t\t\t\t\t\t\tonTextChanged({\n\t\t\t\t\t\t\t\t\t\tplainText: ev.target.value,\n\t\t\t\t\t\t\t\t\t\trichText: plainTextToHTML(ev.target.value)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { memo, useCallback, useImperativeHandle, useMemo, useState } from 'react';\n\nimport {\n\tButton,\n\tContainer,\n\tTooltip,\n\tButtonProps,\n\tuseSnackbar,\n\tuseModal\n} from '@zextras/carbonio-design-system';\nimport { addBoard, t } from '@zextras/carbonio-shell-ui';\nimport { filter, map } from 'lodash';\nimport type { TinyMCE } from 'tinymce/tinymce';\n\nimport { checkSubjectAndAttachment } from './check-subject-attachment';\nimport DropZoneAttachment from './dropzone-attachment';\nimport { EditAttachmentsBlock } from './edit-attachments-block';\nimport { AddAttachmentsDropdown } from './parts/add-attachments-dropdown';\nimport { useKeepOrDiscardDraft } from './parts/delete-draft';\nimport { EditViewDraftSaveInfo } from './parts/edit-view-draft-save-info';\nimport { EditViewIdentitySelector } from './parts/edit-view-identity-selector';\nimport { EditViewSendButtons } from './parts/edit-view-send-buttons';\nimport { OptionsDropdown } from './parts/options-dropdown';\nimport { RecipientsRows } from './parts/recipients-rows';\nimport { SizeExceededWarningBanner } from './parts/size-exceeded-waring-banner';\nimport { SubjectRow } from './parts/subject-row';\nimport { TextEditorContainer } from './parts/text-editor-container';\nimport { WarningBanner } from './parts/warning-banner';\nimport { GapContainer, GapRow } from '../../../../commons/gap-container';\nimport {\n\tEDIT_VIEW_CLOSING_REASONS,\n\tEditViewActions,\n\tMAILS_ROUTE,\n\tTIMEOUTS\n} from '../../../../constants';\nimport { buildArrayFromFileList } from '../../../../helpers/files';\nimport { getAvailableAddresses, getIdentitiesDescriptors } from '../../../../helpers/identities';\nimport {\n\tuseEditorAutoSendTime,\n\tuseEditorDraftSave,\n\tuseEditorDraftSaveProcessStatus,\n\tuseEditorSend,\n\tuseEditorAttachments,\n\tdeleteEditor,\n\tuseEditorDid,\n\tuseEditorsStore\n} from '../../../../store/zustand/editor';\nimport { BoardContext, EditViewClosingReasons } from '../../../../types';\nimport { updateEditorWithSmartLinks } from '../../../../ui-actions/utils';\n\nexport type EditViewProp = {\n\teditorId: string;\n\tcloseController?: () => void;\n};\n\nexport type EditViewHandle = {\n\tcloseEditView: () => void;\n};\n\ntype FileSelectProps = {\n\teditor: TinyMCE;\n\tfiles: FileList;\n};\nconst MemoizedTextEditorContainer = memo(TextEditorContainer);\nconst MemoizedRecipientsRows = memo(RecipientsRows);\nconst MemoizedSubjectRow = memo(SubjectRow);\nconst MemoizedOptionsDropdown = memo(OptionsDropdown);\nconst MemoizedAddAttachmentsDropdown = memo(AddAttachmentsDropdown);\nconst MemoizedEditViewIdentitySelector = memo(EditViewIdentitySelector);\n\nconst SendToYourselfWarningBanner = ({\n\teditorId\n}: {\n\teditorId: string;\n}): React.JSX.Element | null => {\n\tconst toValue = useEditorsStore((state) => state.editors[editorId].recipients.to);\n\n\t// TODO ask designers if the check must be performed only on TO or also on CC and BCC\n\tconst isSendingToYourself = useMemo(() => {\n\t\tconst availableAddresses = map(\n\t\t\tgetAvailableAddresses(),\n\t\t\t(availableAddress) => availableAddress.address\n\t\t);\n\t\tconst recipientsAddresses = map(toValue, (recipient) => recipient.address);\n\n\t\treturn (\n\t\t\tfilter(recipientsAddresses, (recipientAddress): boolean =>\n\t\t\t\tavailableAddresses.includes(recipientAddress)\n\t\t\t).length > 0\n\t\t);\n\t}, [toValue]);\n\n\tconst warningBannerText = t('messages.warning.sending_to_yourself', {\n\t\tdefaultValue: 'You are sending this message to yourself'\n\t});\n\tconst WarningBannerIcon = 'AlertCircleOutline';\n\tconst WarningBannerIconColor = 'info';\n\n\treturn isSendingToYourself ? (\n\t\t<WarningBanner\n\t\t\ttext={warningBannerText}\n\t\t\ticon={WarningBannerIcon}\n\t\t\ticonColor={WarningBannerIconColor}\n\t\t\tbottomBorderColor=\"info\"\n\t\t/>\n\t) : null;\n};\n\nexport const EditView = React.forwardRef<EditViewHandle, EditViewProp>(function EditViewFn(\n\t{ editorId, closeController },\n\tref\n) {\n\tconst { setAutoSendTime } = useEditorAutoSendTime(editorId);\n\n\tconst [isMailSizeWarning, setIsMailSizeWarning] = useState<boolean>(false);\n\tconst { status: saveDraftAllowedStatus, saveDraft } = useEditorDraftSave(editorId);\n\tconst { did: draftId } = useEditorDid(editorId);\n\tconst { status: sendAllowedStatus, send: sendMessage } = useEditorSend(editorId);\n\tconst draftSaveProcessStatus = useEditorDraftSaveProcessStatus(editorId);\n\tconst createSnackbar = useSnackbar();\n\tconst [dropZoneEnabled, setDropZoneEnabled] = useState<boolean>(false);\n\tconst { addStandardAttachments, addInlineAttachments } = useEditorAttachments(editorId);\n\n\tconst keepOrDiscardDraft = useKeepOrDiscardDraft();\n\n\t// Performs cleanups and invoke the external callback\n\tconst close = useCallback(\n\t\t(reason?: EditViewClosingReasons) => {\n\t\t\tif (reason !== EDIT_VIEW_CLOSING_REASONS.EXTERNAL_CLOSE_REQUEST) {\n\t\t\t\tcloseController && closeController();\n\t\t\t}\n\t\t},\n\t\t[closeController]\n\t);\n\n\tconst onSaveClick = useCallback<ButtonProps['onClick']>((): void => {\n\t\tsaveDraft();\n\t}, [saveDraft]);\n\n\tuseImperativeHandle(\n\t\tref,\n\t\t() => ({\n\t\t\tcloseEditView: (): void => {\n\t\t\t\tif (!draftId) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tkeepOrDiscardDraft({\n\t\t\t\t\tonConfirm: (): void => {\n\t\t\t\t\t\tdeleteEditor({ id: editorId });\n\t\t\t\t\t\tclose(EDIT_VIEW_CLOSING_REASONS.EXTERNAL_CLOSE_REQUEST);\n\t\t\t\t\t},\n\t\t\t\t\tdraftId,\n\t\t\t\t\teditorId\n\t\t\t\t});\n\t\t\t}\n\t\t}),\n\t\t[close, draftId, editorId, keepOrDiscardDraft]\n\t);\n\n\tconst onSendCountdownTick = useCallback(\n\t\t(countdown: number, cancel: () => void): void => {\n\t\t\tcreateSnackbar({\n\t\t\t\tkey: 'send',\n\t\t\t\treplace: true,\n\t\t\t\ttype: 'info',\n\t\t\t\tlabel: t('messages.snackbar.sending_mail_in_count', {\n\t\t\t\t\tcount: countdown,\n\t\t\t\t\tdefaultValue_one: 'Sending your message in {{count}} second',\n\t\t\t\t\tdefaultValue_other: 'Sending your message in {{count}} seconds'\n\t\t\t\t}),\n\t\t\t\tautoHideTimeout: (countdown ?? 0) * 1000,\n\t\t\t\thideButton: !cancel,\n\t\t\t\tactionLabel: t('label.undo', 'Undo'),\n\t\t\t\tonActionClick: () => {\n\t\t\t\t\tcancel();\n\t\t\t\t\t// TODO move outside the component (editor-utils or a new help module?)\n\t\t\t\t\taddBoard<BoardContext>({\n\t\t\t\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.RESUME}&id=${editorId}`,\n\t\t\t\t\t\ttitle: ''\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[createSnackbar, editorId]\n\t);\n\n\tconst onSendError = useCallback((): void => {\n\t\tcreateSnackbar({\n\t\t\tkey: `mail-${editorId}`,\n\t\t\treplace: true,\n\t\t\ttype: 'error',\n\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\tautoHideTimeout: TIMEOUTS.SNACKBAR_DEFAULT_TIMEOUT,\n\t\t\thideButton: true\n\t\t});\n\t\t// TODO move outside the component (editor-utils or a new help module?)\n\t\taddBoard<BoardContext>({\n\t\t\turl: `${MAILS_ROUTE}/edit?action=${EditViewActions.RESUME}&id=${editorId}`,\n\t\t\ttitle: ''\n\t\t});\n\t}, [createSnackbar, editorId]);\n\n\tconst onSendComplete = useCallback((): void => {\n\t\tcreateSnackbar({\n\t\t\tkey: `mail-${editorId}`,\n\t\t\treplace: true,\n\t\t\ttype: 'success',\n\t\t\tlabel: t('messages.snackbar.mail_sent', 'Message sent'),\n\t\t\tautoHideTimeout: TIMEOUTS.SNACKBAR_DEFAULT_TIMEOUT,\n\t\t\thideButton: true\n\t\t});\n\t\tdeleteEditor({ id: editorId });\n\t}, [createSnackbar, editorId]);\n\n\tconst createModal = useModal();\n\n\tconst showIdentitySelector = useMemo<boolean>(() => getIdentitiesDescriptors().length > 1, []);\n\n\tconst onDragOverEvent = useCallback((event: React.DragEvent): void => {\n\t\tconst eventType = event?.dataTransfer?.types;\n\t\tif (eventType?.includes('contact')) {\n\t\t\tsetDropZoneEnabled(false);\n\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tsetDropZoneEnabled(true);\n\t}, []);\n\n\t// TODO complete with new attachment management\n\tconst onDropEvent = useCallback(\n\t\t(event: DragEvent): void => {\n\t\t\tevent.preventDefault();\n\t\t\tsetDropZoneEnabled(false);\n\t\t\tconst fileList = event?.dataTransfer?.files;\n\t\t\tif (!fileList) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst files = buildArrayFromFileList(fileList);\n\t\t\taddStandardAttachments(files);\n\t\t},\n\t\t[addStandardAttachments]\n\t);\n\n\tconst onDragLeaveEvent = useCallback((event: DragEvent): void => {\n\t\tevent.preventDefault();\n\t\tsetDropZoneEnabled(false);\n\t}, []);\n\n\tconst flexStart = 'flex-start';\n\tconst onInlineAttachmentsSelected = useCallback(\n\t\t({ editor: tinymce, files: fileList }: FileSelectProps): void => {\n\t\t\tconst files = buildArrayFromFileList(fileList);\n\t\t\taddInlineAttachments(files, {\n\t\t\t\tonSaveComplete: (inlineAttachments) => {\n\t\t\t\t\tinlineAttachments.forEach((inlineAttachment) => {\n\t\t\t\t\t\tconst img = `&nbsp;<img pnsrc=\"${inlineAttachment.cidUrl}\" data-mce-src=\"${inlineAttachment.cidUrl}\" src=\"${inlineAttachment.downloadServiceUrl}\" /><br/>`;\n\t\t\t\t\t\ttinymce?.activeEditor?.insertContent(img);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[addInlineAttachments]\n\t);\n\n\tconst { savedStandardAttachments } = useEditorAttachments(editorId);\n\n\tconst draftSmartLinks = useMemo(\n\t\t() =>\n\t\t\tsavedStandardAttachments\n\t\t\t\t.filter((attachment) => attachment.requiresSmartLinkConversion)\n\t\t\t\t.map((attachment) => ({ draftId: attachment.messageId, partName: attachment.partName })),\n\t\t[savedStandardAttachments]\n\t);\n\tconst [isConvertingToSmartLink, setIsConvertingToSmartLink] = useState(false);\n\n\tconst createSmartLinksAction = useCallback((): Promise<void> => {\n\t\tsetIsConvertingToSmartLink(true);\n\n\t\treturn updateEditorWithSmartLinks({ editorId, t, createSnackbar }).finally(() =>\n\t\t\tsetIsConvertingToSmartLink(false)\n\t\t);\n\t}, [editorId, createSnackbar]);\n\n\tconst onSendClick = useCallback((): void => {\n\t\tconst onConfirmCallback = async (): Promise<void> => {\n\t\t\tclose(EDIT_VIEW_CLOSING_REASONS.MESSAGE_SENT);\n\t\t\tif (draftSmartLinks.length > 0) {\n\t\t\t\ttry {\n\t\t\t\t\tawait createSmartLinksAction();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tonSendError?.();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsendMessage({\n\t\t\t\tonCountdownTick: onSendCountdownTick,\n\t\t\t\tonComplete: onSendComplete,\n\t\t\t\tonError: onSendError\n\t\t\t});\n\t\t};\n\t\tcheckSubjectAndAttachment({\n\t\t\teditorId,\n\t\t\thasAttachments: savedStandardAttachments.length > 0,\n\t\t\tonConfirmCallback,\n\t\t\tcreateModal\n\t\t});\n\t}, [\n\t\teditorId,\n\t\tsavedStandardAttachments,\n\t\tclose,\n\t\tcreateModal,\n\t\tdraftSmartLinks.length,\n\t\tsendMessage,\n\t\tonSendCountdownTick,\n\t\tonSendComplete,\n\t\tonSendError,\n\t\tcreateSmartLinksAction\n\t]);\n\n\tconst onSendLaterClick = useCallback(\n\t\t(scheduledTime: number): void => {\n\t\t\tconst onConfirmCallback = async (): Promise<void> => {\n\t\t\t\tif (draftSmartLinks.length > 0) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait createSmartLinksAction();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tonSendError?.();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetAutoSendTime(scheduledTime);\n\t\t\t\tsaveDraft();\n\t\t\t\tclose(EDIT_VIEW_CLOSING_REASONS.MESSAGE_SEND_SCHEDULED);\n\t\t\t};\n\t\t\tcheckSubjectAndAttachment({\n\t\t\t\teditorId,\n\t\t\t\tonConfirmCallback,\n\t\t\t\tcreateModal,\n\t\t\t\thasAttachments: savedStandardAttachments.length > 0\n\t\t\t});\n\t\t},\n\t\t[\n\t\t\teditorId,\n\t\t\tcreateModal,\n\t\t\tsavedStandardAttachments,\n\t\t\tdraftSmartLinks.length,\n\t\t\tsetAutoSendTime,\n\t\t\tsaveDraft,\n\t\t\tclose,\n\t\t\tcreateSmartLinksAction,\n\t\t\tonSendError\n\t\t]\n\t);\n\treturn (\n\t\t<Container\n\t\t\tdata-testid={'edit-view-editor'}\n\t\t\tmainAlignment={flexStart}\n\t\t\tcrossAlignment={flexStart}\n\t\t\tpadding={{ all: 'large' }}\n\t\t\tbackground={'white'}\n\t\t\tonDragOver={onDragOverEvent}\n\t\t>\n\t\t\t{dropZoneEnabled && (\n\t\t\t\t<DropZoneAttachment\n\t\t\t\t\tonDragOverEvent={onDragOverEvent}\n\t\t\t\t\tonDropEvent={onDropEvent}\n\t\t\t\t\tonDragLeaveEvent={onDragLeaveEvent}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<GapContainer mainAlignment={flexStart} crossAlignment={flexStart} gap={'large'}>\n\t\t\t\t{/* Header start */}\n\n\t\t\t\t<GapRow\n\t\t\t\t\tmainAlignment={showIdentitySelector ? 'space-between' : 'flex-end'}\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\tgap={'medium'}\n\t\t\t\t>\n\t\t\t\t\t{showIdentitySelector && <MemoizedEditViewIdentitySelector editorId={editorId} />}\n\n\t\t\t\t\t<GapRow mainAlignment={'flex-end'} gap={'medium'}>\n\t\t\t\t\t\t<MemoizedAddAttachmentsDropdown editorId={editorId} />\n\t\t\t\t\t\t<MemoizedOptionsDropdown editorId={editorId} />\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tlabel={saveDraftAllowedStatus?.reason}\n\t\t\t\t\t\t\tdisabled={saveDraftAllowedStatus?.allowed}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdata-testid=\"BtnSaveMail\"\n\t\t\t\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\t\t\t\tonClick={onSaveClick}\n\t\t\t\t\t\t\t\tlabel={`${t('label.save', 'Save')}`}\n\t\t\t\t\t\t\t\tdisabled={!saveDraftAllowedStatus?.allowed}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<EditViewSendButtons\n\t\t\t\t\t\t\tonSendLater={onSendLaterClick}\n\t\t\t\t\t\t\tonSendNow={onSendClick}\n\t\t\t\t\t\t\tdisabled={isMailSizeWarning || !sendAllowedStatus?.allowed || isConvertingToSmartLink}\n\t\t\t\t\t\t\ttooltip={sendAllowedStatus?.reason ?? ''}\n\t\t\t\t\t\t\tisLoading={isConvertingToSmartLink}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GapRow>\n\t\t\t\t</GapRow>\n\n\t\t\t\t{/* Header end */}\n\n\t\t\t\t<SendToYourselfWarningBanner editorId={editorId} />\n\t\t\t\t<SizeExceededWarningBanner\n\t\t\t\t\teditorId={editorId}\n\t\t\t\t\tisMailSizeWarning={isMailSizeWarning}\n\t\t\t\t\tsetIsMailSizeWarning={setIsMailSizeWarning}\n\t\t\t\t/>\n\t\t\t\t<GapContainer\n\t\t\t\t\tmainAlignment={flexStart}\n\t\t\t\t\tcrossAlignment={flexStart}\n\t\t\t\t\tbackground={'white'}\n\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\t\tgap={'small'}\n\t\t\t\t>\n\t\t\t\t\t<Container mainAlignment={flexStart} crossAlignment={flexStart} height={'fit'}>\n\t\t\t\t\t\t<MemoizedRecipientsRows editorId={editorId} />\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container mainAlignment={flexStart} crossAlignment={flexStart} height={'fit'}>\n\t\t\t\t\t\t<MemoizedSubjectRow editorId={editorId} />\n\t\t\t\t\t</Container>\n\n\t\t\t\t\t<EditAttachmentsBlock editorId={editorId} />\n\n\t\t\t\t\t<MemoizedTextEditorContainer\n\t\t\t\t\t\tonDragOver={onDragOverEvent}\n\t\t\t\t\t\tonFilesSelected={onInlineAttachmentsSelected}\n\t\t\t\t\t\teditorId={editorId}\n\t\t\t\t\t\tminHeight={0}\n\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<EditViewDraftSaveInfo processStatus={draftSaveProcessStatus} />\n\t\t\t\t</GapContainer>\n\t\t\t</GapContainer>\n\t\t</Container>\n\t);\n});\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useLocation } from 'react-router-dom';\n\nexport function useQueryParam(name: string, defaultValue?: string): string | undefined {\n\treturn new URLSearchParams(useLocation().search).get(name) || defaultValue;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, memo, useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { Button, Container } from '@zextras/carbonio-design-system';\nimport {\n\tupdateBoardContext,\n\tcloseBoard,\n\tt,\n\tuseBoard,\n\tuseBoardHooks\n} from '@zextras/carbonio-shell-ui';\nimport { noop } from 'lodash';\n\nimport { EditView, EditViewHandle } from './edit-view';\nimport { EditViewActions } from '../../../../constants';\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/redux';\nimport { useQueryParam } from '../../../../hooks/use-query-param';\nimport { getMsg } from '../../../../store/actions';\nimport { selectMessage } from '../../../../store/messages-slice';\nimport { addEditor, useEditorSubject } from '../../../../store/zustand/editor';\nimport { generateEditor } from '../../../../store/zustand/editor/editor-generators';\nimport { EditViewBoardContext } from '../../../../types';\nimport type { EditViewActionsType, MailMessage } from '../../../../types';\n\nconst parseAndValidateParams = (\n\taction?: string,\n\tid?: string\n): { action: EditViewActionsType; id: string | undefined } => {\n\tconst resultAction = Object.values(EditViewActions).includes(action as EditViewActionsType)\n\t\t? (action as EditViewActionsType)\n\t\t: EditViewActions.NEW;\n\n\tconst resultId = action === EditViewActions.NEW ? undefined : id;\n\n\treturn { action: resultAction, id: resultId };\n};\n\nconst isActionRequiringMessage = (action: EditViewActionsType): boolean =>\n\t[\n\t\tEditViewActions.REPLY,\n\t\tEditViewActions.REPLY_ALL,\n\t\tEditViewActions.FORWARD,\n\t\tEditViewActions.EDIT_AS_NEW,\n\t\tEditViewActions.EDIT_AS_DRAFT\n\t].includes(action);\n\ntype EditViewControllerCoreProps = {\n\taction: EditViewActionsType;\n\tentityId?: string;\n\tmessage?: MailMessage;\n};\n\nconst MemoizedEditView = memo(EditView);\n\nconst EditViewControllerCore: FC<EditViewControllerCoreProps> = ({ action, entityId, message }) => {\n\tconst messagesStoreDispatch = useAppDispatch();\n\tconst board = useBoard<EditViewBoardContext>();\n\tconst boardUtilities = useBoardHooks();\n\tconst editViewRef = useRef<EditViewHandle>(null);\n\tconst isCloseRequestFromEditor = useRef<boolean>(false);\n\n\t/*\n\t * If the current component is running inside a board\n\t * its context is examined to get an existing editor id\n\t * and to try to resume it. This will prevent the reset\n\t * of the editor when the board re-renders.\n\t *\n\t * Otherwise a new editor is generated and added using\n\t * the given parameters\n\t */\n\tconst existingEditorId = board.context?.editorId;\n\tif (existingEditorId) {\n\t\taction = EditViewActions.RESUME;\n\t\tentityId = existingEditorId;\n\t}\n\n\t// Create or resume editor\n\tconst compositionData = board.context?.compositionData;\n\tconst editor = generateEditor({\n\t\taction,\n\t\tid: entityId,\n\t\tmessagesStoreDispatch,\n\t\tmessage,\n\t\tcompositionData\n\t});\n\tif (!editor) {\n\t\tthrow new Error('No editor provided');\n\t}\n\n\tif (action !== EditViewActions.RESUME) {\n\t\taddEditor({ id: editor.id, editor });\n\t}\n\n\tconst updateBoard = useMemo(() => boardUtilities?.updateBoard, [boardUtilities?.updateBoard]);\n\n\t// Set the onClose callback for the board\n\tuseEffect(() => {\n\t\tupdateBoard({\n\t\t\tonClose: () => {\n\t\t\t\t/*\n\t\t\t\t * If the close is requested by the editor there is nothing to do.\n\t\t\t\t * Otherwise the closeEditView handle is invoked to inform the editor\n\t\t\t\t * about the close event\n\t\t\t\t */\n\t\t\t\tif (isCloseRequestFromEditor.current) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reset the flag\n\t\t\t\tisCloseRequestFromEditor.current = false;\n\n\t\t\t\t// Request the editor to close itself\n\t\t\t\teditViewRef?.current?.closeEditView && editViewRef.current.closeEditView();\n\t\t\t}\n\t\t});\n\t}, [updateBoard]);\n\n\tconst closeController = useCallback(() => {\n\t\t// Flag the closing request as coming from the editor\n\t\tisCloseRequestFromEditor.current = true;\n\t\tcloseBoard(board.id);\n\t}, [board.id]);\n\n\t/*\n\t * Store the editor id inside the board context (if existing)\n\t * to retrieve the same editor if the board re-renders\n\t */\n\tif (board && !board.context?.editorId) {\n\t\tupdateBoardContext(board.id, { ...board.context, editorId: editor.id });\n\t}\n\n\tconst { subject } = useEditorSubject(editor.id);\n\tif (subject && board?.title !== subject) {\n\t\tupdateBoard({\n\t\t\ttitle: subject ?? t('messages,new_email', 'new email')\n\t\t});\n\t}\n\n\treturn (\n\t\t<MemoizedEditView editorId={editor.id} ref={editViewRef} closeController={closeController} />\n\t);\n};\n\nconst MemoizedEditViewControllerCore = memo(EditViewControllerCore);\n\n/**\n * Get and parse the parameters. Get the original message if it is needed\n * @constructor\n */\nconst EditViewController: FC = () => {\n\tconst messagesStoreDispatch = useAppDispatch();\n\n\t// TODO check why the useQueryParams triggers 2 renders\n\tconst { action, id } = parseAndValidateParams(useQueryParam('action'), useQueryParam('id'));\n\n\tconst isMessageRequired = useMemo<boolean>(\n\t\t(): boolean => isActionRequiringMessage(action) && !!id,\n\t\t[action, id]\n\t);\n\n\tconst message = useAppSelector((state) =>\n\t\tisMessageRequired && id ? selectMessage(state, id) : undefined\n\t);\n\n\tconst isMessageLoadingRequired = useMemo<boolean>(\n\t\t(): boolean => isMessageRequired && !message?.isComplete,\n\t\t[isMessageRequired, message?.isComplete]\n\t);\n\n\t/**\n\t * Load the original message if it's required and is not\n\t * in the store or is not complete\n\t */\n\tuseEffect(() => {\n\t\tif (isMessageLoadingRequired && !!id) {\n\t\t\tmessagesStoreDispatch(getMsg({ msgId: id }));\n\t\t}\n\t}, [id, isMessageLoadingRequired, messagesStoreDispatch]);\n\n\treturn isMessageLoadingRequired ? (\n\t\t<Container>\n\t\t\t<Button loading disabled label=\"\" type=\"ghost\" onClick={noop} />\n\t\t</Container>\n\t) : (\n\t\t<MemoizedEditViewControllerCore entityId={id} action={action} message={message} />\n\t);\n};\nexport default EditViewController;\n"],"names":["rotate","keyframes","AnimatedLoaderSvg","styled","withConfig","displayName","componentId","AnimatedLoader","props","React","_extends","id","xmlns","viewBox","shapeRendering","textRendering","fill","d","stroke","strokeWidth","transform","StyledGapContainer","Container","theme","gap","getPadding","StyledGapRow","Row","GapContainer","children","rest","ref","GapRow","attachmentWords","t","getSubjectOrAttachmentError","attachmentIsExpected","hasAttachments","subject","attachmentIsMissing","checkSubjectAndAttachment","editorId","onConfirmCallback","createModal","editor","getEditor","text","some","el","msgContent","richText","split","LineType","HTML_SEP_ID","plainText","PLAINTEXT_SEP","toLowerCase","includes","closeModal","title","confirmLabel","dismissLabel","showCloseIcon","onConfirm","onClose","onSecondaryAction","StoreProvider","Text","overflow","style","paddingTop","paddingBottom","BackDropLayout","DropBackground","palette","primary","regular","BackDropLayoutInnerBox","gray6","BackDropLayoutContentBox","DropBoxIconGroup","DetailText","DropZoneAttachment","onDragOverEvent","onDropEvent","onDragLeaveEvent","onDragOver","onDrop","onDragLeave","borderRadius","Padding","all","mainAlignment","orientation","right","left","Icon","icon","height","width","color","weight","top","size","UploadingRow","AttachmentUploadStatus","uploadStatus","cancelUpload","showCompleted","setShowCompleted","useState","useEffect","timer","status","setTimeout","TIMEOUTS","COMPLETED_UPLOAD_NOTIFICATION_VISIBILITY","clearTimeout","padding","horizontal","vertical","crossAlignment","progress","IconButton","customSize","iconSize","paddingSize","onClick","ToggleSmartLinkButton","attachment","_","isFilesUiAvailable","getIntegratedFunction","requiresSmartLinkConversion","isSavedAttachment","toggleSmartLink","useEditorAttachments","saveDraft","useEditorDraftSave","toggleSmartLinkAction","useCallback","draftId","did","partName","Tooltip","label","themeOverride","icons","GlobalStyle","createGlobalStyle","StyledWrapper","ThemeProvider","loadDefaultFont","extension","AttachmentHoverBarContainer","AttachmentContainer","attrs","hoverBarDisabled","background","getColor","sizes","small","AttachmentLink","AttachmentExtension","font","AttachmentPreview","getAttachmentExtension","value","attachmentExtensionContent","useMemo","sizeLabel","getSizeDescription","inputRef","useRef","inputRef2","Error","uploadProcess","useEditorUploadProcess","uploadId","debouncedSaveDraft","useSaveDraftFromEditor","attachmentStateInfo","useEditorsStore","state","unsavedAttachmentIndex","getUnsavedAttachmentIndex","editors","unsavedAttachments","abortController","uploadAbortController","cancel","abort","getState","removeUnsavedAttachment","computeAndUpdateEditorStatus","isUnsavedAttachment","removeSavedAttachment","useEditorSubject","removeAttachment","attachItemColor","useAttachmentIconColor","attachmentExtensionColor","isUploading","isAttachmentUploading","link","getAttachmentsLink","messageId","messageSubject","attachments","attachmentType","contentType","isDeletable","useTheme","backgroundColor","infoBanner","filename","ev","preventDefault","current","click","takeAvailableSpace","bottom","mimeType","defaultValue","rel","target","href","composeAttachmentDownloadUrl","FileInput","ResizedIconCheckbox","gray2","IconCheckbox","TextArea","EditorWrapper","large","gray4","BannerContainer","bottomBorderColor","undefined","$bottomBorderColor","RowContainer","ColContainer","occupyFull","StickyTime","StickyTimeContainer","EditAttachmentsBlock","expanded","setExpanded","savedStandardAttachments","unsavedStandardAttachments","removeStandardAttachments","allAttachments","attachmentsLabel","count","length","defaultValue_one","defaultValue_other","StyledComp","wrap","map","slice","index","key","cursor","Link","buildArrayFromFileList","filesList","files","fileIndex","push","SelectorContainer","focus","AddAttachmentsDropdown","control","useForm","setText","useEditorText","addStandardAttachments","addUploadedAttachment","addFilesFromLocal","fileList","onUploadFromFilesComplete","filesNodes","forEach","filesNode","attachmentId","fileName","addPublicLinkFromFiles","filesResponse","textWithLink","i","url","join","concat","uploadFromFiles","isUploadFromFiles","useUploadFromFiles","onComplete","uploadTo","isAvailable","useIntegratedFunction","createSnackbar","useSnackbar","nodes","promises","node","async","nodeId","targetModule","uploadToTarget","then","name","mime_type","Promise","allSettled","res","success","filter","allSuccess","allFails","type","replace","hideButton","autoHideTimeout","getLink","isGetLinkAvailable","useGetPublicUrl","useUiUtilities","getLinkAvailable","description","selectNodes","isSelectNodesAvailable","uploadFromFilesSelectionConfig","confirmAction","allowFiles","allowFolders","getPublicLinkSelectionConfig","onLocalFileClick","actionsItems","localFileAction","customComponent","filesNodeAction","filesLinkAction","compact","Controller","render","onChange","multiple","Dropdown","items","display","DeleteDraftModal","ids","onDelete","dispatch","useAppDispatch","onCloseModal","onDraft","moveMsgToTrash","useMoveMsgToTrash","onDeleteAction","folderId","FOLDERS","DRAFTS","ModalHeader","ModalFooter","secondaryBtnType","secondaryAction","secondaryLabel","secondaryColor","EditViewDraftSaveInfo","processStatus","visible","setVisible","timeoutId","DRAFT_INFO_HIDING_DELAY","time","moment","lastSaveTimestamp","format","createIdentitySelectorItemElement","identity","useExtendedDescription","fallbackDescription","identityDescription","getIdentityDescription","fromAddress","Avatar","identityName","fromDisplay","identityDisplayName","EditViewIdentitySelector","identityId","setIdentityId","useEditorIdentityId","open","setOpen","noName","getNoIdentityPlaceholder","selected","getIdentityDescriptor","selectedDescription","identities","getIdentitiesDescriptors","onIdentitySelected","textWithSignature","getMailBodyWithSignature","defaultSignatureId","toggleOpen","s","close","dropdownEntries","maxWidth","placement","selectedBackgroundColor","noop","CustomInputWrapper","CustomButtonWrapper","DatePickerCustomComponent","forwardRef","input","setInput","minWidth","Input","hideBorder","disabled","iconColor","SendLaterModal","onAutoSendTimeSelected","selectedTime","setSelectedTime","modalTitle","datePickerLabel","onTimeSelected","valueOf","minTime","isBefore","Date","hours","minutes","maxTime","DateTimePicker","isClearable","dateFormat","minDate","timeCaption","customInput","toDateString","EditViewSendButtons","onSendLater","onSendNow","tooltip","isLoading","useUserSettings","useModal","onSendLaterClick","maxHeight","autoSendTime","isSendLaterAllowed","zimbraFeatureMailSendLaterEnabled","multiBtnActions","MultiButton","disabledPrimary","disabledSecondary","Button","OptionsDropdown","isRichText","setIsRichText","useEditorIsRichText","isUrgent","setIsUrgent","useEditorIsUrgent","requestReadReceipt","setRequestReadReceipt","useEditorRequestReadReceipt","toggleRichTextEditor","toggleImportant","toggleReceiptRequest","options","emailRegex","RecipientsRow","recipients","onRecipientsChange","dataTestid","orderedAccountIds","ContactInput","useIntegratedComponent","onContactInputChange","contacts","updatedRecipients","contact","email","error","address","firstName","fullName","chipInputValues","recipient","placeholder","maxChips","hasError","dragAndDropEnabled","ChipInput","onAdd","test","data","reject","RecipientsRows","toRecipients","setToRecipients","useEditorToRecipients","ccRecipients","setCcRecipients","useEditorCcRecipients","bccRecipients","setBccRecipients","useEditorBccRecipients","showCc","setShowCc","showBcc","setShowBcc","toggleCc","show","toggleBcc","setOrderedAccountIds","selectedIdentity","priorityAccountAddress","sharedAccounts","getShareInfoRequest","folders","account","ownerId","ownerEmail","defaultAccount","getUserAccount","getDefaultAccount","finalList","sortedList","sortBy","item","getOrderedAccountIds","ownerAccount","catch","onToChange","onCcChange","onBccChange","ParticipantRole","TO","forceActive","CARBON_COPY","BLIND_CARBON_COPY","WarningBanner","SizeExceededWarningBanner","isMailSizeWarning","setIsMailSizeWarning","maxMessageSize","zimbraMtaMaxMessageSize","useTranslation","maxAllowedMailSize","parseInt","editorSize","totalSmartLinksSize","calculateMailSize","mailSizeWarningBannerText","SubjectRow","setSubject","onSubjectChange","event","TextEditorContainer","onFilesSelected","minHeight","Composer","composerIsAvailable","isFirstChangeEventFired","setIsFirstChangeEventFired","onTextChanged","prefs","defaultFontFamily","String","zimbraPrefHtmlEditorDefaultFontFamily","onFileSelect","onEditorChange","customInitOptions","toolbar_sticky","ui_mode","content_style","onFocus","fontFamily","currentTarget","setSelectionRange","plainTextToHTML","MemoizedTextEditorContainer","memo","MemoizedRecipientsRows","MemoizedSubjectRow","MemoizedOptionsDropdown","MemoizedAddAttachmentsDropdown","MemoizedEditViewIdentitySelector","SendToYourselfWarningBanner","toValue","to","isSendingToYourself","availableAddresses","getAvailableAddresses","availableAddress","recipientsAddresses","recipientAddress","warningBannerText","EditView","closeController","setAutoSendTime","useEditorAutoSendTime","saveDraftAllowedStatus","useEditorDid","sendAllowedStatus","send","sendMessage","useEditorSend","draftSaveProcessStatus","useEditorDraftSaveProcessStatus","dropZoneEnabled","setDropZoneEnabled","addInlineAttachments","keepOrDiscardDraft","useKeepOrDiscardDraft","useGlobalModal","deleteEditor","reason","EDIT_VIEW_CLOSING_REASONS","EXTERNAL_CLOSE_REQUEST","onSaveClick","useImperativeHandle","closeEditView","onSendCountdownTick","countdown","actionLabel","onActionClick","addBoard","MAILS_ROUTE","EditViewActions","RESUME","onSendError","SNACKBAR_DEFAULT_TIMEOUT","onSendComplete","showIdentitySelector","eventType","dataTransfer","types","flexStart","onInlineAttachmentsSelected","tinymce","onSaveComplete","inlineAttachments","inlineAttachment","img","cidUrl","downloadServiceUrl","activeEditor","insertContent","draftSmartLinks","isConvertingToSmartLink","setIsConvertingToSmartLink","createSmartLinksAction","updateEditorWithSmartLinks","finally","onSendClick","MESSAGE_SENT","err","onCountdownTick","onError","scheduledTime","MESSAGE_SEND_SCHEDULED","allowed","useQueryParam","URLSearchParams","useLocation","search","get","MemoizedEditView","EditViewControllerCore","action","entityId","message","messagesStoreDispatch","board","useBoard","boardUtilities","useBoardHooks","editViewRef","isCloseRequestFromEditor","existingEditorId","context","compositionData","generateEditor","addEditor","updateBoard","closeBoard","updateBoardContext","MemoizedEditViewControllerCore","EditViewController","parseAndValidateParams","Object","values","NEW","isMessageRequired","REPLY","REPLY_ALL","FORWARD","EDIT_AS_NEW","EDIT_AS_DRAFT","isActionRequiringMessage","useAppSelector","selectMessage","isMessageLoadingRequired","isComplete","getMsg","msgId","loading"],"sourceRoot":""}