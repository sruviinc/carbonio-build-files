{"version":3,"file":"appView.981b7abd.chunk.js","mappings":"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","sources":["webpack://carbonio-tasks-ui/./src/apollo/cacheUtils.ts","webpack://carbonio-tasks-ui/./src/contexts/index.ts","webpack://carbonio-tasks-ui/./src/hooks/useRandomPlaceholder.ts","webpack://carbonio-tasks-ui/./src/hooks/useMemoCompare.ts","webpack://carbonio-tasks-ui/./src/components/EmptyDisplayer.tsx","webpack://carbonio-tasks-ui/./src/components/ActionsHeader.tsx","webpack://carbonio-tasks-ui/./src/hooks/useNavigation.ts","webpack://carbonio-tasks-ui/./src/hooks/useActiveItem.ts","webpack://carbonio-tasks-ui/./src/components/DisplayerHeader.tsx","webpack://carbonio-tasks-ui/./src/hooks/useReminder.ts","webpack://carbonio-tasks-ui/./src/components/Reminder.tsx","webpack://carbonio-tasks-ui/./src/components/TaskDetails.tsx","webpack://carbonio-tasks-ui/./src/hooks/useActions.tsx","webpack://carbonio-tasks-ui/./src/hooks/useCompleteAction.ts","webpack://carbonio-tasks-ui/./src/hooks/useReopenAction.ts","webpack://carbonio-tasks-ui/./src/hooks/useTrashAction.ts","webpack://carbonio-tasks-ui/./src/components/TaskDisplayer.tsx","webpack://carbonio-tasks-ui/./src/components/Displayer.tsx","webpack://carbonio-tasks-ui/./src/components/ContextualMenu.tsx","webpack://carbonio-tasks-ui/./src/components/ListItemHoverBar.tsx","webpack://carbonio-tasks-ui/./src/components/StyledComponents.tsx","webpack://carbonio-tasks-ui/./src/components/SruviPriorityIcon.tsx","webpack://carbonio-tasks-ui/./src/components/ListItemContent.tsx","webpack://carbonio-tasks-ui/./src/components/TaskList.tsx","webpack://carbonio-tasks-ui/./src/views/app/TasksView.tsx","webpack://carbonio-tasks-ui/./src/views/app/AppView.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { type Reference } from '@apollo/client';\nimport { type Modifier } from '@apollo/client/cache';\nimport { filter, findIndex, map } from 'lodash';\n\nimport { type Task } from '../gql/types';\n\nexport const removeTaskFromList: (\n\t...tasks: Pick<Task, '__typename' | 'id'>[]\n) => Modifier<readonly Reference[] | Reference> =\n\t(...tasks) =>\n\t(existing, { toReference }) => {\n\t\tif (existing && Array.isArray(existing)) {\n\t\t\tconst taskRefs = map(tasks, (task) => toReference(task)?.__ref);\n\t\t\treturn filter(existing, (itemRef) => !taskRefs.includes(itemRef.__ref));\n\t\t}\n\t\treturn existing;\n\t};\n\nexport const addTaskToList: (\n\ttask: Pick<Task, '__typename' | 'id'>\n) => Modifier<readonly Reference[] | Reference> =\n\t(task) =>\n\t(existing, { toReference, readField }) => {\n\t\tconst newTaskRef = toReference(task);\n\t\tif (existing && newTaskRef && Array.isArray(existing)) {\n\t\t\tconst updatedList = [...existing];\n\t\t\tconst index = findIndex(existing, (existingRef) => {\n\t\t\t\tconst existingTaskCreatedAt = readField<number>({\n\t\t\t\t\tfieldName: 'createdAt',\n\t\t\t\t\tfrom: existingRef\n\t\t\t\t});\n\t\t\t\tconst newTaskCreatedAt = readField<number>({ fieldName: 'createdAt', from: newTaskRef });\n\t\t\t\treturn (\n\t\t\t\t\texistingTaskCreatedAt !== undefined &&\n\t\t\t\t\tnewTaskCreatedAt !== undefined &&\n\t\t\t\t\texistingTaskCreatedAt < newTaskCreatedAt\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (index >= 0) {\n\t\t\t\tupdatedList.splice(index, 0, newTaskRef);\n\t\t\t} else {\n\t\t\t\tupdatedList.push(newTaskRef);\n\t\t\t}\n\t\t\treturn updatedList;\n\t\t}\n\t\treturn existing;\n\t};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { createContext } from 'react';\n\nexport const ListContext = createContext<{\n\tisFull: boolean;\n\tsetIsFull?: (full: boolean) => void;\n}>({\n\tisFull: false,\n\tsetIsFull: () => {\n\t\t// not implemented\n\t}\n});\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { type TOptions } from 'i18next';\nimport { debounce, isEqual, sample } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { useMemoCompare } from './useMemoCompare';\nimport { RANDOM_PLACEHOLDER_TIMEOUT } from '../constants';\nimport { type OneOrMany } from '../types/utils';\n\nexport const useRandomPlaceholder = <TReturnType extends string | object>(\n\ttranslationKey: string,\n\ttOptions: TOptions\n): [randomPlaceholder: TReturnType | undefined, updateRandomPlaceholder: () => void] => {\n\tconst [t] = useTranslation();\n\tconst [randomPlaceholder, setRandomPlaceholder] = useState<TReturnType>();\n\n\tconst tOptionsMemoized = useMemoCompare(tOptions, isEqual);\n\n\tconst placeholders = useMemo<OneOrMany<TReturnType>>(\n\t\t() =>\n\t\t\t/* i18next-extract-disable-next-line */\n\t\t\tt(translationKey, {\n\t\t\t\t...tOptionsMemoized,\n\t\t\t\treturnObjects: true\n\t\t\t}),\n\t\t[t, tOptionsMemoized, translationKey]\n\t);\n\n\tconst updateRandomPlaceholderDebounced = useMemo(\n\t\t() =>\n\t\t\tdebounce(\n\t\t\t\t($placeholders: OneOrMany<TReturnType>) => {\n\t\t\t\t\tconst result = $placeholders instanceof Array ? sample($placeholders) : $placeholders;\n\t\t\t\t\tsetRandomPlaceholder(result);\n\t\t\t\t},\n\t\t\t\tRANDOM_PLACEHOLDER_TIMEOUT,\n\t\t\t\t{ leading: false, trailing: true }\n\t\t\t),\n\t\t[]\n\t);\n\n\tuseEffect(() => {\n\t\tupdateRandomPlaceholderDebounced(placeholders);\n\n\t\treturn () => {\n\t\t\tupdateRandomPlaceholderDebounced.cancel();\n\t\t};\n\t}, [placeholders, updateRandomPlaceholderDebounced]);\n\n\tconst updateRandomPlaceholder = useCallback(() => {\n\t\tupdateRandomPlaceholderDebounced(placeholders);\n\t}, [placeholders, updateRandomPlaceholderDebounced]);\n\n\treturn [randomPlaceholder, updateRandomPlaceholder];\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useEffect, useRef } from 'react';\n\nexport function useMemoCompare<T>(\n\tnext: T,\n\tcompare: (previous: T | undefined, next: T) => boolean\n): T {\n\t// Ref for storing previous value\n\tconst previousRef = useRef<T>();\n\tconst previous = previousRef.current;\n\t// Pass previous and next value to compare function\n\t// to determine whether to consider them equal.\n\tconst isEqual = compare(previous, next);\n\t// If not equal update previousRef to next value.\n\t// We only update if not equal so that this hook continues to return\n\t// the same old value if compare keeps returning true.\n\tuseEffect(() => {\n\t\tif (!isEqual) {\n\t\t\tpreviousRef.current = next;\n\t\t}\n\t}, [isEqual, next]);\n\t// Finally, if equal then return the previous value\n\tif (previous == null) {\n\t\treturn next;\n\t}\n\treturn isEqual ? previous : next;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useContext } from 'react';\n\nimport { Container, Padding } from '@zextras/carbonio-design-system';\n\nimport { Text } from './Text';\nimport { ListContext } from '../contexts';\nimport { useRandomPlaceholder } from '../hooks/useRandomPlaceholder';\n\ninterface EmptyDisplayerProps {\n\ttranslationKey: string;\n}\n\nexport const EmptyDisplayer = ({ translationKey }: EmptyDisplayerProps): React.JSX.Element => {\n\tconst { isFull } = useContext(ListContext);\n\tconst [randomPlaceholder] = useRandomPlaceholder<{\n\t\ttitle: string;\n\t\tmessage?: string;\n\t}>(translationKey, {\n\t\tcontext: (isFull && 'limitReached') || '',\n\t\tdefaultValue: [\n\t\t\tisFull\n\t\t\t\t? {\n\t\t\t\t\t\ttitle: 'You have reached the maximum number of tasks.',\n\t\t\t\t\t\tmessage: 'Delete your previous tasks to create more.'\n\t\t\t\t\t}\n\t\t\t\t: {\n\t\t\t\t\t\ttitle: 'Start organizing your day.',\n\t\t\t\t\t\tmessage: 'Click the \"NEW\" button to create a Task.'\n\t\t\t\t\t}\n\t\t]\n\t});\n\n\treturn (\n\t\t<Container>\n\t\t\t<Padding all=\"medium\">\n\t\t\t\t<Text color=\"gray1\" overflow=\"break-word\" weight=\"bold\" size=\"large\" centered>\n\t\t\t\t\t{randomPlaceholder?.title || ''}\n\t\t\t\t</Text>\n\t\t\t</Padding>\n\t\t\t<Text size=\"small\" color=\"gray1\" overflow=\"break-word\" width=\"60%\" centered>\n\t\t\t\t{randomPlaceholder?.message || ''}\n\t\t\t</Text>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport { type Action, Container } from '@zextras/carbonio-design-system';\nimport { Grid, Button } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport ModeEditOutlineRoundedIcon from '@mui/icons-material/ModeEditOutlineRounded';\n\ninterface ActionsHeaderProps {\n\tactions: Action[];\n}\n\nconst Task01Icon = (props: React.SVGProps<SVGSVGElement>) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\twidth={16}\n\t\theight={16}\n\t\tfill={'none'}\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\td=\"M7.99805 16H11.998M7.99805 11H15.998\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M7.5 3.5C5.9442 3.54667 5.01661 3.71984 4.37477 4.36227C3.49609 5.24177 3.49609 6.6573 3.49609 9.48836L3.49609 15.9944C3.49609 18.8255 3.49609 20.241 4.37477 21.1205C5.25345 22 6.66767 22 9.49609 22L14.4961 22C17.3245 22 18.7387 22 19.6174 21.1205C20.4961 20.241 20.4961 18.8255 20.4961 15.9944V9.48836C20.4961 6.6573 20.4961 5.24177 19.6174 4.36228C18.9756 3.71984 18.048 3.54667 16.4922 3.5\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M7.49609 3.75C7.49609 2.7835 8.2796 2 9.24609 2H14.7461C15.7126 2 16.4961 2.7835 16.4961 3.75C16.4961 4.7165 15.7126 5.5 14.7461 5.5H9.24609C8.2796 5.5 7.49609 4.7165 7.49609 3.75Z\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t/>\n\t</svg>\n);\n\nconst TaskDone01Icon = (props: React.SVGProps<SVGSVGElement>) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\twidth={16}\n\t\theight={16}\n\t\tfill={'none'}\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\td=\"M13.5 20C13.5 20 14.5 20 15.5 22C15.5 22 18.6765 17 21.5 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t/>\n\t\t<path d=\"M7 16H11M7 11H15\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n\t\t<path\n\t\t\td=\"M6.5 3.5C4.9442 3.54667 4.01661 3.71984 3.37477 4.36227C2.49609 5.24177 2.49609 6.6573 2.49609 9.48836L2.49609 15.9944C2.49609 18.8255 2.49609 20.241 3.37477 21.1205C4.25345 22 5.66767 22 8.49609 22L10.9961 22M15.4922 3.5C17.048 3.54667 17.9756 3.71984 18.6174 4.36228C19.4961 5.24177 19.4961 6.6573 19.4961 9.48836V13.5\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M6.49609 3.75C6.49609 2.7835 7.2796 2 8.24609 2H13.7461C14.7126 2 15.4961 2.7835 15.4961 3.75C15.4961 4.7165 14.7126 5.5 13.7461 5.5H8.24609C7.2796 5.5 6.49609 4.7165 6.49609 3.75Z\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t/>\n\t</svg>\n);\n\nexport const ActionsHeader = ({ actions }: ActionsHeaderProps): React.JSX.Element => {\n\tconst actionButtons = useMemo<React.JSX.Element[]>(\n\t\t() =>\n\t\t\tactions.map((action) => (\n\t\t\t\t// <Button\n\t\t\t\t// \tkey={action.id}\n\t\t\t\t// \tlabel={action.label}\n\t\t\t\t// \ttype={'outlined'}\n\t\t\t\t// \tonClick={action.onClick}\n\t\t\t\t// \tsize={'medium'}\n\t\t\t\t// \tbackgroundColor={'transparent'}\n\t\t\t\t// \tdisabled={action.disabled}\n\t\t\t\t// \tcolor={action.color}\n\t\t\t\t// ></Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tkey={action.id}\n\t\t\t\t\tonClick={action.onClick}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tdisabled={action.disabled}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: action.color,\n\t\t\t\t\t\tborderColor: action.label === 'Delete' ? 'white' : 'transparent',\n\t\t\t\t\t\tbackgroundColor: action.label === 'Delete' ? 'transparent' : 'transparent'\n\t\t\t\t\t}}\n\t\t\t\t\tstartIcon={\n\t\t\t\t\t\taction.label === 'Delete' ? (\n\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t) : action.label === 'Complete' ? (\n\t\t\t\t\t\t\t<TaskDone01Icon />\n\t\t\t\t\t\t) : action.label === 'Edit' ? (\n\t\t\t\t\t\t\t<ModeEditOutlineRoundedIcon />\n\t\t\t\t\t\t) : action.label === 'Uncomplete' ? (\n\t\t\t\t\t\t\t<Task01Icon />\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{action.label}\n\t\t\t\t</Button>\n\t\t\t)),\n\t\t[actions]\n\t);\n\n\treturn (\n\t\t// <Container\n\t\t// \torientation={'horizontal'}\n\t\t// \theight={'auto'}\n\t\t// \tpadding={{ vertical: '0.5rem' }}\n\t\t// \tgap={'0.25rem'}\n\t\t// \tmainAlignment={'flex-end'}\n\t\t// >\n\t\t// \t{actionButtons}\n\t\t// </Container>\n\n\t\t<div style={{ display: 'flex', width: '100%', height: 'auto' }}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tmargin: '16px',\n\t\t\t\t\tmarginTop: '0px',\n\t\t\t\t\tjustifyContent: 'space-around',\n\t\t\t\t\talignItems: 'start'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{actionButtons}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback } from 'react';\n\nimport { usePushHistoryCallback, useReplaceHistoryCallback } from '@zextras/carbonio-shell-ui';\n\nimport { TASKS_ROUTE } from '../constants';\n\nexport type UseNavigationReturnType = {\n\tnavigateTo: (path: string, options?: { replace?: boolean }) => void;\n};\n\nexport const useNavigation = (): UseNavigationReturnType => {\n\tconst pushHistory = usePushHistoryCallback();\n\tconst replaceHistory = useReplaceHistoryCallback();\n\n\tconst navigateTo = useCallback<UseNavigationReturnType['navigateTo']>(\n\t\t(path, options) => {\n\t\t\tif (options?.replace) {\n\t\t\t\treplaceHistory({\n\t\t\t\t\troute: TASKS_ROUTE,\n\t\t\t\t\tpath\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpushHistory({\n\t\t\t\t\troute: TASKS_ROUTE,\n\t\t\t\t\tpath\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[pushHistory, replaceHistory]\n\t);\n\n\treturn { navigateTo };\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useNavigation, type UseNavigationReturnType } from './useNavigation';\nimport type { TasksPathParams } from '../types/commons';\n\ntype UseActiveItemReturnType = {\n\tactiveItem: string;\n\tisActive: (id: string) => boolean;\n\tsetActive: (id: string, options?: Parameters<UseNavigationReturnType['navigateTo']>[1]) => void;\n\tremoveActive: (options?: Parameters<UseNavigationReturnType['navigateTo']>[1]) => void;\n};\n\nexport const useActiveItem = (): UseActiveItemReturnType => {\n\tconst { navigateTo } = useNavigation();\n\tconst { taskId } = useParams<TasksPathParams>();\n\tconst activeTaskIdRef = useRef<string>();\n\n\tuseEffect(() => {\n\t\tactiveTaskIdRef.current = taskId;\n\t}, [taskId]);\n\n\t/**\n\t * Check if the given id matches the active id.\n\t * The callback is memoized and is not recreated when the active item changes.\n\t * Use activeItem field if you need the dependency to update.\n\t */\n\tconst isActive = useCallback<UseActiveItemReturnType['isActive']>(\n\t\t(id) => activeTaskIdRef.current === id,\n\t\t[]\n\t);\n\n\tconst setActive = useCallback<UseActiveItemReturnType['setActive']>(\n\t\t(id, options) => {\n\t\t\tnavigateTo(id, options);\n\t\t},\n\t\t[navigateTo]\n\t);\n\n\tconst removeActive = useCallback<UseActiveItemReturnType['removeActive']>(\n\t\t(options) => {\n\t\t\tnavigateTo('/', options);\n\t\t},\n\t\t[navigateTo]\n\t);\n\n\treturn { activeItem: taskId, isActive, setActive, removeActive };\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { Container, Divider, Icon } from '@zextras/carbonio-design-system';\n\nimport { Text } from './Text';\nimport { Status } from '../gql/types';\nimport { useActiveItem } from '../hooks/useActiveItem';\nimport { Grid2, Typography, IconButton, Grid, Paper } from '@mui/material';\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport { BACKGROUND_HEADER_COLOR, PRIMARY_ICON_COLOR_ACTIVE } from '../sruvi/EditedColors';\nimport { ArrowBack } from '@mui/icons-material';\n\ninterface DisplayerHeaderProps {\n\ttitle: string;\n\tstatus: Status;\n\thello: (value: boolean) => void;\n}\n\nexport const DisplayerHeader = ({\n\ttitle,\n\tstatus,\n\thello\n}: DisplayerHeaderProps): React.JSX.Element => {\n\tconst { removeActive } = useActiveItem();\n\n\tconst closeDisplayer = useCallback(() => {\n\t\tremoveActive();\n\t\thello(true);\n\t}, [removeActive]);\n\n\treturn (\n\t\t// <Container orientation={'vertical'} height={'auto'} background={'white'}>\n\t\t// \t<Container\n\t\t// \t\tmainAlignment={'flex-start'}\n\t\t// \t\torientation={'horizontal'}\n\t\t// \t\twidth={'fill'}\n\t\t// \t\theight={'auto'}\n\t\t// \t\tpadding={{ top: '0.5rem', right: '0.5rem', bottom: '0.5rem', left: '1rem' }}\n\t\t// \t\tgap={'0.5rem'}\n\t\t// \t>\n\t\t// \t\t{status === Status.Complete && (\n\t\t// \t\t\t<Container width={'fit'} height={'fit'} flexShrink={0}>\n\t\t// \t\t\t\t<Icon size={'large'} icon={'Checkmark'} color={'success'} />\n\t\t// \t\t\t</Container>\n\t\t// \t\t)}\n\t\t// \t\t<Text withTooltip>{title}</Text>\n\t\t// \t\t<Container margin={{ left: 'auto' }} width={'fit'} height={'fit'} flexShrink={0}>\n\t\t// \t\t\t<IconButton icon={'CloseOutline'} size={'medium'} onClick={closeDisplayer} />\n\t\t// \t\t</Container>\n\t\t// \t</Container>\n\t\t// \t<Divider color={'gray3'} />\n\t\t// </Container>\n\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\twidth: '100%',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tposition: 'sticky',\n\t\t\t\ttop: '0',\n\t\t\t\tleft: '0',\n\t\t\t\tbackgroundColor: BACKGROUND_HEADER_COLOR,\n\t\t\t\tzIndex: 4\n\t\t\t}}\n\t\t>\n\t\t\t<div style={{ maxWidth: '100%', display: 'flex', flexDirection: 'column' }}>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t\tpadding: '16px',\n\t\t\t\t\t\tbackgroundColor: BACKGROUND_HEADER_COLOR\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{ width: '100%', display: 'flex', flexDirection: 'row', alignItems: 'center' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton onClick={closeDisplayer} style={{ marginLeft: '8px' }}>\n\t\t\t\t\t\t\t<ArrowBack style={{ color: PRIMARY_ICON_COLOR_ACTIVE }} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\tstyle={{ wordWrap: 'break-word', textJustify: 'inter-character', marginLeft: '8px' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTask Details\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Divider color={'gray3'} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useMemo } from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { formatDateFromTimestamp } from '../utils';\n\ntype UseReminderReturnType = {\n\tisExpired: boolean;\n\tformattedDate: string;\n};\n\nexport const useReminder = (\n\treminderAt: number | null | undefined,\n\treminderAllDay: boolean | null | undefined\n): UseReminderReturnType => {\n\tconst {\n\t\ti18n: { language }\n\t} = useTranslation();\n\n\tconst isExpired = useMemo(() => {\n\t\tif (reminderAt) {\n\t\t\tconst now = Date.now();\n\t\t\tif (reminderAllDay) {\n\t\t\t\tconst reminderAtMidnight = new Date(reminderAt);\n\t\t\t\treminderAtMidnight.setHours(0, 0, 0, 0);\n\t\t\t\tconst nowAtMidnight = new Date(now);\n\t\t\t\tnowAtMidnight.setHours(0, 0, 0, 0);\n\t\t\t\treturn reminderAtMidnight.getTime() - nowAtMidnight.getTime() < 0;\n\t\t\t}\n\n\t\t\treturn reminderAt - now < 0;\n\t\t}\n\t\treturn false;\n\t}, [reminderAllDay, reminderAt]);\n\n\tconst formattedDate = useMemo(() => {\n\t\tif (reminderAt) {\n\t\t\treturn formatDateFromTimestamp(reminderAt, {\n\t\t\t\tincludeTime: reminderAllDay !== true,\n\t\t\t\tlocale: language\n\t\t\t});\n\t\t}\n\t\treturn '';\n\t}, [language, reminderAllDay, reminderAt]);\n\n\treturn { isExpired, formattedDate };\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { type TextProps } from '@zextras/carbonio-design-system';\n\nimport { Text } from './Text';\nimport type { Task } from '../gql/types';\nimport { useReminder } from '../hooks/useReminder';\n\ntype ReminderProps = Pick<Task, 'reminderAt' | 'reminderAllDay'> & TextProps;\n\nexport const Reminder = ({\n\treminderAt,\n\treminderAllDay,\n\t...textProps\n}: ReminderProps): React.JSX.Element => {\n\tconst { isExpired, formattedDate } = useReminder(reminderAt, reminderAllDay);\n\n\treturn (\n\t\t<Text\n\t\t\tcolor={isExpired ? 'error' : 'text'}\n\t\t\tweight={isExpired ? 'bold' : 'regular'}\n\t\t\tsize=\"small\"\n\t\t\tinline\n\t\t\t{...textProps}\n\t\t>\n\t\t\t{formattedDate}\n\t\t</Text>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport { Container, Icon, Row } from '@zextras/carbonio-design-system';\nimport { capitalize } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { PriorityIcon } from './PriorityIcon';\nimport { Reminder } from './Reminder';\nimport { Text } from './Text';\nimport type { Task } from '../gql/types';\nimport { useReminder } from '../hooks/useReminder';\nimport type { OneOrMany } from '../types/utils';\nimport { formatDateFromTimestamp } from '../utils';\nimport { Divider, Grid, Paper, Typography } from '@mui/material';\nimport { Grade } from '@mui/icons-material';\nimport { ActionsHeader } from './ActionsHeader';\nimport { useActions } from '../hooks/useActions';\n\ntype TaskDetailsProps = Pick<\n\tTask,\n\t'createdAt' | 'priority' | 'reminderAt' | 'reminderAllDay' | 'description' | 'title'\n>;\n\nconst ScrollableContainer = styled(Container)`\n\toverflow-y: auto;\n`;\n\nconst DetailItem = ({\n\tlabel,\n\tchildren\n}: {\n\tlabel: string;\n\tchildren: OneOrMany<React.ReactNode>;\n}): React.JSX.Element | null =>\n\tchildren ? (\n\t\t<Container\n\t\t\theight={'auto'}\n\t\t\twidth={'auto'}\n\t\t\tmainAlignment={'flex-start'}\n\t\t\tcrossAlignment={'flex-start'}\n\t\t\tflexGrow={1}\n\t\t\tflexShrink={1}\n\t\t\tflexBasis={'fit-content'}\n\t\t>\n\t\t\t<Text size={'small'} color={'gray1'}>\n\t\t\t\t{label}\n\t\t\t</Text>\n\t\t\t<Text size={'medium'} color={'gray0'} overflow={'break-word'}>\n\t\t\t\t<Row gap={'0.5rem'} wrap={'nowrap'}>\n\t\t\t\t\t{children}\n\t\t\t\t</Row>\n\t\t\t</Text>\n\t\t</Container>\n\t) : null;\n\nexport const TaskDetails = ({\n\tcreatedAt,\n\tpriority,\n\treminderAt,\n\treminderAllDay,\n\tdescription,\n\ttitle\n}: TaskDetailsProps): React.JSX.Element => {\n\tconst [t, { language }] = useTranslation();\n\tconst { isExpired } = useReminder(reminderAt, reminderAllDay);\n\n\tconst creationDate = useMemo(\n\t\t() => formatDateFromTimestamp(createdAt, { includeTime: false, locale: language }),\n\t\t[createdAt, language]\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tzIndex: 1\n\t\t\t}}\n\t\t>\n\t\t\t<div style={{ margin: '16px' }}>\n\t\t\t\t<Paper variant=\"outlined\" style={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t\t\t<div style={{ padding: '16px' }}>\n\t\t\t\t\t\t<Text size={'small'} color={'gray1'}>\n\t\t\t\t\t\t\tTask title\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Typography variant=\"h6\" style={{ wordWrap: 'break-word', textJustify: 'inter-word' }}>\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"grid grid-cols-2 p-4 w-full\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography variant=\"body1\" style={{ color: 'gray' }}>\n\t\t\t\t\t\t\t\t{t('displayer.details.creationDate', 'Creation date')}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"body2\">{creationDate}</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography variant=\"body1\" style={{ color: 'gray' }}>\n\t\t\t\t\t\t\t\t{t('displayer.details.priority', 'Priority')}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\tflexDirection: 'row'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PriorityIcon priority={priority} />\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\t\t\t{t('task.priority', {\n\t\t\t\t\t\t\t\t\t\tcontext: priority.toLowerCase(),\n\t\t\t\t\t\t\t\t\t\tdefaultValue: capitalize(priority)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ width: '100%', height: '100%', display: 'flex', padding: '16px' }}>\n\t\t\t\t\t\t{reminderAt && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" style={{ color: 'gray' }}>\n\t\t\t\t\t\t\t\t\t{t('displayer.details.reminder', 'Reminder')}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Reminder\n\t\t\t\t\t\t\t\t\treminderAt={reminderAt}\n\t\t\t\t\t\t\t\t\treminderAllDay={reminderAllDay}\n\t\t\t\t\t\t\t\t\toverflow={'break-word'}\n\t\t\t\t\t\t\t\t\tsize={'medium'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{isExpired && (\n\t\t\t\t\t\t\t\t\t<Container height={'fit'} width={'fit'} flexShrink={0}>\n\t\t\t\t\t\t\t\t\t\t<Icon icon={'AlertTriangle'} color={'warning'} />\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\tpadding: '16px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography variant=\"body2\" style={{ color: 'gray' }}>\n\t\t\t\t\t\t\t{t('displayer.details.description', 'Description')}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body1\" style={{ textJustify: 'inter-word', textAlign: 'justify' }}>\n\t\t\t\t\t\t\t{description}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n{\n\t/* <div style={{ padding: '16px' }}>\n\t\t\t\t<Text size={'small'} color={'gray1'}>\n\t\t\t\t\tTask title\n\t\t\t\t</Text>\n\t\t\t\t<Typography variant=\"h6\" style={{ wordWrap: 'break-word', textJustify: 'inter-word' }}>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\n\t\t\t\n\n\t\t\t */\n}\n\n{\n\t/* <ScrollableContainer mainAlignment={'flex-start'}>\n\t<Container\n\t\tbackground={'gray6'}\n\t\tpadding={'1rem'}\n\t\tgap={'1rem'}\n\t\theight={'auto'}\n\t\tmainAlignment={'flex-start'}\n\t\tcrossAlignment={'flex-start'}\n\t>\n\t\t<Container\n\t\t\theight={'auto'}\n\t\t\torientation={'horizontal'}\n\t\t\tgap={'1rem'}\n\t\t\tcrossAlignment={'flex-start'}\n\t\t>\n\t\t\t<DetailItem label={t('displayer.details.creationDate', 'Creation date')}>\n\t\t\t\t{creationDate}\n\t\t\t</DetailItem>\n\t\t\t<DetailItem label={t('displayer.details.priority', 'Priority')}>\n\t\t\t\t<PriorityIcon priority={priority} />\n\t\t\t\t{t('task.priority', {\n\t\t\t\t\tcontext: priority.toLowerCase(),\n\t\t\t\t\tdefaultValue: capitalize(priority)\n\t\t\t\t})}\n\t\t\t</DetailItem>\n\t\t</Container>\n\t\t<Divider />\n\t\t<DetailItem label={t('displayer.details.reminder', 'Reminder')}>\n\t\t\t{reminderAt && (\n\t\t\t\t<>\n\t\t\t\t\t<Reminder\n\t\t\t\t\t\treminderAt={reminderAt}\n\t\t\t\t\t\treminderAllDay={reminderAllDay}\n\t\t\t\t\t\toverflow={'break-word'}\n\t\t\t\t\t\tsize={'medium'}\n\t\t\t\t\t/>\n\t\t\t\t\t{isExpired && (\n\t\t\t\t\t\t<Container height={'fit'} width={'fit'} flexShrink={0}>\n\t\t\t\t\t\t\t<Icon icon={'AlertTriangle'} color={'warning'} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</DetailItem>\n\t\t<DetailItem label={t('displayer.details.description', 'Description')}>{description}</DetailItem>\n\t</Container>\n</ScrollableContainer>; */\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n\ttype Action,\n\tContainer,\n\tuseModal,\n\tuseSnackbar,\n\tText\n} from '@zextras/carbonio-design-system';\nimport {\n\taddBoard,\n\tcloseBoard,\n\tgetBoardById,\n\treopenBoards,\n\tsetCurrentBoard\n} from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { useCompleteAction } from './useCompleteAction';\nimport { useReopenAction } from './useReopenAction';\nimport { useTrashAction } from './useTrashAction';\nimport { TASKS_ROUTE } from '../constants';\nimport { Status, type Task } from '../gql/types';\n\nfunction getSnackbarTitle(title: string): string {\n\treturn title.length > 50 ? title.substring(0, 50).concat('...') : title;\n}\n\nexport const useActions = (task: Pick<Task, 'id' | 'title' | 'status'>): Action[] => {\n\tconst { id, title, status } = task;\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst createSnackbar = useSnackbar();\n\tconst completeAction = useCompleteAction(id);\n\tconst reopenAction = useReopenAction(id);\n\tconst trashAction = useTrashAction(id);\n\n\tconst openDeleteModal = useCallback(() => {\n\t\tconst closeModal = createModal({\n\t\t\ttitle: t('modal.delete.header', 'This action is irreversible'),\n\t\t\tsize: 'medium',\n\t\t\tconfirmLabel: t('modal.delete.button.confirm', 'Delete permanently'),\n\t\t\tconfirmColor: 'error',\n\t\t\tonConfirm: () => {\n\t\t\t\ttrashAction().then(() => {\n\t\t\t\t\tconst boardId = `edit-task-${task.id}`;\n\t\t\t\t\tconst board = getBoardById(boardId);\n\t\t\t\t\tif (board) {\n\t\t\t\t\t\tcloseBoard(boardId);\n\t\t\t\t\t}\n\t\t\t\t\tcloseModal();\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tkey: `snackbar-${Date.now()}`,\n\t\t\t\t\t\tlabel: t('snackbar.permanentlyDeletedTask', 'Task permanently deleted'),\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tshowCloseIcon: true,\n\t\t\tonClose: () => {\n\t\t\t\tcloseModal();\n\t\t\t},\n\t\t\tchildren: (\n\t\t\t\t<Container padding={{ vertical: 'large' }}>\n\t\t\t\t\t<Text overflow=\"break-word\" size=\"medium\">\n\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t'modal.delete.body',\n\t\t\t\t\t\t\t'You will delete permanently this task. You will not be able to recover this tasks anymore. This action is irreversible.'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Text>\n\t\t\t\t</Container>\n\t\t\t)\n\t\t});\n\t}, [createModal, createSnackbar, t, task.id, trashAction]);\n\n\tconst reopenActionHandler = useCallback(() => {\n\t\treopenAction().then(() => {\n\t\t\tcreateSnackbar({\n\t\t\t\ttype: 'success',\n\t\t\t\tkey: `snackbar-${Date.now()}`,\n\t\t\t\tlabel: t('snackbar.uncompleteTask', 'Task \"{{taskTitle}}\" uncompleted', {\n\t\t\t\t\treplace: {\n\t\t\t\t\t\ttaskTitle: getSnackbarTitle(title)\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\thideButton: true\n\t\t\t});\n\t\t});\n\t}, [createSnackbar, reopenAction, t, title]);\n\n\tconst completeActionHandler = useCallback(() => {\n\t\tcompleteAction().then(() => {\n\t\t\tcreateSnackbar({\n\t\t\t\ttype: 'success',\n\t\t\t\tkey: `snackbar-${Date.now()}`,\n\t\t\t\tlabel: t('snackbar.completeTask', 'Task \"{{taskTitle}}\" completed', {\n\t\t\t\t\treplace: {\n\t\t\t\t\t\ttaskTitle: getSnackbarTitle(title)\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\thideButton: true\n\t\t\t});\n\t\t});\n\t}, [completeAction, createSnackbar, t, title]);\n\n\tconst editAction = useCallback<Action['onClick']>(() => {\n\t\tconst board = getBoardById(`edit-task-${task.id}`);\n\t\tif (board) {\n\t\t\tsetCurrentBoard(board.id);\n\t\t\treopenBoards();\n\t\t} else {\n\t\t\taddBoard({\n\t\t\t\tid: `edit-task-${task.id}`,\n\t\t\t\turl: `${TASKS_ROUTE}/edit`,\n\t\t\t\ttitle: t('board.editTask.title', 'Edit Task'),\n\t\t\t\tcontext: { taskId: task.id }\n\t\t\t});\n\t\t}\n\t}, [t, task.id]);\n\n\treturn useMemo<Action[]>((): Action[] => {\n\t\tconst orderedActions: Action[] = [\n\t\t\t{\n\t\t\t\tid: 'edit',\n\t\t\t\tlabel: t('action.edit', 'Edit'),\n\t\t\t\ticon: 'Edit2Outline',\n\t\t\t\tonClick: editAction\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'delete',\n\t\t\t\tlabel: t('action.delete', 'Delete'),\n\t\t\t\ticon: 'Trash2Outline',\n\t\t\t\tonClick: openDeleteModal,\n\t\t\t\tcolor: 'error'\n\t\t\t}\n\t\t];\n\t\tif (status === Status.Complete) {\n\t\t\torderedActions.unshift({\n\t\t\t\tid: 'uncomplete',\n\t\t\t\tlabel: t('action.uncomplete', 'Uncomplete'),\n\t\t\t\ticon: 'RadioButtonOffOutline',\n\t\t\t\tonClick: reopenActionHandler\n\t\t\t});\n\t\t} else if (status === Status.Open) {\n\t\t\torderedActions.unshift({\n\t\t\t\tid: 'complete',\n\t\t\t\tlabel: t('action.complete', 'Complete'),\n\t\t\t\ticon: 'CheckmarkCircle2Outline',\n\t\t\t\tonClick: completeActionHandler\n\t\t\t});\n\t\t}\n\t\treturn orderedActions;\n\t}, [completeActionHandler, editAction, openDeleteModal, reopenActionHandler, status, t]);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { type FetchResult, useMutation } from '@apollo/client';\n\nimport { Status, UpdateTaskStatusDocument, type UpdateTaskStatusMutation } from '../gql/types';\n\ntype CompleteActionFn = () => Promise<FetchResult<UpdateTaskStatusMutation>>;\n\nexport const useCompleteAction = (taskId: string): CompleteActionFn => {\n\tconst [updateTaskStatus] = useMutation(UpdateTaskStatusDocument, {\n\t\tvariables: {\n\t\t\tid: taskId,\n\t\t\tstatus: Status.Complete\n\t\t}\n\t});\n\n\treturn updateTaskStatus;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { type FetchResult, useMutation } from '@apollo/client';\n\nimport { Status, UpdateTaskStatusDocument, type UpdateTaskStatusMutation } from '../gql/types';\n\ntype RestoreActionFn = () => Promise<FetchResult<UpdateTaskStatusMutation>>;\n\nexport const useReopenAction = (taskId: string): RestoreActionFn => {\n\tconst [updateTaskStatus] = useMutation(UpdateTaskStatusDocument, {\n\t\tvariables: {\n\t\t\tid: taskId,\n\t\t\tstatus: Status.Open\n\t\t}\n\t});\n\n\treturn updateTaskStatus;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useCallback } from 'react';\n\nimport { type FetchResult, useMutation } from '@apollo/client';\n\nimport { useActiveItem } from './useActiveItem';\nimport { removeTaskFromList } from '../apollo/cacheUtils';\nimport { TrashTaskDocument, type TrashTaskMutation } from '../gql/types';\n\ntype TrashActionFn = () => Promise<FetchResult<TrashTaskMutation>>;\n\nexport const useTrashAction = (taskId: string): TrashActionFn => {\n\tconst { removeActive, isActive } = useActiveItem();\n\tconst [trashTask] = useMutation(TrashTaskDocument, {\n\t\tvariables: {\n\t\t\ttaskId\n\t\t}\n\t});\n\n\treturn useCallback(\n\t\t() =>\n\t\t\ttrashTask({\n\t\t\t\tupdate: (cache, { data }) => {\n\t\t\t\t\tif (data?.trashTask) {\n\t\t\t\t\t\tcache.modify({\n\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\tfindTasks: removeTaskFromList({ id: data.trashTask, __typename: 'Task' })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).then((result) => {\n\t\t\t\tif (result.data?.trashTask && isActive(result.data.trashTask)) {\n\t\t\t\t\t// replace history so that a back navigation does not re-open the displayer\n\t\t\t\t\t// for a task which is no more visible\n\t\t\t\t\tremoveActive({ replace: true });\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}),\n\t\t[isActive, removeActive, trashTask]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useEffect } from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\n\nimport { ActionsHeader } from './ActionsHeader';\nimport { DisplayerHeader } from './DisplayerHeader';\nimport { TaskDetails } from './TaskDetails';\nimport type { Task } from '../gql/types';\nimport { useActions } from '../hooks/useActions';\nimport { BACKGROUND_COLOR } from '../sruvi/EditedColors';\n\ninterface TaskDisplayerProps {\n\ttask: Task;\n\thello: (value: boolean) => void;\n}\n\nexport const TaskDisplayer = ({ task, hello }: TaskDisplayerProps): React.JSX.Element => {\n\tconst actions = useActions(task);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\theight: '100%',\n\t\t\t\twidth: '100%',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tbackground: BACKGROUND_COLOR\n\t\t\t}}\n\t\t>\n\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t<DisplayerHeader title={task.title} status={task.status} hello={hello} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TaskDetails\n\t\t\t\t\ttitle={task.title}\n\t\t\t\t\tcreatedAt={task.createdAt}\n\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\tdescription={task.description}\n\t\t\t\t/>\n\t\t\t\t<ActionsHeader actions={actions} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { Container } from '@zextras/carbonio-design-system';\n\nimport { EmptyDisplayer } from './EmptyDisplayer';\nimport { TaskDisplayer } from './TaskDisplayer';\nimport { GetTaskDocument } from '../gql/types';\nimport { useActiveItem } from '../hooks/useActiveItem';\n\nexport interface DisplayerProps {\n\ttranslationKey: string;\n\thello: (value: boolean) => void;\n}\n\nexport const Displayer = ({ translationKey, hello }: DisplayerProps): React.JSX.Element => {\n\tconst { activeItem } = useActiveItem();\n\tconst { data } = useQuery(GetTaskDocument, {\n\t\tvariables: {\n\t\t\ttaskId: activeItem\n\t\t},\n\t\tskip: !activeItem,\n\t\treturnPartialData: true,\n\t\terrorPolicy: 'all'\n\t});\n\n\tconst task = useMemo(\n\t\t() =>\n\t\t\t// since we are accepting partial data, check that at least the task has the id valued\n\t\t\t(data?.getTask?.id && data.getTask) || undefined,\n\t\t[data?.getTask]\n\t);\n\n\treturn (\n\t\t<Container\n\t\t\torientation=\"vertical\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tdata-testid=\"displayer\"\n\t\t>\n\t\t\t{task ? (\n\t\t\t\t<TaskDisplayer task={task} hello={hello} />\n\t\t\t) : (\n\t\t\t\t<EmptyDisplayer translationKey={translationKey} />\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport {\n\tDropdown,\n\ttype DropdownItem,\n\ttype DropdownProps,\n\tuseCombinedRefs\n} from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\nexport interface ContextualMenuProps extends Omit<DropdownProps, 'items' | 'contextMenu'> {\n\tactions: DropdownItem[];\n}\n\ntype ContextualMenuElement = HTMLDivElement & {\n\tdropdownOpen?: boolean;\n};\n\nconst CustomDropdown = styled(Dropdown)`\n\twidth: 100%;\n\theight: 100%;\n`;\n\nexport const ContextualMenu = React.forwardRef<HTMLDivElement, ContextualMenuProps>(\n\tfunction ContextualMenuFn(\n\t\t{ children, disabled = false, onOpen, onClose, actions, disableRestoreFocus, ...rest },\n\t\tref\n\t) {\n\t\tconst contextMenuRef = useCombinedRefs<ContextualMenuElement>(ref);\n\t\tconst [open, setOpen] = useState(false);\n\n\t\tuseEffect(() => {\n\t\t\tif (contextMenuRef.current) {\n\t\t\t\tconst htmlElement = contextMenuRef.current;\n\t\t\t\thtmlElement.oncontextmenu = (): void => {\n\t\t\t\t\tif (!htmlElement.dropdownOpen) {\n\t\t\t\t\t\thtmlElement.click();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}, [contextMenuRef]);\n\n\t\tconst onOpenHandler = useCallback(() => {\n\t\t\tif (contextMenuRef.current) {\n\t\t\t\tcontextMenuRef.current.dropdownOpen = true;\n\t\t\t\tsetOpen(true);\n\t\t\t}\n\t\t}, [contextMenuRef]);\n\n\t\tconst onCloseHandler = useCallback(() => {\n\t\t\tif (contextMenuRef.current) {\n\t\t\t\tcontextMenuRef.current.dropdownOpen = false;\n\t\t\t\tsetOpen(false);\n\t\t\t}\n\t\t}, [contextMenuRef]);\n\n\t\tuseEffect(() => {\n\t\t\t// trigger onOpen and onClose with an internal state to avoid hover-bar to flash when contextual menu is\n\t\t\t// opened again but in a different position\n\t\t\tif (open) {\n\t\t\t\tonOpen && onOpen();\n\t\t\t} else {\n\t\t\t\tonClose && onClose();\n\t\t\t}\n\t\t}, [onClose, onOpen, open]);\n\n\t\tuseEffect(() => {\n\t\t\t// force close when disabled\n\t\t\tif (disabled && contextMenuRef.current && contextMenuRef.current.dropdownOpen) {\n\t\t\t\tcontextMenuRef.current.click();\n\t\t\t}\n\t\t}, [open, disabled, onCloseHandler, contextMenuRef]);\n\n\t\treturn (\n\t\t\t<CustomDropdown\n\t\t\t\tplacement=\"right-start\"\n\t\t\t\tcontextMenu\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonOpen={onOpenHandler}\n\t\t\t\tonClose={onCloseHandler}\n\t\t\t\titems={actions}\n\t\t\t\tref={contextMenuRef}\n\t\t\t\tdisableRestoreFocus={disableRestoreFocus}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</CustomDropdown>\n\t\t);\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { type Action as DSAction, CollapsingActions } from '@zextras/carbonio-design-system';\nimport { map } from 'lodash';\n\nimport { HoverBarContainer } from './StyledComponents';\n\ninterface ListItemHoverBarProps extends React.ComponentPropsWithoutRef<typeof HoverBarContainer> {\n\tactions?: DSAction[];\n}\n\nexport const ListItemHoverBar = ({\n\tactions,\n\t...rest\n}: ListItemHoverBarProps): React.JSX.Element => {\n\tconst actionsMapped = useMemo(\n\t\t(): DSAction[] =>\n\t\t\tmap(actions, (action) => ({\n\t\t\t\t...action,\n\t\t\t\tonClick: (event): ReturnType<DSAction['onClick']> => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taction.onClick(event);\n\t\t\t\t},\n\t\t\t\tcolor: undefined\n\t\t\t})),\n\t\t[actions]\n\t);\n\n\treturn (\n\t\t// <HoverBarContainer\n\t\t// \twrap=\"nowrap\"\n\t\t// \tmainAlignment=\"flex-end\"\n\t\t// \tdata-testid=\"hover-bar\"\n\t\t// \tpadding={{ top: '0.25rem', right: '0.5rem' }}\n\t\t// \twidth={'100%'}\n\t\t// \theight={'fit'}\n\t\t// \t{...rest}\n\t\t// >\n\t\t<div style={{ display: 'flex', width: '100%', justifyContent: 'flex-end' }} {...rest}>\n\t\t\t<CollapsingActions actions={actionsMapped} color={'text'} size={'medium'} gap={'0.25rem'} />\n\t\t</div>\n\n\t\t// </HoverBarContainer>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { Container, Row } from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\nexport const HoverContainer = styled(Row)``;\n\nexport const HoverBarContainer = styled(Row)`\n\tdisplay: flex;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbackground: #ffffff;\n`;\n\nexport const ListItemContainer = styled(Container)`\n\tposition: relative;\n\tcursor: pointer;\n\t${HoverBarContainer} {\n\t\tdisplay: flex;\n\t}\n\n\t&:hover {\n\t\t${HoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n`;\n//\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Icon } from '@zextras/carbonio-design-system';\n\nimport { Priority } from '../gql/types';\nimport { COMPLETED_PRIORITY_ICON } from '../sruvi/EditedColors';\n\ninterface PriorityIconProps {\n\tpriority: Priority;\n}\n\nconst TaskDone01Icon = (props: React.SVGProps<SVGSVGElement>) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t\twidth={24}\n\t\theight={24}\n\t\tcolor={'#000000'}\n\t\tfill={'none'}\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\td=\"M13.5 20C13.5 20 14.5 20 15.5 22C15.5 22 18.6765 17 21.5 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t/>\n\t\t<path d=\"M7 16H11M7 11H15\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n\t\t<path\n\t\t\td=\"M6.5 3.5C4.9442 3.54667 4.01661 3.71984 3.37477 4.36227C2.49609 5.24177 2.49609 6.6573 2.49609 9.48836L2.49609 15.9944C2.49609 18.8255 2.49609 20.241 3.37477 21.1205C4.25345 22 5.66767 22 8.49609 22L10.9961 22M15.4922 3.5C17.048 3.54667 17.9756 3.71984 18.6174 4.36228C19.4961 5.24177 19.4961 6.6573 19.4961 9.48836V13.5\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M6.49609 3.75C6.49609 2.7835 7.2796 2 8.24609 2H13.7461C14.7126 2 15.4961 2.7835 15.4961 3.75C15.4961 4.7165 14.7126 5.5 13.7461 5.5H8.24609C7.2796 5.5 6.49609 4.7165 6.49609 3.75Z\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t/>\n\t</svg>\n);\n\nexport const SruviPriorityIcon = ({ priority }: PriorityIconProps): React.JSX.Element => (\n\t<>\n\t\t{priority === Priority.High && <TaskDone01Icon style={{ color: COMPLETED_PRIORITY_ICON }} />}\n\t\t{priority === Priority.Low && <TaskDone01Icon style={{ color: COMPLETED_PRIORITY_ICON }} />}\n\t\t{priority === Priority.Medium && <TaskDone01Icon style={{ color: COMPLETED_PRIORITY_ICON }} />}\n\t</>\n);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Container, Icon, Row } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { ContextualMenu } from './ContextualMenu';\nimport { ListItemHoverBar } from './ListItemHoverBar';\nimport { PriorityIcon } from './PriorityIcon';\nimport { Reminder } from './Reminder';\nimport { HoverContainer, ListItemContainer } from './StyledComponents';\nimport { Text } from './Text';\nimport { LIST_ITEM_HEIGHT } from '../constants';\nimport { type Task, Status } from '../gql/types';\nimport { useActions } from '../hooks/useActions';\nimport { useReminder } from '../hooks/useReminder';\n\nimport { Priority } from '../gql/types';\nimport { Paper, Typography } from '@mui/material';\nimport { SruviPriorityIcon } from './SruviPriorityIcon';\nimport {\n\tHIGH_PRIORITY,\n\tHIGH_PRIORITY_BG,\n\tHIGH_PRIORITY_BORDER,\n\tLOW_PRIORITY,\n\tLOW_PRIORITY_BG,\n\tLOW_PRIORITY_BORDER,\n\tMEDIUM_PRIORITY,\n\tMEDIUM_PRIORITY_BG,\n\tMEDIUM_PRIORITY_BORDER\n} from '../sruvi/EditedColors';\n\ntype ListItemContentProps = Pick<\n\tTask,\n\t'id' | 'priority' | 'reminderAt' | 'reminderAllDay' | 'title' | 'status' | 'description'\n> & {\n\tvisible?: boolean;\n\tonClick?: (id: string) => void;\n};\n\nconst ReminderIconContainer = styled(Container)`\n\theight: ${({ theme }): string => `${parseFloat(theme.sizes.font.small) * 1.5}rem`};\n`;\n\nconst ContentContainer = styled(Container)`\n\toverflow: hidden;\n`;\n\nexport const ListItemContent = React.memo<ListItemContentProps>(function ListItemContentFn({\n\tid,\n\tpriority,\n\treminderAt,\n\ttitle,\n\treminderAllDay,\n\tonClick,\n\tstatus,\n\t// others props\n\tvisible,\n\tdescription\n}) {\n\tconst [t] = useTranslation();\n\tconst { isExpired: isReminderExpired } = useReminder(reminderAt, reminderAllDay);\n\tconst actions = useActions({ id, title, status });\n\n\tconst clickHandler = useCallback<React.MouseEventHandler<HTMLDivElement>>(() => {\n\t\tonClick?.(id);\n\t}, [id, onClick]);\n\n\tconst missingReminderLabel = useMemo(\n\t\t() => t('tasksListItem.reminder.doNotRemindMe', 'Do not remind me'),\n\t\t[t]\n\t);\n\n\tconst preventTextSelection = useCallback<React.MouseEventHandler<HTMLDivElement>>((e) => {\n\t\tif (e.detail > 1) {\n\t\t\te.preventDefault();\n\t\t}\n\t}, []);\n\n\t/////////sruvi/////////\n\n\tconst Task01Icon = (props: React.SVGProps<SVGSVGElement>) => (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\twidth={24}\n\t\t\theight={24}\n\t\t\tcolor={'#000000'}\n\t\t\tfill={'none'}\n\t\t\t{...props}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M7.99805 16H11.998M7.99805 11H15.998\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M7.5 3.5C5.9442 3.54667 5.01661 3.71984 4.37477 4.36227C3.49609 5.24177 3.49609 6.6573 3.49609 9.48836L3.49609 15.9944C3.49609 18.8255 3.49609 20.241 4.37477 21.1205C5.25345 22 6.66767 22 9.49609 22L14.4961 22C17.3245 22 18.7387 22 19.6174 21.1205C20.4961 20.241 20.4961 18.8255 20.4961 15.9944V9.48836C20.4961 6.6573 20.4961 5.24177 19.6174 4.36228C18.9756 3.71984 18.048 3.54667 16.4922 3.5\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M7.49609 3.75C7.49609 2.7835 8.2796 2 9.24609 2H14.7461C15.7126 2 16.4961 2.7835 16.4961 3.75C16.4961 4.7165 15.7126 5.5 14.7461 5.5H9.24609C8.2796 5.5 7.49609 4.7165 7.49609 3.75Z\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t/>\n\t\t</svg>\n\t);\n\n\tconst high = priority === Priority.High ? true : false;\n\tconst low = priority === Priority.Low ? true : false;\n\tconst medium = priority === Priority.Medium ? true : false;\n\n\t///////////sruvi/////////////\n\n\treturn (\n\t\t<Paper\n\t\t\tvariant=\"outlined\"\n\t\t\tstyle={{\n\t\t\t\tborderRadius: '8px',\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\n\t\t\t\tbackgroundColor: high\n\t\t\t\t\t? HIGH_PRIORITY_BG\n\t\t\t\t\t: low\n\t\t\t\t\t\t? LOW_PRIORITY_BG\n\t\t\t\t\t\t: medium\n\t\t\t\t\t\t\t? MEDIUM_PRIORITY_BG\n\t\t\t\t\t\t\t: 'white'\n\t\t\t}}\n\t\t>\n\t\t\t<div>\n\t\t\t\t{visible && (\n\t\t\t\t\t<ContextualMenu actions={actions}>\n\t\t\t\t\t\t<ListItemContainer\n\t\t\t\t\t\t\theight={'fill'}\n\t\t\t\t\t\t\tcrossAlignment={'flex-end'}\n\t\t\t\t\t\t\tonMouseDown={preventTextSelection}\n\t\t\t\t\t\t\tonClick={clickHandler}\n\t\t\t\t\t\t\tdata-testid={'list-item-content'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{ display: 'flex', width: '100%', height: '100%', flexDirection: 'column' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\t\t\tpadding: '16px',\n\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography noWrap variant=\"body1\" style={{ color: 'black' }}>\n\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t\t{status === Status.Complete ? (\n\t\t\t\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\t\t\t\tmargin={{ left: 'auto' }}\n\t\t\t\t\t\t\t\t\t\t\twidth={'fit'}\n\t\t\t\t\t\t\t\t\t\t\theight={'fit'}\n\t\t\t\t\t\t\t\t\t\t\tflexShrink={0}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<SruviPriorityIcon priority={priority} />\n\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\t\t\t\t\tmargin={{ left: 'auto' }}\n\t\t\t\t\t\t\t\t\t\t\twidth={'fit'}\n\t\t\t\t\t\t\t\t\t\t\theight={'fit'}\n\t\t\t\t\t\t\t\t\t\t\tflexShrink={0}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<PriorityIcon priority={priority} />\n\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography noWrap variant=\"body2\">\n\t\t\t\t\t\t\t\t\t\t{description}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{ padding: '16px' }}>\n\t\t\t\t\t\t\t\t\t{reminderAt ? (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Text size=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t\t{t('tasksListItem.reminder.remindMeOn', 'Remind me on')}&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ marginRight: '8px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Reminder reminderAt={reminderAt} reminderAllDay={reminderAllDay} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{isReminderExpired && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ReminderIconContainer width={'fit'} flexShrink={0}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"AlertTriangle\" color=\"warning\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ReminderIconContainer>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Text color=\"secondary\" size=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t{missingReminderLabel}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: '8px',\n\t\t\t\t\t\t\t\t\tmarginTop: '8px',\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\t\t\t\t\tflexDirection: 'column'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemHoverBar actions={actions} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ListItemContainer>\n\t\t\t\t\t</ContextualMenu>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Paper>\n\n\t\t// <div style={{ width: '100%', height: '100%', aspectRatio: '1/1' }}>\n\t\t// \t<div style={{ width: '100%', height: '100%,display:flex' }}>\n\t\t// \t\t<div style={{ padding: '16px' }}>\n\t\t// \t\t\t{visible && (\n\t\t// \t\t\t\t<ContextualMenu actions={actions}>\n\t\t// \t\t\t\t\t<ListItemContainer\n\t\t// \t\t\t\t\t\theight={'fit'}\n\t\t// \t\t\t\t\t\tcrossAlignment={'flex-end'}\n\t\t// \t\t\t\t\t\tonMouseDown={preventTextSelection}\n\t\t// \t\t\t\t\t\tonClick={clickHandler}\n\t\t// \t\t\t\t\t\tdata-testid={'list-item-content'}\n\t\t// \t\t\t\t\t>\n\t\t// \t\t\t\t\t\t<HoverContainer\n\t\t// \t\t\t\t\t\t\theight={LIST_ITEM_HEIGHT}\n\t\t// \t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t// \t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t// \t\t\t\t\t\t\tcrossAlignment=\"center\"\n\t\t// \t\t\t\t\t\t\tpadding={{ all: 'small' }}\n\t\t// \t\t\t\t\t\t\twidth=\"fill\"\n\t\t// \t\t\t\t\t\t\tgap={'1rem'}\n\t\t// \t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t<ContentContainer\n\t\t// \t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t// \t\t\t\t\t\t\t\theight={'auto'}\n\t\t// \t\t\t\t\t\t\t\tmaxHeight={'100%'}\n\t\t// \t\t\t\t\t\t\t\tgap={'0.25rem'}\n\t\t// \t\t\t\t\t\t\t\twidth=\"fill\"\n\t\t// \t\t\t\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t// \t\t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t\t<Row gap={'0.25rem'} width=\"fill\" wrap=\"nowrap\">\n\t\t// \t\t\t\t\t\t\t\t\t<div style={{ width: '60%' }}>\n\t\t// \t\t\t\t\t\t\t\t\t\t{/* <Text overflow=\"ellipsis\" size=\"medium\">\n\t\t// \t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t// \t\t\t\t\t\t\t\t\t\t</Text> */}\n\t\t// \t\t\t\t\t\t\t\t\t\t<Typography noWrap variant=\"body1\" style={{ color: 'black', overflow: '' }}>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t// \t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t// \t\t\t\t\t\t\t\t\t</div>\n\n\t\t// \t\t\t\t\t\t\t\t\t{status === Status.Complete ? (\n\t\t// \t\t\t\t\t\t\t\t\t\t<Container\n\t\t// \t\t\t\t\t\t\t\t\t\t\tmargin={{ left: 'auto' }}\n\t\t// \t\t\t\t\t\t\t\t\t\t\twidth={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\t\theight={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\t\tflexShrink={0}\n\t\t// \t\t\t\t\t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t<SruviPriorityIcon priority={priority} />\n\t\t// \t\t\t\t\t\t\t\t\t\t</Container>\n\t\t// \t\t\t\t\t\t\t\t\t) : (\n\t\t// \t\t\t\t\t\t\t\t\t\t<Container\n\t\t// \t\t\t\t\t\t\t\t\t\t\tmargin={{ left: 'auto' }}\n\t\t// \t\t\t\t\t\t\t\t\t\t\twidth={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\t\theight={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\t\tflexShrink={0}\n\t\t// \t\t\t\t\t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t<PriorityIcon priority={priority} />\n\t\t// \t\t\t\t\t\t\t\t\t\t</Container>\n\t\t// \t\t\t\t\t\t\t\t\t)}\n\n\t\t// \t\t\t\t\t\t\t\t\t{/* <Container\n\t\t// \t\t\t\t\t\t\t\t\t\tmargin={{ left: 'auto' }}\n\t\t// \t\t\t\t\t\t\t\t\t\twidth={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\theight={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\tflexShrink={0}\n\t\t// \t\t\t\t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t\t\t\t<PriorityIcon priority={priority} />\n\t\t// \t\t\t\t\t\t\t\t\t</Container> */}\n\t\t// \t\t\t\t\t\t\t\t</Row>\n\t\t// \t\t\t\t\t\t\t\t<Row\n\t\t// \t\t\t\t\t\t\t\t\tgap={'0.25rem'}\n\t\t// \t\t\t\t\t\t\t\t\twidth=\"fill\"\n\t\t// \t\t\t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t// \t\t\t\t\t\t\t\t\tmainAlignment=\"space-between\"\n\t\t// \t\t\t\t\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t// \t\t\t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t\t\t<Container\n\t\t// \t\t\t\t\t\t\t\t\t\tflexShrink={1}\n\t\t// \t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t// \t\t\t\t\t\t\t\t\t\tflexBasis=\"auto\"\n\t\t// \t\t\t\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t// \t\t\t\t\t\t\t\t\t\torientation=\"horizontal\"\n\t\t// \t\t\t\t\t\t\t\t\t\tminWidth={0}\n\t\t// \t\t\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t// \t\t\t\t\t\t\t\t\t\theight={'auto'}\n\t\t// \t\t\t\t\t\t\t\t\t\twrap={'wrap-reverse'}\n\t\t// \t\t\t\t\t\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t// \t\t\t\t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t\t\t\t{reminderAt ? (\n\t\t// \t\t\t\t\t\t\t\t\t\t\t<>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t<Text size=\"small\">\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t{t('tasksListItem.reminder.remindMeOn', 'Remind me on')}&nbsp;\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t<Container\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\twidth={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\theight={'fit'}\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\tflexShrink={0}\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth={'100%'}\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t<Reminder reminderAt={reminderAt} reminderAllDay={reminderAllDay} />\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t</>\n\t\t// \t\t\t\t\t\t\t\t\t\t) : (\n\t\t// \t\t\t\t\t\t\t\t\t\t\t<Text color=\"secondary\" size=\"small\">\n\t\t// \t\t\t\t\t\t\t\t\t\t\t\t{missingReminderLabel}\n\t\t// \t\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t// \t\t\t\t\t\t\t\t\t\t)}\n\t\t// \t\t\t\t\t\t\t\t\t</Container>\n\t\t// \t\t\t\t\t\t\t\t\t{isReminderExpired && (\n\t\t// \t\t\t\t\t\t\t\t\t\t<ReminderIconContainer width={'fit'} flexShrink={0}>\n\t\t// \t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"AlertTriangle\" color=\"warning\" />\n\t\t// \t\t\t\t\t\t\t\t\t\t</ReminderIconContainer>\n\t\t// \t\t\t\t\t\t\t\t\t)}\n\t\t// \t\t\t\t\t\t\t\t</Row>\n\t\t// \t\t\t\t\t\t\t</ContentContainer>\n\t\t// \t\t\t\t\t\t</HoverContainer>\n\t\t// \t\t\t\t\t\t<ListItemHoverBar actions={actions} />\n\t\t// \t\t\t\t\t</ListItemContainer>\n\t\t// \t\t\t\t</ContextualMenu>\n\t\t// \t\t\t)}\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// </div>\n\t);\n});\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo, useState } from 'react';\n\nimport {\n\tContainer,\n\tgetColor,\n\tListItem,\n\ttype ListItemProps,\n\tListV2,\n\tpseudoClasses,\n\tRow\n} from '@zextras/carbonio-design-system';\nimport { isEmpty, map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport styled, { css, type DefaultTheme, type SimpleInterpolation } from 'styled-components';\n\nimport { ListItemContent } from './ListItemContent';\nimport { HoverBarContainer } from './StyledComponents';\nimport { Text } from './Text';\nimport { LIST_WIDTH } from '../constants';\nimport { Priority, type FindTasksQuery } from '../gql/types';\nimport { useActiveItem } from '../hooks/useActiveItem';\nimport { useRandomPlaceholder } from '../hooks/useRandomPlaceholder';\nimport type { NonNullableList } from '../types/utils';\nimport {\n\tPaper,\n\tDivider,\n\tFormControl,\n\tGrid2,\n\tIconButton,\n\tInputLabel,\n\tListItemIcon,\n\tListItemText,\n\tMenu,\n\tMenuItem,\n\tTypography\n} from '@mui/material';\nimport SortIcon from '@mui/icons-material/Sort';\nimport {\n\tBACKGROUND_COLOR,\n\tBACKGROUND_HEADER_COLOR,\n\tHIGH_PRIORITY,\n\tLOW_PRIORITY,\n\tMEDIUM_PRIORITY,\n\tPRIMARY_COLOR,\n\tPRIMARY_ICON_COLOR_ACTIVE\n} from '../sruvi/EditedColors';\nimport { Filter1Rounded, PriorityHighRounded } from '@mui/icons-material';\nimport FilterListIcon from '@mui/icons-material/FilterList';\n\ntype TaskListProps = {\n\ttasks: NonNullableList<FindTasksQuery['findTasks']>;\n};\n\nconst StyledListItem = styled(ListItem).attrs<\n\tListItemProps,\n\t{ backgroundColor?: string | keyof DefaultTheme['palette'] }\n>(({ background, selectedBackground, activeBackground, active, selected }) => ({\n\tbackgroundColor: (active && activeBackground) || (selected && selectedBackground) || background\n}))`\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor && pseudoClasses(theme, backgroundColor, 'color')}\n\ttransition: none;\n\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor &&\n\t\tcss`\n\t\t\t${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(to right, transparent, ${getColor(backgroundColor, theme)});\n\t\t\t}\n\t\t\t&:focus ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.focus`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:hover ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.hover`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:active ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.active`, theme)}\n\t\t\t\t);\n\t\t\t}\n\t\t`}\n`;\n\nexport const TaskList = ({ tasks }: TaskListProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst allTasksLabel = useMemo(() => t('secondaryBar.allTasks', 'All Tasks'), [t]);\n\tconst { activeItem, setActive } = useActiveItem();\n\tconst [emptyListPlaceholder] = useRandomPlaceholder('list.empty', {\n\t\tdefaultValue: \"It looks like there's nothing here.\"\n\t});\n\n\tconst items = useMemo(\n\t\t() =>\n\t\t\tmap(tasks, (task) => (\n\t\t\t\t<StyledListItem key={task.id} active={task.id === activeItem} data-testid={'list-item'}>\n\t\t\t\t\t{(visible): React.JSX.Element => (\n\t\t\t\t\t\t<ListItemContent\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\ttitle={task.title}\n\t\t\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\t\t\tstatus={task.status}\n\t\t\t\t\t\t\tid={task.id}\n\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</StyledListItem>\n\t\t\t)),\n\t\t[activeItem, setActive, tasks]\n\t);\n\tconst Task01Icon = (props: React.SVGProps<SVGSVGElement>) => (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\twidth={20}\n\t\t\theight={20}\n\t\t\tcolor={'#000000'}\n\t\t\tfill={'none'}\n\t\t\t{...props}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M7.99805 16H11.998M7.99805 11H15.998\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M7.5 3.5C5.9442 3.54667 5.01661 3.71984 4.37477 4.36227C3.49609 5.24177 3.49609 6.6573 3.49609 9.48836L3.49609 15.9944C3.49609 18.8255 3.49609 20.241 4.37477 21.1205C5.25345 22 6.66767 22 9.49609 22L14.4961 22C17.3245 22 18.7387 22 19.6174 21.1205C20.4961 20.241 20.4961 18.8255 20.4961 15.9944V9.48836C20.4961 6.6573 20.4961 5.24177 19.6174 4.36228C18.9756 3.71984 18.048 3.54667 16.4922 3.5\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M7.49609 3.75C7.49609 2.7835 8.2796 2 9.24609 2H14.7461C15.7126 2 16.4961 2.7835 16.4961 3.75C16.4961 4.7165 15.7126 5.5 14.7461 5.5H9.24609C8.2796 5.5 7.49609 4.7165 7.49609 3.75Z\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t/>\n\t\t</svg>\n\t);\n\n\tconst [visible] = useState(true);\n\n\tconst [high, setHigh] = useState(false);\n\tconst [low, setLow] = useState(false);\n\tconst [all, setAll] = useState(true);\n\tconst [medium, setMedium] = useState(false);\n\n\tconst openMenu = () => {};\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\tconst open = Boolean(anchorEl);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst showlowPriority = () => {\n\t\tsetLow(true);\n\t\tsetHigh(false);\n\t\tsetAll(false);\n\t\tsetMedium(false);\n\t\thandleClose();\n\t};\n\n\tconst showmediumPriority = () => {\n\t\tsetLow(false);\n\t\tsetHigh(false);\n\t\tsetAll(false);\n\t\tsetMedium(true);\n\t\thandleClose();\n\t};\n\tconst showhighPriority = () => {\n\t\tsetLow(false);\n\t\tsetHigh(true);\n\t\tsetAll(false);\n\t\tsetMedium(false);\n\t\thandleClose();\n\t};\n\tconst showallTasks = () => {\n\t\tsetLow(false);\n\t\tsetHigh(false);\n\t\tsetAll(true);\n\t\tsetMedium(false);\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<div style={{ width: '100%', height: '100%', backgroundColor: BACKGROUND_COLOR }}>\n\t\t\t<Grid2\n\t\t\t\tcontainer\n\t\t\t\tsx={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tbackgroundColor: BACKGROUND_HEADER_COLOR,\n\t\t\t\t\tposition: 'sticky',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tzIndex: 2\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\tpadding: '16px'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Task01Icon style={{ color: PRIMARY_ICON_COLOR_ACTIVE }} />\n\n\t\t\t\t\t\t\t<Typography variant=\"body1\" style={{ marginLeft: '8px', color: 'black' }}>\n\t\t\t\t\t\t\t\t{allTasksLabel}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton onClick={handleClick}>\n\t\t\t\t\t\t\t<FilterListIcon style={{ color: PRIMARY_ICON_COLOR_ACTIVE }} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"basic-menu\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t'aria-labelledby': 'basic-button'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem disabled>Filter by :</MenuItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<MenuItem onClick={() => showallTasks()}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<Task01Icon fontSize=\"small\" style={{ color: PRIMARY_ICON_COLOR_ACTIVE }} />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText>All Tasks</ListItemText>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<MenuItem onClick={() => showhighPriority()}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<PriorityHighRounded fontSize=\"small\" style={{ color: HIGH_PRIORITY }} />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText>High Priority</ListItemText>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<MenuItem onClick={() => showmediumPriority()}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<PriorityHighRounded fontSize=\"small\" style={{ color: MEDIUM_PRIORITY }} />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText>Medium Priority</ListItemText>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<MenuItem onClick={() => showlowPriority()}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<PriorityHighRounded fontSize=\"small\" style={{ color: LOW_PRIORITY }} />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText>Low Priority</ListItemText>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Grid2>\n\t\t\t<Grid2>\n\t\t\t\t<Divider />\n\t\t\t</Grid2>\n\t\t\t<Grid2 sx={{ width: '100%', height: '100%', zIndex: 1 }}>\n\t\t\t\t<div style={{ marginTop: '16px', marginRight: '16px', marginLeft: '16px' }}>\n\t\t\t\t\t{tasks.length === 0 ? (\n\t\t\t\t\t\t<div>It looks like there's nothing here.</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"w-full flex \">\n\t\t\t\t\t\t\t{all ? (\n\t\t\t\t\t\t\t\t<div className=\" flex w-full grid xxs:grid-cols-0 xs:grid-cols-2 sm:grid-cols-3 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xxl:grid-cols-6 gap-4 \">\n\t\t\t\t\t\t\t\t\t{tasks.map((task) => (\n\t\t\t\t\t\t\t\t\t\t<ListItemContent\n\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\t\t\t\t\ttitle={task.title}\n\t\t\t\t\t\t\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\t\t\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\t\t\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\t\t\t\t\t\t\tstatus={task.status}\n\t\t\t\t\t\t\t\t\t\t\tid={task.id}\n\t\t\t\t\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : high ? (\n\t\t\t\t\t\t\t\t<div className=\"flex  w-full grid xxs:grid-cols-0 xs:grid-cols-2 sm:grid-cols-3 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xxl:grid-cols-6 gap-4\">\n\t\t\t\t\t\t\t\t\t{tasks\n\t\t\t\t\t\t\t\t\t\t.filter((task) => task.priority === Priority.High)\n\t\t\t\t\t\t\t\t\t\t.map((task) => (\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemContent\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={task.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\t\t\t\t\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\t\t\t\t\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatus={task.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : medium ? (\n\t\t\t\t\t\t\t\t<div className=\"flex w-full grid gap-4 xxs:grid-cols-0 xs:grid-cols-2 sm:grid-cols-3 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xxl:grid-cols-6\">\n\t\t\t\t\t\t\t\t\t{tasks\n\t\t\t\t\t\t\t\t\t\t.filter((task) => task.priority === Priority.Medium)\n\t\t\t\t\t\t\t\t\t\t.map((task) => (\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemContent\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={task.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\t\t\t\t\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\t\t\t\t\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatus={task.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : low ? (\n\t\t\t\t\t\t\t\t<div className=\"flex grid w-full  gap-4 xxs:grid-cols-0 xs:grid-cols-2 sm:grid-cols-3 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xxl:grid-cols-6\">\n\t\t\t\t\t\t\t\t\t{tasks\n\t\t\t\t\t\t\t\t\t\t.filter((task) => task.priority === Priority.Low)\n\t\t\t\t\t\t\t\t\t\t.map((task) => (\n\t\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemContent\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={task.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\t\t\t\t\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\t\t\t\t\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstatus={task.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\" flex w-full grid  gap-4 xxs:grid-cols-0 xs:grid-cols-2 sm:grid-cols-3 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xxl:grid-cols-6\">\n\t\t\t\t\t\t\t\t\t{tasks.map((task) => (\n\t\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t\t<ListItemContent\n\t\t\t\t\t\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={task.title}\n\t\t\t\t\t\t\t\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\t\t\t\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\t\t\t\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\t\t\t\t\t\t\t\tstatus={task.status}\n\t\t\t\t\t\t\t\t\t\t\t\tid={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Grid2>\n\t\t</div>\n\t);\n};\n\n{\n\t/* <div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tminHeight: '2.5rem',\n\t\t\t\t\tpadding: '16px',\n\t\t\t\t\tbackground: 'white',\n\t\t\t\t\tflexDirection:\"row\"\n\t\t\t\t\tdisplay: 'flex'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row', width: '100%', alignItems: 'center' }}>\n\t\t\t\t\t<div style={{ marginLeft: '8px' }}>\n\t\t\t\t\t\t<Task01Icon />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Typography variant=\"body1\" style={{ marginLeft: '8px' }}>\n\t\t\t\t\t\t{allTasksLabel}\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Divider color=\"gray3\" />\n\t\t\t<div className=\"w-full flex grid grid-cols-3 gap-4 mt-4 mr-4 ml-4\">\n\t\t\t\t{tasks\n\t\t\t\t\t.filter((task) => task.priority === Priority.High)\n\t\t\t\t\t.map((task) => (\n\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t<ListItemContent\n\t\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\t\ttitle={task.title}\n\t\t\t\t\t\t\t\tpriority={task.priority}\n\t\t\t\t\t\t\t\treminderAt={task.reminderAt}\n\t\t\t\t\t\t\t\treminderAllDay={task.reminderAllDay}\n\t\t\t\t\t\t\t\tstatus={task.status}\n\t\t\t\t\t\t\t\tid={task.id}\n\t\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t</div> */\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect, useMemo, useState } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { Container, Responsive } from '@zextras/carbonio-design-system';\nimport { filter } from 'lodash';\n\nimport { Displayer } from '../../components/Displayer';\nimport { TaskList } from '../../components/TaskList';\nimport { DISPLAYER_WIDTH } from '../../constants';\nimport { ListContext } from '../../contexts';\nimport { FindTasksDocument, type FindTasksQuery } from '../../gql/types';\nimport type { NonNullableList } from '../../types/utils';\nimport { identity } from '../../utils';\nimport { Divider, Grid2 } from '@mui/material';\nimport { useActiveItem } from '../../hooks/useActiveItem';\nimport type { Task } from '../../gql/types';\nimport { useActions } from '../../hooks/useActions';\n\nexport const TasksView = (): React.JSX.Element => {\n\tconst { data: findTasksResult } = useQuery(FindTasksDocument, {\n\t\tnotifyOnNetworkStatusChange: true,\n\t\terrorPolicy: 'all'\n\t});\n\n\tconst tasks = useMemo((): NonNullableList<FindTasksQuery['findTasks']> => {\n\t\tif (findTasksResult?.findTasks && findTasksResult.findTasks.length > 0) {\n\t\t\treturn filter(findTasksResult.findTasks, identity);\n\t\t}\n\t\treturn [];\n\t}, [findTasksResult]);\n\n\tconst { activeItem } = useActiveItem();\n\n\tconst [backbutton, setBackbutton] = useState(false);\n\tuseEffect(() => {\n\t\tif (activeItem) {\n\t\t\tsetBackbutton(true);\n\t\t} else {\n\t\t\tsetBackbutton(false);\n\t\t}\n\t});\n\treturn (\n\t\t<ListContext.Provider value={{ isFull: tasks.length >= 200 }}>\n\t\t\t<Grid2\n\t\t\t\tcontainer\n\t\t\t\tsx={{\n\t\t\t\t\theight: '100%',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\toverflowY: 'scroll',\n\t\t\t\t\tmsOverflowStyle: 'none',\n\t\t\t\t\tscrollbarWidth: 'none',\n\t\t\t\t\t'&::-webkit-scrollbar': {\n\t\t\t\t\t\twidth: 0\n\t\t\t\t\t},\n\t\t\t\t\tborderTopRightRadius: 16,\n\t\t\t\t\tborderTopLeftRadius: 16\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Grid2 size={12} sx={{ borderTopRightRadius: 16, borderTopLeftRadius: 16 }}>\n\t\t\t\t\t{!backbutton ? (\n\t\t\t\t\t\t<TaskList tasks={tasks} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Displayer translationKey=\"displayer.allTasks\" hello={setBackbutton} />\n\t\t\t\t\t)}\n\t\t\t\t</Grid2>\n\t\t\t</Grid2>\n\t\t</ListContext.Provider>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { trimEnd } from 'lodash';\nimport { Route, useRouteMatch } from 'react-router-dom';\n\nimport { TasksView } from './TasksView';\nimport { ROUTES } from '../../constants';\nimport { ProvidersWrapper } from '../../providers/ProvidersWrapper';\n\nconst AppView = (): React.JSX.Element => {\n\tconst { path } = useRouteMatch();\n\n\tconst routes = useMemo(\n\t\t() => <Route path={`${trimEnd(path, '/')}${ROUTES.task}`} component={TasksView} />,\n\t\t[path]\n\t);\n\n\treturn <ProvidersWrapper>{routes}</ProvidersWrapper>;\n};\n\nexport default AppView;\n"],"names":["removeTaskFromList","tasks","existing","toReference","Array","isArray","taskRefs","map","task","__ref","filter","itemRef","includes","addTaskToList","readField","newTaskRef","updatedList","index","findIndex","existingRef","existingTaskCreatedAt","fieldName","from","newTaskCreatedAt","undefined","splice","push","ListContext","createContext","isFull","setIsFull","useRandomPlaceholder","translationKey","tOptions","t","useTranslation","randomPlaceholder","setRandomPlaceholder","useState","tOptionsMemoized","next","compare","previousRef","useRef","previous","current","isEqual","useEffect","useMemoCompare","placeholders","useMemo","returnObjects","updateRandomPlaceholderDebounced","debounce","$placeholders","result","sample","RANDOM_PLACEHOLDER_TIMEOUT","leading","trailing","cancel","useCallback","EmptyDisplayer","useContext","context","defaultValue","title","message","React","Container","Padding","all","Text","color","overflow","weight","size","centered","width","Task01Icon","props","_extends","xmlns","viewBox","height","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","TaskDone01Icon","ActionsHeader","actions","actionButtons","action","Button","variant","key","id","onClick","fullWidth","disabled","style","borderColor","label","backgroundColor","startIcon","Delete","ModeEditOutlineRoundedIcon","display","flexDirection","margin","marginTop","justifyContent","alignItems","useActiveItem","navigateTo","useNavigation","pushHistory","usePushHistoryCallback","replaceHistory","useReplaceHistoryCallback","path","options","replace","route","TASKS_ROUTE","taskId","useParams","activeTaskIdRef","isActive","setActive","removeActive","activeItem","DisplayerHeader","status","hello","closeDisplayer","position","top","left","BACKGROUND_HEADER_COLOR","zIndex","maxWidth","padding","IconButton","marginLeft","ArrowBack","PRIMARY_ICON_COLOR_ACTIVE","Typography","wordWrap","textJustify","Divider","useReminder","reminderAt","reminderAllDay","i18n","language","isExpired","now","Date","reminderAtMidnight","setHours","nowAtMidnight","getTime","formattedDate","formatDateFromTimestamp","includeTime","locale","Reminder","textProps","inline","styled","withConfig","displayName","componentId","TaskDetails","createdAt","priority","description","creationDate","Paper","className","PriorityIcon","toLowerCase","capitalize","flexShrink","Icon","icon","textAlign","getSnackbarTitle","length","substring","concat","useActions","createModal","useModal","createSnackbar","useSnackbar","completeAction","updateTaskStatus","useMutation","UpdateTaskStatusDocument","variables","Status","Complete","useCompleteAction","reopenAction","Open","useReopenAction","trashAction","trashTask","TrashTaskDocument","update","cache","data","modify","fields","findTasks","__typename","then","useTrashAction","openDeleteModal","closeModal","confirmLabel","confirmColor","onConfirm","boardId","getBoardById","closeBoard","type","hideButton","showCloseIcon","onClose","children","vertical","reopenActionHandler","taskTitle","completeActionHandler","editAction","board","setCurrentBoard","reopenBoards","addBoard","url","orderedActions","unshift","TaskDisplayer","background","BACKGROUND_COLOR","Displayer","useQuery","GetTaskDocument","skip","returnPartialData","errorPolicy","getTask","orientation","mainAlignment","crossAlignment","CustomDropdown","Dropdown","ContextualMenu","onOpen","disableRestoreFocus","rest","ref","contextMenuRef","useCombinedRefs","open","setOpen","htmlElement","oncontextmenu","dropdownOpen","click","onOpenHandler","onCloseHandler","placement","contextMenu","items","ListItemHoverBar","actionsMapped","event","stopPropagation","CollapsingActions","gap","HoverBarContainer","Row","ListItemContainer","SruviPriorityIcon","Priority","High","COMPLETED_PRIORITY_ICON","Low","Medium","ReminderIconContainer","theme","parseFloat","sizes","font","small","ListItemContent","visible","isReminderExpired","clickHandler","missingReminderLabel","preventTextSelection","e","detail","preventDefault","high","low","medium","borderRadius","HIGH_PRIORITY_BG","LOW_PRIORITY_BG","MEDIUM_PRIORITY_BG","onMouseDown","noWrap","marginRight","marginBottom","StyledListItem","ListItem","attrs","selectedBackground","activeBackground","active","selected","pseudoClasses","css","getColor","TaskList","allTasksLabel","emptyListPlaceholder","setHigh","setLow","setAll","setMedium","anchorEl","setAnchorEl","Boolean","handleClose","Grid2","container","sx","currentTarget","FilterListIcon","Menu","MenuListProps","MenuItem","ListItemIcon","fontSize","ListItemText","PriorityHighRounded","HIGH_PRIORITY","MEDIUM_PRIORITY","LOW_PRIORITY","TasksView","findTasksResult","FindTasksDocument","notifyOnNetworkStatusChange","identity","backbutton","setBackbutton","Provider","value","overflowY","msOverflowStyle","scrollbarWidth","borderTopRightRadius","borderTopLeftRadius","AppView","useRouteMatch","routes","Route","trimEnd","ROUTES","component","ProvidersWrapper"],"sourceRoot":""}