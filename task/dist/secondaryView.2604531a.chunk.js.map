{"version":3,"file":"secondaryView.2604531a.chunk.js","mappings":"0NAmBA,SAASA,EAAmBC,GAC3B,MAWMC,EAA4B,CAVjCC,IAAAA,cAACC,EAAAA,QAAO,CAACC,MAAOJ,EAAKI,OACpBF,IAAAA,cAACG,EAAAA,WAAU,CACVC,WAAY,CAAEC,SAAU,QAASC,YAAa,SAC9CC,KAAMT,EAAKS,MAAQ,GACnBC,QAASV,EAAKU,SAAWC,EAAAA,KACzBC,gBAAkBZ,EAAKa,OAAU,iBAAgBC,EACjDC,UAAWf,EAAKe,cAQnB,OAHIf,EAAKgB,OAAShB,EAAKgB,MAAMC,OAAS,GACrChB,EAAKiB,SAAQC,EAAAA,EAAAA,SAAQnB,EAAKgB,OAAQI,GAAYrB,EAAmBqB,MAE3DnB,CACR,CAEA,MA6EA,EA7EyBoB,EAAGC,eAC3B,MAAOC,IAAKC,EAAAA,EAAAA,mBACN,KAAEC,EAAI,YAAEC,IAAgBC,EAAAA,EAAAA,kBA+BxBX,GAAQY,EAAAA,EAAAA,UACb,IAAM,CACL,CACCC,GAAI,MACJzB,MAAO,GACPK,KAAM,GACNqB,MAAM,EACNd,MAAO,CACN,CACCa,GAAI,MACJpB,KAAM,0BACNL,MAAOmB,EAAE,wBAAyB,YAClCb,QAAUqB,IACTA,EAAGC,iBAAiB,EAErBnB,QAAQ,IAGVH,QAAUqB,IACTA,EAAGC,iBAAiB,KAIvB,CAACP,EAAMF,IAGFU,GAAiBL,EAAAA,EAAAA,UAAQ,KAAMM,EAAAA,EAAAA,KAAIlB,GAAQhB,GAASD,EAAmBC,MAAQ,CAACgB,IAEtF,OACCd,IAAAA,cAACiC,EAAAA,UAAS,CACTC,OAAO,OACPC,YAAY,WACZC,cAAc,aACdC,eAAe,aACfC,WAAY,eAEVlB,GACDpB,IAAAA,cAAA,OAAKuC,UAAU,4BACdvC,IAAAA,cAACwC,EAAAA,UAAS,CAACF,WAAW,cAAcG,KAAK,WAAW3B,MAAOA,MAEvDd,IAAAA,cAACiC,EAAAA,UAAS,CAACG,cAAe,cAAeL,GACpC,C","sources":["webpack://carbonio-tasks-ui/./src/views/secondary-bar/SecondaryBarView.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport {\n\tAccordion,\n\ttype AccordionItemType,\n\tContainer,\n\tIconButton,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport { useUserAccount } from '@zextras/carbonio-shell-ui';\nimport { flatMap, map, noop } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nfunction buildCollapsedItem(item: AccordionItemType): React.JSX.Element[] {\n\tconst element = (\n\t\t<Tooltip label={item.label}>\n\t\t\t<IconButton\n\t\t\t\tcustomSize={{ iconSize: 'large', paddingSize: 'small' }}\n\t\t\t\ticon={item.icon || ''}\n\t\t\t\tonClick={item.onClick || noop}\n\t\t\t\tbackgroundColor={(item.active && 'highlight') || undefined}\n\t\t\t\ticonColor={item.iconColor}\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n\tconst list: React.JSX.Element[] = [element];\n\tif (item.items && item.items.length > 0) {\n\t\tlist.push(...flatMap(item.items, (subItem) => buildCollapsedItem(subItem)));\n\t}\n\treturn list;\n}\n\nconst SecondaryBarView = ({ expanded }: { expanded: boolean }): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst { name, displayName } = useUserAccount();\n\tconst PriorityIcon = (props: React.SVGProps<SVGSVGElement>) => (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\twidth={24}\n\t\t\theight={24}\n\t\t\tcolor={'#000000'}\n\t\t\tfill={'none'}\n\t\t\t{...props}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M7.99805 16H11.998M7.99805 11H15.998\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M7.5 3.5C5.9442 3.54667 5.01661 3.71984 4.37477 4.36227C3.49609 5.24177 3.49609 6.6573 3.49609 9.48836L3.49609 15.9944C3.49609 18.8255 3.49609 20.241 4.37477 21.1205C5.25345 22 6.66767 22 9.49609 22L14.4961 22C17.3245 22 18.7387 22 19.6174 21.1205C20.4961 20.241 20.4961 18.8255 20.4961 15.9944V9.48836C20.4961 6.6573 20.4961 5.24177 19.6174 4.36228C18.9756 3.71984 18.048 3.54667 16.4922 3.5\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M7.49609 3.75C7.49609 2.7835 8.2796 2 9.24609 2H14.7461C15.7126 2 16.4961 2.7835 16.4961 3.75C16.4961 4.7165 15.7126 5.5 14.7461 5.5H9.24609C8.2796 5.5 7.49609 4.7165 7.49609 3.75Z\"\n\t\t\t\tstroke=\"currentColor\"\n\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t/>\n\t\t</svg>\n\t);\n\n\tconst items = useMemo<AccordionItemType[]>(\n\t\t() => [\n\t\t\t{\n\t\t\t\tid: 'id1',\n\t\t\t\tlabel: ``,\n\t\t\t\ticon: '',\n\t\t\t\topen: true,\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'id2',\n\t\t\t\t\t\ticon: 'CheckmarkCircle2Outline',\n\t\t\t\t\t\tlabel: t('secondaryBar.allTasks', 'My Tasks'),\n\t\t\t\t\t\tonClick: (ev): void => {\n\t\t\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tactive: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tonClick: (ev: React.SyntheticEvent | KeyboardEvent): void => {\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t[name, t]\n\t);\n\n\tconst collapsedItems = useMemo(() => map(items, (item) => buildCollapsedItem(item)), [items]);\n\n\treturn (\n\t\t<Container\n\t\t\theight=\"auto\"\n\t\t\torientation=\"vertical\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tbackground={'transparent'}\n\t\t>\n\t\t\t{(expanded && (\n\t\t\t\t<div className=\"flex rounded-full w-full\">\n\t\t\t\t\t<Accordion background=\"transparent\" role=\"menuitem\" items={items} />\n\t\t\t\t</div>\n\t\t\t)) || <Container mainAlignment={'flex-start'}>{collapsedItems}</Container>}\n\t\t</Container>\n\t);\n};\nexport default SecondaryBarView;\n"],"names":["buildCollapsedItem","item","list","React","Tooltip","label","IconButton","customSize","iconSize","paddingSize","icon","onClick","noop","backgroundColor","active","undefined","iconColor","items","length","push","flatMap","subItem","SecondaryBarView","expanded","t","useTranslation","name","displayName","useUserAccount","useMemo","id","open","ev","stopPropagation","collapsedItems","map","Container","height","orientation","mainAlignment","crossAlignment","background","className","Accordion","role"],"sourceRoot":""}