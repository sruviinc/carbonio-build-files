{"version":3,"file":"search-view.9129c5d4.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/test/mocks/carbonio-shell-ui-constants.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/hooks/use-update-view.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/soap/no-op.ts","webpack://carbonio-contacts-ui/./src/legacy/views/search/parts/keyword-row.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/parts/tag-row.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/parts/toggle-filters.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/advance-filter-modal.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/parts/use-disable-hooks.js","webpack://carbonio-contacts-ui/./src/legacy/views/search/search-list-item.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/shimmer-list.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/search-list.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/search-panel.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/search/utils.js","webpack://carbonio-contacts-ui/./src/legacy/views/search/search-view.tsx","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/utils/use-prefs.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const FOLDERS = {\n\tUSER_ROOT: '1',\n\tINBOX: '2',\n\tTRASH: '3',\n\tSPAM: '4',\n\tSENT: '5',\n\tDRAFTS: '6',\n\tCONTACTS: '7',\n\tTAGS: '8',\n\tCONVERSATIONS: '9',\n\tCALENDAR: '10',\n\tROOT: '11',\n\tNOTEBOOK: '12', // no longer created in new mailboxes since Helix (bug 39647).  old mailboxes may still contain a system folder with id 12\n\tAUTO_CONTACTS: '13',\n\tIM_LOGS: '14',\n\tTASKS: '15',\n\tBRIEFCASE: '16'\n};\n\nexport const ZIMBRA_STANDARD_COLORS = [\n\t{ zValue: 0, hex: '#000000', zLabel: 'black' },\n\t{ zValue: 1, hex: '#2b73d2', zLabel: 'blue' },\n\t{ zValue: 2, hex: '#2196d3', zLabel: 'cyan' },\n\t{ zValue: 3, hex: '#639030', zLabel: 'green' },\n\t{ zValue: 4, hex: '#1a75a7', zLabel: 'purple' },\n\t{ zValue: 5, hex: '#d74942', zLabel: 'red' },\n\t{ zValue: 6, hex: '#ffc107', zLabel: 'yellow' },\n\t{ zValue: 7, hex: '#edaeab', zLabel: 'pink' },\n\t{ zValue: 8, hex: '#828282', zLabel: 'gray' },\n\t{ zValue: 9, hex: '#ba8b00', zLabel: 'orange' }\n];\n\nexport enum JSNS {\n\tACCOUNT = 'urn:zimbraAccount',\n\tADMIN = 'urn:zimbraAdmin',\n\tMAIL = 'urn:zimbraMail',\n\tALL = 'urn:zimbra',\n\tSYNC = 'urn:zimbraSync'\n}\n\nexport const ROOT_NAME = 'USER_ROOT';\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useEffect } from 'react';\n\nimport { NoOp } from '../soap/no-op';\n\nexport const useUpdateView = (): void => {\n\tconst handler = useCallback((): void => {\n\t\tNoOp();\n\t}, []);\n\n\tuseEffect((): (() => void) => {\n\t\twindow.addEventListener('updateView', handler);\n\t\treturn function cleanup() {\n\t\t\twindow.removeEventListener('updateView', handler);\n\t\t};\n\t}, [handler]);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { ErrorSoapBodyResponse, soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport { JSNS } from '../test/mocks/carbonio-shell-ui-constants';\n\ntype NoOpRequest = {\n\t_jsns: JSNS.MAIL;\n};\n\ntype NoOpResponse = { _jsns: JSNS.MAIL } | ErrorSoapBodyResponse;\n\nexport const NoOp = async (): Promise<void> => {\n\tconst request = {\n\t\t_jsns: JSNS.MAIL\n\t} as const;\n\tconst response = await soapFetch<NoOpRequest, NoOpResponse>('NoOp', request);\n\tif ('Fault' in response) {\n\t\tthrow new Error(response.Fault.Reason.Text);\n\t}\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useCallback } from 'react';\n\nimport { Container, ChipInput, ChipProps } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { Query } from '../search-types';\n\nexport type KeywordState = Array<{\n\tlabel?: string;\n\thasAvatar?: boolean;\n\tvalue?: string;\n\tisQueryFilter?: boolean;\n\tisGeneric?: boolean;\n\tavatarIcon?: ChipProps['avatarIcon'];\n\tavatarBackground?: ChipProps['avatarBackground'];\n\thasError?: boolean;\n\terror?: boolean | string;\n}>;\n\ntype ComponentProps = {\n\tcompProps: {\n\t\totherKeywords: KeywordState;\n\t\tsetOtherKeywords: (arg: KeywordState) => void;\n\t\tquery: Query;\n\t};\n};\nconst KeywordRow: FC<ComponentProps> = ({ compProps }): ReactElement => {\n\tconst { otherKeywords, setOtherKeywords, query } = compProps;\n\tconst [t] = useTranslation();\n\tconst keywordChipOnAdd = useCallback(\n\t\t(label) => ({\n\t\t\tlabel,\n\t\t\thasAvatar: false,\n\t\t\tisGeneric: true\n\t\t}),\n\t\t[]\n\t);\n\tconst onChange = useCallback(\n\t\t(keywords) => {\n\t\t\tsetOtherKeywords(keywords);\n\t\t},\n\t\t[setOtherKeywords]\n\t);\n\n\treturn (\n\t\t<Container padding={{ bottom: 'small', top: 'medium' }}>\n\t\t\t<ChipInput\n\t\t\t\tplaceholder={t('label.keyword', 'Keyword')}\n\t\t\t\tbackground=\"gray5\"\n\t\t\t\tvalue={otherKeywords}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonAdd={keywordChipOnAdd}\n\t\t\t\tdefaultValue={query}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\nexport default KeywordRow;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useCallback, useMemo } from 'react';\n\nimport { Container, ChipInput } from '@zextras/carbonio-design-system';\nimport { ZIMBRA_STANDARD_COLORS } from '@zextras/carbonio-shell-ui';\nimport { filter } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\ntype ComponentProps = {\n\tcompProps: {\n\t\ttagOptions: Array<any>;\n\t\ttag: Array<any>;\n\t\tsetTag: (arg: any) => void;\n\t};\n};\nconst TagRow: FC<ComponentProps> = ({ compProps }): ReactElement => {\n\tconst [t] = useTranslation();\n\tconst { tagOptions, tag, setTag } = compProps;\n\n\tconst chipOnAdd = useCallback(\n\t\t(label, preText, hasAvatar, isGeneric, isQueryFilter, avatarIcon, avatarBackground) => ({\n\t\t\tlabel: `${preText}:${label}`,\n\t\t\thasAvatar,\n\t\t\tisGeneric,\n\t\t\tavatarIcon,\n\t\t\tbackground: 'gray2',\n\t\t\tavatarBackground: avatarBackground || 'gray2',\n\t\t\tisQueryFilter,\n\t\t\tvalue: `${preText}:\"${label}\"`\n\t\t}),\n\t\t[]\n\t);\n\n\tconst tagChipOnAdd = useCallback(\n\t\t(label: string | unknown): any => {\n\t\t\tconst chipBg = filter(tagOptions, { label })[0];\n\t\t\treturn chipOnAdd(\n\t\t\t\tlabel,\n\t\t\t\t'tag',\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\t'Tag',\n\t\t\t\tZIMBRA_STANDARD_COLORS[chipBg.color].hex\n\t\t\t);\n\t\t},\n\t\t[chipOnAdd, tagOptions]\n\t);\n\n\tconst tagPlaceholder = useMemo(() => t('label.tag', 'Tag'), [t]);\n\tconst onTagChange = useCallback(\n\t\t(chip) => {\n\t\t\tsetTag(chip);\n\t\t},\n\t\t[setTag]\n\t);\n\treturn (\n\t\t<Container padding={{ bottom: 'small', top: 'medium' }} orientation=\"horizontal\">\n\t\t\t<ChipInput\n\t\t\t\tplaceholder={tagPlaceholder}\n\t\t\t\tbackground=\"gray5\"\n\t\t\t\tdefaultValue={[]}\n\t\t\t\toptions={tagOptions}\n\t\t\t\tvalue={tag}\n\t\t\t\tonChange={onTagChange}\n\t\t\t\tonAdd={tagChipOnAdd}\n\t\t\t\tdisableOptions={false}\n\t\t\t\tdisabled\n\t\t\t\trequireUniqueChips\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n\nexport default TagRow;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, FC, ReactElement } from 'react';\n\nimport { Container, Switch, Text, Padding } from '@zextras/carbonio-design-system';\nimport { t } from '@zextras/carbonio-shell-ui';\n\nexport type ToggleFiltersProps = {\n\tcompProps: {\n\t\tisSharedFolderIncludedTobe: boolean;\n\t\tsetIsSharedFolderIncludedTobe: (arg: boolean) => void;\n\t};\n};\n\nconst ToggleFilters: FC<ToggleFiltersProps> = ({ compProps }): ReactElement => {\n\tconst { isSharedFolderIncludedTobe, setIsSharedFolderIncludedTobe } = compProps;\n\tconst toggleSharedFolder = useCallback(() => {\n\t\tsetIsSharedFolderIncludedTobe(!isSharedFolderIncludedTobe);\n\t}, [isSharedFolderIncludedTobe, setIsSharedFolderIncludedTobe]);\n\n\treturn (\n\t\t<>\n\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"center\" crossAlignment=\"center\">\n\t\t\t\t<Container\n\t\t\t\t\tpadding={{ all: 'extrasmall' }}\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t>\n\t\t\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"baseline\" crossAlignment=\"center\">\n\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t<Switch onClick={toggleSharedFolder} value={isSharedFolderIncludedTobe} />\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t<Text size=\"large\" weight=\"bold\">\n\t\t\t\t\t\t\t{t('label.include_shared_folders', 'Include shared address books')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Padding bottom=\"small\" />\n\t\t\t\t\t<Text color=\"secondary\" size=\"small\" overflow=\"break-word\">\n\t\t\t\t\t\t{t('search.shared_folders_note', 'Include shared address books in searches.')}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Padding bottom=\"small\" />\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default ToggleFilters;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, ReactElement, useState, useCallback, useMemo, useEffect } from 'react';\n\nimport {\n\tCustomModal,\n\tContainer,\n\tRow,\n\tTextWithTooltip,\n\tPadding,\n\tIcon\n} from '@zextras/carbonio-design-system';\nimport { getTags, SearchViewProps, ZIMBRA_STANDARD_COLORS } from '@zextras/carbonio-shell-ui';\nimport { TFunction } from 'i18next';\nimport { concat, filter, map } from 'lodash';\n\nimport KeywordRow, { KeywordState } from './parts/keyword-row';\nimport TagRow from './parts/tag-row';\nimport ToggleFilters from './parts/toggle-filters';\nimport { useDisabled, useSecondaryDisabled } from './parts/use-disable-hooks';\nimport type { Query } from './search-types';\nimport ModalFooter from '../secondary-bar/commons/modal-footer';\nimport { ModalHeader } from '../secondary-bar/commons/modal-header';\n\ntype AdvancedFilterModalProps = {\n\topen: boolean;\n\tonClose: () => void;\n\tt: TFunction;\n\tquery: Query;\n\tupdateQuery: ReturnType<SearchViewProps['useQuery']>[1];\n\tisSharedFolderIncluded: boolean;\n\tsetIsSharedFolderIncluded: (arg: boolean) => void;\n};\n\nconst AdvancedFilterModal: FC<AdvancedFilterModalProps> = ({\n\topen,\n\tonClose,\n\tt,\n\tquery,\n\tupdateQuery,\n\tsetIsSharedFolderIncluded,\n\tisSharedFolderIncluded\n}): ReactElement => {\n\tconst [otherKeywords, setOtherKeywords] = useState<KeywordState>([]);\n\tconst [tag, setTag] = useState<KeywordState>([]);\n\tconst tagOptions = useMemo(\n\t\t() =>\n\t\t\tmap(getTags(), (item) => ({\n\t\t\t\t...item,\n\t\t\t\tlabel: item.name,\n\t\t\t\tcustomComponent: (\n\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t\t\t<Row mainAlignment=\"flex-end\">\n\t\t\t\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t\t\t\t<Icon icon=\"Tag\" color={ZIMBRA_STANDARD_COLORS[item.color ?? 0].hex} />\n\t\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t<TextWithTooltip>{item.name}</TextWithTooltip>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Row>\n\t\t\t\t)\n\t\t\t})),\n\t\t[]\n\t);\n\tconst [isSharedFolderIncludedTobe, setIsSharedFolderIncludedTobe] =\n\t\tuseState(isSharedFolderIncluded);\n\n\tuseEffect(() => {\n\t\tconst updatedQuery = map(\n\t\t\tfilter(query, (v) => !/^tag:/.test(v.label ?? '') && !v.isQueryFilter),\n\t\t\t(q) => ({ ...q, hasAvatar: false })\n\t\t);\n\n\t\tconst tagFromQuery = map(\n\t\t\tfilter(query, (v) => /^tag:/.test(v.label ?? '')),\n\t\t\t(q) => ({ ...q, hasAvatar: true, icon: 'TagOutline' })\n\t\t);\n\t\tsetTag(tagFromQuery);\n\n\t\tsetOtherKeywords(updatedQuery);\n\t}, [query]);\n\n\tconst totalKeywords = useMemo(\n\t\t() => filter(otherKeywords, (q) => q.isGeneric === true || q.isQueryFilter === true).length,\n\t\t[otherKeywords]\n\t);\n\tconst queryToBe = useMemo(\n\t\t() =>\n\t\t\tconcat(\n\t\t\t\totherKeywords,\n\n\t\t\t\ttag\n\t\t\t),\n\t\t[otherKeywords, tag]\n\t);\n\n\tconst disabled = useDisabled({\n\t\tquery,\n\t\tqueryToBe,\n\t\tisSharedFolderIncluded,\n\t\tisSharedFolderIncludedTobe\n\t});\n\tconst secondaryDisabled = useSecondaryDisabled({\n\t\ttag,\n\t\ttotalKeywords\n\t});\n\tconst resetFilters = useCallback(() => {\n\t\tsetOtherKeywords([]);\n\t\tsetTag([]);\n\t}, []);\n\n\tconst onConfirm = useCallback(() => {\n\t\tconst tmp = [...otherKeywords];\n\t\tupdateQuery(tmp);\n\t\tsetIsSharedFolderIncluded(isSharedFolderIncludedTobe);\n\t\tonClose();\n\t}, [otherKeywords, updateQuery, setIsSharedFolderIncluded, isSharedFolderIncludedTobe, onClose]);\n\n\tconst keywordRowProps = useMemo(\n\t\t() => ({\n\t\t\totherKeywords,\n\t\t\tsetOtherKeywords,\n\t\t\tquery\n\t\t}),\n\t\t[otherKeywords, query]\n\t);\n\tconst tagRowProps = useMemo(\n\t\t() => ({\n\t\t\ttagOptions,\n\t\t\ttag,\n\t\t\tsetTag\n\t\t}),\n\t\t[tagOptions, tag, setTag]\n\t);\n\n\tconst toggleFiltersProps = useMemo(\n\t\t() => ({\n\t\t\tquery,\n\t\t\tsetIsSharedFolderIncludedTobe,\n\t\t\tisSharedFolderIncludedTobe\n\t\t}),\n\t\t[query, isSharedFolderIncludedTobe]\n\t);\n\treturn (\n\t\t<CustomModal open={open} onClose={onClose} maxHeight=\"90vh\" size=\"medium\">\n\t\t\t<Container padding={{ bottom: 'medium' }}>\n\t\t\t\t<ModalHeader onClose={onClose} title={t('title.advanced_filters', 'Advanced Filters')} />\n\t\t\t\t<Container padding={{ horizontal: 'medium', vertical: 'small' }}>\n\t\t\t\t\t<ToggleFilters compProps={toggleFiltersProps} />\n\t\t\t\t\t<KeywordRow compProps={keywordRowProps} />\n\t\t\t\t\t<TagRow compProps={tagRowProps} />\n\t\t\t\t</Container>\n\t\t\t\t<ModalFooter\n\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tsecondaryDisabled={secondaryDisabled}\n\t\t\t\t\tlabel={t('action.search', 'Search')}\n\t\t\t\t\tsecondaryLabel={t('action.reset_filters', 'Reset Filters')}\n\t\t\t\t\tsecondaryAction={resetFilters}\n\t\t\t\t\tsecondaryBtnType=\"outlined\"\n\t\t\t\t\tsecondaryColor=\"primary\"\n\t\t\t\t\tpaddingTop=\"small\"\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</CustomModal>\n\t);\n};\n\nexport default AdvancedFilterModal;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useMemo } from 'react';\n\nimport { isEqualWith } from 'lodash';\n\nexport const useDisabled = ({\n\tqueryToBe,\n\tquery,\n\tisSharedFolderIncluded,\n\tisSharedFolderIncludedTobe\n}) =>\n\tuseMemo(\n\t\t() =>\n\t\t\tisSharedFolderIncluded !== isSharedFolderIncludedTobe\n\t\t\t\t? false\n\t\t\t\t: isEqualWith(queryToBe, query, (newQuery, currentQuery) => {\n\t\t\t\t\t\tif (newQuery.length === 0 && currentQuery.length === 0) return true;\n\t\t\t\t\t\tif (newQuery.length !== currentQuery.length) return false;\n\t\t\t\t\t\treturn newQuery[0].value === currentQuery[0].value;\n\t\t\t\t\t}),\n\t\t[isSharedFolderIncluded, isSharedFolderIncludedTobe, query, queryToBe]\n\t);\n\nexport const useSecondaryDisabled = ({ tag, totalKeywords }) =>\n\tuseMemo(() => totalKeywords === 0 && tag.length === 0, [tag.length, totalKeywords]);\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Container, Padding, Row, Text, Tooltip } from '@zextras/carbonio-design-system';\nimport { ZIMBRA_STANDARD_COLORS, pushHistory, useTags } from '@zextras/carbonio-shell-ui';\nimport { includes, reduce, trim } from 'lodash';\nimport { useDispatch } from 'react-redux';\n\nimport { useAppSelector } from '../../hooks/redux';\nimport { searchContacts } from '../../store/actions/search-contacts';\nimport { selectFolderStatus } from '../../store/selectors/contacts';\nimport { ItemAvatar } from '../app/folder-panel/item-avatar';\nimport { RowInfo } from '../app/folder-panel/item-content';\nimport ListItemActionWrapper from '../folder/list-item-action-wrapper';\n\nconst getChipLabel = (item) => {\n\tif (item.firstName ?? item.middleName ?? item.lastName) {\n\t\treturn trim(`${item.firstName ?? ''} ${item.middleName ?? ''} ${item.lastName ?? ''}`);\n\t}\n\treturn item.fullName ?? item?.email?.email?.mail ?? '';\n};\nconst SearchListItem = ({ item, selected, selecting, toggle, active }) => {\n\tconst dispatch = useDispatch();\n\tconst folderId = item.parent;\n\tconst folderStatus = useAppSelector((state) => selectFolderStatus(state, folderId));\n\n\tconst _onClick = useCallback(() => {\n\t\tif (!folderStatus) {\n\t\t\tdispatch(searchContacts(folderId));\n\t\t}\n\t\tpushHistory(`/folder/${item.parent}/contacts/${item.id}`);\n\t}, [dispatch, folderId, folderStatus, item]);\n\n\tconst label = useMemo(() => getChipLabel(item), [item]);\n\tconst secondaryRow = useMemo(\n\t\t() =>\n\t\t\ttrim(\n\t\t\t\t`${Object.values(item.email).length > 0 ? Object.values(item.email)[0].mail : ''}, ${\n\t\t\t\t\tObject.values(item.phone).length > 0 ? Object.values(item.phone)[0].number : ''\n\t\t\t\t}`,\n\t\t\t\t', '\n\t\t\t),\n\t\t[item]\n\t);\n\tconst tagsFromStore = useTags();\n\n\tconst tags = useMemo(\n\t\t() =>\n\t\t\treduce(\n\t\t\t\ttagsFromStore,\n\t\t\t\t(acc, v) => {\n\t\t\t\t\tif (includes(item.tags, v.id))\n\t\t\t\t\t\tacc.push({ ...v, color: ZIMBRA_STANDARD_COLORS[parseInt(v.color ?? '0', 10)].hex });\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t),\n\t\t[item.tags, tagsFromStore]\n\t);\n\treturn (\n\t\t<Container mainAlignment=\"flex-start\" data-testid={`ConversationListItem-${item.id}`}>\n\t\t\t<ListItemActionWrapper item={item} current={active} onClick={_onClick} contact={item}>\n\t\t\t\t<div style={{ alignSelf: 'center' }} data-testid={`AvatarContainer`}>\n\t\t\t\t\t<ItemAvatar\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\tselecting={selecting}\n\t\t\t\t\t\ttoggle={toggle}\n\t\t\t\t\t\tfolderId={folderId}\n\t\t\t\t\t\tisSearch\n\t\t\t\t\t/>\n\t\t\t\t\t<Padding horizontal=\"extrasmall\" />\n\t\t\t\t</div>\n\t\t\t\t<Row\n\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t\twrap=\"wrap\"\n\t\t\t\t\tmainAlignment=\"space-around\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\tpadding={{ left: 'small', top: 'small', bottom: 'small', right: 'large' }}\n\t\t\t\t>\n\t\t\t\t\t{label !== item?.email?.email?.mail ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Container orientation=\"horizontal\" height=\"fit\" width=\"fill\">\n\t\t\t\t\t\t\t\t<Row wrap=\"nowrap\" takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Text>{label}</Text>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<RowInfo item={item} tags={tags} />\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\tlabel={item?.email?.email?.mail}\n\t\t\t\t\t\t\t\toverflow=\"break-word\"\n\t\t\t\t\t\t\t\tmaxWidth=\"60vw\"\n\t\t\t\t\t\t\t\tdisabled={!item?.email?.email?.mail}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t\t<Text size=\"small\" weight=\"regular\" color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t{secondaryRow}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Text size=\"large\">{label}</Text>\n\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</ListItemActionWrapper>\n\t\t</Container>\n\t);\n};\n\nexport default SearchListItem;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Shimmer } from '@zextras/carbonio-design-system';\nimport { map } from 'lodash';\n\nconst ShimmerList = () => (\n\t<>\n\t\t{map(Array.from(Array(15).keys()), (item, index) => (\n\t\t\t<Shimmer.ListItem type={1} key={`${item}${index}`} />\n\t\t))}\n\t</>\n);\n\nexport default ShimmerList;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { Button, Container, List, Padding, Text } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport SearchListItem from './search-list-item';\nimport ShimmerList from './shimmer-list';\n\nconst BorderContainer = styled(Container)`\n\tborder-bottom: 0.0625rem solid ${({ theme }) => theme?.palette?.gray2?.regular};\n\tborder-right: 0.0625rem solid ${({ theme }) => theme?.palette?.gray2?.regular};\n`;\n\nconst SearchList = ({\n\tsearchResults,\n\tsearch,\n\tquery,\n\tloading,\n\tfilterCount,\n\tsetShowAdvanceFilters\n}) => {\n\tconst [t] = useTranslation();\n\tconst { itemId } = useParams();\n\tconst loadMore = useCallback(() => {\n\t\tif (searchResults && searchResults.contacts.length > 0 && searchResults.more) {\n\t\t\tsearch(query, false);\n\t\t}\n\t}, [query, search, searchResults]);\n\n\tconst canLoadMore = useMemo(\n\t\t() => !loading && searchResults && searchResults.contacts.length > 0 && searchResults.more,\n\t\t[loading, searchResults]\n\t);\n\n\tconst [randomListIndex, setRandomListIndex] = useState(0);\n\tuseEffect(() => {\n\t\tif (randomListIndex === 0) {\n\t\t\tsetRandomListIndex(1);\n\t\t} else {\n\t\t\tsetRandomListIndex(0);\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [searchResults?.contacts.length, query]);\n\tconst displayerTitle = useMemo(() => {\n\t\tif (searchResults?.contacts.length === 0) {\n\t\t\tif (randomListIndex === 0) {\n\t\t\t\treturn t(\n\t\t\t\t\t'displayer.search_list_title1',\n\t\t\t\t\t'It looks like there are no results. Keep searching!'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn t('displayer.search_list_title2', 'None of your items matches your search.');\n\t\t}\n\t\treturn null;\n\t}, [randomListIndex, t, searchResults?.contacts.length]);\n\n\treturn (\n\t\t<Container\n\t\t\tbackground=\"gray6\"\n\t\t\tmaxWidth=\"40.625rem\"\n\t\t\twidth=\"25%\"\n\t\t\torientation=\"vertical\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tdata-testid=\"ContactsSearchResultListContainer\"\n\t\t>\n\t\t\t<BorderContainer padding=\"small\" height=\"fit\" borderRadius=\"none\">\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => setShowAdvanceFilters(true)}\n\t\t\t\t\ttype={filterCount > 0 ? 'default' : 'outlined'}\n\t\t\t\t\twidth={'fill'}\n\t\t\t\t\tlabel={\n\t\t\t\t\t\tfilterCount === 0\n\t\t\t\t\t\t\t? t('title.advanced_filters', 'Advanced Filters')\n\t\t\t\t\t\t\t: t('label.advanced_filter', {\n\t\t\t\t\t\t\t\t\tcount: filterCount,\n\t\t\t\t\t\t\t\t\tdefaultValue_one: '{{count}} Advanced Filter',\n\t\t\t\t\t\t\t\t\tdefaultValue_other: '\"{{count}} Advanced Filters'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\ticon=\"Options2Outline\"\n\t\t\t\t/>\n\t\t\t</BorderContainer>\n\t\t\t{loading && <ShimmerList />}\n\t\t\t{searchResults?.contacts.length > 0 && !loading && (\n\t\t\t\t<Container>\n\t\t\t\t\t<List\n\t\t\t\t\t\tbackground=\"gray6\"\n\t\t\t\t\t\titems={searchResults?.contacts ?? []}\n\t\t\t\t\t\tItemComponent={SearchListItem}\n\t\t\t\t\t\tonListBottom={canLoadMore ? loadMore : undefined}\n\t\t\t\t\t\tactive={itemId}\n\t\t\t\t\t\tdata-testid=\"SearchResultContactsContainer\"\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t\t{searchResults?.contacts.length === 0 && !loading && (\n\t\t\t\t<Container>\n\t\t\t\t\t<Padding top=\"medium\">\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tcolor=\"gray1\"\n\t\t\t\t\t\t\toverflow=\"break-word\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tstyle={{ whiteSpace: 'pre-line', textAlign: 'center' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{displayerTitle}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Padding>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default SearchList;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useEffect, useMemo, useState } from 'react';\n\nimport { Container, Padding, Text } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\nimport { useRouteMatch, Switch, Route } from 'react-router-dom';\n\nimport { EmptyFieldMessages, EmptyListMessages } from './utils';\nimport ContactEditPanel from '../edit/contact-edit-panel';\nimport ContactPreviewPanel from '../preview/contact-preview-panel';\n\nconst generateRandomNumber = () => Math.floor(Math.random() * 3);\nconst SearchPanel = ({ searchResults, query, width }) => {\n\tconst { path } = useRouteMatch();\n\tconst [t] = useTranslation();\n\tconst emptyListMessages = useMemo(() => EmptyListMessages(t), [t]);\n\tconst emptyFieldMessages = useMemo(() => EmptyFieldMessages(t), [t]);\n\tconst [randomIndex, setRandomIndex] = useState(0);\n\tuseEffect(() => {\n\t\tconst random = generateRandomNumber();\n\t\tsetRandomIndex(random);\n\t}, [searchResults?.contacts.length, query]);\n\tconst displayerMessage = useMemo(() => {\n\t\tif (searchResults?.contacts.length === 0) {\n\t\t\treturn emptyListMessages[randomIndex];\n\t\t}\n\t\treturn emptyFieldMessages[0];\n\t}, [randomIndex, emptyListMessages, emptyFieldMessages, searchResults?.contacts.length]);\n\tconst displayerTitle = useMemo(() => displayerMessage?.title, [displayerMessage?.title]);\n\tconst displayerDescription = useMemo(\n\t\t() => displayerMessage?.description,\n\t\t[displayerMessage?.description]\n\t);\n\treturn (\n\t\t<Container width={width ?? '55%'} mainAlignment=\"flex-start\">\n\t\t\t<Switch>\n\t\t\t\t<Route exact path={`${path}/folder/:folderId/contacts/:contactId`}>\n\t\t\t\t\t<ContactPreviewPanel />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={`${path}/folder/:folderId/edit/:editId`}>\n\t\t\t\t\t<ContactEditPanel />\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath={path}\n\t\t\t\t\trender={() => (\n\t\t\t\t\t\t<Container background=\"gray5\">\n\t\t\t\t\t\t\t<Padding all=\"medium\">\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tcolor=\"gray1\"\n\t\t\t\t\t\t\t\t\toverflow=\"break-word\"\n\t\t\t\t\t\t\t\t\tweight=\"bold\"\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\tstyle={{ whiteSpace: 'pre-line', textAlign: 'center' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{displayerTitle}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor=\"gray1\"\n\t\t\t\t\t\t\t\toverflow=\"break-word\"\n\t\t\t\t\t\t\t\tstyle={{ whiteSpace: 'pre-line', textAlign: 'center' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{displayerDescription}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</Container>\n\t);\n};\n\nexport default SearchPanel;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nexport const EmptyListMessages = (t) => [\n\t{\n\t\ttitle: t('displayer.search_title1', 'Start another search'),\n\t\tdescription: t(\n\t\t\t'displayer.search_description1',\n\t\t\t'Or select “Advanced Filters” to refine your search.'\n\t\t)\n\t},\n\t{\n\t\ttitle: t('displayer.search_title2', 'We’re sorry but there are no results for your search'),\n\t\tdescription: t('displayer.search_description2', 'Try to start another search.')\n\t},\n\t{\n\t\ttitle: t('displayer.search_title3', 'There are no results for your search.'),\n\t\tdescription: t(\n\t\t\t'displayer.search_description3',\n\t\t\t`Check the spelling and the filters' options or try with another keyword.`\n\t\t)\n\t}\n];\n\nexport const EmptyFieldMessages = (t) => [\n\t{\n\t\ttitle: t(\n\t\t\t'displayer.search_title4',\n\t\t\t'Select one or more results to perform actions or display details.'\n\t\t),\n\t\tdescription: ''\n\t}\n];\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, Suspense, useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport { type SearchViewProps, soapFetch, Spinner } from '@zextras/carbonio-shell-ui';\nimport { map, reduce } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport AdvancedFilterModal from './advance-filter-modal';\nimport SearchList from './search-list';\nimport SearchPanel from './search-panel';\nimport { isTrash } from '../../../carbonio-ui-commons/helpers/folders';\nimport { useUpdateView } from '../../../carbonio-ui-commons/hooks/use-update-view';\nimport { useFoldersMap } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { Folder } from '../../../carbonio-ui-commons/types/folder';\nimport { usePrefs } from '../../../carbonio-ui-commons/utils/use-prefs';\nimport { Contact } from '../../types/contact';\nimport { normalizeContactsFromSoap } from '../../utils/normalizations/normalize-contact-from-soap';\n\ntype SearchResults = {\n\tcontacts: Array<Contact>;\n\tmore: boolean;\n\toffset: number;\n\tsortBy: string;\n\tquery: string;\n};\n\nconst SearchView: FC<SearchViewProps> = ({ useQuery, ResultsHeader }) => {\n\tconst [query, updateQuery] = useQuery();\n\tuseUpdateView();\n\n\tconst [searchResults, setSearchResults] = useState<SearchResults>({\n\t\tcontacts: [],\n\t\tmore: false,\n\t\toffset: 0,\n\t\tsortBy: 'nameAsc',\n\t\tquery: ''\n\t});\n\n\tconst [loading, setLoading] = useState(false);\n\tconst [t] = useTranslation();\n\tconst [filterCount, setFilterCount] = useState(0);\n\tconst [showAdvanceFilters, setShowAdvanceFilters] = useState(false);\n\tconst { zimbraPrefIncludeTrashInSearch, zimbraPrefIncludeSharedItemsInSearch } = usePrefs();\n\tconst [includeTrash, includeSharedFolders] = useMemo(\n\t\t() => [\n\t\t\tzimbraPrefIncludeTrashInSearch === 'TRUE',\n\t\t\tzimbraPrefIncludeSharedItemsInSearch === 'TRUE'\n\t\t],\n\t\t[zimbraPrefIncludeTrashInSearch, zimbraPrefIncludeSharedItemsInSearch]\n\t);\n\tconst [isSharedFolderIncluded, setIsSharedFolderIncluded] = useState(includeSharedFolders);\n\tconst folders = useFoldersMap();\n\tconst searchInFolders = useMemo(\n\t\t() =>\n\t\t\treduce(\n\t\t\t\tfolders,\n\t\t\t\t(acc: Array<string>, folder: Folder, folderId: string) => {\n\t\t\t\t\tif (includeTrash && isTrash(folderId)) {\n\t\t\t\t\t\tacc.push(folderId);\n\t\t\t\t\t}\n\t\t\t\t\tif (folder.perm && !isTrash(folderId)) {\n\t\t\t\t\t\tacc.push(folderId);\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t),\n\t\t[folders, includeTrash]\n\t);\n\n\tconst foldersToSearchInQuery = useMemo(\n\t\t() => `( ${map(searchInFolders, (folder) => `inid:\"${folder}\"`).join(' OR ')} OR is:local) `,\n\t\t[searchInFolders]\n\t);\n\n\tconst queryToString = useMemo(\n\t\t() =>\n\t\t\tisSharedFolderIncluded && searchInFolders?.length > 0\n\t\t\t\t? `(${query.map((c) => (c.value ? c.value : c.label)).join(' ')}) ${foldersToSearchInQuery}`\n\t\t\t\t: `${query.map((c) => (c.value ? c.value : c.label)).join(' ')}`,\n\t\t[isSharedFolderIncluded, searchInFolders.length, query, foldersToSearchInQuery]\n\t);\n\n\tconst searchQuery = useCallback(\n\t\t(queryStr: string, reset: boolean) => {\n\t\t\tsetLoading(true);\n\t\t\tsoapFetch<any, any>('Search', {\n\t\t\t\tlimit: 100,\n\t\t\t\tquery: queryStr,\n\t\t\t\toffset: reset ? 0 : searchResults.offset,\n\t\t\t\tsortBy: searchResults.sortBy,\n\t\t\t\ttypes: 'contact',\n\t\t\t\t_jsns: 'urn:zimbraMail'\n\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\t({ cn, more, offset, sortBy }): SearchResults => ({\n\t\t\t\t\t\tquery: queryStr,\n\t\t\t\t\t\tcontacts: [\n\t\t\t\t\t\t\t...(reset ? [] : searchResults.contacts ?? []),\n\t\t\t\t\t\t\t...(normalizeContactsFromSoap(cn) ?? [])\n\t\t\t\t\t\t],\n\t\t\t\t\t\tmore,\n\t\t\t\t\t\toffset: (offset ?? 0) + 100,\n\t\t\t\t\t\tsortBy: sortBy ?? 'nameAsc'\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.then((r) => {\n\t\t\t\t\tsetSearchResults(r);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t});\n\t\t},\n\t\t[searchResults.contacts, searchResults.offset, searchResults.sortBy]\n\t);\n\n\tuseEffect(() => {\n\t\tif (query && query.length > 0 && queryToString !== searchResults.query) {\n\t\t\tsetLoading(true);\n\t\t\tsetFilterCount(query.length);\n\t\t\tsearchQuery(queryToString, true);\n\t\t}\n\t}, [query, queryToString, searchQuery, searchResults.query]);\n\n\tconst { path } = useRouteMatch();\n\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<ResultsHeader label={t('label.results_for', 'Results for:')} />\n\t\t\t\t<Container\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\tbackground=\"gray4\"\n\t\t\t\t\tstyle={{ overflowY: 'auto' }}\n\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={`${path}/:folder?/:folderId?/:type?/:itemId?`}>\n\t\t\t\t\t\t\t<SearchList\n\t\t\t\t\t\t\t\tsearchResults={searchResults}\n\t\t\t\t\t\t\t\tsearch={searchQuery}\n\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\tfilterCount={filterCount}\n\t\t\t\t\t\t\t\tsetShowAdvanceFilters={setShowAdvanceFilters}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t<SearchPanel searchResults={searchResults} query={query} width=\"75%\" />\n\t\t\t\t\t</Suspense>\n\t\t\t\t</Container>\n\n\t\t\t\t<AdvancedFilterModal\n\t\t\t\t\tquery={query}\n\t\t\t\t\tupdateQuery={updateQuery}\n\t\t\t\t\topen={showAdvanceFilters}\n\t\t\t\t\tisSharedFolderIncluded={isSharedFolderIncluded}\n\t\t\t\t\tsetIsSharedFolderIncluded={setIsSharedFolderIncluded}\n\t\t\t\t\tonClose={(): void => setShowAdvanceFilters(false)}\n\t\t\t\t\tt={t}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default SearchView;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useUserSettings } from '@zextras/carbonio-shell-ui';\n\nimport type { UserPrefs } from '../types';\n\nexport const usePrefs = (): UserPrefs => {\n\tconst { prefs } = useUserSettings();\n\treturn <UserPrefs>prefs;\n};\n"],"names":["JSNS","useUpdateView","handler","useCallback","async","request","_jsns","MAIL","response","soapFetch","Error","Fault","Reason","Text","NoOp","useEffect","window","addEventListener","removeEventListener","KeywordRow","compProps","otherKeywords","setOtherKeywords","query","t","useTranslation","keywordChipOnAdd","label","hasAvatar","isGeneric","onChange","keywords","React","Container","padding","bottom","top","ChipInput","placeholder","background","value","onAdd","defaultValue","TagRow","tagOptions","tag","setTag","chipOnAdd","preText","isQueryFilter","avatarIcon","avatarBackground","tagChipOnAdd","chipBg","filter","ZIMBRA_STANDARD_COLORS","color","hex","tagPlaceholder","useMemo","onTagChange","chip","orientation","options","disableOptions","disabled","requireUniqueChips","ToggleFilters","isSharedFolderIncludedTobe","setIsSharedFolderIncludedTobe","toggleSharedFolder","mainAlignment","crossAlignment","all","Padding","right","Switch","onClick","size","weight","overflow","AdvancedFilterModal","open","onClose","updateQuery","setIsSharedFolderIncluded","isSharedFolderIncluded","useState","map","getTags","item","name","customComponent","Row","takeAvailableSpace","Icon","icon","TextWithTooltip","updatedQuery","v","test","q","tagFromQuery","totalKeywords","length","queryToBe","concat","useDisabled","isEqualWith","newQuery","currentQuery","secondaryDisabled","useSecondaryDisabled","resetFilters","onConfirm","tmp","keywordRowProps","tagRowProps","toggleFiltersProps","CustomModal","maxHeight","ModalHeader","title","horizontal","vertical","ModalFooter","secondaryLabel","secondaryAction","secondaryBtnType","secondaryColor","paddingTop","SearchListItem","selected","selecting","toggle","active","dispatch","useDispatch","folderId","parent","folderStatus","useAppSelector","state","selectFolderStatus","_onClick","searchContacts","pushHistory","id","firstName","middleName","lastName","trim","fullName","email","mail","getChipLabel","secondaryRow","Object","values","phone","number","tagsFromStore","useTags","tags","reduce","acc","includes","push","parseInt","ListItemActionWrapper","current","contact","style","alignSelf","ItemAvatar","isSearch","wrap","left","height","width","RowInfo","Tooltip","maxWidth","ShimmerList","Array","from","keys","index","Shimmer","ListItem","type","key","BorderContainer","styled","withConfig","displayName","componentId","theme","palette","gray2","regular","SearchList","searchResults","search","loading","filterCount","setShowAdvanceFilters","itemId","useParams","loadMore","contacts","more","canLoadMore","randomListIndex","setRandomListIndex","displayerTitle","borderRadius","Button","count","defaultValue_one","defaultValue_other","List","items","ItemComponent","onListBottom","undefined","whiteSpace","textAlign","SearchPanel","path","useRouteMatch","emptyListMessages","description","EmptyListMessages","emptyFieldMessages","EmptyFieldMessages","randomIndex","setRandomIndex","random","Math","floor","displayerMessage","displayerDescription","Route","exact","ContactPreviewPanel","ContactEditPanel","render","SearchView","useQuery","ResultsHeader","setSearchResults","offset","sortBy","setLoading","setFilterCount","showAdvanceFilters","zimbraPrefIncludeTrashInSearch","zimbraPrefIncludeSharedItemsInSearch","usePrefs","prefs","useUserSettings","includeTrash","includeSharedFolders","folders","useFoldersMap","searchInFolders","folder","isTrash","perm","foldersToSearchInQuery","join","queryToString","c","searchQuery","queryStr","reset","limit","types","then","cn","normalizeContactsFromSoap","r","overflowY","Suspense","fallback","Spinner"],"sourceRoot":""}