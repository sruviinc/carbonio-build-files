{"version":3,"file":"473.6a5ec307.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/./src/actions/move-contacts.tsx","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/components/select/color-select.tsx","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/components/breadcrumbs/static-breadcrumbs.tsx","webpack://carbonio-contacts-ui/./src/components/folder-tree-selector/flat-folders-accordion.tsx","webpack://carbonio-contacts-ui/./src/components/folder-tree-selector/folder-tree-selector.tsx","webpack://carbonio-contacts-ui/./src/components/modals/contact-move.tsx","webpack://carbonio-contacts-ui/./src/helpers/folders.ts","webpack://carbonio-contacts-ui/./src/legacy/types/tags.ts","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/parts/tags/create-update-tag-modal.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/parts/tags/delete-tag-modal.tsx","webpack://carbonio-contacts-ui/./src/legacy/ui-actions/tag-actions.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/commons/modal-footer.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/commons/modal-header.jsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal, useSnackbar } from '@zextras/carbonio-design-system';\nimport { every } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isRoot, isTrashed, isWriteAllowed } from '../carbonio-ui-commons/helpers/folders';\nimport { getFolder } from '../carbonio-ui-commons/store/zustand/folder';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { ContactMoveModal } from '../components/modals/contact-move';\nimport { ACTION_IDS, TIMEOUTS } from '../constants';\nimport { Contact } from '../legacy/types/contact';\nimport { apiClient } from '../network/api-client';\n\nexport type MoveContactsAction = UIAction<\n\t{ contacts?: Array<Contact>; newParentAddressBook?: Folder },\n\t{ contacts?: Array<Contact>; newParentAddressBook?: Folder }\n>;\n\nexport const useActionMoveContacts = (): MoveContactsAction => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst createModal = useModal();\n\n\tconst move = useCallback(\n\t\t(contactsIds: Array<string>, parentAddressBookId: string): Promise<boolean> =>\n\t\t\tapiClient\n\t\t\t\t.moveContact(contactsIds, parentAddressBookId)\n\t\t\t\t.then(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `move-contact-success`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tlabel: t('messages.snackbar.contact_moved', 'Contact moved'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `move-contact-error`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t\treturn false;\n\t\t\t\t}),\n\t\t[createSnackbar, t]\n\t);\n\n\tconst canExecute = useCallback<MoveContactsAction['canExecute']>(\n\t\t({ contacts, newParentAddressBook } = {}): boolean => {\n\t\t\tif (!contacts || contacts.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Additional checks if the destination folder is given\n\t\t\tif (newParentAddressBook) {\n\t\t\t\t// Return false if all the given contacts already belong to the destination address book\n\t\t\t\tconst parentsIds = contacts.map((contact) => contact.parent);\n\n\t\t\t\tif (!parentsIds.some((parentId) => parentId !== newParentAddressBook.id)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!isWriteAllowed(newParentAddressBook)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (isRoot(newParentAddressBook.id)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst parentAddressBooks = contacts.reduce<Array<Folder>>((result, contact) => {\n\t\t\t\tconst folder = getFolder(contact.parent);\n\t\t\t\tif (folder) {\n\t\t\t\t\tresult.push(folder);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, []);\n\n\t\t\treturn !every(parentAddressBooks, (addressBook) => isTrashed({ folder: addressBook }));\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<MoveContactsAction['execute']>(\n\t\t({ contacts, newParentAddressBook } = {}) => {\n\t\t\tif (!contacts || contacts.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!canExecute({ contacts, newParentAddressBook })) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst contactsIds = contacts.map((contact) => contact.id);\n\n\t\t\tif (newParentAddressBook) {\n\t\t\t\tmove(contactsIds, newParentAddressBook.id);\n\t\t\t} else {\n\t\t\t\tconst closeModal = createModal(\n\t\t\t\t\t{\n\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t<ContactMoveModal\n\t\t\t\t\t\t\t\tcontacts={contacts}\n\t\t\t\t\t\t\t\tonMove={(parentAddressBookId) => {\n\t\t\t\t\t\t\t\t\tmove(contactsIds, parentAddressBookId).then((success) => success && closeModal());\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => closeModal()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t[canExecute, createModal, move]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.moveContacts,\n\t\t\tlabel: t('label.move', 'Move'),\n\t\t\ticon: 'MoveOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport type { SelectProps, SingleSelectionOnChange } from '@zextras/carbonio-design-system';\nimport { Container, Icon, Padding, Row, Select, Text } from '@zextras/carbonio-design-system';\nimport { ZIMBRA_STANDARD_COLORS } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\nimport styled, { SimpleInterpolation } from 'styled-components';\n\nimport { CustomLabelFactoryProps } from '../../types/select';\n\nexport const Square = styled.div`\n\twidth: 1.125rem;\n\theight: 1.125rem;\n\tposition: relative;\n\ttop: -0.1875rem;\n\tborder: 0.0625rem solid ${({ theme }): SimpleInterpolation => theme.palette.gray2.regular};\n\tbackground: ${({ color }): SimpleInterpolation => color};\n\tborder-radius: 0.25rem;\n`;\nexport const ColorContainer = styled(Container)`\n\tborder-bottom: 0.0625rem solid ${({ theme }): SimpleInterpolation => theme.palette.gray2.regular};\n\tcursor: 'pointer';\n`;\n\nexport const TextUpperCase = styled(Text)`\n\ttext-transform: capitalize;\n`;\n\nconst LabelFactory = ({\n\tselected,\n\tlabel,\n\topen,\n\tfocus\n}: CustomLabelFactoryProps): React.JSX.Element => (\n\t<ColorContainer\n\t\torientation=\"horizontal\"\n\t\twidth=\"fill\"\n\t\tcrossAlignment=\"center\"\n\t\tmainAlignment=\"space-between\"\n\t\tborderRadius=\"half\"\n\t\tbackground=\"gray5\"\n\t\tpadding={{\n\t\t\tall: 'small'\n\t\t}}\n\t>\n\t\t<Row width=\"100%\" takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t<Row\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tpadding={{ left: 'small' }}\n\t\t\t>\n\t\t\t\t<Text size=\"small\" color={open || focus ? 'primary' : 'secondary'}>\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t\t<TextUpperCase>{selected[0].label}</TextUpperCase>\n\t\t\t</Row>\n\t\t\t<Padding right=\"small\">\n\t\t\t\t<Square color={ZIMBRA_STANDARD_COLORS[parseInt(selected[0].value, 10)].hex} />\n\t\t\t</Padding>\n\t\t</Row>\n\t\t<Icon\n\t\t\tsize=\"large\"\n\t\t\ticon={open ? 'ChevronUpOutline' : 'ChevronDownOutline'}\n\t\t\tcolor={open || focus ? 'primary' : 'secondary'}\n\t\t\tstyle={{ alignSelf: 'center' }}\n\t\t/>\n\t</ColorContainer>\n);\n\nexport type ColorSelectProps = {\n\tonChange: SingleSelectionOnChange;\n\tdefaultColor: number;\n\tlabel: string;\n};\n\nexport const ColorSelect = ({\n\tonChange,\n\tdefaultColor = 0,\n\tlabel\n}: ColorSelectProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst colors = useMemo<SelectProps['items']>(\n\t\t() =>\n\t\t\tZIMBRA_STANDARD_COLORS.map((el, index) => {\n\t\t\t\tconst colorLabel = t(`color.${el.zLabel}`, '{{color}}', {\n\t\t\t\t\tcontext: ZIMBRA_STANDARD_COLORS,\n\t\t\t\t\treplace: {\n\t\t\t\t\t\tcolor: el.zLabel\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tlabel: colorLabel,\n\t\t\t\t\tvalue: index.toString(),\n\t\t\t\t\tcustomComponent: (\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tmainAlignment=\"space-between\"\n\t\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t\t<TextUpperCase>{colorLabel}</TextUpperCase>\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t<Square color={el.hex} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t}),\n\t\t[t]\n\t);\n\tconst defaultSelection = useMemo(() => colors[defaultColor], [colors, defaultColor]);\n\n\treturn (\n\t\t<Select\n\t\t\tlabel={label}\n\t\t\tonChange={onChange}\n\t\t\titems={colors}\n\t\t\tdefaultSelection={defaultSelection}\n\t\t\tLabelFactory={LabelFactory}\n\t\t\tdata-testid=\"color-select\"\n\t\t/>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport {\n\tBreadcrumbs,\n\tBreadcrumbsProps,\n\tContainer,\n\tRow,\n\tText,\n\tTextProps,\n\tTooltip\n} from '@zextras/carbonio-design-system';\n\ntype StaticBreadcrumbsProps = BreadcrumbsProps & {\n\tsize?: TextProps['size'];\n\ttooltipLabel?: string;\n};\n\nconst StaticBreadcrumbs = React.forwardRef<HTMLDivElement, StaticBreadcrumbsProps>(\n\tfunction BreadcrumbsFn(\n\t\t{ crumbs, collapserProps, dropdownProps, size = 'large', tooltipLabel, ...rest },\n\t\tref\n\t) {\n\t\tconst crumbsCount = crumbs.length;\n\t\tconst tooltip =\n\t\t\ttooltipLabel ?? crumbs.reduce<string>((result, crumb) => `${result}/${crumb.label}`, '');\n\t\tconst firstCrumb = crumbs.shift();\n\n\t\treturn (\n\t\t\t<Tooltip label={tooltip}>\n\t\t\t\t<Row mainAlignment=\"flex-start\" wrap=\"nowrap\" width=\"fill\">\n\t\t\t\t\t<Container\n\t\t\t\t\t\twidth=\"fit\"\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tpadding={{ left: 'small', right: 'extrasmall' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text size={size} color={crumbsCount === 1 ? 'text' : 'secondary'}>\n\t\t\t\t\t\t\t{firstCrumb?.label ?? ''}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Container>\n\t\t\t\t\t{/* FIXME the width/maxWidth */}\n\t\t\t\t\t<Row mainAlignment=\"flex-start\" maxWidth=\"70%\">\n\t\t\t\t\t\t<Breadcrumbs crumbs={crumbs} dropdownProps={{ disabled: true }}></Breadcrumbs>\n\t\t\t\t\t</Row>\n\t\t\t\t</Row>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n);\n\nexport { StaticBreadcrumbsProps, StaticBreadcrumbs };\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, ReactElement, useCallback, useState } from 'react';\n\nimport {\n\tAvatar,\n\tCollapse,\n\tContainer,\n\tContainerProps,\n\tgetColor,\n\tIcon,\n\tIconButton,\n\tListItem,\n\tListV2,\n\tPadding,\n\tRow,\n\tText,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport { useUserAccount } from '@zextras/carbonio-shell-ui';\nimport { noop } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { StaticBreadcrumbs } from '../../carbonio-ui-commons/components/breadcrumbs/static-breadcrumbs';\nimport { isDefaultAccountRoot, isRoot } from '../../carbonio-ui-commons/helpers/folders';\nimport { Folder } from '../../carbonio-ui-commons/types/folder';\nimport { getFolderIconColor, getFolderIconName } from '../../helpers/folders';\nimport { getFolderTranslatedName } from '../../legacy/utils/helpers';\n\nconst FOLDER_ROW_HEIGHT = '2.6rem';\n\nconst FolderAccordionPlaceholder = styled.div`\n\theight: ${FOLDER_ROW_HEIGHT};\n`;\n\nconst RootAccordion = styled(Row)`\n\tcursor: pointer;\n`;\n\nconst CustomContainer = styled(Container)<ContainerProps & { active?: boolean }>`\n\t&:hover {\n\t\tbackground-color: ${({ theme, active }): string =>\n\t\t\tactive ? theme.palette.highlight.active : theme.palette.gray6.hover};\n\t}\n`;\n\nconst CustomListItemHelper = styled(ListItem)``;\n\nexport const CustomListItem = styled(CustomListItemHelper).attrs(\n\t({\n\t\tbackground = 'gray6',\n\t\tactive,\n\t\tactiveBackground = 'highlight',\n\t\tselected,\n\t\tselectedBackground = 'gray5',\n\t\ttheme\n\t}) => ({\n\t\t$baseBackgroundColor: getColor(\n\t\t\t(active && activeBackground) || (selected && selectedBackground) || background,\n\t\t\ttheme\n\t\t),\n\t\t$focusBackgroundColor: getColor(`${(active && activeBackground) || 'gray6'}.focus`, theme)\n\t})\n)``;\n\ntype FlatFoldersAccordionFolderProps = {\n\tfolder: Folder;\n\tselected?: boolean;\n\tonFolderSelected?: (arg: Folder) => void;\n};\n\nexport type FlatFoldersAccordionRootProps = FlatFoldersAccordionFolderProps & {\n\tchildrenFolders: Array<Folder>;\n\tisOpen?: boolean;\n\tonOpenStatusChange?: (isOpen: boolean) => void;\n\tselectedFolderId?: string;\n\tallowRootSelection?: boolean;\n};\n\nexport type FlatFoldersAccordionProps = {\n\troots: Array<Folder>;\n\tselectedFolderId?: string;\n\tonFolderSelected?: (folder: Folder) => void;\n\tallowRootSelection?: boolean;\n};\n\n/**\n * Process the absolute path of the given folder, removing\n * the leading slash\n *\n * @param folder\n * @return the array of the crumbs name of the path\n */\nexport const getFolderAbsPathParts = (folder: Folder): Array<string> => {\n\tif (!folder) {\n\t\treturn [];\n\t}\n\n\t// Exception for root folders\n\tif (isRoot(folder?.id)) {\n\t\treturn [folder.name ?? ''];\n\t}\n\tconst reg = /^\\/?(.*)$/gm;\n\n\tconst matches = reg.exec(folder.absFolderPath ?? '');\n\tif (!matches) {\n\t\treturn [];\n\t}\n\n\treturn matches[1].split('/');\n};\n\nconst FlatFoldersAccordionFolder: FC<FlatFoldersAccordionFolderProps> = ({\n\tfolder,\n\tonFolderSelected,\n\t...rest\n}) => {\n\tconst [t] = useTranslation();\n\tconst iconName = getFolderIconName(folder);\n\tconst iconColor = getFolderIconColor(folder);\n\tconst parts = getFolderAbsPathParts(folder);\n\n\t/*\n\t * Create the crumbs array and try to get the translations\n\t * for the first part which usually represent a system folder\n\t * for which a translated name is available\n\t */\n\tconst crumbs = parts.map((part, index) => ({\n\t\tid: `${index} `,\n\t\tlabel: index === 0 ? getFolderTranslatedName(t, folder.id, part) : part\n\t}));\n\n\tconst selectionHandler = useCallback(() => {\n\t\tonFolderSelected ? onFolderSelected(folder) : noop;\n\t}, [onFolderSelected, folder]);\n\n\treturn (\n\t\t<Container\n\t\t\twidth=\"fill\"\n\t\t\tmain-alignment=\"flex-start\"\n\t\t\torientation=\"vertical\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tpadding={{ top: 'small', right: 'small', bottom: 'small', left: 'extralarge' }}\n\t\t\theight={FOLDER_ROW_HEIGHT}\n\t\t\tonClick={selectionHandler}\n\t\t\twrap=\"nowrap\"\n\t\t\t{...rest}\n\t\t>\n\t\t\t<Row mainAlignment=\"flex-start\" wrap=\"nowrap\" width=\"fill\">\n\t\t\t\t<Container width=\"fit\">\n\t\t\t\t\t<Icon color={iconColor} icon={iconName || 'FolderOutline'} size=\"large\" />\n\t\t\t\t</Container>\n\t\t\t\t<StaticBreadcrumbs crumbs={crumbs} size=\"large\" />\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nconst FlatFoldersAccordionRoot: FC<FlatFoldersAccordionRootProps> = ({\n\tfolder,\n\tchildrenFolders,\n\tisOpen = false,\n\tonFolderSelected,\n\tonOpenStatusChange,\n\tselectedFolderId,\n\tallowRootSelection\n}) => {\n\tconst [open, setOpen] = useState(isOpen);\n\tconst account = useUserAccount();\n\n\tconst rootLabel = isDefaultAccountRoot(folder.id) ? account.name : folder.name;\n\tconst toggleOpen = useCallback(\n\t\t(e: KeyboardEvent | React.SyntheticEvent) => {\n\t\t\te.stopPropagation();\n\t\t\tsetOpen((op) => {\n\t\t\t\tonOpenStatusChange && onOpenStatusChange(!op);\n\t\t\t\treturn !op;\n\t\t\t});\n\t\t},\n\t\t[onOpenStatusChange]\n\t);\n\n\tconst onClick = useCallback(\n\t\t(e: KeyboardEvent | React.SyntheticEvent) => {\n\t\t\te.stopPropagation();\n\t\t\tif (!open) {\n\t\t\t\tsetOpen(true);\n\t\t\t}\n\n\t\t\tif (!allowRootSelection) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tonFolderSelected && onFolderSelected(folder);\n\t\t},\n\t\t[open, allowRootSelection, onFolderSelected, folder]\n\t);\n\treturn (\n\t\t<RootAccordion width=\"fill\" data-testid={`folder-accordion-root-${folder.id}`}>\n\t\t\t<CustomContainer\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\twidth=\"fill\"\n\t\t\t\theight=\"fit\"\n\t\t\t\tmainAlignment=\"space-between\"\n\t\t\t\tpadding={'small'}\n\t\t\t\tonClick={onClick}\n\t\t\t\tbackground={selectedFolderId === folder.id ? 'highlight.active' : 'gray6'}\n\t\t\t\tactive={selectedFolderId === folder.id}\n\t\t\t>\n\t\t\t\t<Container orientation=\"horizontal\" width=\"fill\" mainAlignment=\"flex-start\">\n\t\t\t\t\t<Padding horizontal=\"small\">\n\t\t\t\t\t\t<Avatar label={rootLabel} size=\"medium\" />\n\t\t\t\t\t</Padding>\n\t\t\t\t\t<Tooltip label={rootLabel} placement=\"right\" maxWidth=\"100%\">\n\t\t\t\t\t\t<Text>{rootLabel}</Text>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Container>\n\n\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcustomSize={{ iconSize: 'large', paddingSize: 0 }}\n\t\t\t\t\t\tonClick={toggleOpen}\n\t\t\t\t\t\ticon={open ? 'ChevronUp' : 'ChevronDown'}\n\t\t\t\t\t/>\n\t\t\t\t</Padding>\n\t\t\t</CustomContainer>\n\t\t\t<Collapse crossSize=\"100%\" orientation=\"vertical\" open={open} disableTransition={false}>\n\t\t\t\t<ListV2>\n\t\t\t\t\t{childrenFolders.map<ReactElement>((childFolder) => (\n\t\t\t\t\t\t<CustomListItem\n\t\t\t\t\t\t\tkey={childFolder.id}\n\t\t\t\t\t\t\tselected={selectedFolderId === childFolder.id}\n\t\t\t\t\t\t\tactive={selectedFolderId === childFolder.id}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{(visible: boolean): ReactElement =>\n\t\t\t\t\t\t\t\tvisible ? (\n\t\t\t\t\t\t\t\t\t<FlatFoldersAccordionFolder\n\t\t\t\t\t\t\t\t\t\tdata-testid={`folder-accordion-item-${childFolder.id}`}\n\t\t\t\t\t\t\t\t\t\tfolder={childFolder}\n\t\t\t\t\t\t\t\t\t\tonFolderSelected={onFolderSelected}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<FolderAccordionPlaceholder />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</CustomListItem>\n\t\t\t\t\t))}\n\t\t\t\t</ListV2>\n\t\t\t</Collapse>\n\t\t</RootAccordion>\n\t);\n};\n\nexport const FlatFoldersAccordion: FC<FlatFoldersAccordionProps> = ({\n\troots,\n\tonFolderSelected,\n\tselectedFolderId,\n\tallowRootSelection\n}) => (\n\t<Container orientation={'vertical'} style={{ overflowY: 'auto' }}>\n\t\t{roots.map<ReactElement>((root, index) => (\n\t\t\t<FlatFoldersAccordionRoot\n\t\t\t\tkey={root.id}\n\t\t\t\tfolder={root}\n\t\t\t\tchildrenFolders={root.children}\n\t\t\t\tisOpen\n\t\t\t\tonFolderSelected={onFolderSelected}\n\t\t\t\tselectedFolderId={selectedFolderId}\n\t\t\t\tallowRootSelection={allowRootSelection}\n\t\t\t/>\n\t\t))}\n\t</Container>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { ChangeEvent, useMemo, useState } from 'react';\n\nimport { Button, Container, Input } from '@zextras/carbonio-design-system';\nimport { TFunction } from 'i18next';\nimport { filter, startsWith } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { FlatFoldersAccordion } from './flat-folders-accordion';\nimport {\n\tisDefaultAccountRoot,\n\tisLink,\n\tisRoot,\n\tisTrash,\n\tisTrashed\n} from '../../carbonio-ui-commons/helpers/folders';\nimport { useFolder, useRootsArray } from '../../carbonio-ui-commons/store/zustand/folder';\nimport { Folder } from '../../carbonio-ui-commons/types/folder';\nimport { sortFolders } from '../../helpers/folders';\nimport { getFolderTranslatedName } from '../../legacy/utils/helpers';\n\nconst ScrollableContainer = styled(Container)`\n\toverflow-y: auto;\n\tdisplay: block;\n`;\n\nexport type FolderTreeSelectorProps = {\n\tinputLabel?: string;\n\tonNewFolderClick?: () => void;\n\tselectedFolderId?: string;\n\tonFolderSelected: (arg: Folder) => void;\n\tshowSharedAccounts: boolean;\n\tshowTrashFolder: boolean;\n\tshowLinkedFolders?: boolean;\n\tallowRootSelection: boolean;\n\tallowFolderCreation: boolean;\n\texcludeIds?: Array<string>;\n};\n\nconst flattenFolders = (\n\tt: TFunction,\n\tfolders: Array<Folder>,\n\toptions?: {\n\t\tshowTrashFolder?: boolean;\n\t\tshowLinkedFolders?: boolean;\n\t\texcludeIds?: Array<string>;\n\t}\n): Array<Folder> => {\n\tconst result: Array<Folder> = [];\n\tconst sortedFolders = sortFolders(folders);\n\n\tsortedFolders.forEach((folder) => {\n\t\tif (options?.showTrashFolder === false && (isTrash(folder.id) || isTrashed({ folder }))) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (options?.showLinkedFolders === false && isLink(folder)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!options?.excludeIds || !options?.excludeIds.includes(folder.id)) {\n\t\t\tresult.push({\n\t\t\t\t...folder,\n\t\t\t\tname: getFolderTranslatedName(t, folder.id, folder.name),\n\t\t\t\tchildren: []\n\t\t\t});\n\t\t}\n\n\t\tfolder.children && result.push(...flattenFolders(t, folder.children, options));\n\t});\n\n\treturn result;\n};\n\nconst flattenRootsFolders = (\n\tt: TFunction,\n\troots: Array<Folder>,\n\toptions?: {\n\t\tshowTrashFolder?: boolean;\n\t\tshowLinkedFolders?: boolean;\n\t\texcludeIds?: Array<string>;\n\t}\n): Array<Folder> =>\n\troots.map((root) => ({\n\t\t...root,\n\t\tchildren: flattenFolders(t, root.children, options)\n\t}));\n\nfunction filterRootChildren(folders: Array<Folder>, nameCriteria: string): Array<Folder> {\n\treturn filter(folders, (folder) => {\n\t\tconst folderName = folder.name?.toLowerCase();\n\t\treturn startsWith(folderName, nameCriteria.toLowerCase());\n\t});\n}\n\nfunction filterRoots(roots: Array<Folder>, nameCriteria: string): Array<Folder> {\n\treturn roots.reduce((acc, root) => {\n\t\tif (isRoot(root.id)) {\n\t\t\tacc.push({\n\t\t\t\t...root,\n\t\t\t\tchildren: root.children ? filterRootChildren(root.children, nameCriteria) : []\n\t\t\t});\n\t\t}\n\t\treturn acc.filter((accItem) => !!accItem.children?.length);\n\t}, [] as Array<Folder>);\n}\n\n/**\n *\n * @param inputLabel\n * @param onNewFolderClick\n * @param selectedFolderId\n * @param onFolderSelected\n * @param allowRootSelection\n * @param allowFolderCreation\n * @param showTrashFolder - default <code>true</code>\n * @param showSharedAccounts\n * @param showLinkedFolders - default <code>true</code>\n * @constructor\n */\nexport const FolderTreeSelector = ({\n\tinputLabel,\n\tonNewFolderClick,\n\tselectedFolderId,\n\tonFolderSelected,\n\tallowRootSelection,\n\tallowFolderCreation,\n\tshowTrashFolder,\n\tshowSharedAccounts,\n\tshowLinkedFolders,\n\texcludeIds\n}: FolderTreeSelectorProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst [inputValue, setInputValue] = useState('');\n\tconst selectedFolder = useFolder(selectedFolderId ?? '');\n\tconst roots = useRootsArray();\n\tconst filteredAccountsRoots = useMemo<Array<Folder>>(\n\t\t() => (showSharedAccounts ? roots : roots.filter((root) => isDefaultAccountRoot(root.id))),\n\t\t[roots, showSharedAccounts]\n\t);\n\n\tconst flattenRoots = useMemo(\n\t\t() =>\n\t\t\tflattenRootsFolders(t, filteredAccountsRoots, {\n\t\t\t\tshowTrashFolder,\n\t\t\t\tshowLinkedFolders,\n\t\t\t\texcludeIds\n\t\t\t}),\n\t\t[excludeIds, filteredAccountsRoots, showLinkedFolders, showTrashFolder, t]\n\t);\n\n\tconst filteredRoots = filterRoots(flattenRoots, inputValue);\n\tconst inputName = selectedFolder ? selectedFolder.name : '';\n\treturn (\n\t\t<>\n\t\t\t<Input\n\t\t\t\tdata-testid={'folder-name-filter'}\n\t\t\t\tinputName={inputName}\n\t\t\t\tlabel={inputLabel ?? t('label.filter_folders', 'Filter folders')}\n\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(e: ChangeEvent<HTMLInputElement>): void => setInputValue(e.target.value)}\n\t\t\t/>\n\t\t\t<ScrollableContainer\n\t\t\t\theight={'auto'}\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tminHeight=\"30vh\"\n\t\t\t\tmaxHeight=\"60vh\"\n\t\t\t>\n\t\t\t\t<FlatFoldersAccordion\n\t\t\t\t\troots={filteredRoots}\n\t\t\t\t\tonFolderSelected={onFolderSelected}\n\t\t\t\t\tselectedFolderId={selectedFolderId}\n\t\t\t\t\tallowRootSelection={allowRootSelection}\n\t\t\t\t/>\n\t\t\t</ScrollableContainer>\n\t\t\t{onNewFolderClick && (\n\t\t\t\t<Container\n\t\t\t\t\tpadding={{ top: 'medium', bottom: 'medium' }}\n\t\t\t\t\tmainAlignment=\"center\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t\tlabel={t('label.new_folder', 'New Folder')}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={onNewFolderClick}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n\tContainer,\n\tDivider,\n\tModalFooter,\n\tModalHeader,\n\tPadding\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { Folder } from '../../carbonio-ui-commons/types/folder';\nimport { Contact } from '../../legacy/types/contact';\nimport { FolderTreeSelector } from '../folder-tree-selector/folder-tree-selector';\n\nexport type ContactMoveModalProps = {\n\tmode?: 'move' | 'restore';\n\tcontacts: Array<Contact>;\n\tonClose: () => void;\n\tonMove: (parentAddressBookId: string) => void;\n};\n\nexport const ContactMoveModal = ({\n\tmode = 'move',\n\tcontacts,\n\tonClose,\n\tonMove\n}: ContactMoveModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst [parentAddressBook, setParentAddressBook] = useState<Folder | undefined>();\n\n\tconst modalTitle = useMemo(() => {\n\t\tif (mode === 'restore') {\n\t\t\treturn contacts.length === 1\n\t\t\t\t? t('contact.modal.restore_single.title', {\n\t\t\t\t\t\tcontactDesc: `${contacts[0].firstName} ${contacts[0].lastName}`,\n\t\t\t\t\t\tdefaultValue: \"Restore {{contactDesc}}'s contact\"\n\t\t\t\t\t})\n\t\t\t\t: t('contact.modal.restore_multiple.title', {\n\t\t\t\t\t\tcount: contacts.length,\n\t\t\t\t\t\tdefaultValue: 'Restore {{count}} contacts'\n\t\t\t\t\t});\n\t\t}\n\n\t\treturn contacts.length === 1\n\t\t\t? t('contact.modal.move_single.title', {\n\t\t\t\t\tcontactDesc: `${contacts[0].firstName} ${contacts[0].lastName}`,\n\t\t\t\t\tdefaultValue: \"Move {{contactDesc}}'s contact\"\n\t\t\t\t})\n\t\t\t: t('contact.modal.move_multiple.title', {\n\t\t\t\t\tcount: contacts.length,\n\t\t\t\t\tdefaultValue: 'Move {{count}} contacts'\n\t\t\t\t});\n\t}, [contacts, mode, t]);\n\n\tconst confirmLabel = useMemo(\n\t\t() => (mode === 'restore' ? t('label.restore', 'Restore') : t('label.move', 'Move')),\n\t\t[mode, t]\n\t);\n\n\tconst confirmDisabled = useMemo(() => parentAddressBook === undefined, [parentAddressBook]);\n\n\t// Exclude an address book if all the contacts belong to it\n\tconst excludedAddressBooksIds = useMemo<Array<string>>(() => {\n\t\tconst currentAddressBooksId = new Set<string>(contacts.map((contact) => contact.parent));\n\t\treturn currentAddressBooksId.size > 1 ? [] : Array.from(currentAddressBooksId.values());\n\t}, [contacts]);\n\n\tconst onConfirm = useCallback(() => {\n\t\tparentAddressBook && onMove(parentAddressBook.id);\n\t}, [onMove, parentAddressBook]);\n\n\tconst onParentAddressBookSelected = useCallback((addressBook: Folder) => {\n\t\tsetParentAddressBook(addressBook);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader title={modalTitle} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<Padding vertical={'medium'}>\n\t\t\t\t<Container\n\t\t\t\t\tgap={'0.5rem'}\n\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\t\theight={'fit'}\n\t\t\t\t>\n\t\t\t\t\t<FolderTreeSelector\n\t\t\t\t\t\tonFolderSelected={onParentAddressBookSelected}\n\t\t\t\t\t\tshowSharedAccounts\n\t\t\t\t\t\tshowTrashFolder={false}\n\t\t\t\t\t\tshowLinkedFolders\n\t\t\t\t\t\texcludeIds={excludedAddressBooksIds}\n\t\t\t\t\t\tallowRootSelection={false}\n\t\t\t\t\t\tallowFolderCreation={false}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t</Padding>\n\t\t\t<Divider />\n\t\t\t<ModalFooter\n\t\t\t\tconfirmLabel={confirmLabel}\n\t\t\t\tconfirmDisabled={confirmDisabled}\n\t\t\t\tonConfirm={onConfirm}\n\t\t\t/>\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { FOLDERS, ZIMBRA_STANDARD_COLORS } from '@zextras/carbonio-shell-ui';\nimport { sortBy } from 'lodash';\n\nimport { getFolderIdParts, isA, isLink, isRoot } from '../carbonio-ui-commons/helpers/folders';\nimport type { Folder } from '../carbonio-ui-commons/types/folder';\n\n/**\n * Tells if a folder with the given id is the Contacts folder\n * @param folderId\n */\nexport const isContacts = (folderId: string): boolean => isA(folderId, FOLDERS.CONTACTS);\n\n/**\n * Tells if a folder with the given id is the \"Emailed Contacts\" folder\n * @param folderId\n */\nexport const isEmailedContacts = (folderId: string): boolean =>\n\tisA(folderId, FOLDERS.AUTO_CONTACTS);\n\nexport const getSortCriteria = (folder: Folder): string => {\n\tconst { id, zid } = getFolderIdParts(folder.id);\n\n\tif (isRoot(folder.id)) {\n\t\treturn zid === null ? `0100` : `0500-${folder.name.toLowerCase()}`;\n\t}\n\n\tif (isLink(folder)) {\n\t\treturn `5000-${folder.name.toLowerCase()}`;\n\t}\n\n\tswitch (id) {\n\t\tcase FOLDERS.CONTACTS:\n\t\t\treturn `1000`;\n\t\tcase FOLDERS.AUTO_CONTACTS:\n\t\t\treturn `2000`;\n\t\tcase FOLDERS.TRASH:\n\t\t\treturn `4000`;\n\t\tdefault:\n\t\t\treturn `3000-${folder.name.toLowerCase()}`;\n\t}\n};\n\n/**\n * recursively sort the children of a folder according to a given sort function\n * @param folders\n * @param sortFunction\n * @returns the sorted children\n */\nexport const sortFolders = (\n\tfolders: Array<Folder>,\n\tsortFunction?: (folder: Folder) => string\n): Folder[] => {\n\tconst childrenSorted = sortBy(folders, sortFunction ?? getSortCriteria);\n\treturn childrenSorted.map((folder) => ({\n\t\t...folder,\n\t\tchildren: sortFolders(folder.children, sortFunction)\n\t}));\n};\n\nexport const getFolderIconName = (folder: Folder): string | null => {\n\tconst { id } = getFolderIdParts(folder.id);\n\tif (id && isRoot(id)) {\n\t\treturn null;\n\t}\n\n\tswitch (id) {\n\t\tcase FOLDERS.CONTACTS:\n\t\t\treturn 'PersonOutline';\n\t\tcase FOLDERS.AUTO_CONTACTS:\n\t\t\treturn 'EmailOutline';\n\t\tcase FOLDERS.TRASH:\n\t\t\treturn 'Trash2Outline';\n\t\tdefault:\n\t\t\treturn 'FolderOutline';\n\t}\n};\n\nexport const getFolderIconColor = (folder: Folder): string =>\n\tfolder.color ? ZIMBRA_STANDARD_COLORS[folder.color].hex : ZIMBRA_STANDARD_COLORS[0].hex;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\n// eslint-disable-next-line no-shadow\nexport enum TagsActionsType {\n\tNEW = 'new',\n\tDELETE = 'delete',\n\tEDIT = 'edit',\n\tAPPLY = 'apply'\n}\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport { Input, Padding, Text, useSnackbar } from '@zextras/carbonio-design-system';\nimport { changeTagColor, createTag, renameTag } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { ItemType } from './types';\nimport {\n\tColorSelect,\n\tColorSelectProps\n} from '../../../../../carbonio-ui-commons/components/select/color-select';\nimport { useAppDispatch } from '../../../../hooks/redux';\nimport { contactAction } from '../../../../store/actions/contact-action';\nimport { Contact } from '../../../../types/contact';\nimport ModalFooter from '../../commons/modal-footer';\nimport { ModalHeader } from '../../commons/modal-header';\n\ntype ComponentProps = {\n\tonClose: () => void;\n\teditMode?: boolean;\n\ttag?: ItemType;\n\tcontact?: Contact;\n};\nconst NonSupportedCharacters = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/;\nconst CreateUpdateTagModal: FC<ComponentProps> = ({\n\tonClose,\n\teditMode = false,\n\ttag,\n\tcontact\n}): ReactElement => {\n\tconst createSnackbar = useSnackbar();\n\tconst [t] = useTranslation();\n\tconst [name, setName] = useState(tag?.name || '');\n\tconst [color, setColor] = useState(tag?.color || 0);\n\tconst dispatch = useAppDispatch();\n\tconst title = useMemo(\n\t\t() =>\n\t\t\teditMode\n\t\t\t\t? t('label.edit_tag_name', { name: tag?.name, defaultValue: 'Edit \"{{name}}\" tag' })\n\t\t\t\t: t('label.create_tag', 'Create a new Tag'),\n\t\t[editMode, t, tag?.name]\n\t);\n\tconst label = useMemo(() => t('label.tag_name', 'Tag name'), [t]);\n\tconst handleColorChange = useCallback<ColorSelectProps['onChange']>(\n\t\t(c) => setColor(Number(c)),\n\t\t[]\n\t);\n\tconst handleNameChange = useCallback((ev) => setName(ev.target.value), []);\n\n\tconst showMaxLengthWarning = useMemo(() => name.length >= 128, [name]);\n\tconst showSpecialCharWarning = useMemo(() => NonSupportedCharacters.test(name), [name]);\n\n\tconst showWarning = useMemo(\n\t\t() => showMaxLengthWarning || showSpecialCharWarning,\n\t\t[showMaxLengthWarning, showSpecialCharWarning]\n\t);\n\tconst disabled = useMemo(() => name === '' || showWarning, [name, showWarning]);\n\n\tconst applyNewlyCreatedTag = useCallback(\n\t\t({ id, tagName }) => {\n\t\t\tdispatch(\n\t\t\t\tcontactAction({\n\t\t\t\t\top: 'tag',\n\t\t\t\t\tcontactsIDs: [id],\n\t\t\t\t\ttagName\n\t\t\t\t})\n\t\t\t) // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\t.then(() => {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: t('snackbar.tag_applied', {\n\t\t\t\t\t\t\ttag: tagName,\n\t\t\t\t\t\t\tdefaultValue: '\"{{tag}}\" tag applied'\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t[createSnackbar, dispatch, t]\n\t);\n\tconst onCreate = useCallback(\n\t\t() =>\n\t\t\tcreateTag({ name, color }).then((res: any) => {\n\t\t\t\tif (res.tag) {\n\t\t\t\t\tif (contact) {\n\t\t\t\t\t\tapplyNewlyCreatedTag({ id: contact.id, tagName: res.tag?.[0]?.name });\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\tkey: `new-tag`,\n\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tlabel: t('messages.snackbar.tag_created', {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tdefaultValue: 'Tag {{name}} successfully created'\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tonClose();\n\t\t\t}),\n\t\t[name, color, onClose, contact, applyNewlyCreatedTag, createSnackbar, t]\n\t);\n\tconst onUpdate = useCallback(() => {\n\t\tPromise.all([renameTag(`${tag?.id}`, name), changeTagColor(`${tag?.id}`, Number(color))])\n\t\t\t.then(() => {\n\t\t\t\tonClose();\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `update-tag`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t('messages.snackbar.tag_updated', 'Tag successfully updated'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tonClose();\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `update-tag-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t'messages.snackbar.tag_not_updated',\n\t\t\t\t\t\t'Something went wrong, tag not updated. Please try again.'\n\t\t\t\t\t),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t});\n\t}, [color, createSnackbar, name, onClose, t, tag]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader onClose={onClose} title={title} />\n\t\t\t<Input\n\t\t\t\tlabel={label}\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={handleNameChange}\n\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\ttextColor={showWarning ? 'error' : 'text'}\n\t\t\t\thasError={showWarning}\n\t\t\t/>\n\n\t\t\t{showWarning && (\n\t\t\t\t<Padding all=\"small\">\n\t\t\t\t\t{showMaxLengthWarning && (\n\t\t\t\t\t\t<Text size=\"extrasmall\" color=\"error\" overflow=\"break-word\">\n\t\t\t\t\t\t\t{t('label.tag_max_length', 'Max 128 characters are allowed')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t{showSpecialCharWarning && (\n\t\t\t\t\t\t<Text size=\"extrasmall\" color=\"error\" overflow=\"break-word\">\n\t\t\t\t\t\t\t{t('label.no_special_char_allowed', 'Name should not contain any special character')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t</Padding>\n\t\t\t)}\n\n\t\t\t<Padding top=\"small\" />\n\t\t\t<ColorSelect\n\t\t\t\tonChange={handleColorChange}\n\t\t\t\tlabel={t('label.select_color', 'Select Color')}\n\t\t\t\tdefaultColor={color}\n\t\t\t/>\n\t\t\t<ModalFooter\n\t\t\t\tonConfirm={editMode ? onUpdate : onCreate}\n\t\t\t\tlabel={editMode ? t('label.edit', 'edit') : t('label.create', 'Create')}\n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default CreateUpdateTagModal;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { ComponentType, FC, ReactElement, useCallback, useMemo } from 'react';\n\nimport { Container, Text, useSnackbar } from '@zextras/carbonio-design-system';\nimport { deleteTag } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport ModalFooter from '../../commons/modal-footer';\nimport { ModalHeader } from '../../commons/modal-header';\n\ntype ComponentProps = {\n\tonClose: () => void;\n\ttag?: {\n\t\tCustomComponent?: ComponentType;\n\t\tactive: boolean;\n\t\tcolor?: number;\n\t\tdivider: boolean;\n\t\tid: string;\n\t\tlabel: string;\n\t\tname: string;\n\t\topen: boolean;\n\t};\n};\nconst DeleteTagModal: FC<ComponentProps> = ({ onClose, tag }): ReactElement => {\n\tconst createSnackbar = useSnackbar();\n\tconst [t] = useTranslation();\n\n\tconst title = useMemo(\n\t\t() =>\n\t\t\tt('label.delete_tag_name', {\n\t\t\t\tname: tag?.name,\n\t\t\t\tdefaultValue: 'Delete \"{{name}}\" tag'\n\t\t\t}),\n\t\t[t, tag?.name]\n\t);\n\n\tconst onConfirm = useCallback(() => {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tdeleteTag(tag?.id).then((res: any) => {\n\t\t\tif (res.action) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `delete-tag`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tlabel: t('messages.snackbar.tag_deleted', {\n\t\t\t\t\t\tname: tag?.name,\n\t\t\t\t\t\tdefaultValue: '{{name}} Tag deleted successfully'\n\t\t\t\t\t}),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t}\n\t\t\tonClose();\n\t\t});\n\t}, [createSnackbar, onClose, t, tag]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader onClose={onClose} title={title} />\n\t\t\t<Container padding={{ horizontal: 'large' }}>\n\t\t\t\t<Text>\n\t\t\t\t\t{t('message.delete_tag_message1', {\n\t\t\t\t\t\tname: tag?.name,\n\t\t\t\t\t\tdefaultValue: `Are you sure to delete \"{{name}}\" Tag?`\n\t\t\t\t\t})}\n\t\t\t\t</Text>\n\t\t\t\t<Text overflow=\"break-word\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'message.delete_tag_message2',\n\t\t\t\t\t\t'Once deleted, it will be removed from every item marked with it.'\n\t\t\t\t\t)}\n\t\t\t\t</Text>\n\t\t\t</Container>\n\t\t\t<ModalFooter\n\t\t\t\tonConfirm={onConfirm}\n\t\t\t\tlabel={t('label.delete', 'Delete')}\n\t\t\t\tdisabled={false}\n\t\t\t\tbackground=\"error\"\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default DeleteTagModal;\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { ComponentType, ReactElement, useCallback, useMemo, useState } from 'react';\n\nimport {\n\tRow,\n\tText,\n\tPadding,\n\tIcon,\n\tCheckbox,\n\tButton,\n\tuseModal,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport {\n\tZIMBRA_STANDARD_COLORS,\n\treplaceHistory,\n\tuseTags,\n\tTag,\n\tTags\n} from '@zextras/carbonio-shell-ui';\nimport { TFunction } from 'i18next';\nimport { every, find, includes, map, reduce } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppDispatch } from '../hooks/redux';\nimport { contactAction } from '../store/actions/contact-action';\nimport { StoreProvider } from '../store/redux';\nimport { Contact } from '../types/contact';\nimport { TagsActionsType } from '../types/tags';\nimport CreateUpdateTagModal from '../views/secondary-bar/parts/tags/create-update-tag-modal';\nimport DeleteTagModal from '../views/secondary-bar/parts/tags/delete-tag-modal';\nimport { ItemType } from '../views/secondary-bar/parts/tags/types';\n\nexport type ReturnType = {\n\tid: string;\n\ticon: string;\n\tlabel: string;\n\tonClick?: (arg: React.SyntheticEvent<HTMLElement> | KeyboardEvent) => void;\n\titems?: Array<{\n\t\tcustomComponent: ComponentType;\n\t\tid: string;\n\t\ticon: string;\n\t\tlabel: string;\n\t}>;\n};\n\nexport type TagsFromStoreType = Record<string, Tag>;\n\nexport type ArgumentType = {\n\tt: TFunction;\n\tcreateModal?: (...args: any) => () => void;\n\tcreateSnackbar?: (...args: any) => void;\n\titems?: ReturnType;\n\ttag?: ItemType;\n};\n\nexport const createAndApplyTag = ({\n\tt,\n\tcontext,\n\tcontact\n}: {\n\tt: TFunction;\n\tcontext: any;\n\tcontact: Contact;\n}): ReturnType => ({\n\tid: TagsActionsType.NEW,\n\ticon: 'TagOutline',\n\tlabel: t('label.create_tag', 'Create Tag'),\n\tonClick: (e): void => {\n\t\tif (e) {\n\t\t\te.stopPropagation();\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst closeModal = context.createModal(\n\t\t\t{\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<CreateUpdateTagModal onClose={(): void => closeModal()} contact={contact} />\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}\n});\nexport const createTag = ({ t, createModal }: ArgumentType): ReturnType => ({\n\tid: TagsActionsType.NEW,\n\ticon: 'TagOutline',\n\tlabel: t('label.create_tag', 'Create Tag'),\n\tonClick: (e): void => {\n\t\tif (e) {\n\t\t\te.stopPropagation();\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst closeModal = createModal(\n\t\t\t{\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<CreateUpdateTagModal onClose={(): void => closeModal()} />\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}\n});\n\nexport const editTag = ({ t, createModal, tag }: ArgumentType): ReturnType => ({\n\tid: TagsActionsType.EDIT,\n\ticon: 'Edit2Outline',\n\tlabel: t('label.edit_tag', 'Edit Tag'),\n\tonClick: (e): void => {\n\t\tif (e) {\n\t\t\te.stopPropagation();\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst closeModal = createModal(\n\t\t\t{\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<CreateUpdateTagModal onClose={(): void => closeModal()} tag={tag} editMode />\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}\n});\n\nexport const deleteTag = ({ t, createModal, tag }: ArgumentType): ReturnType => ({\n\tid: TagsActionsType.DELETE,\n\ticon: 'Untag',\n\tlabel: t('label.delete_tag', 'Delete Tag'),\n\tonClick: (e): void => {\n\t\tif (e) {\n\t\t\te.stopPropagation();\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst closeModal = createModal(\n\t\t\t{\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<DeleteTagModal onClose={(): void => closeModal()} tag={tag} />\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t},\n\t\t\ttrue\n\t\t);\n\t}\n});\n\nexport const TagsDropdownItem = ({\n\ttag,\n\tcontact\n}: {\n\ttag: Tag;\n\tcontact: Contact;\n}): ReactElement => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst dispatch = useAppDispatch();\n\tconst [checked, setChecked] = useState(includes(contact.tags, tag.id));\n\tconst [isHovering, setIsHovering] = useState(false);\n\tconst toggleCheck = useCallback(\n\t\t(value) => {\n\t\t\tsetChecked((c) => !c);\n\t\t\tdispatch(\n\t\t\t\tcontactAction({\n\t\t\t\t\top: value ? '!tag' : 'tag',\n\t\t\t\t\tcontactsIDs: [contact.id],\n\t\t\t\t\ttagName: tag.name\n\t\t\t\t})\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t).then((res: any) => {\n\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: value\n\t\t\t\t\t\t\t? t('snackbar.tag_removed', { tag: tag.name, defaultValue: '\"{{tag}}\" tag removed' })\n\t\t\t\t\t\t\t: t('snackbar.tag_applied', {\n\t\t\t\t\t\t\t\t\ttag: tag.name,\n\t\t\t\t\t\t\t\t\tdefaultValue: '\"{{tag}}\" tag applied'\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[contact.id, createSnackbar, dispatch, t, tag.name]\n\t);\n\tconst tagColor = useMemo(() => ZIMBRA_STANDARD_COLORS[tag.color || 0].hex, [tag.color]);\n\tconst tagIcon = useMemo(() => (checked ? 'Tag' : 'TagOutline'), [checked]);\n\tconst tagIconOnHovered = useMemo(() => (checked ? 'Untag' : 'Tag'), [checked]);\n\n\treturn (\n\t\t<Row\n\t\t\ttakeAvailableSpace\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tonClick={(): void => toggleCheck(checked)}\n\t\t\tonMouseEnter={(): void => setIsHovering(true)}\n\t\t\tonMouseLeave={(): void => setIsHovering(false)}\n\t\t>\n\t\t\t<Padding right=\"small\">\n\t\t\t\t<Checkbox value={checked} />\n\t\t\t</Padding>\n\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t<Text>{tag.name}</Text>\n\t\t\t\t</Row>\n\t\t\t\t<Row mainAlignment=\"flex-end\">\n\t\t\t\t\t<Icon icon={isHovering ? tagIconOnHovered : tagIcon} color={tagColor} />\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Row>\n\t);\n};\n\nexport const MultiSelectTagsDropdownItem = ({\n\ttag,\n\tids,\n\ttags,\n\tcontacts,\n\tdeselectAll,\n\tfolderId\n}: {\n\ttag: Tag;\n\tcontacts: Array<Contact>;\n\tids: string[];\n\ttags: Tags;\n\tmultiSelect?: boolean;\n\tdeselectAll?: () => void;\n\tfolderId?: string;\n}): ReactElement => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst dispatch = useAppDispatch();\n\tconst [isHovering, setIsHovering] = useState(false);\n\n\tconst tagsToShow = reduce(\n\t\ttags,\n\t\t(acc: Array<string>, v: Tag) => {\n\t\t\tconst values = map(contacts, (c) => includes(c.tags, v.id));\n\t\t\tif (every(values)) acc.push(v.id);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\tconst [checked, setChecked] = useState(includes(tagsToShow, tag.id));\n\n\tconst toggleCheck = useCallback(\n\t\t(value) => {\n\t\t\tsetChecked((c) => !c);\n\t\t\tdispatch(\n\t\t\t\tcontactAction({\n\t\t\t\t\top: value ? '!tag' : 'tag',\n\t\t\t\t\tcontactsIDs: ids,\n\t\t\t\t\ttagName: tag.name\n\t\t\t\t})\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t).then((res: any) => {\n\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\tdeselectAll && deselectAll();\n\t\t\t\t\treplaceHistory(`/folder/${folderId}/`);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: value\n\t\t\t\t\t\t\t? t('snackbar.tag_removed', { tag: tag.name, defaultValue: '\"{{tag}}\" tag removed' })\n\t\t\t\t\t\t\t: t('snackbar.tag_applied', {\n\t\t\t\t\t\t\t\t\ttag: tag.name,\n\t\t\t\t\t\t\t\t\tdefaultValue: '\"{{tag}}\" tag applied'\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `tag`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[dispatch, ids, tag.name, deselectAll, folderId, createSnackbar, t]\n\t);\n\n\tconst tagIcon = useMemo(() => (checked ? 'Tag' : 'TagOutline'), [checked]);\n\tconst tagIconOnHovered = useMemo(() => (checked ? 'Untag' : 'Tag'), [checked]);\n\tconst tagColor = useMemo(() => ZIMBRA_STANDARD_COLORS[tag.color || 0].hex, [tag.color]);\n\treturn (\n\t\t<Row\n\t\t\ttakeAvailableSpace\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tonMouseEnter={(): void => setIsHovering(true)}\n\t\t\tonMouseLeave={(): void => setIsHovering(false)}\n\t\t\tonClick={(ev: React.SyntheticEvent<EventTarget>): void => {\n\t\t\t\tev.preventDefault();\n\t\t\t\ttoggleCheck(checked);\n\t\t\t}}\n\t\t>\n\t\t\t<Padding right=\"small\">\n\t\t\t\t<Checkbox value={checked} />\n\t\t\t</Padding>\n\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t<Text>{tag.name}</Text>\n\t\t\t\t</Row>\n\t\t\t\t<Row mainAlignment=\"flex-end\">\n\t\t\t\t\t<Icon icon={isHovering ? tagIconOnHovered : tagIcon} color={tagColor} />\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Row>\n\t);\n};\n\nexport const applyMultiTag = ({\n\tt,\n\ttags,\n\tids,\n\tcontacts,\n\tdeselectAll,\n\tfolderId\n}: {\n\tt: TFunction;\n\tcontacts: Array<Contact>;\n\ttags: Tags;\n\tids: string[];\n\tdeselectAll?: () => void;\n\tfolderId?: string;\n}): { id: string; items: ItemType[]; customComponent: ReactElement } => {\n\tconst tagItem = reduce(\n\t\ttags,\n\t\t(acc, v: Tag) => {\n\t\t\tconst item = {\n\t\t\t\tid: v.id,\n\t\t\t\tlabel: v.name,\n\t\t\t\ticon: 'TagOutline',\n\t\t\t\tkeepOpen: true,\n\t\t\t\tcustomComponent: (\n\t\t\t\t\t<MultiSelectTagsDropdownItem\n\t\t\t\t\t\ttag={v}\n\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\tids={ids}\n\t\t\t\t\t\tcontacts={contacts}\n\t\t\t\t\t\tdeselectAll={deselectAll}\n\t\t\t\t\t\tfolderId={folderId}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t};\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tacc.push(item);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\treturn {\n\t\tid: TagsActionsType.APPLY,\n\t\titems: tagItem,\n\t\tcustomComponent: (\n\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t<Icon icon=\"TagsMoreOutline\" />\n\t\t\t\t</Padding>\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t<Text>{t('label.tags', 'Tags')}</Text>\n\t\t\t\t\t</Padding>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t)\n\t};\n};\nexport const applyTag = ({\n\tt,\n\tcontact,\n\ttags,\n\tcontext\n}: {\n\tt: TFunction;\n\tcontact: any;\n\ttags: TagsFromStoreType;\n\tcontext?: any;\n}): {\n\tid: string;\n\titems: ItemType[];\n\tcustomComponent: ReactElement;\n\tlabel?: string;\n\ticon?: string;\n} => {\n\tconst tagItem = reduce(\n\t\ttags,\n\t\t(acc, v) => {\n\t\t\tconst item = {\n\t\t\t\tid: v.id,\n\t\t\t\tlabel: v.name,\n\t\t\t\ticon: 'TagOutline',\n\t\t\t\tkeepOpen: true,\n\t\t\t\tcustomComponent: <TagsDropdownItem tag={v} contact={contact} />\n\t\t\t};\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tacc.push(item);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\tconst newTag = {\n\t\tid: 'new_tag',\n\t\tkeepOpen: true,\n\t\tcustomComponent: (\n\t\t\t<Button\n\t\t\t\tlabel={t('label.new_tag', 'New Tag')}\n\t\t\t\ttype=\"outlined\"\n\t\t\t\twidth=\"fill\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tonClick={(): void => context.createAndApplyTag({ t, context, contact }).onClick()}\n\t\t\t/>\n\t\t)\n\t};\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\ttagItem.push(newTag);\n\n\treturn {\n\t\tid: TagsActionsType.APPLY,\n\t\titems: tagItem,\n\t\tlabel: t('label.tag', 'Tag'),\n\t\ticon: 'TagsMoreOutline',\n\t\tcustomComponent: (\n\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t<Icon icon=\"TagsMoreOutline\" />\n\t\t\t\t</Padding>\n\t\t\t\t<Row takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t\t\t<Padding right=\"small\">\n\t\t\t\t\t\t<Text>{t('label.tags', 'Tags')}</Text>\n\t\t\t\t\t</Padding>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t)\n\t};\n};\n\nexport const useGetTagsActions = ({ tag, t }: ArgumentType): Array<ReturnType> => {\n\tconst createModal = useModal();\n\tconst createSnackbar = useSnackbar();\n\treturn useMemo(\n\t\t() => [\n\t\t\tcreateTag({ t, createModal }),\n\t\t\teditTag({ t, createModal, tag }),\n\t\t\tdeleteTag({ t, tag, createSnackbar, createModal })\n\t\t],\n\t\t[createModal, createSnackbar, t, tag]\n\t);\n};\n\nexport const useTagsArrayFromStore = (): Array<ItemType> => {\n\tconst tagsFromStore = useTags();\n\treturn useMemo(\n\t\t() =>\n\t\t\treduce(\n\t\t\t\ttagsFromStore,\n\t\t\t\t(acc: Array<ItemType>, v: any) => {\n\t\t\t\t\tacc.push(v);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t),\n\t\t[tagsFromStore]\n\t);\n};\n\nexport const useTagExist = (tags: Array<ItemType>): boolean => {\n\tconst tagsArrayFromStore = useTagsArrayFromStore();\n\treturn useMemo(\n\t\t() =>\n\t\t\treduce(\n\t\t\t\ttags,\n\t\t\t\t(acc: boolean, v: Tag) => {\n\t\t\t\t\tlet tmp = false;\n\t\t\t\t\tif (find(tagsArrayFromStore, { id: v?.id })) tmp = true;\n\t\t\t\t\treturn tmp;\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t),\n\t\t[tags, tagsArrayFromStore]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable import/extensions */\n\nimport React, { FC, ReactElement } from 'react';\n\nimport { Container, Button, Padding, Divider, Tooltip } from '@zextras/carbonio-design-system';\n\nimport { ModalFooterProps } from '../../../types/commons';\n\nconst ModalFooter: FC<ModalFooterProps> = ({\n\tmainAlignment = 'center',\n\tcrossAlignment = 'center',\n\tonConfirm,\n\tlabel,\n\tsecondaryAction,\n\tsecondaryLabel = 'Cancel',\n\tprimaryBtnType = 'default',\n\tsecondaryBtnType = 'default',\n\tdisabled,\n\tsecondaryDisabled,\n\tbackground = 'primary',\n\tsecondarybackground,\n\tcolor = 'primary',\n\tsecondaryColor = 'secondary',\n\tsize = 'small',\n\tshowDivider = true,\n\ttooltip,\n\tsecondaryTooltip\n}): ReactElement => (\n\t<Container\n\t\tmainAlignment={mainAlignment}\n\t\tcrossAlignment={crossAlignment}\n\t\tpadding={{ top: 'medium' }}\n\t>\n\t\t{showDivider && <Divider />}\n\n\t\t<Container\n\t\t\torientation=\"horizontal\"\n\t\t\tpadding={{ top: 'medium' }}\n\t\t\tmainAlignment=\"flex-end\"\n\t\t\tcrossAlignment=\"flex-end\"\n\t\t>\n\t\t\t{secondaryAction && (\n\t\t\t\t<Padding right=\"small\" vertical=\"small\">\n\t\t\t\t\t{secondaryTooltip ? (\n\t\t\t\t\t\t<Tooltip label={secondaryTooltip} placement=\"top\" maxWidth=\"fit\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tbackgroundColor={secondarybackground}\n\t\t\t\t\t\t\t\tcolor={secondaryColor}\n\t\t\t\t\t\t\t\ttype={secondaryBtnType}\n\t\t\t\t\t\t\t\tonClick={secondaryAction}\n\t\t\t\t\t\t\t\tlabel={secondaryLabel}\n\t\t\t\t\t\t\t\tdisabled={secondaryDisabled}\n\t\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tbackgroundColor={secondarybackground}\n\t\t\t\t\t\t\tcolor={secondaryColor}\n\t\t\t\t\t\t\ttype={secondaryBtnType}\n\t\t\t\t\t\t\tonClick={secondaryAction}\n\t\t\t\t\t\t\tlabel={secondaryLabel}\n\t\t\t\t\t\t\tdisabled={secondaryDisabled}\n\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Padding>\n\t\t\t)}\n\n\t\t\t<Padding vertical=\"small\">\n\t\t\t\t{tooltip ? (\n\t\t\t\t\t<Tooltip label={tooltip} placement=\"top\" maxWidth=\"fit\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\tonClick={onConfirm}\n\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\ttype={primaryBtnType}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tbackgroundColor={background}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t) : (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tonClick={onConfirm}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\ttype={primaryBtnType}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tbackgroundColor={background}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Padding>\n\t\t</Container>\n\t</Container>\n);\nexport default ModalFooter;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Divider, Text, Row, IconButton, Padding } from '@zextras/carbonio-design-system';\n\nexport const ModalHeader = ({ title, onClose }) => (\n\t<Row orientation=\"horizontal\" mainAlignment=\"space-between\" takeAvailableSpace width=\"100%\">\n\t\t<Text weight=\"bold\" size=\"large\">\n\t\t\t{title}\n\t\t</Text>\n\t\t<IconButton\n\t\t\tsize=\"medium\"\n\t\t\tstyle={{ padding: 0, margin: 0 }}\n\t\t\tonClick={onClose}\n\t\t\ticon=\"CloseOutline\"\n\t\t/>\n\t\t<Divider />\n\t\t<Padding bottom=\"medium\" />\n\t</Row>\n);\n"],"names":["useActionMoveContacts","t","useTranslation","createSnackbar","useSnackbar","createModal","useModal","move","useCallback","contactsIds","parentAddressBookId","apiClient","moveContact","then","key","replace","type","label","autoHideTimeout","TIMEOUTS","defaultSnackbar","hideButton","catch","canExecute","contacts","newParentAddressBook","length","map","contact","parent","some","parentId","id","isWriteAllowed","isRoot","parentAddressBooks","reduce","result","folder","getFolder","push","every","addressBook","isTrashed","execute","closeModal","children","React","ContactMoveModal","onMove","success","onClose","useMemo","ACTION_IDS","moveContacts","icon","Square","styled","withConfig","displayName","componentId","theme","palette","gray2","regular","color","ColorContainer","Container","TextUpperCase","Text","LabelFactory","selected","open","focus","orientation","width","crossAlignment","mainAlignment","borderRadius","background","padding","all","Row","takeAvailableSpace","left","size","Padding","right","ZIMBRA_STANDARD_COLORS","parseInt","value","hex","Icon","style","alignSelf","ColorSelect","onChange","defaultColor","colors","el","index","colorLabel","zLabel","context","toString","customComponent","height","defaultSelection","Select","items","StaticBreadcrumbs","crumbs","collapserProps","dropdownProps","tooltipLabel","rest","ref","crumbsCount","tooltip","crumb","firstCrumb","shift","Tooltip","wrap","maxWidth","Breadcrumbs","disabled","FOLDER_ROW_HEIGHT","FolderAccordionPlaceholder","RootAccordion","CustomContainer","active","highlight","gray6","hover","CustomListItemHelper","ListItem","CustomListItem","attrs","activeBackground","selectedBackground","$baseBackgroundColor","getColor","$focusBackgroundColor","FlatFoldersAccordionFolder","onFolderSelected","iconName","getFolderIconName","iconColor","getFolderIconColor","parts","name","matches","exec","absFolderPath","split","getFolderAbsPathParts","part","getFolderTranslatedName","selectionHandler","noop","_extends","top","bottom","onClick","FlatFoldersAccordionRoot","childrenFolders","isOpen","onOpenStatusChange","selectedFolderId","allowRootSelection","setOpen","useState","account","useUserAccount","rootLabel","isDefaultAccountRoot","toggleOpen","e","stopPropagation","op","horizontal","Avatar","placement","IconButton","customSize","iconSize","paddingSize","Collapse","crossSize","disableTransition","ListV2","childFolder","visible","FlatFoldersAccordion","roots","overflowY","root","ScrollableContainer","flattenFolders","folders","options","sortFolders","forEach","showTrashFolder","isTrash","showLinkedFolders","isLink","excludeIds","includes","filterRootChildren","nameCriteria","filter","folderName","toLowerCase","startsWith","FolderTreeSelector","inputLabel","onNewFolderClick","allowFolderCreation","showSharedAccounts","inputValue","setInputValue","selectedFolder","useFolder","useRootsArray","filteredAccountsRoots","flattenRoots","flattenRootsFolders","filteredRoots","acc","accItem","filterRoots","inputName","Input","backgroundColor","target","minHeight","maxHeight","Button","mode","parentAddressBook","setParentAddressBook","modalTitle","contactDesc","firstName","lastName","defaultValue","count","confirmLabel","confirmDisabled","undefined","excludedAddressBooksIds","currentAddressBooksId","Set","Array","from","values","onConfirm","onParentAddressBookSelected","ModalHeader","title","showCloseIcon","Divider","vertical","gap","ModalFooter","getSortCriteria","zid","getFolderIdParts","FOLDERS","CONTACTS","AUTO_CONTACTS","TRASH","sortFunction","sortBy","TagsActionsType","NonSupportedCharacters","CreateUpdateTagModal","editMode","tag","setName","setColor","dispatch","useAppDispatch","handleColorChange","c","Number","handleNameChange","ev","showMaxLengthWarning","showSpecialCharWarning","test","showWarning","applyNewlyCreatedTag","tagName","contactAction","contactsIDs","onCreate","createTag","res","onUpdate","Promise","renameTag","changeTagColor","textColor","hasError","overflow","DeleteTagModal","deleteTag","action","textAlign","createAndApplyTag","NEW","StoreProvider","editTag","EDIT","DELETE","TagsDropdownItem","checked","setChecked","tags","isHovering","setIsHovering","toggleCheck","tagColor","tagIcon","tagIconOnHovered","onMouseEnter","onMouseLeave","Checkbox","MultiSelectTagsDropdownItem","ids","deselectAll","folderId","tagsToShow","v","replaceHistory","preventDefault","applyMultiTag","tagItem","item","keepOpen","APPLY","applyTag","newTag","useGetTagsActions","useTagExist","tagsArrayFromStore","useTagsArrayFromStore","tagsFromStore","useTags","tmp","find","secondaryAction","secondaryLabel","primaryBtnType","secondaryBtnType","secondaryDisabled","secondarybackground","secondaryColor","showDivider","secondaryTooltip","weight","margin"],"sourceRoot":""}