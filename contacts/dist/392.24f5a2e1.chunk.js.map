{"version":3,"file":"392.24f5a2e1.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/webpack/runtime/chunk loaded","webpack://carbonio-contacts-ui/webpack/runtime/startup chunk dependencies","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/worker/utils.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/worker/handle-message.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/worker/folder.ts","webpack://carbonio-contacts-ui/webpack/bootstrap","webpack://carbonio-contacts-ui/webpack/runtime/ensure chunk","webpack://carbonio-contacts-ui/webpack/runtime/get javascript chunk filename","webpack://carbonio-contacts-ui/webpack/runtime/get mini-css chunk filename","webpack://carbonio-contacts-ui/webpack/runtime/global","webpack://carbonio-contacts-ui/webpack/runtime/hasOwnProperty shorthand","webpack://carbonio-contacts-ui/webpack/runtime/publicPath","webpack://carbonio-contacts-ui/webpack/runtime/importScripts chunk loading","webpack://carbonio-contacts-ui/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(619).then(next);\n};","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\n/**\n *\n * @param link\n */\nexport const getLinkIdMapKey = (link: { rid?: string; zid?: string }): string | null => {\n\tif (!link) {\n\t\treturn null;\n\t}\n\n\tif (!link.rid || !link.zid) {\n\t\treturn null;\n\t}\n\n\treturn `${link.zid}:${link.rid}`;\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport type { FolderMessage, SoapNotify } from '@zextras/carbonio-shell-ui';\n\nimport { getLinkIdMapKey } from './utils';\nimport type {\n\tBaseFolder,\n\tFolder,\n\tFolders,\n\tLinkFolder,\n\tLinkFolderFields,\n\tSearches,\n\tSearchFolderFields,\n\tSoapFolder,\n\tSoapLink,\n\tSoapSearchFolder,\n\tUserFolder\n} from '../types/folder';\nimport { FolderView, LinksIdMap } from '../types/folder';\n\nconst IM_LOGS = '14';\nconst USER_ROOT = '1';\n\nlet folders: Folders = {};\nconst searches: Searches = {};\nconst linksIdMap: LinksIdMap = {};\n// used to check if a newly created folder is being added to the correct store\nlet view: string | undefined;\n\nexport const testUtils = {\n\tgetFolders: (): Folders => folders,\n\tresetFolders: (): void => {\n\t\tfolders = {};\n\t},\n\tsetFolders: (data: Folders): void => {\n\t\tfolders = data;\n\t},\n\tsetCurrentView: (current: FolderView): void => {\n\t\tview = current;\n\t},\n\tgetCurrentView: (): string | undefined => view\n};\n\nconst sortFoldersByName = (obj: Array<Folder>): Array<Folder> =>\n\tobj.sort((a, b) => {\n\t\tconst aLowerName = a.name.toLowerCase();\n\t\tconst bLowerName = b.name.toLowerCase();\n\t\tif (aLowerName < bLowerName) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (aLowerName > bLowerName) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\nconst updateChildren = (folder: Folder, changes: any): any => {\n\tif (changes.absFolderPath && folder.children.length) {\n\t\tfolder.children.forEach((child) => {\n\t\t\tconst childFolder = folders[child.id];\n\t\t\tif (changes.absFolderPath && childFolder.absFolderPath) {\n\t\t\t\tconst paths = childFolder.absFolderPath.split('/').slice(2);\n\t\t\t\tchildFolder.absFolderPath = `${changes.absFolderPath}/${paths.join('/')}`;\n\t\t\t}\n\t\t\tif (childFolder.children.length) {\n\t\t\t\tupdateChildren(childFolder, changes);\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const testFolderIsChecked = ({ string }: { string: string | undefined }): boolean =>\n\t/#/.test(string || '');\n\nconst omit = ({\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tlink: _1,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tfolder: _2,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsearch: _3,\n\t...obj\n}: Partial<SoapFolder>): Partial<SoapFolder> => obj;\n\nexport const hasId = (f: { id: string }, id: string): boolean => f.id.split(':').includes(id);\nexport const normalize = (f: SoapFolder, p?: Folder): BaseFolder => ({\n\tid: f.id,\n\tuuid: f.uuid,\n\tname: f.name,\n\tabsFolderPath: f.absFolderPath,\n\tl: f.l,\n\tluuid: f.luuid,\n\tchecked: testFolderIsChecked({ string: f.f }),\n\tf: f.f,\n\t// the type defined in shell is not correct refs: SHELL-118\n\t// FIXME: remove the cast when the type will be fixed\n\tcolor: (f.color as unknown as number) || p?.color,\n\trgb: f.rgb,\n\tu: f.u,\n\ti4u: f.i4u,\n\tview: f.view,\n\trev: f.rev,\n\tms: f.ms,\n\tmd: f.md,\n\tn: f.n,\n\ti4n: f.i4n,\n\ts: f.s,\n\ti4ms: f.i4ms,\n\ti4next: f.i4next,\n\turl: f.url,\n\tactivesyncdisabled: !!f.activesyncdisabled,\n\twebOfflineSyncDays: f.webOfflineSyncDays,\n\tperm: f.perm,\n\trecursive: !!f.recursive,\n\trest: f.rest,\n\tdeletable: !!f.deletable,\n\tmeta: f.meta,\n\tacl: f.acl,\n\tretentionPolicy: f.retentionPolicy\n});\n\nexport const normalizeSearch = (s: SoapSearchFolder): BaseFolder & SearchFolderFields => ({\n\t...normalize(s),\n\tquery: s.query,\n\tsortBy: s.sortBy,\n\ttypes: s.types\n});\n\nexport const normalizeLink = (l: SoapLink, p?: Folder): BaseFolder & LinkFolderFields => ({\n\t...normalize(l, p),\n\towner: l.owner,\n\tzid: l.zid,\n\trid: l.rid,\n\truuid: l.ruuid,\n\toname: l.oname,\n\treminder: !!l.reminder,\n\tbroken: !!l.broken\n});\n\nexport const processSearch = (soapSearch: SoapSearchFolder, parent: Folder): void => {\n\tconst search = {\n\t\t...normalizeSearch(soapSearch),\n\t\tparent: parent?.id,\n\t\tisLink: parent?.isLink\n\t};\n\tsearches[search.id] = search;\n};\n\nexport const processLink = (soapLink: SoapLink, depth: number, parent?: Folder): LinkFolder => {\n\tconst link = {\n\t\t...normalizeLink(soapLink, parent),\n\t\tisLink: true,\n\t\tchildren: [],\n\t\tparent: parent?.id,\n\t\tdepth\n\t} as LinkFolder;\n\t// eslint-disable-next-line no-param-reassign\n\tfolders[soapLink.id] = link;\n\n\t// Get the zid:rid key of the link and add it to the links id map\n\tconst linkIdMapKey = getLinkIdMapKey(soapLink);\n\tlinkIdMapKey && (linksIdMap[linkIdMapKey] = soapLink.id);\n\n\tsoapLink?.folder?.forEach((f) => {\n\t\tif (!hasId(f, IM_LOGS)) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tconst child = processFolder(f, depth + 1, link);\n\t\t\tlink.children.push(child);\n\t\t}\n\t});\n\tsoapLink?.link?.forEach((l) => {\n\t\tif (!hasId(l, IM_LOGS)) {\n\t\t\tconst child = processLink(l, depth + 1, link);\n\t\t\tlink.children.push(child);\n\t\t}\n\t});\n\tsoapLink?.search?.forEach((s) => {\n\t\tprocessSearch(s, link);\n\t});\n\n\treturn link;\n};\n\nexport const processFolder = (\n\tsoapFolder: SoapFolder,\n\tdepth: number,\n\tparent?: Folder\n): UserFolder => {\n\tconst folder: UserFolder = {\n\t\t...normalize(soapFolder, parent),\n\t\tisLink: false,\n\t\tchildren: [],\n\t\tparent: parent?.id,\n\t\tdepth\n\t};\n\tfolders[soapFolder.id] = folder;\n\tsoapFolder?.folder?.forEach((f) => {\n\t\tif (!hasId(f, IM_LOGS)) {\n\t\t\tconst child = processFolder(f, depth + 1, folder);\n\t\t\tif (!hasId(f, USER_ROOT)) {\n\t\t\t\tfolder.children.push(child);\n\t\t\t}\n\t\t}\n\t});\n\tsoapFolder?.link?.forEach((l) => {\n\t\tif (!hasId(l, IM_LOGS)) {\n\t\t\tconst child = processLink(l, depth + 1, folder);\n\t\t\tif (!hasId(l, USER_ROOT)) {\n\t\t\t\tfolder.children.push(child);\n\t\t\t}\n\t\t}\n\t});\n\tsoapFolder?.search?.forEach((s) => {\n\t\tprocessSearch(s, folder);\n\t});\n\treturn folder;\n};\n\nexport const handleFolderRefresh = (\n\tsoapFolders: Array<SoapFolder>,\n\tcurrentView: FolderView\n): UserFolder | Array<UserFolder> => {\n\tview = currentView;\n\tif (soapFolders.length > 1) {\n\t\tconst sharedAccounts = soapFolders.slice(1);\n\t\treturn [\n\t\t\tprocessFolder(soapFolders[0], 0),\n\t\t\t...sharedAccounts.map((folder) => processLink(folder as SoapLink, 0))\n\t\t] as Array<UserFolder>;\n\t}\n\treturn processFolder(soapFolders[0], 0);\n};\n\nexport const handleFolderCreated = (created: Array<SoapFolder>): void =>\n\tcreated.forEach((val: SoapFolder) => {\n\t\tif (val.id && val.l && view && val.view === view) {\n\t\t\tconst parent = folders[val.l];\n\t\t\tconst folder: UserFolder = {\n\t\t\t\t...normalize(val, parent),\n\t\t\t\tisLink: false,\n\t\t\t\tchildren: [],\n\t\t\t\tparent: parent?.id,\n\t\t\t\tdepth: parent && parent.depth !== undefined ? parent.depth + 1 : 0\n\t\t\t};\n\t\t\tfolders[val.id] = folder;\n\t\t\tparent.children.push(folder);\n\t\t\tsortFoldersByName(parent.children);\n\t\t}\n\t});\nexport const handleLinkCreated = (created: Array<SoapLink>): void =>\n\tcreated.forEach((val: SoapLink) => {\n\t\tif (val.id && val.l && view && val.view === view) {\n\t\t\tconst parent = folders[val.l];\n\t\t\tconst folder: LinkFolder = {\n\t\t\t\t...normalizeLink(val, parent),\n\t\t\t\tisLink: true,\n\t\t\t\tchildren: [],\n\t\t\t\tparent: parent?.id,\n\t\t\t\tdepth: parent && parent.depth !== undefined ? parent.depth + 1 : 0\n\t\t\t};\n\t\t\tfolders[val.id] = folder;\n\t\t\tparent.children.push(folder);\n\t\t\tsortFoldersByName(parent.children);\n\t\t}\n\t});\n\nfunction getKeyByValue(map: Folders, searchValue: Partial<UserFolder>): string | undefined {\n\treturn Object.keys(map).find(\n\t\t(key) => searchValue.id === `${(map[key] as LinkFolder).zid}:${(map[key] as LinkFolder).rid}`\n\t);\n}\n\nfunction folderIsSharedWithMe(folderId: string | undefined): boolean {\n\tif (!folderId) return false;\n\tconst folder = folders[folderId];\n\tif (folder?.parent) {\n\t\treturn folderIsSharedWithMe(folder?.parent);\n\t}\n\treturn folder?.name === 'USER_ROOT';\n}\n\nexport const handleFolderModified = (modified: Array<Partial<UserFolder>>): void =>\n\t// the type defined in shell is not correct refs: SHELL-118\n\t// FIXME: remove the ts-ignore when the type will be fixed\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tmodified.forEach((val: Partial<SoapFolder>): void => {\n\t\tif (!val.id) return;\n\t\tconst mountPointId = val.id.includes(':') ? val.id : getKeyByValue(folders, val);\n\t\tconst parentMountPointId = getKeyByValue(folders, { id: val.l });\n\t\tconst isSharedWithMe = folderIsSharedWithMe(mountPointId);\n\t\tconst parentIsSharedWithMe = folderIsSharedWithMe(parentMountPointId);\n\t\tconst parentFolderId = parentIsSharedWithMe && parentMountPointId ? parentMountPointId : val.l;\n\t\tconst folderId = isSharedWithMe && mountPointId ? mountPointId : val.id;\n\t\tconst folder = folderId ? folders[folderId] : null;\n\n\t\tif (folder) {\n\t\t\tObject.assign(folder, omit({ ...val, id: folderId }));\n\t\t\tupdateChildren(folder, val);\n\t\t\tif (typeof val.f !== 'undefined') {\n\t\t\t\tfolder.checked = testFolderIsChecked({ string: val.f });\n\t\t\t}\n\n\t\t\tconst oldParentId = folder.parent;\n\n\t\t\tif (oldParentId) {\n\t\t\t\tconst oldParent = folders[oldParentId];\n\t\t\t\tif (oldParent) {\n\t\t\t\t\tif (!val.l) {\n\t\t\t\t\t\toldParent.children = oldParent.children.map((f) => (f.id !== val.id ? f : folder));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst newParent = parentFolderId ? folders[parentFolderId] : null;\n\t\t\t\t\t\tif (newParent) {\n\t\t\t\t\t\t\toldParent.children = oldParent.children.filter((f) => f.id !== folderId);\n\t\t\t\t\t\t\tnewParent.children.push(folder);\n\t\t\t\t\t\t\tsortFoldersByName(newParent.children);\n\t\t\t\t\t\t\tfolder.parent = newParent.id;\n\t\t\t\t\t\t\tfolder.depth = newParent?.depth !== undefined ? newParent.depth + 1 : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfolders[folderId] = folder;\n\t\t\t}\n\t\t}\n\t});\nexport const handleFolderDeleted = (deleted: string[]): void =>\n\tdeleted.forEach((val) => {\n\t\tconst folder = folders[val];\n\t\tif (folder) {\n\t\t\tif (folder.parent) {\n\t\t\t\tconst parent = folders[folder.parent];\n\t\t\t\tparent.children = parent.children.filter((obj) => obj.id !== val);\n\t\t\t}\n\t\t\tdelete folders[val];\n\t\t\tdelete searches[val];\n\t\t}\n\t});\nexport const handleFolderNotify = (notify: SoapNotify): void => {\n\thandleFolderCreated(notify.created?.folder ?? []);\n\thandleLinkCreated(notify.created?.link ?? []);\n\t// the type defined in shell is not correct refs: SHELL-118\n\t// FIXME: remove the ts-ignore when the type will be fixed\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\thandleFolderModified([...(notify.modified?.folder ?? []), ...(notify.modified?.link ?? [])]);\n\thandleFolderDeleted(notify.deleted ?? []);\n};\n\nexport const handleFoldersMessages = ({ data }: FolderMessage): void => {\n\tif (data.op === 'refresh' && data.folder) {\n\t\thandleFolderRefresh(data.folder, data.currentView);\n\t}\n\tif (data.op === 'notify') {\n\t\thandleFolderNotify(data.notify);\n\t}\n};\n\nexport const handleMessage = ({ data }: FolderMessage): void => {\n\thandleFoldersMessages({ data });\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tpostMessage({ folders, linksIdMap, searches });\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { handleMessage } from './handle-message';\n\nonmessage = handleMessage;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [619], () => (__webpack_require__(392)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + \"d78875fc\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/static/iris/carbonio-contacts-ui/5ab5a6e1fb77a9f7a650bdbc159e120cfe4cd89f/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t392: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcarbonio_contacts_ui\"] = self[\"webpackChunkcarbonio_contacts_ui\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","IM_LOGS","folders","searches","linksIdMap","view","sortFoldersByName","obj","sort","a","b","aLowerName","name","toLowerCase","bLowerName","updateChildren","folder","changes","absFolderPath","children","length","forEach","child","childFolder","id","paths","split","slice","join","testFolderIsChecked","string","test","hasId","f","includes","normalize","p","uuid","l","luuid","checked","color","rgb","u","i4u","rev","ms","md","n","i4n","s","i4ms","i4next","url","activesyncdisabled","webOfflineSyncDays","perm","recursive","rest","deletable","meta","acl","retentionPolicy","normalizeLink","owner","zid","rid","ruuid","oname","reminder","broken","processSearch","soapSearch","parent","search","query","sortBy","types","isLink","processLink","soapLink","depth","link","linkIdMapKey","getLinkIdMapKey","processFolder","push","soapFolder","getKeyByValue","map","searchValue","Object","keys","find","key","folderIsSharedWithMe","folderId","handleFoldersMessages","data","notify","op","handleFolderRefresh","soapFolders","currentView","sharedAccounts","created","val","undefined","modified","mountPointId","parentMountPointId","isSharedWithMe","parentFolderId","assign","omit","_1","_2","_3","oldParentId","oldParent","newParent","filter","deleted","onmessage","handleMessage","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","x","__webpack_exports__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","e","chunkId","Promise","all","reduce","promises","miniCssF","g","globalThis","this","Function","window","o","prop","prototype","hasOwnProperty","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}