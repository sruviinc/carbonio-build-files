{"version":3,"file":"legacySecondaryBarView.5ae0c6fb.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/./src/components/styled-components.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-create.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-delete/address-book-delete.tsx","webpack://carbonio-contacts-ui/./src/components/modals/shares-utils.ts","webpack://carbonio-contacts-ui/./src/components/modals/address-book-edit/share-folder-properties.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-edit/address-book-edit-general.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-edit/share-folder-modal.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/utils.js","webpack://carbonio-contacts-ui/./src/components/modals/address-book-edit/share-revoke-modal.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-edit/address-book-edit.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-empty/address-book-empty.tsx","webpack://carbonio-contacts-ui/./src/actions/export-address-book.tsx","webpack://carbonio-contacts-ui/./src/components/modals/contacts-import-modal.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-move.tsx","webpack://carbonio-contacts-ui/./src/actions/move-address-book.tsx","webpack://carbonio-contacts-ui/./src/components/modals/share-info-modal.tsx","webpack://carbonio-contacts-ui/./src/components/modals/address-book-trash/address-book-trash.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/commons/use-address-book-contextual-menu-items.tsx","webpack://carbonio-contacts-ui/./src/actions/create-address-book.tsx","webpack://carbonio-contacts-ui/./src/actions/edit-address-book.tsx","webpack://carbonio-contacts-ui/./src/actions/delete-address-book.tsx","webpack://carbonio-contacts-ui/./src/actions/trash-address-book.tsx","webpack://carbonio-contacts-ui/./src/actions/empty-address-book.tsx","webpack://carbonio-contacts-ui/./src/actions/empty-trash.tsx","webpack://carbonio-contacts-ui/./src/actions/import-contacts.tsx","webpack://carbonio-contacts-ui/./src/actions/show-share-info.tsx","webpack://carbonio-contacts-ui/./src/actions/remove-address-book-link.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/accordion-custom-component.tsx","webpack://carbonio-contacts-ui/./src/components/modals/shared-address-books-add/users-shares-list.tsx","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/theme/theme-mui.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/components/sidebar/sidebar-accordion-mui.tsx","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/worker/handle-message.ts","webpack://carbonio-contacts-ui/./src/legacy/hooks/use-get-tags-accordions.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/secondary-bar/secondary-bar-view.tsx","webpack://carbonio-contacts-ui/./src/sruvi/Colors.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport {\n\tAvatar,\n\tContainer,\n\tgetColor,\n\tListItem,\n\ttype ListItemProps,\n\tpseudoClasses,\n\tRow\n} from '@zextras/carbonio-design-system';\nimport styled, { css, type DefaultTheme, type SimpleInterpolation } from 'styled-components';\n\nexport const HoverRow = styled(Row)`\n\tposition: relative;\n\tcursor: pointer;\n\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.regular};\n\n\t&:hover {\n\t\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.hover};\n\t}\n`;\n\nexport const HoverContainer = styled(Row)``;\n\nexport const HoverBarContainer = styled(Row)`\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbackground: linear-gradient(to right, transparent, currentColor);\n`;\n\nexport const ListItemContainer = styled(Container)`\n\tposition: relative;\n\tcursor: pointer;\n\t${HoverBarContainer} {\n\t\tdisplay: none;\n\t}\n\n\t&:hover {\n\t\t${HoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n`;\n\nexport const StyledListItem = styled(ListItem).attrs<\n\tListItemProps,\n\t{ backgroundColor?: string | keyof DefaultTheme['palette'] }\n>(({ background, selectedBackground, activeBackground, active, selected }) => ({\n\tbackgroundColor: (active && activeBackground) || (selected && selectedBackground) || background\n}))`\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor && pseudoClasses(theme, backgroundColor, 'color')}\n\ttransition: none;\n\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor &&\n\t\tcss`\n\t\t\t${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(to right, transparent, ${getColor(backgroundColor, theme)});\n\t\t\t}\n\t\t\t&:focus ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.focus`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:hover ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.hover`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:active ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.active`, theme)}\n\t\t\t\t);\n\t\t\t}\n\t\t`}\n`;\n\nexport const ScrollableContainer = styled(Container)`\n\toverflow-y: auto;\n`;\n\nexport const CustomIconAvatar = styled(Avatar)`\n\t& > svg {\n\t\tmax-width: 1.5rem;\n\t\tmax-height: 1.5rem;\n\t\tmin-width: 1.5rem;\n\t\tmin-height: 1.5rem;\n\t}\n`;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n\tContainer,\n\tDivider,\n\tInput,\n\tInputProps,\n\tModalFooter,\n\tModalHeader,\n\tPadding,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { FOLDERS } from '@zextras/carbonio-shell-ui';\nimport { filter } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { useFolder } from '../../carbonio-ui-commons/store/zustand/folder/hooks';\nimport { Folder } from '../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../constants';\nimport { apiClient } from '../../network/api-client';\nimport { FolderTreeSelector } from '../folder-tree-selector/folder-tree-selector';\n\nexport type AddressBookCreateModalProps = {\n\tdefaultParentId?: string;\n\tonClose: () => void;\n};\n\nexport const AddressBookCreateModal = ({\n\tdefaultParentId,\n\tonClose\n}: AddressBookCreateModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst defaultParent = useFolder(defaultParentId ?? FOLDERS.USER_ROOT);\n\n\tconst [newAddressBookName, setNewAddressBookName] = useState<string>('');\n\tconst [parentAddressBook, setParentAddressBook] = useState<Folder | undefined>(defaultParent);\n\n\tconst modalTitle = useMemo(() => t('folder.modal.new.title', 'Create new address book'), [t]);\n\tconst confirmLabel = useMemo(() => t('label.create', 'Create'), [t]);\n\n\tconst addressBookAlreadyExists = useMemo(\n\t\t() => filter(defaultParent?.children, (child) => child.name === newAddressBookName).length > 0,\n\t\t[defaultParent?.children, newAddressBookName]\n\t);\n\n\tconst addressBookNameFieldLabel = useMemo(\n\t\t() =>\n\t\t\taddressBookAlreadyExists\n\t\t\t\t? t('folder.modal.new.input.name_exist', 'Name already exists in this path')\n\t\t\t\t: t('folder.modal.new.input.name', 'Insert address book name'),\n\t\t[addressBookAlreadyExists, t]\n\t);\n\n\tconst confirmDisabled = useMemo(\n\t\t() =>\n\t\t\tnewAddressBookName === undefined ||\n\t\t\tnewAddressBookName.trim().length === 0 ||\n\t\t\tparentAddressBook === undefined ||\n\t\t\taddressBookAlreadyExists,\n\t\t[addressBookAlreadyExists, newAddressBookName, parentAddressBook]\n\t);\n\n\tconst onAddressBookNameChanged = useCallback<NonNullable<InputProps['onChange']>>(\n\t\t(ev) => setNewAddressBookName(ev.target.value),\n\t\t[]\n\t);\n\n\tconst onParentAddressBookSelected = useCallback((addressBook: Folder) => {\n\t\tsetParentAddressBook(addressBook);\n\t}, []);\n\n\tconst onConfirm = useCallback(() => {\n\t\tif (!parentAddressBook || !newAddressBookName) {\n\t\t\treturn;\n\t\t}\n\t\tapiClient\n\t\t\t.createFolder({\n\t\t\t\tparentFolderId: parentAddressBook.id ?? FOLDERS.CONTACTS,\n\t\t\t\tname: newAddressBookName\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `create-address-book-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tlabel: t('folder.snackbar.folder_new', 'New address book created'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t\tonClose();\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `create-address-book-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t});\n\t}, [createSnackbar, newAddressBookName, onClose, parentAddressBook, t]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader title={modalTitle} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<Padding vertical={'medium'}>\n\t\t\t\t<Container\n\t\t\t\t\tgap={'0.5rem'}\n\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\t\theight={'fit'}\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel={addressBookNameFieldLabel}\n\t\t\t\t\t\tbackgroundColor={'gray5'}\n\t\t\t\t\t\thasError={addressBookAlreadyExists}\n\t\t\t\t\t\tvalue={newAddressBookName}\n\t\t\t\t\t\tonChange={onAddressBookNameChanged}\n\t\t\t\t\t/>\n\t\t\t\t\t<FolderTreeSelector\n\t\t\t\t\t\tselectedFolderId={parentAddressBook?.id}\n\t\t\t\t\t\tonFolderSelected={onParentAddressBookSelected}\n\t\t\t\t\t\tshowSharedAccounts\n\t\t\t\t\t\tshowTrashFolder={false}\n\t\t\t\t\t\tshowLinkedFolders\n\t\t\t\t\t\tallowRootSelection\n\t\t\t\t\t\tallowFolderCreation={false}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t</Padding>\n\t\t\t<Divider />\n\t\t\t<ModalFooter\n\t\t\t\tconfirmLabel={confirmLabel}\n\t\t\t\tconfirmDisabled={confirmDisabled}\n\t\t\t\tonConfirm={onConfirm}\n\t\t\t/>\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n\tDivider,\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tText,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { Folder } from '../../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../../constants';\nimport { apiClient } from '../../../network/api-client';\n\nexport type AddressBookDeleteModalProps = {\n\taddressBook: Folder;\n\tonClose: () => void;\n};\n\nexport const AddressBookDeleteModal = ({\n\taddressBook,\n\tonClose\n}: AddressBookDeleteModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\n\tconst modalTitle = useMemo(\n\t\t() =>\n\t\t\tt('folder.modal.delete.title', {\n\t\t\t\taddressBookName: addressBook.name,\n\t\t\t\tdefaultValue: 'Delete {{addressBookName}}'\n\t\t\t}),\n\t\t[addressBook.name, t]\n\t);\n\n\tconst confirmButtonLabel = useMemo(() => t('label.delete', 'Delete'), [t]);\n\n\tconst confirmationText = useMemo(\n\t\t() =>\n\t\t\tt(\n\t\t\t\t'folder.modal.delete.body.message2',\n\t\t\t\t'Do you want to delete permanently the selected address book? If you delete it, the related content will be permanently removed and the address book will no longer be recoverable.'\n\t\t\t),\n\t\t[t]\n\t);\n\n\tconst onConfirm = useCallback(() => {\n\t\tapiClient\n\t\t\t.deleteFolder(addressBook.id)\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `delete-folder-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t'folder.snackbar.address_book_permanently_deleted',\n\t\t\t\t\t\t'Address book permanently deleted'\n\t\t\t\t\t),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t\tonClose();\n\t\t\t})\n\t\t\t.catch(() =>\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `delete-folder-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t})\n\t\t\t);\n\t}, [addressBook.id, createSnackbar, onClose, t]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader title={modalTitle} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<ModalBody>\n\t\t\t\t<Text overflow=\"break-word\">{confirmationText}</Text>\n\t\t\t</ModalBody>\n\t\t\t<Divider />\n\t\t\t<ModalFooter onConfirm={onConfirm} confirmLabel={confirmButtonLabel} confirmColor={'error'} />\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { SelectItem } from '@zextras/carbonio-design-system';\nimport { TFunction } from 'i18next';\nimport { find } from 'lodash';\n\nconst ROLES = {\n\tnone: {\n\t\tname: 'None',\n\t\tkey: 'share.none',\n\t\tflags: '',\n\t\tregex: '^$'\n\t},\n\tviewer: {\n\t\tname: 'Viewer',\n\t\tkey: 'share.viewer',\n\t\tflags: 'r',\n\t\tregex: `^r$`\n\t},\n\tadmin: {\n\t\tname: 'Admin',\n\t\tkey: 'share.admin',\n\t\tflags: 'rwidxa',\n\t\tregex: `^rwidxa[c]?$`\n\t},\n\tmanager: {\n\t\tname: 'Manager',\n\t\tkey: 'share.manager',\n\t\tflags: 'rwidx',\n\t\tregex: `^rwidx[c]?$`\n\t}\n};\n\nexport const getShareFolderRoleOptions = (t: TFunction): Array<SelectItem> =>\n\tObject.values(ROLES).map((role) => ({\n\t\tlabel: t(role.key, role.name),\n\t\tvalue: role.flags\n\t}));\n\nexport const getRoleDescription = (permissionsFlags: string, t: TFunction): string => {\n\tlet role = find(ROLES, (role): boolean => permissionsFlags.match(role.regex) !== null);\n\tif (!role) {\n\t\trole = ROLES.none;\n\t}\n\n\treturn t(role.key, role.name);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n\tButton,\n\tChip,\n\tContainer,\n\tPadding,\n\tText,\n\tTooltip,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { useUserAccount } from '@zextras/carbonio-shell-ui';\nimport { map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { useFolder } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { Grant } from '../../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../../constants';\nimport { apiClient } from '../../../network/api-client';\nimport { getRoleDescription } from '../shares-utils';\n\ntype GranteeInfoProps = {\n\tgrant: Grant;\n};\n\ntype ActionProps = {\n\taddressBookId: string;\n\tgrant: Grant;\n\tonEdit: (grant: Grant) => void;\n\tonRevoke: (grant: Grant) => void;\n};\n\nexport type GranteeProps = {\n\tgrant: Grant;\n\taddressBookId: string;\n\tonEdit: (grant: Grant) => void;\n\tonRevoke: (grant: Grant) => void;\n};\n\nexport type ShareFolderPropertiesProps = {\n\taddressBookId: string;\n\tonEdit: (grant: Grant) => void;\n\tonRevoke: (grant: Grant) => void;\n};\n\nexport const GranteeInfo = ({ grant }: GranteeInfoProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst role = useMemo(() => getRoleDescription(grant.perm || '', t), [grant.perm, t]);\n\n\tconst label = useMemo(() => {\n\t\tconst composeLabel = (name?: string): string => `${name} - ${role}`;\n\t\treturn grant.d ? composeLabel(grant.d) : composeLabel(grant.zid);\n\t}, [grant, role]);\n\n\treturn (\n\t\t<Container crossAlignment=\"flex-start\">\n\t\t\t<Chip label={label} />\n\t\t</Container>\n\t);\n};\n\nconst Actions = ({ addressBookId, grant, onEdit, onRevoke }: ActionProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst account = useUserAccount();\n\tconst createSnackbar = useSnackbar();\n\n\tconst onRevokeClick = useCallback(() => {\n\t\tonRevoke(grant);\n\t}, [grant, onRevoke]);\n\n\tconst onResend = useCallback(() => {\n\t\tif (!grant.d) {\n\t\t\treturn;\n\t\t}\n\n\t\tapiClient\n\t\t\t.sendShareNotification({\n\t\t\t\taccountName: account.name,\n\t\t\t\tfolderId: addressBookId,\n\t\t\t\taddresses: [grant.d]\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `resend-${addressBookId}-share-notification-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t('snackbar.share_resend', 'Share invite resent'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `resend-${addressBookId}-share-notification-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t});\n\t}, [account, addressBookId, t, grant.d, createSnackbar]);\n\n\tconst onEditClick = useCallback(() => {\n\t\tonEdit(grant);\n\t}, [grant, onEdit]);\n\n\treturn (\n\t\t<Container orientation=\"horizontal\" mainAlignment=\"flex-end\" maxWidth=\"fit\">\n\t\t\t<Tooltip label={t('label.edit_access', 'Edit access')} placement=\"top\">\n\t\t\t\t<Button type=\"outlined\" label={t('label.edit')} onClick={onEditClick} size={'small'} />\n\t\t\t</Tooltip>\n\t\t\t<Padding horizontal=\"extrasmall\" />\n\t\t\t<Tooltip label={t('tooltip.revoke', 'Revoke access')} placement=\"top\">\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\tlabel={t('label.revoke', 'Revoke')}\n\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\tonClick={onRevokeClick}\n\t\t\t\t\tsize={'small'}\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t\t<Padding horizontal=\"extrasmall\" />\n\t\t\t<Tooltip\n\t\t\t\tlabel={t('tooltip.resend', 'Send e-mail notification about this share')}\n\t\t\t\tplacement=\"top\"\n\t\t\t\tmaxWidth=\"18.75rem\"\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"outlined\"\n\t\t\t\t\tlabel={t('label.resend', 'Resend')}\n\t\t\t\t\tonClick={onResend}\n\t\t\t\t\tsize={'small'}\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t</Container>\n\t);\n};\n\nconst Grantee = ({ grant, addressBookId, onEdit, onRevoke }: GranteeProps): React.JSX.Element => (\n\t<Container orientation=\"horizontal\" mainAlignment=\"flex-end\" padding={{ bottom: 'small' }}>\n\t\t<GranteeInfo grant={grant} />\n\t\t<Actions addressBookId={addressBookId} grant={grant} onEdit={onEdit} onRevoke={onRevoke} />\n\t</Container>\n);\n\nexport const ShareFolderProperties = ({\n\taddressBookId,\n\tonEdit,\n\tonRevoke\n}: ShareFolderPropertiesProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst addressBook = useFolder(addressBookId);\n\n\tconst grants = addressBook?.acl?.grant ?? [];\n\n\treturn (\n\t\t<Container mainAlignment=\"center\" crossAlignment=\"flex-start\" height=\"fit\">\n\t\t\t<Padding vertical=\"small\" />\n\t\t\t<Text weight=\"bold\">{t('label.shares_folder_edit', 'Sharing of this address book')}</Text>\n\t\t\t<Padding vertical=\"small\" />\n\t\t\t{map(grants, (grant) => (\n\t\t\t\t<Grantee\n\t\t\t\t\tkey={grant.zid}\n\t\t\t\t\tgrant={grant}\n\t\t\t\t\taddressBookId={addressBookId}\n\t\t\t\t\tonEdit={onEdit}\n\t\t\t\t\tonRevoke={onRevoke}\n\t\t\t\t/>\n\t\t\t))}\n\n\t\t\t<Padding bottom=\"medium\" />\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useState, useMemo, useCallback } from 'react';\n\nimport {\n\tContainer,\n\tInput,\n\tText,\n\tPadding,\n\tRow,\n\tDivider,\n\tuseSnackbar,\n\tModalHeader,\n\tModalFooter\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { ShareFolderProperties } from './share-folder-properties';\nimport {\n\tColorSelect,\n\tColorSelectProps\n} from '../../../carbonio-ui-commons/components/select/color-select';\nimport { isAdministerAllowed, isSystemFolder } from '../../../carbonio-ui-commons/helpers/folders';\nimport { useFolder } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { Grant } from '../../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../../constants';\nimport { apiClient } from '../../../network/api-client';\n\nexport type AddressBookEditGeneralModalProps = {\n\taddressBookId: string;\n\tonAddShare: () => void;\n\tonEditShare: (grant: Grant) => void;\n\tonRevokeShare: (grant: Grant) => void;\n\tonClose: () => void;\n};\n\nexport const AddressBookEditGeneralModal = ({\n\taddressBookId,\n\tonAddShare,\n\tonEditShare,\n\tonRevokeShare,\n\tonClose\n}: AddressBookEditGeneralModalProps): React.JSX.Element => {\n\tconst addressBook = useFolder(addressBookId);\n\tconst createSnackbar = useSnackbar();\n\tconst [t] = useTranslation();\n\tconst [addressBookName, setAddressBookName] = useState(addressBook?.name ?? '');\n\tconst [addressBookColor, setAddressBookColor] = useState(addressBook?.color ?? 0);\n\n\tconst modalTitle = useMemo(\n\t\t() =>\n\t\t\tt('label.edit_folder_properties', {\n\t\t\t\tname: addressBook?.name,\n\t\t\t\tdefaultValue: \"Edit {{name}}'s properties\"\n\t\t\t}),\n\t\t[addressBook?.name, t]\n\t);\n\n\tconst confirmButtonDisabled = useMemo(\n\t\t() => addressBook?.name === addressBookName && addressBook?.color === addressBookColor,\n\t\t[addressBook, addressBookName, addressBookColor]\n\t);\n\n\tconst addShareDisabled = useMemo(\n\t\t() => !addressBook || !isAdministerAllowed(addressBook),\n\t\t[addressBook]\n\t);\n\n\tconst close = useCallback(() => onClose(), [onClose]);\n\n\tconst onConfirm = useCallback(() => {\n\t\tapiClient\n\t\t\t.updateFolder({\n\t\t\t\tfolderId: addressBookId,\n\t\t\t\tname: addressBookName,\n\t\t\t\tcolor: addressBookColor\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `address-book-edit-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\thideButton: true,\n\t\t\t\t\tlabel: t('snackbar.folder_edited', 'Address book edited successfully'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t\t});\n\t\t\t\tclose();\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `address-book-edit-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thideButton: true,\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t\t});\n\t\t\t});\n\t}, [addressBookId, addressBookName, addressBookColor, createSnackbar, t, close]);\n\n\tconst onAddressBookInputChange = useCallback((e) => setAddressBookName(e.target.value), []);\n\n\tconst onColorChange = useCallback<ColorSelectProps['onChange']>(\n\t\t(color) => setAddressBookColor(Number(color)),\n\t\t[]\n\t);\n\n\tconst showShared = useMemo(\n\t\t() => addressBook?.acl?.grant && addressBook.acl?.grant.length > 0,\n\t\t[addressBook?.acl?.grant]\n\t);\n\n\tconst addressBookInputDisabled = useMemo(() => isSystemFolder(addressBookId), [addressBookId]);\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\tpadding={{ vertical: 'medium', horizontal: 'small' }}\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\theight=\"fit\"\n\t\t\t>\n\t\t\t\t<ModalHeader onClose={onClose} title={modalTitle} showCloseIcon />\n\t\t\t\t<Divider />\n\n\t\t\t\t<Container\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\tmainAlignment=\"center\"\n\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\tpadding={{ vertical: 'small' }}\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel={t('modal.address_book_name', 'Address book name')}\n\t\t\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\t\t\tvalue={addressBookName}\n\t\t\t\t\t\tonChange={onAddressBookInputChange}\n\t\t\t\t\t\tdisabled={addressBookInputDisabled}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t\t<Padding top=\"small\" />\n\t\t\t\t<ColorSelect\n\t\t\t\t\tonChange={onColorChange}\n\t\t\t\t\tlabel={t('label.select_color', 'Select Color')}\n\t\t\t\t\tdefaultColor={addressBookColor ?? 0}\n\t\t\t\t/>\n\t\t\t\t<Padding top=\"small\" />\n\t\t\t\t<Container orientation=\"horizontal\" mainAlignment=\"center\" crossAlignment=\"flex-start\">\n\t\t\t\t\t<Container\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\t\tpadding={{ top: 'small', bottom: 'small' }}\n\t\t\t\t\t\twidth=\"48%\"\n\t\t\t\t\t\tstyle={{ minHeight: '3rem', maxWidth: 'calc(100% - 3rem)' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text color=\"secondary\">{t('label.type', 'Type')}</Text>\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\tpadding={{ top: 'small' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t<Text size=\"medium\" overflow=\"break-word\">\n\t\t\t\t\t\t\t\t\t{t('folder.type', 'Contact Folder')}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Padding horizontal=\"small\" />\n\t\t\t\t\t<Container\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\t\t\tpadding={{ top: 'small', bottom: 'small' }}\n\t\t\t\t\t\twidth=\"48%\"\n\t\t\t\t\t\tstyle={{ minHeight: '3rem', maxWidth: 'calc(100% - 3rem)' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text color=\"secondary\">{t('label.contacts', 'Contacts')}</Text>\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\ttakeAvailableSpace\n\t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\tpadding={{ top: 'extrasmall' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t\t\t\t<Text size=\"medium\" overflow=\"break-word\">\n\t\t\t\t\t\t\t\t\t{addressBook?.n}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\n\t\t\t\t{showShared && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t<Padding vertical=\"small\" />\n\t\t\t\t\t\t<ShareFolderProperties\n\t\t\t\t\t\t\taddressBookId={addressBookId}\n\t\t\t\t\t\t\tonEdit={onEditShare}\n\t\t\t\t\t\t\tonRevoke={onRevokeShare}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t<Divider />\n\n\t\t\t\t<ModalFooter\n\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\tconfirmLabel={t('label.edit', 'Edit')}\n\t\t\t\t\tonSecondaryAction={onAddShare}\n\t\t\t\t\tsecondaryActionLabel={t('label.add_share', 'Add Share')}\n\t\t\t\t\tsecondaryActionDisabled={addShareDisabled}\n\t\t\t\t\tconfirmDisabled={confirmButtonDisabled}\n\t\t\t\t\tconfirmColor=\"primary\"\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n\tContainer,\n\tInput,\n\tSelect,\n\tText,\n\tCheckbox,\n\tRow,\n\tPadding,\n\tuseSnackbar,\n\tModalFooter,\n\tModalHeader,\n\tDivider\n} from '@zextras/carbonio-design-system';\nimport { useUserAccount } from '@zextras/carbonio-shell-ui';\nimport { replace, split } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { GranteeInfo } from './share-folder-properties';\nimport { useFolder } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { Grant } from '../../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../../constants';\nimport { ContactInput } from '../../../legacy/integrations/contact-input';\nimport { capitalise } from '../../../legacy/views/secondary-bar/utils';\nimport { apiClient } from '../../../network/api-client';\nimport { getRoleDescription, getShareFolderRoleOptions } from '../shares-utils';\n\nexport type ShareFolderModalProps = {\n\tonClose: () => void;\n\taddressBookId: string;\n\teditMode?: boolean;\n\tactiveGrant: Grant;\n};\n\nexport const ShareFolderModal = ({\n\tonClose,\n\taddressBookId,\n\teditMode = false,\n\tactiveGrant\n}: ShareFolderModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst shareFolderRoleOptions = useMemo(() => getShareFolderRoleOptions(t), [t]);\n\tconst [sendNotification, setSendNotification] = useState(true);\n\tconst [standardMessage, setStandardMessage] = useState('');\n\tconst [contacts, setContacts] = useState<Array<{ email: string }>>([]);\n\tconst [shareWithUserRole, setshareWithUserRole] = useState(editMode ? activeGrant.perm : 'r');\n\tconst userName = useMemo(() => replace(split(activeGrant?.d, '@')?.[0], '.', ' '), [activeGrant]);\n\tconst userNameCapitalise = useMemo(() => capitalise(userName), [userName]);\n\tconst account = useUserAccount();\n\tconst addressBook = useFolder(addressBookId);\n\tconst createSnackbar = useSnackbar();\n\n\tconst title = useMemo(\n\t\t() =>\n\t\t\teditMode\n\t\t\t\t? `${t('label.edit_access_name', {\n\t\t\t\t\t\tname: userNameCapitalise,\n\t\t\t\t\t\tdefaultValue: \"Edit {{name}}'s access\"\n\t\t\t\t\t})} `\n\t\t\t\t: `${t('label.share', 'Share')} ${addressBook?.name}`,\n\t\t[t, addressBook, editMode, userNameCapitalise]\n\t);\n\n\tconst onShareRoleChange = useCallback((shareRole) => {\n\t\tsetshareWithUserRole(shareRole);\n\t}, []);\n\n\tconst onConfirm = useCallback(() => {\n\t\tconst addresses = editMode ? [activeGrant?.d ?? ''] : contacts.map((contact) => contact.email);\n\t\tapiClient\n\t\t\t.shareFolder({\n\t\t\t\taddresses,\n\t\t\t\trole: shareWithUserRole,\n\t\t\t\tfolderId: addressBookId\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `share-${addressBookId}-address-book-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\thideButton: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: editMode\n\t\t\t\t\t\t? t('snackbar.share_updated', 'Access rights updated')\n\t\t\t\t\t\t: t('snackbar.folder_shared', 'Address book shared'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t\t});\n\n\t\t\t\tsendNotification &&\n\t\t\t\t\tapiClient.sendShareNotification({\n\t\t\t\t\t\taccountName: account.name,\n\t\t\t\t\t\tfolderId: addressBookId,\n\t\t\t\t\t\taddresses,\n\t\t\t\t\t\tmessage: standardMessage\n\t\t\t\t\t});\n\n\t\t\t\tonClose();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\t// const message = err ?? t('label.error_try_again', 'Something went wrong, please try again');\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `share-${addressBookId}-address-book-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\thideButton: true,\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t\t});\n\t\t\t});\n\t}, [\n\t\taccount.name,\n\t\tactiveGrant?.d,\n\t\taddressBookId,\n\t\tcontacts,\n\t\tcreateSnackbar,\n\t\teditMode,\n\t\tonClose,\n\t\tsendNotification,\n\t\tshareWithUserRole,\n\t\tstandardMessage,\n\t\tt\n\t]);\n\n\tconst disableEdit = useMemo(\n\t\t() => activeGrant?.perm === shareWithUserRole,\n\t\t[activeGrant?.perm, shareWithUserRole]\n\t);\n\n\tconst selectedRole = useMemo(() => {\n\t\tconst value = editMode ? activeGrant?.perm : 'r';\n\t\tconst label = getRoleDescription(editMode ? activeGrant?.perm : 'r', t);\n\t\treturn {\n\t\t\tvalue,\n\t\t\tlabel\n\t\t};\n\t}, [activeGrant?.perm, editMode, t]);\n\n\treturn (\n\t\t<Container\n\t\t\tpadding={{ all: 'medium' }}\n\t\t\tmainAlignment=\"center\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\theight=\"fit\"\n\t\t>\n\t\t\t<ModalHeader title={title} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<Padding top=\"small\" />\n\t\t\t{editMode ? (\n\t\t\t\t<Container\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\tmainAlignment=\"flex-end\"\n\t\t\t\t\tpadding={{ bottom: 'large', top: 'large' }}\n\t\t\t\t>\n\t\t\t\t\t<GranteeInfo grant={activeGrant} />\n\t\t\t\t</Container>\n\t\t\t) : (\n\t\t\t\t<Container height=\"fit\" padding={{ vertical: 'small' }}>\n\t\t\t\t\t<ContactInput\n\t\t\t\t\t\tplaceholder={t('share.recipients_address', 'Recipients’ e-mail addresses')}\n\t\t\t\t\t\tonChange={(ev) => {\n\t\t\t\t\t\t\tconst normalizedContacts = ev.reduce<Array<{ email: string }>>((result, contact) => {\n\t\t\t\t\t\t\t\tif (contact.email) {\n\t\t\t\t\t\t\t\t\tresult.push({ email: contact.email });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}, []);\n\t\t\t\t\t\t\tsetContacts(normalizedContacts);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultValue={contacts}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t)}\n\n\t\t\t<Container height=\"fit\">\n\t\t\t\t<Select\n\t\t\t\t\titems={shareFolderRoleOptions}\n\t\t\t\t\tbackground=\"gray5\"\n\t\t\t\t\tlabel={t('share.role', 'Role')}\n\t\t\t\t\tonChange={onShareRoleChange}\n\t\t\t\t\tdefaultSelection={selectedRole}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t\t<Container\n\t\t\t\theight=\"fit\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\tpadding={{ vertical: 'medium' }}\n\t\t\t>\n\t\t\t\t<Checkbox\n\t\t\t\t\tvalue={sendNotification}\n\t\t\t\t\tdefaultChecked={sendNotification}\n\t\t\t\t\tonClick={() => setSendNotification(!sendNotification)}\n\t\t\t\t\tlabel={t('share.send_notification', 'Send notification about this share')}\n\t\t\t\t/>\n\t\t\t</Container>\n\n\t\t\t<Container height=\"fit\">\n\t\t\t\t<Input\n\t\t\t\t\tlabel={t('share.standard_message', 'Add a note to standard message')}\n\t\t\t\t\tvalue={standardMessage}\n\t\t\t\t\tonChange={(ev) => {\n\t\t\t\t\t\tsetStandardMessage(ev.target.value);\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!sendNotification}\n\t\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t\t<Container\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tcrossAlignment=\"baseline\"\n\t\t\t\tmainAlignment=\"baseline\"\n\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t>\n\t\t\t\t<Row padding={{ right: 'small' }}>\n\t\t\t\t\t<Text weight=\"bold\" size=\"small\" color=\"gray0\">\n\t\t\t\t\t\tNote:\n\t\t\t\t\t</Text>\n\t\t\t\t</Row>\n\t\t\t\t<Row padding={{ bottom: 'small' }}>\n\t\t\t\t\t<Text overflow=\"break-word\" size=\"small\" color=\"gray1\">\n\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t'share.share_note',\n\t\t\t\t\t\t\t'The standard message displays your name, the name of the shared item, permissions granted to the recipients, and sign in information.'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Text>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t\t<Divider />\n\t\t\t<ModalFooter\n\t\t\t\tconfirmLabel={\n\t\t\t\t\teditMode\n\t\t\t\t\t\t? t('label.edit_access', 'Edit access')\n\t\t\t\t\t\t: t('action.share_folder', 'Share folder')\n\t\t\t\t}\n\t\t\t\tonConfirm={onConfirm}\n\t\t\t\tconfirmDisabled={editMode ? disableEdit : contacts.length < 1}\n\t\t\t\tonSecondaryAction={onClose}\n\t\t\t\tsecondaryActionLabel={t('folder.modal.footer.go_back', 'Go back')}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { reduce } from 'lodash';\n\nexport const normalizeFolder = (folder) => ({\n\tid: folder.id,\n\tuuid: folder.uuid,\n\tcolor: folder.color,\n\tname: folder.name,\n\tpath: folder.absFolderPath,\n\tparent: folder.l,\n\tparentUuid: folder.luuid,\n\titemsCount: folder.n || 0,\n\tsize: folder.s || 0,\n\tunreadCount: folder.u || 0,\n\tsynced: true,\n\trgb: folder.rgb,\n\towner: folder.owner,\n\trid: folder.rid,\n\tzid: folder.zid,\n\tacl: folder.acl\n});\n\nexport const extractFolders = (accordion, acc = {}) =>\n\treduce(\n\t\taccordion,\n\t\t(acc2, folder) => {\n\t\t\tif (folder.folder) {\n\t\t\t\treturn (folder.view === 'message' && folder.id !== '14') || folder.id === '3'\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...acc2,\n\t\t\t\t\t\t\t[folder.id]: normalizeFolder(folder),\n\t\t\t\t\t\t\t...extractFolders(folder.folder, acc2)\n\t\t\t\t\t\t}\n\t\t\t\t\t: { ...acc2, ...extractFolders(folder.folder, acc2) };\n\t\t\t}\n\t\t\treturn (folder.view === 'message' && folder.id !== '14') || folder.id === '3'\n\t\t\t\t? {\n\t\t\t\t\t\t...acc2,\n\t\t\t\t\t\t[folder.id]: normalizeFolder(folder)\n\t\t\t\t\t}\n\t\t\t\t: acc2;\n\t\t},\n\t\tacc\n\t);\n\nexport function capitalise(word) {\n\tconst asciiRef = word.charCodeAt(0);\n\tconst newAsciiRef = asciiRef - 32;\n\tconst newChar = String.fromCharCode(newAsciiRef);\n\treturn newChar + word.substr(1);\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useState } from 'react';\n\nimport {\n\tCheckbox,\n\tContainer,\n\tInput,\n\tModalFooter,\n\tModalHeader,\n\tRow,\n\tText,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { useUserAccount } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { GranteeInfo } from './share-folder-properties';\nimport { useFolder } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { Grant } from '../../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../../constants';\nimport { apiClient } from '../../../network/api-client';\n\nexport type ShareRevokeModalProps = {\n\taddressBookId: string;\n\tgrant: Grant;\n\tonClose: () => void;\n};\n\nexport const ShareRevokeModal = ({\n\taddressBookId,\n\tonClose,\n\tgrant\n}: ShareRevokeModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst [sendNotification, setSendNotification] = useState(false);\n\tconst [standardMessage, setStandardMessage] = useState('');\n\tconst createSnackbar = useSnackbar();\n\n\tconst account = useUserAccount();\n\tconst addressBook = useFolder(addressBookId);\n\n\tconst onConfirm = useCallback(() => {\n\t\tapiClient\n\t\t\t.revokeFolderGrant(addressBookId, grant.zid ?? '')\n\t\t\t.then(() => {\n\t\t\t\tsendNotification &&\n\t\t\t\t\tapiClient.sendShareNotification({\n\t\t\t\t\t\tmessage: standardMessage,\n\t\t\t\t\t\taddresses: [grant.d ?? ''],\n\t\t\t\t\t\tfolderId: addressBookId,\n\t\t\t\t\t\taccountName: account.name\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `remove-share-${addressBookId}-grant-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t('snackbar.share_revoke', 'Share access revoked'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t\tonClose();\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `remove-share-${addressBookId}-grant-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t});\n\t}, [\n\t\taccount.name,\n\t\taddressBookId,\n\t\tcreateSnackbar,\n\t\tgrant.d,\n\t\tgrant.zid,\n\t\tonClose,\n\t\tsendNotification,\n\t\tstandardMessage,\n\t\tt\n\t]);\n\n\t// TODO refactor DS to accept actions tooltip\n\t// const toolTip = useMemo(() => {\n\t// \tif (sendNotification && standardMessage.length > 0)\n\t// \t\treturn t('label.revoke_with_custom_msg', 'Revoke access sending a custom notification');\n\t// \tif (sendNotification)\n\t// \t\treturn t('label.revoke_with_standard_msg', 'Revoke access sending a standard notification');\n\t// \treturn t('label.revoke_without_notification', 'Revoke access without sending a notification');\n\t// }, [t, sendNotification, standardMessage]);\n\n\treturn (\n\t\t<Container\n\t\t\tpadding={{ all: 'small' }}\n\t\t\tmainAlignment=\"center\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\theight=\"fit\"\n\t\t>\n\t\t\t<ModalHeader\n\t\t\t\ttitle={t('label.revoke_share', {\n\t\t\t\t\ttitle: addressBook?.name,\n\t\t\t\t\tdefaultValue: \"Revoke {{title}}'s share\"\n\t\t\t\t})}\n\t\t\t\tonClose={onClose}\n\t\t\t\tshowCloseIcon\n\t\t\t/>\n\t\t\t<Container\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tmainAlignment=\"flex-end\"\n\t\t\t\tpadding={{ bottom: 'large', top: 'large' }}\n\t\t\t>\n\t\t\t\t<GranteeInfo grant={grant} />\n\t\t\t</Container>\n\t\t\t<Checkbox\n\t\t\t\ticonSize=\"medium\"\n\t\t\t\tvalue={sendNotification}\n\t\t\t\tdefaultChecked={sendNotification}\n\t\t\t\tonClick={() => setSendNotification(!sendNotification)}\n\t\t\t\tlabel={t('share.send_notification', 'Send notification about this share')}\n\t\t\t/>\n\t\t\t<Container\n\t\t\t\tmainAlignment=\"center\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\theight=\"fit\"\n\t\t\t\tpadding={{ bottom: 'large', top: 'large' }}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tlabel={t('share.standard_message', 'Add a note to standard message')}\n\t\t\t\t\tvalue={standardMessage}\n\t\t\t\t\tonChange={(ev) => {\n\t\t\t\t\t\tsetStandardMessage(ev.target.value);\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!sendNotification}\n\t\t\t\t\tbackgroundColor=\"gray5\"\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t\t<Container\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tcrossAlignment=\"baseline\"\n\t\t\t\tmainAlignment=\"baseline\"\n\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t>\n\t\t\t\t<Row padding={{ right: 'small' }}>\n\t\t\t\t\t<Text weight=\"bold\" size=\"small\" color=\"gray0\">\n\t\t\t\t\t\t{t('label.note', 'Note:')}\n\t\t\t\t\t</Text>\n\t\t\t\t</Row>\n\t\t\t\t<Row padding={{ bottom: 'small' }}>\n\t\t\t\t\t<Text overflow=\"break-word\" size=\"small\" color=\"gray1\">\n\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t'share.share_note',\n\t\t\t\t\t\t\t'The standard message displays your name, the name of the shared item, permissions granted to the recipients, and sign in information.'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Text>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t\t<Container mainAlignment=\"center\" crossAlignment=\"flex-start\" height=\"fit\">\n\t\t\t\t<ModalFooter\n\t\t\t\t\tconfirmColor={'error'}\n\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\tonSecondaryAction={onClose}\n\t\t\t\t\tsecondaryActionLabel={t('folder.modal.footer.go_back', 'Go back')}\n\t\t\t\t\tconfirmLabel={t('label.revoke', 'Revoke')}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useState } from 'react';\n\nimport { AddressBookEditGeneralModal } from './address-book-edit-general';\nimport { ShareFolderModal } from './share-folder-modal';\nimport { ShareRevokeModal } from './share-revoke-modal';\nimport { Grant } from '../../../carbonio-ui-commons/types/folder';\n\nexport type AddressBookEditModalProps = {\n\taddressBookId: string;\n\tonClose: () => void;\n};\n\nexport const AddressBookEditModal = ({\n\taddressBookId,\n\tonClose\n}: AddressBookEditModalProps): React.JSX.Element => {\n\tconst [activeSubModal, setActiveSubModal] = useState<React.JSX.Element | undefined>(undefined);\n\n\tconst onEditShare = useCallback(\n\t\t(grant: Grant) => {\n\t\t\tconst modal = (\n\t\t\t\t<ShareFolderModal\n\t\t\t\t\tactiveGrant={grant}\n\t\t\t\t\tonClose={() => setActiveSubModal(undefined)}\n\t\t\t\t\taddressBookId={addressBookId}\n\t\t\t\t\teditMode\n\t\t\t\t/>\n\t\t\t);\n\t\t\tsetActiveSubModal(modal);\n\t\t},\n\t\t[addressBookId]\n\t);\n\n\tconst onAddShare = useCallback((): void => {\n\t\tconst grant: Grant = {\n\t\t\tperm: 'r',\n\t\t\tgt: 'usr'\n\t\t};\n\t\tconst modal = (\n\t\t\t<ShareFolderModal\n\t\t\t\tonClose={() => setActiveSubModal(undefined)}\n\t\t\t\taddressBookId={addressBookId}\n\t\t\t\tactiveGrant={grant}\n\t\t\t/>\n\t\t);\n\t\tsetActiveSubModal(modal);\n\t}, [addressBookId]);\n\n\tconst onRevokeShare = useCallback(\n\t\t(grant) => {\n\t\t\tconst modal = (\n\t\t\t\t<ShareRevokeModal\n\t\t\t\t\taddressBookId={addressBookId}\n\t\t\t\t\tonClose={() => setActiveSubModal(undefined)}\n\t\t\t\t\tgrant={grant}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tsetActiveSubModal(modal);\n\t\t},\n\t\t[addressBookId]\n\t);\n\n\treturn (\n\t\tactiveSubModal ?? (\n\t\t\t<AddressBookEditGeneralModal\n\t\t\t\taddressBookId={addressBookId}\n\t\t\t\tonAddShare={onAddShare}\n\t\t\t\tonEditShare={onEditShare}\n\t\t\t\tonRevokeShare={onRevokeShare}\n\t\t\t\tonClose={onClose}\n\t\t\t/>\n\t\t)\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n\tDivider,\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tText,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { isTrash } from '../../../carbonio-ui-commons/helpers/folders';\nimport { Folder } from '../../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../../constants';\nimport { apiClient } from '../../../network/api-client';\n\nexport type AddressBookEmptyModalProps = {\n\taddressBook: Folder;\n\tonClose: () => void;\n};\n\nexport const AddressBookEmptyModal = ({\n\taddressBook,\n\tonClose\n}: AddressBookEmptyModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst isTrashFolder = useMemo(() => isTrash(addressBook.id), [addressBook.id]);\n\n\tconst modalTitle = useMemo(\n\t\t() =>\n\t\t\tt('folder.modal.empty.title', {\n\t\t\t\taddressBookName: addressBook.name,\n\t\t\t\tdefaultValue: 'Empty {{addressBookName}}'\n\t\t\t}),\n\t\t[addressBook.name, t]\n\t);\n\n\tconst confirmButtonLabel = useMemo(() => t('label.empty', 'Empty'), [t]);\n\n\tconst confirmationTextComponent = useMemo(\n\t\t() =>\n\t\t\tisTrashFolder ? (\n\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t{t('folder.modal.empty.message3', 'Do you want to empty the trash?')}\n\t\t\t\t\t<br />\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'folder.modal.empty.message4',\n\t\t\t\t\t\t`Its content will be permanently deleted and it won't be possible to recover it.`\n\t\t\t\t\t)}\n\t\t\t\t</Text>\n\t\t\t) : (\n\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t{t('folder.modal.empty.message1', 'Do you want to empty the selected address book?')}\n\t\t\t\t\t<br />\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'folder.modal.empty.message2',\n\t\t\t\t\t\t`All the related contacts will be permanently deleted and it won't be possible to recover them.`\n\t\t\t\t\t)}\n\t\t\t\t</Text>\n\t\t\t),\n\t\t[isTrashFolder, t]\n\t);\n\n\tconst onConfirm = useCallback(() => {\n\t\tconst successLabel = isTrashFolder\n\t\t\t? t('folder.snackbar.trash_empty', 'Trash folder emptied successfully')\n\t\t\t: t('folder.snackbar.folder_empty', 'Address book emptied successfully');\n\t\tapiClient\n\t\t\t.emptyFolder(addressBook.id)\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `Empty-folder-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: successLabel,\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t\tonClose();\n\t\t\t})\n\t\t\t.catch(() =>\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `empty-folder-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t})\n\t\t\t);\n\t}, [addressBook.id, createSnackbar, isTrashFolder, onClose, t]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader title={modalTitle} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<ModalBody>{confirmationTextComponent}</ModalBody>\n\t\t\t<Divider />\n\t\t\t<ModalFooter onConfirm={onConfirm} confirmLabel={confirmButtonLabel} confirmColor={'error'} />\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isLink, isTrash } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { ACTION_IDS, TIMEOUTS } from '../constants';\nimport { apiClient } from '../network/api-client';\n\nexport type ExportAddressBookAction = UIAction<Folder, Folder>;\n\nconst redirectToBlob = (content: string, fileName: string): void => {\n\tconst blob = new Blob([content], { type: 'application/csv' });\n\tconst url = window.URL.createObjectURL(blob);\n\tconst a = document.createElement('a');\n\ta.href = url;\n\ta.download = `${fileName}.csv`;\n\ta.click();\n\twindow.URL.revokeObjectURL(url);\n};\n\nexport const useActionExportAddressBook = (): ExportAddressBookAction => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\n\tconst canExecute = useCallback<ExportAddressBookAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isLink(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isTrash(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isNestedInTrash(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (addressBook.n === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<ExportAddressBookAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapiClient\n\t\t\t\t.exportContacts(addressBook.id)\n\t\t\t\t.then((content) => {\n\t\t\t\t\tredirectToBlob(content, addressBook.name);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: 'export-address-book-error',\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t[canExecute, createSnackbar, t]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.exportAddressBook,\n\t\t\tlabel: t('label.export_address_book', 'Export csv file'),\n\t\t\ticon: 'DownloadOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n\tContainer,\n\tDivider,\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tText,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { Folder } from '../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../constants';\nimport { apiClient } from '../../network/api-client';\n\nexport type ContactsImportModalProps = {\n\taddressBook: Folder;\n\tcloseCallback: () => void;\n\tfile: File;\n};\n\nexport const ContactsImportModal = ({\n\taddressBook,\n\tcloseCallback,\n\tfile\n}: ContactsImportModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\n\tconst title = useMemo(() => t('import_contacts.modal.title', 'Import contacts'), [t]);\n\n\tconst confirmLabel = useMemo(() => t('import_contacts.modal.confirm', 'Import'), [t]);\n\n\tconst onClose = useCallback(() => {\n\t\tcloseCallback();\n\t}, [closeCallback]);\n\n\tconst onUploadError = useCallback(\n\t\t(file: File): void => {\n\t\t\tcreateSnackbar({\n\t\t\t\tkey: `contacts-import-upload-error`,\n\t\t\t\treplace: true,\n\t\t\t\ttype: 'error',\n\t\t\t\tlabel: t('label.errors.upload_failed_generic', {\n\t\t\t\t\tfilename: file.name,\n\t\t\t\t\tdefaultValue: 'Upload failed for the file \"{{filename}}\"'\n\t\t\t\t}),\n\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t});\n\t\t},\n\t\t[createSnackbar, t]\n\t);\n\n\tconst onUploadComplete = useCallback(\n\t\t({ attachmentId, folderId }: { attachmentId: string; folderId: string }): void => {\n\t\t\tapiClient\n\t\t\t\t.importContacts({ aid: attachmentId, folderId })\n\t\t\t\t.then((response) => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: 'contacts-import-success',\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\tlabel: t('import_contacts.snackbar.import_contacts_success', {\n\t\t\t\t\t\t\tcount: response.contactsCount,\n\t\t\t\t\t\t\tdefaultValue: `{{count}} contacts imported and added to the selected address book`,\n\t\t\t\t\t\t\tdefaultValue_one: `{{count}} contact imported and added to the selected address book`\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t\t\t});\n\t\t\t\t\tonClose();\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: 'contacts-import-error',\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t[createSnackbar, onClose, t]\n\t);\n\n\tconst onConfirm = useCallback(() => {\n\t\tapiClient\n\t\t\t.upload(file)\n\t\t\t.then((response) => {\n\t\t\t\tconst fileInfo = response[0];\n\t\t\t\tonUploadComplete({ attachmentId: fileInfo.aid, folderId: addressBook.id });\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tonUploadError(file);\n\t\t\t});\n\t}, [addressBook.id, file, onUploadComplete, onUploadError]);\n\n\treturn (\n\t\t<Container\n\t\t\tpadding={{ all: 'large' }}\n\t\t\tmainAlignment=\"center\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\theight=\"fit\"\n\t\t>\n\t\t\t<ModalHeader title={title} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<ModalBody>\n\t\t\t\t<Text overflow=\"break-word\" size=\"medium\">\n\t\t\t\t\t{t('import_contacts.modal.description', {\n\t\t\t\t\t\tfileName: file.name,\n\t\t\t\t\t\tfolderName: addressBook.name,\n\t\t\t\t\t\tdefaultValue: `The contacts contained within the specified {{fileName}} file will be imported into \"{{folderName}}\" folder`\n\t\t\t\t\t})}\n\t\t\t\t</Text>\n\t\t\t</ModalBody>\n\t\t\t<Divider />\n\t\t\t<ModalFooter confirmLabel={confirmLabel} onConfirm={onConfirm} />\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n\tContainer,\n\tDivider,\n\tModalFooter,\n\tModalHeader,\n\tPadding\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { useFolder } from '../../carbonio-ui-commons/store/zustand/folder/hooks';\nimport { Folder } from '../../carbonio-ui-commons/types/folder';\nimport { FolderTreeSelector } from '../folder-tree-selector/folder-tree-selector';\n\nexport type AddressBookMoveModalProps = {\n\taddressBookId: string;\n\tonClose: () => void;\n\tonMove: (parentAddressBookId: string) => void;\n};\n\nexport const AddressBookMoveModal = ({\n\taddressBookId,\n\tonClose,\n\tonMove\n}: AddressBookMoveModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst addressBook = useFolder(addressBookId);\n\tconst [parentAddressBook, setParentAddressBook] = useState<Folder | undefined>();\n\n\tconst modalTitle = useMemo(\n\t\t() =>\n\t\t\tt('folder.modal.move.title', {\n\t\t\t\taddressBookName: addressBook?.name,\n\t\t\t\tdefaultValue: 'Move {{addressBookName}}'\n\t\t\t}),\n\t\t[addressBook?.name, t]\n\t);\n\tconst confirmLabel = useMemo(() => t('label.move', 'Move'), [t]);\n\n\tconst confirmDisabled = useMemo(() => parentAddressBook === undefined, [parentAddressBook]);\n\n\tconst onConfirm = useCallback(() => {\n\t\tparentAddressBook && onMove(parentAddressBook.id);\n\t}, [onMove, parentAddressBook]);\n\n\tconst onParentAddressBookSelected = useCallback((addressBook: Folder) => {\n\t\tsetParentAddressBook(addressBook);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader title={modalTitle} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<Padding vertical={'medium'}>\n\t\t\t\t<Container\n\t\t\t\t\tgap={'0.5rem'}\n\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\t\theight={'fit'}\n\t\t\t\t>\n\t\t\t\t\t<FolderTreeSelector\n\t\t\t\t\t\tonFolderSelected={onParentAddressBookSelected}\n\t\t\t\t\t\tshowSharedAccounts\n\t\t\t\t\t\tshowTrashFolder={false}\n\t\t\t\t\t\tshowLinkedFolders\n\t\t\t\t\t\texcludeIds={addressBook?.parent ? [addressBook?.parent] : []}\n\t\t\t\t\t\tallowRootSelection\n\t\t\t\t\t\tallowFolderCreation={false}\n\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\t\t</Padding>\n\t\t\t<Divider />\n\t\t\t<ModalFooter\n\t\t\t\tconfirmLabel={confirmLabel}\n\t\t\t\tconfirmDisabled={confirmDisabled}\n\t\t\t\tonConfirm={onConfirm}\n\t\t\t/>\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal, useSnackbar } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isLink, isSystemFolder, isWriteAllowed } from '../carbonio-ui-commons/helpers/folders';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { AddressBookMoveModal } from '../components/modals/address-book-move';\nimport { ACTION_IDS, TIMEOUTS } from '../constants';\nimport { apiClient } from '../network/api-client';\n\nexport type MoveAddressBookAction = UIAction<\n\t{ addressBook?: Folder; newParentAddressBook?: Folder },\n\t{ addressBook?: Folder; newParentAddressBook?: Folder }\n>;\n\nexport const useActionMoveAddressBook = (): MoveAddressBookAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\tconst createSnackbar = useSnackbar();\n\n\tconst move = useCallback(\n\t\t(addressBookId: string, parentAddressBookId: string) =>\n\t\t\tapiClient\n\t\t\t\t.moveFolder(addressBookId, parentAddressBookId)\n\t\t\t\t.then(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `move-address-book-success`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tlabel: t('folder.action.moved', 'Address book moved successfully'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `move-address-book-error`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t\treturn false;\n\t\t\t\t}),\n\t\t[createSnackbar, t]\n\t);\n\n\tconst canExecute = useCallback<MoveAddressBookAction['canExecute']>(\n\t\t({ addressBook, newParentAddressBook } = {}): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isSystemFolder(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isWriteAllowed(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (newParentAddressBook && !isWriteAllowed(newParentAddressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (newParentAddressBook?.id === addressBook.l) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isLink(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<MoveAddressBookAction['execute']>(\n\t\t({ addressBook, newParentAddressBook } = {}) => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!canExecute({ addressBook, newParentAddressBook })) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newParentAddressBook) {\n\t\t\t\tmove(addressBook.id, newParentAddressBook.id);\n\t\t\t} else {\n\t\t\t\tconst closeModal = createModal(\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t<AddressBookMoveModal\n\t\t\t\t\t\t\t\taddressBookId={addressBook.id}\n\t\t\t\t\t\t\t\tonMove={(parentAddressBookId) => {\n\t\t\t\t\t\t\t\t\tmove(addressBook.id, parentAddressBookId).then(\n\t\t\t\t\t\t\t\t\t\t(success) => success && closeModal()\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => closeModal()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t[canExecute, createModal, move]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.moveAddressBook,\n\t\t\tlabel: t('folder.action.move', 'Move'),\n\t\t\ticon: 'MoveOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport {\n\tContainer,\n\tDivider,\n\tIcon,\n\tModalBody,\n\tModalHeader,\n\tRow,\n\tText\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { getRoleDescription, getShareFolderRoleOptions } from './shares-utils';\nimport { Folder } from '../../carbonio-ui-commons/types/folder';\n\nconst ShareInfoRow = ({\n\ticon,\n\tlabel,\n\ttext\n}: {\n\ticon: string;\n\tlabel: string;\n\ttext: string;\n}): React.JSX.Element => (\n\t<Row\n\t\twidth=\"fill\"\n\t\tmainAlignment=\"flex-start\"\n\t\tcrossAlignment=\"flex-start\"\n\t\tpadding={{ top: 'small' }}\n\t>\n\t\t<Row>\n\t\t\t<Icon icon={icon} />\n\t\t\t<Row padding={{ right: 'small', left: 'small' }}>\n\t\t\t\t<Text weight=\"bold\">{`${label} :`}</Text>\n\t\t\t</Row>\n\t\t</Row>\n\t\t<Row takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t<Text overflow=\"break-word\">{text}</Text>\n\t\t</Row>\n\t</Row>\n);\n\nexport type ShareInfoModalProps = {\n\tonClose: () => void;\n\taddressBook: Folder;\n};\n\nexport const ShareInfoModal = ({\n\tonClose,\n\taddressBook\n}: ShareInfoModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst roleOptions = useMemo(() => getShareFolderRoleOptions(t), [t]);\n\n\tconst role = useMemo(() => getRoleDescription(addressBook.perm ?? '', t), [addressBook.perm, t]);\n\tconst text = (/r/.test(addressBook.perm || '') ? `${t('share.read', 'Read')}` : '')\n\t\t.concat(/w/.test(addressBook.perm || '') ? `, ${t('share.write', 'Write')}` : '')\n\t\t.concat(/i/.test(addressBook.perm || '') ? `, ${t('share.insert', 'Insert')}` : '')\n\t\t.concat(/d/.test(addressBook.perm || '') ? `, ${t('label.delete', 'Delete')}` : '')\n\t\t.concat(/a/.test(addressBook.perm || '') ? `, ${t('share.administer', 'Administer')}` : '')\n\t\t.concat(/c/.test(addressBook.perm || '') ? `, ${t('label.create', 'Create')}` : '')\n\t\t.concat(/x/.test(addressBook.perm || '') ? `, ${t('share.workflow', 'Workflow')}` : '');\n\treturn (\n\t\t<Container\n\t\t\tpadding={'small'}\n\t\t\tmainAlignment=\"center\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\theight=\"fit\"\n\t\t\tonClick={(e) => {\n\t\t\t\tif (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<ModalHeader\n\t\t\t\ttitle={`${t('share.share_info', \"Shared address book's info\")} `}\n\t\t\t\tonClose={onClose}\n\t\t\t\tshowCloseIcon\n\t\t\t/>\n\t\t\t<Divider />\n\t\t\t<ModalBody>\n\t\t\t\t<ShareInfoRow\n\t\t\t\t\ticon=\"InfoOutline\"\n\t\t\t\t\tlabel={`${t('share.shared_item', 'Shared Item')}`}\n\t\t\t\t\ttext={addressBook.name}\n\t\t\t\t/>\n\t\t\t\t<ShareInfoRow\n\t\t\t\t\ticon=\"ContactsModOutline\"\n\t\t\t\t\tlabel={`${t('label.type', 'Type')}`}\n\t\t\t\t\ttext={t('share.contact_folder', 'Address Book')}\n\t\t\t\t/>\n\t\t\t\t<ShareInfoRow icon=\"ShieldOutline\" label={`${t('share.role', 'Role')}`} text={role} />\n\t\t\t\t<ShareInfoRow\n\t\t\t\t\ticon=\"PeopleOutline\"\n\t\t\t\t\tlabel={`${t('label.contacts', 'Contacts')}`}\n\t\t\t\t\ttext={`${addressBook.n}`}\n\t\t\t\t/>\n\t\t\t\t<ShareInfoRow\n\t\t\t\t\ticon=\"UnlockOutline\"\n\t\t\t\t\tlabel={`${t('share.allowed_actions', 'Allowed actions')}`}\n\t\t\t\t\ttext={text}\n\t\t\t\t/>\n\t\t\t</ModalBody>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n\tDivider,\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tText,\n\tuseSnackbar\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { Folder } from '../../../carbonio-ui-commons/types/folder';\nimport { TIMEOUTS } from '../../../constants';\nimport { apiClient } from '../../../network/api-client';\n\nexport type AddressBookTrashModalProps = {\n\taddressBook: Folder;\n\tonClose: () => void;\n};\n\nexport const AddressBookTrashModal = ({\n\taddressBook,\n\tonClose\n}: AddressBookTrashModalProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\n\tconst modalTitle = useMemo(\n\t\t() =>\n\t\t\tt('folder.modal.delete.title', {\n\t\t\t\taddressBookName: addressBook.name,\n\t\t\t\tdefaultValue: 'Delete {{addressBookName}}'\n\t\t\t}),\n\t\t[addressBook.name, t]\n\t);\n\n\tconst confirmButtonLabel = useMemo(() => t('label.delete', 'Delete'), [t]);\n\n\tconst confirmationText = useMemo(\n\t\t() =>\n\t\t\tt(\n\t\t\t\t'folder.modal.delete.body.message1',\n\t\t\t\t'Do you want to delete the selected address book? If you delete it, the related content will be permanently removed and the address book will no longer be recoverable.'\n\t\t\t),\n\t\t[t]\n\t);\n\n\tconst onRestore = useCallback(() => {\n\t\tif (!addressBook.l) {\n\t\t\treturn;\n\t\t}\n\n\t\tapiClient\n\t\t\t.moveFolder(addressBook.id, addressBook.l)\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `restore-folder-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tlabel: t('label.address_book_restored', 'Address book restored'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `restore-folder-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t});\n\t}, [addressBook.id, addressBook.l, createSnackbar, t]);\n\n\tconst onConfirm = useCallback(() => {\n\t\tapiClient\n\t\t\t.trashFolder(addressBook.id)\n\t\t\t.then(() => {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `delete-folder-success`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t('folder.snackbar.address_book_moved_to_trash', 'Address book moved to trash'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.trashAddressBook,\n\t\t\t\t\thideButton: false,\n\t\t\t\t\tactionLabel: t('label.undo', 'Undo'),\n\t\t\t\t\tonActionClick: onRestore\n\t\t\t\t});\n\t\t\t\tonClose();\n\t\t\t})\n\t\t\t.catch(() =>\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `delete-folder-error`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\thideButton: true\n\t\t\t\t})\n\t\t\t);\n\t}, [addressBook.id, createSnackbar, onClose, onRestore, t]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalHeader title={modalTitle} onClose={onClose} showCloseIcon />\n\t\t\t<Divider />\n\t\t\t<ModalBody>\n\t\t\t\t<Text overflow=\"break-word\">{confirmationText}</Text>\n\t\t\t</ModalBody>\n\t\t\t<Divider />\n\t\t\t<ModalFooter onConfirm={onConfirm} confirmLabel={confirmButtonLabel} confirmColor={'error'} />\n\t\t</>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useMemo } from 'react';\n\nimport { Action } from '@zextras/carbonio-design-system';\n\nimport { useActionCreateAddressBook } from '../../../../actions/create-address-book';\nimport { useActionDeleteAddressBook } from '../../../../actions/delete-address-book';\nimport { useActionEditAddressBook } from '../../../../actions/edit-address-book';\nimport { useActionEmptyAddressBook } from '../../../../actions/empty-address-book';\nimport { useActionEmptyTrash } from '../../../../actions/empty-trash';\nimport { useActionExportAddressBook } from '../../../../actions/export-address-book';\nimport { useActionImportContacts } from '../../../../actions/import-contacts';\nimport { useActionMoveAddressBook } from '../../../../actions/move-address-book';\nimport { useActionRemoveAddressBookLink } from '../../../../actions/remove-address-book-link';\nimport { useActionShowShareInfo } from '../../../../actions/show-share-info';\nimport { useActionTrashAddressBook } from '../../../../actions/trash-address-book';\nimport { UIAction } from '../../../../actions/types';\nimport { Folder } from '../../../../carbonio-ui-commons/types/folder';\n\nconst generateMenuAction = <T extends UIAction<EP, never>, EP>(\n\tuiAction: T,\n\texecutionParams: EP\n): Action =>\n\t({\n\t\tid: uiAction.id,\n\t\ticon: uiAction.icon,\n\t\tlabel: uiAction.label,\n\t\tonClick: (e): void => {\n\t\t\te.stopPropagation();\n\t\t\tuiAction.execute(executionParams);\n\t\t}\n\t}) satisfies Action;\n\nexport const useAddressBookContextualMenuItems = (addressBook: Folder): Array<Action> => {\n\tconst createAction = useActionCreateAddressBook();\n\tconst moveAction = useActionMoveAddressBook();\n\tconst editAction = useActionEditAddressBook();\n\tconst deleteAction = useActionDeleteAddressBook();\n\tconst trashAction = useActionTrashAddressBook();\n\tconst emptyAddressBookAction = useActionEmptyAddressBook();\n\tconst emptyTrashAction = useActionEmptyTrash();\n\tconst exportAction = useActionExportAddressBook();\n\tconst importAction = useActionImportContacts();\n\tconst shareInfoAction = useActionShowShareInfo();\n\tconst removeLinkAction = useActionRemoveAddressBookLink();\n\n\treturn useMemo(() => {\n\t\tconst result: Array<Action> = [];\n\n\t\tcreateAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(createAction, addressBook));\n\t\tmoveAction.canExecute({ addressBook }) &&\n\t\t\tresult.push(generateMenuAction(moveAction, { addressBook }));\n\t\temptyAddressBookAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(emptyAddressBookAction, addressBook));\n\t\temptyTrashAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(emptyTrashAction, addressBook));\n\t\teditAction.canExecute(addressBook) && result.push(generateMenuAction(editAction, addressBook));\n\t\tdeleteAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(deleteAction, addressBook));\n\t\ttrashAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(trashAction, addressBook));\n\t\texportAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(exportAction, addressBook));\n\t\timportAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(importAction, addressBook));\n\t\tshareInfoAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(shareInfoAction, addressBook));\n\t\tremoveLinkAction.canExecute(addressBook) &&\n\t\t\tresult.push(generateMenuAction(removeLinkAction, addressBook));\n\n\t\treturn result;\n\t}, [\n\t\taddressBook,\n\t\tcreateAction,\n\t\tdeleteAction,\n\t\teditAction,\n\t\temptyAddressBookAction,\n\t\temptyTrashAction,\n\t\texportAction,\n\t\timportAction,\n\t\tmoveAction,\n\t\tremoveLinkAction,\n\t\tshareInfoAction,\n\t\ttrashAction\n\t]);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isCreateAllowed, isTrash } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { AddressBookCreateModal } from '../components/modals/address-book-create';\nimport { ACTION_IDS } from '../constants';\n\nexport type CreateAddressBookAction = UIAction<Folder | undefined, Folder | undefined>;\n\nexport const useActionCreateAddressBook = (): CreateAddressBookAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<CreateAddressBookAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (isNestedInTrash(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isTrash(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isCreateAllowed(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<CreateAddressBookAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<AddressBookCreateModal\n\t\t\t\t\t\t\tdefaultParentId={addressBook?.id}\n\t\t\t\t\t\t\tonClose={() => closeModal()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[canExecute, createModal]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.createAddressBook,\n\t\t\tlabel: t('label.new_address_book', 'New address book'),\n\t\t\ticon: 'AddressBookOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isTrash } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { AddressBookEditModal } from '../components/modals/address-book-edit/address-book-edit';\nimport { ACTION_IDS } from '../constants';\nimport { StoreProvider } from '../legacy/store/redux';\n\nexport type EditAddressBookAction = UIAction<Folder, Folder>;\n\nexport const useActionEditAddressBook = (): EditAddressBookAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<EditAddressBookAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isNestedInTrash(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isTrash(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<EditAddressBookAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<AddressBookEditModal addressBookId={addressBook.id} onClose={() => closeModal()} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[canExecute, createModal]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.editAddressBook,\n\t\t\tlabel: t('folder.action.edit', 'Edit address book'),\n\t\t\ticon: 'Edit2Outline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isDeleteAllowed, isSystemFolder } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { AddressBookDeleteModal } from '../components/modals/address-book-delete/address-book-delete';\nimport { ACTION_IDS } from '../constants';\nimport { StoreProvider } from '../legacy/store/redux';\n\nexport type DeleteAddressBookAction = UIAction<Folder, Folder>;\n\nexport const useActionDeleteAddressBook = (): DeleteAddressBookAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<DeleteAddressBookAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isSystemFolder(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isDeleteAllowed(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isNestedInTrash(addressBook);\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<DeleteAddressBookAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<AddressBookDeleteModal addressBook={addressBook} onClose={() => closeModal()} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[canExecute, createModal]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.deleteAddressBook,\n\t\t\tlabel: t('folder.action.delete_permanently', 'Delete address book permanently'),\n\t\t\ticon: 'Trash2Outline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isLink, isSystemFolder } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { AddressBookTrashModal } from '../components/modals/address-book-trash/address-book-trash';\nimport { ACTION_IDS } from '../constants';\nimport { StoreProvider } from '../legacy/store/redux';\n\nexport type TrashAddressBookAction = UIAction<Folder, Folder>;\n\nexport const useActionTrashAddressBook = (): TrashAddressBookAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst execute = useCallback<TrashAddressBookAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<AddressBookTrashModal addressBook={addressBook} onClose={() => closeModal()} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[createModal]\n\t);\n\n\tconst canExecute = useCallback<TrashAddressBookAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isSystemFolder(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isLink(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !isNestedInTrash(addressBook);\n\t\t},\n\t\t[]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.trashAddressBook,\n\t\t\tlabel: t('folder.action.delete', 'Delete address book'),\n\t\t\ticon: 'Trash2Outline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isLink, isTrash } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { AddressBookEmptyModal } from '../components/modals/address-book-empty/address-book-empty';\nimport { ACTION_IDS } from '../constants';\nimport { StoreProvider } from '../legacy/store/redux';\n\nexport type EmptyAddressBookAction = UIAction<Folder, Folder>;\n\nexport const useActionEmptyAddressBook = (): EmptyAddressBookAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<EmptyAddressBookAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isNestedInTrash(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isTrash(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isLink(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (addressBook.n === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<EmptyAddressBookAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<AddressBookEmptyModal addressBook={addressBook} onClose={() => closeModal()} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[canExecute, createModal]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.emptyAddressBook,\n\t\t\tlabel: t('folder.action.empty.folder', 'Empty address book'),\n\t\t\ticon: 'EmptyFolderOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isLink, isTrash } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { AddressBookEmptyModal } from '../components/modals/address-book-empty/address-book-empty';\nimport { ACTION_IDS } from '../constants';\nimport { StoreProvider } from '../legacy/store/redux';\n\nexport type EmptyTrashAction = UIAction<Folder, Folder>;\n\nexport const useActionEmptyTrash = (): EmptyTrashAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<EmptyTrashAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isNestedInTrash(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isLink(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isTrash(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (addressBook.n === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<EmptyTrashAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<AddressBookEmptyModal addressBook={addressBook} onClose={() => closeModal()} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[canExecute, createModal]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.emptyTrash,\n\t\t\tlabel: t('folder.action.empty.trash', 'Empty trash'),\n\t\t\ticon: 'DeletePermanentlyOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isLink, isTrash } from '../carbonio-ui-commons/helpers/folders';\nimport { isNestedInTrash } from '../carbonio-ui-commons/store/zustand/folder/utils';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { ContactsImportModal } from '../components/modals/contacts-import-modal';\nimport { ACTION_IDS } from '../constants';\nimport { StoreProvider } from '../legacy/store/redux';\n\nexport type ImportContactsAction = UIAction<Folder, Folder>;\n\nconst parse = (str: string): Array<Array<{ aid: string }>> =>\n\t// eslint-disable-next-line no-new-func\n\tFunction(`'use strict'; return (${str})`)();\n\nexport const requestFileSelection = (): Promise<File> =>\n\tnew Promise((resolve, reject) => {\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.multiple = false;\n\t\tinput.hidden = false;\n\t\tinput.accept = '.csv, text/csv';\n\t\tinput.click();\n\t\tinput.onchange = (): void =>\n\t\t\tinput.files && input.files.length > 0 ? resolve(input.files[0]) : reject();\n\t\tinput.oncancel = (): void => reject();\n\t});\n\nexport const useActionImportContacts = (): ImportContactsAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<ImportContactsAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isLink(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isTrash(addressBook.id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (isNestedInTrash(addressBook)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<ImportContactsAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trequestFileSelection().then((file): void => {\n\t\t\t\tconst closeModal = createModal(\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t\t<ContactsImportModal\n\t\t\t\t\t\t\t\t\taddressBook={addressBook}\n\t\t\t\t\t\t\t\t\tfile={file}\n\t\t\t\t\t\t\t\t\tcloseCallback={() => closeModal()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t\t[canExecute, createModal]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.importContacts,\n\t\t\tlabel: t('label.import_address_book', 'Import csv file'),\n\t\t\ticon: 'UploadOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isLink } from '../carbonio-ui-commons/helpers/folders';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { ShareInfoModal } from '../components/modals/share-info-modal';\nimport { ACTION_IDS } from '../constants';\nimport { StoreProvider } from '../legacy/store/redux';\n\nexport type ShowShareInfoAction = UIAction<Folder, Folder>;\n\nexport const useActionShowShareInfo = (): ShowShareInfoAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<ShowShareInfoAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isLink(addressBook);\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<ShowShareInfoAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tmaxHeight: '90vh',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t\t<ShareInfoModal addressBook={addressBook} onClose={() => closeModal()} />\n\t\t\t\t\t\t</StoreProvider>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[canExecute, createModal]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.showShareInfo,\n\t\t\tlabel: t('share.share_info', \"Shared address book's info\"),\n\t\t\ticon: 'InfoOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { ShowShareInfoAction } from './show-share-info';\nimport { UIAction } from './types';\nimport { isLink } from '../carbonio-ui-commons/helpers/folders';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { ACTION_IDS, TIMEOUTS } from '../constants';\nimport { apiClient } from '../network/api-client';\n\nexport type RemoveAddressBookLinkAction = UIAction<Folder, Folder>;\n\nexport const useActionRemoveAddressBookLink = (): RemoveAddressBookLinkAction => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\n\tconst canExecute = useCallback<ShowShareInfoAction['canExecute']>(\n\t\t(addressBook?: Folder): boolean => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isLink(addressBook);\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<RemoveAddressBookLinkAction['execute']>(\n\t\t(addressBook) => {\n\t\t\tif (!addressBook) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!canExecute(addressBook)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapiClient\n\t\t\t\t.deleteFolder(addressBook.id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `remove-address-book-link-success`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\tlabel: t('share.share_removed_succesfully', 'Shared removed successfully'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `remove-address-book-link-error`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t[canExecute, createSnackbar, t]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.removeAddressBookLink,\n\t\t\tlabel: t('share.remove_from_this_list', 'Remove from this list'),\n\t\t\ticon: 'CloseOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useMemo } from 'react';\n\nimport { ContainerProps } from '@mui/material';\nimport {\n\tAccordionItem,\n\tAvatar,\n\tContainer,\n\tDrag,\n\tDragObj,\n\tDrop,\n\tDropdown,\n\tIcon,\n\tPadding,\n\tRow,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport { AppLink, FOLDERS, ROOT_NAME, useUserAccount } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { useAddressBookContextualMenuItems } from './commons/use-address-book-contextual-menu-items';\nimport { useActionMoveAddressBook } from '../../../actions/move-address-book';\nimport { useActionMoveContacts } from '../../../actions/move-contacts';\nimport { isLink, isRoot } from '../../../carbonio-ui-commons/helpers/folders';\nimport { Folder } from '../../../carbonio-ui-commons/types/folder';\nimport { DragEnterAction, OnDropActionProps } from '../../../carbonio-ui-commons/types/sidebar';\nimport { getFolderIconColor, getFolderIconName } from '../../../helpers/folders';\nimport { Contact } from '../../types/contact';\nimport { getFolderTranslatedName } from '../../utils/helpers';\nimport { FOREGROUND_COLOR } from '../../../sruvi/Colors';\n\nconst FittedRow = styled(Row)`\n\tmax-width: calc(100% - (2 * ${({ theme }): string => theme.sizes.padding.small}));\n\theight: 3rem;\n`;\n\nconst DropOverlayContainer = styled(Container)<ContainerProps & { folder: Folder }>`\n\tposition: absolute;\n\twidth: calc(15.5rem - ${(props): number => props.folder.depth - 2}rem);\n\theight: 100%;\n\tbackground: FOREGROUND_COLOR;\n\tborder-radius: 0.25rem;\n\tborder: 0.25rem solid #d5e3f6;\n\topacity: 0.4;\n`;\n\nconst DropDenyOverlayContainer = styled(Container)<ContainerProps & { folder: Folder }>`\n\tposition: absolute;\n\twidth: calc(15.5rem - ${(props): number => props.folder.depth - 2}rem);\n\theight: 100%;\n\tbackground: ${(props): string => props.theme.palette.gray1.regular};\n\tborder-radius: 0.25rem;\n\tborder: 0.25rem solid #d5e3f6;\n\topacity: 0.4;\n`;\n\nexport const AccordionCustomComponent: FC<{ item: Folder }> = ({ item: folder }) => {\n\tconst [t] = useTranslation();\n\tconst accountName = useUserAccount().name;\n\tconst moveContactAction = useActionMoveContacts();\n\tconst moveAddressBookAction = useActionMoveAddressBook();\n\n\tconst onDragEnterAction = useCallback(\n\t\t(dragInfo: OnDropActionProps<Contact | Folder | unknown>): DragEnterAction => {\n\t\t\tif (dragInfo.type === 'contact') {\n\t\t\t\tconst actionAllowed = moveContactAction.canExecute({\n\t\t\t\t\tcontacts: [dragInfo.data as Contact],\n\t\t\t\t\tnewParentAddressBook: folder\n\t\t\t\t});\n\t\t\t\tif (actionAllowed) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dragInfo.type === 'folder') {\n\t\t\t\tconst actionAllowed = moveAddressBookAction.canExecute({\n\t\t\t\t\taddressBook: dragInfo.data as Folder,\n\t\t\t\t\tnewParentAddressBook: folder\n\t\t\t\t});\n\t\t\t\tif (actionAllowed) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { success: false };\n\t\t},\n\t\t[folder, moveAddressBookAction, moveContactAction]\n\t);\n\n\tconst onDropAction = (dragInfo: OnDropActionProps<Contact | Folder | unknown>): void => {\n\t\tconst dragEnterResponse = onDragEnterAction(dragInfo);\n\t\tif (dragEnterResponse?.success === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (dragInfo.type === 'contact') {\n\t\t\tmoveContactAction.execute({\n\t\t\t\tcontacts: [dragInfo.data as Contact],\n\t\t\t\tnewParentAddressBook: folder\n\t\t\t});\n\t\t}\n\n\t\tif (dragInfo.type === 'folder') {\n\t\t\tmoveAddressBookAction.execute({\n\t\t\t\taddressBook: dragInfo.data as Folder,\n\t\t\t\tnewParentAddressBook: folder\n\t\t\t});\n\t\t}\n\t};\n\n\tconst dragFolderDisable = useMemo(() => false, []);\n\n\tconst textProps: { size: 'small' } = useMemo(\n\t\t() => ({\n\t\t\tsize: 'small'\n\t\t}),\n\t\t[]\n\t);\n\tconst accordionItem = useMemo(\n\t\t() => ({\n\t\t\t...folder,\n\t\t\tlabel:\n\t\t\t\tfolder.id === FOLDERS.USER_ROOT\n\t\t\t\t\t? accountName\n\t\t\t\t\t: getFolderTranslatedName(t, folder.id, folder.name) ?? '',\n\t\t\ticon: getFolderIconName(folder) ?? undefined,\n\t\t\ticonColor: getFolderIconColor(folder) ?? '',\n\t\t\tto: `/folder/${folder.id}`,\n\t\t\ttextProps\n\t\t}),\n\t\t[folder, accountName, t, textProps]\n\t);\n\n\tconst dropdownItems = useAddressBookContextualMenuItems(folder);\n\n\tconst statusIcon = useMemo(() => {\n\t\tconst RowWithIcon = (icon: string, color: string, tooltipText: string): React.JSX.Element => (\n\t\t\t<Padding left=\"small\">\n\t\t\t\t<Tooltip placement=\"right\" label={tooltipText}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Icon icon={icon} color={color} size=\"medium\" />\n\t\t\t\t\t</Row>\n\t\t\t\t</Tooltip>\n\t\t\t</Padding>\n\t\t);\n\n\t\tif (isLink(folder)) {\n\t\t\tconst tooltipText = t('tooltip.folder_linked_status', 'Linked to me');\n\t\t\treturn RowWithIcon('Linked', 'linked', tooltipText);\n\t\t}\n\t\tif (folder.acl?.grant) {\n\t\t\tconst tooltipText = t('tooltip.folder_sharing_status', {\n\t\t\t\tcount: folder.acl.grant.length,\n\t\t\t\tdefaultValue_one: 'Shared with {{count}} person',\n\t\t\t\tdefaultValue: 'Shared with {{count}} people'\n\t\t\t});\n\t\t\treturn RowWithIcon('Shared', 'shared', tooltipText);\n\t\t}\n\t\treturn '';\n\t}, [folder, t]);\n\n\t// hide folders where a share was provided and subsequently removed\n\tif (folder.isLink && folder.broken) {\n\t\treturn null;\n\t}\n\n\treturn isRoot(folder.id) || (folder.isLink && folder.oname === ROOT_NAME) ? (\n\t\t// <FittedRow>\n\t\t// \t<Padding left=\"small\">\n\t\t// \t\t<Avatar label={accordionItem.label} colorLabel={accordionItem.iconColor} size=\"medium\" />\n\t\t// \t</Padding>\n\t\t// \t<Tooltip label={accordionItem.label} placement=\"right\" maxWidth=\"100%\">\n\t\t// \t\t<AccordionItem data-testid={`accordion-folder-item-${folder.id}`} item={accordionItem} />\n\t\t// \t</Tooltip>\n\t\t// </FittedRow>\n\t\t<></>\n\t) : (\n\t\t<Row width=\"fill\" minWidth={0}>\n\t\t\t<Drop\n\t\t\t\tacceptType={['contact', 'folder']}\n\t\t\t\tonDrop={(data: DragObj): void => {\n\t\t\t\t\tonDropAction({\n\t\t\t\t\t\ttype: data.type ?? '',\n\t\t\t\t\t\tdata: data.data,\n\t\t\t\t\t\tevent: data.event\n\t\t\t\t\t} as OnDropActionProps);\n\t\t\t\t}}\n\t\t\t\tonDragEnter={(data: DragObj): { success: boolean } | undefined =>\n\t\t\t\t\tonDragEnterAction({\n\t\t\t\t\t\ttype: data.type ?? '',\n\t\t\t\t\t\tdata: data.data,\n\t\t\t\t\t\tevent: data.event\n\t\t\t\t\t} as OnDropActionProps)\n\t\t\t\t}\n\t\t\t\toverlayAcceptComponent={<DropOverlayContainer folder={folder} />}\n\t\t\t\toverlayDenyComponent={<DropDenyOverlayContainer folder={folder} />}\n\t\t\t>\n\t\t\t\t<Drag\n\t\t\t\t\ttype=\"folder\"\n\t\t\t\t\tdata={folder}\n\t\t\t\t\tdragDisabled={dragFolderDisable}\n\t\t\t\t\tstyle={{ display: 'block' }}\n\t\t\t\t>\n\t\t\t\t\t<AppLink\n\t\t\t\t\t\tto={`/folder/${folder.id}`}\n\t\t\t\t\t\tstyle={{ width: '100%', height: '100%', textDecoration: 'none' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tdata-testid={`folder-context-menu-${folder.id}`}\n\t\t\t\t\t\t\tcontextMenu\n\t\t\t\t\t\t\titems={dropdownItems}\n\t\t\t\t\t\t\tdisplay=\"block\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Padding left=\"small\" />\n\t\t\t\t\t\t\t\t<Tooltip label={accordionItem.label} placement=\"right\" maxWidth=\"100%\">\n\t\t\t\t\t\t\t\t\t<AccordionItem\n\t\t\t\t\t\t\t\t\t\tdata-testid={`accordion-folder-item-${folder.id}`}\n\t\t\t\t\t\t\t\t\t\titem={accordionItem}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{statusIcon}\n\t\t\t\t\t\t\t\t\t</AccordionItem>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</AppLink>\n\t\t\t\t</Drag>\n\t\t\t</Drop>\n\t\t</Row>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, useCallback, useRef } from 'react';\n\nimport { Container, ListItem, ListV2 } from '@zextras/carbonio-design-system';\nimport { groupBy } from 'lodash';\nimport styled from 'styled-components';\n\nimport { UsersSharesListItem } from './users-shares-list-item';\nimport { ShareInfo } from '../../../model/share-info';\n\nexport type UsersSharesListProps = {\n\tshares: Array<ShareInfo>;\n\tonSelectionChange: (selected: Array<ShareInfo>) => void;\n};\n\nconst CustomListItem = styled(ListItem)`\n\t&:hover {\n\t\tbackground-color: ${({ theme, active }): string => theme.palette.transparent.regular}\n`;\n\nexport const UsersSharesList: FC<UsersSharesListProps> = ({ shares, onSelectionChange }) => {\n\t// Group shares by owner's name\n\tconst sharesGroups = groupBy(shares, (share) => share.ownerName);\n\tconst ownerNames = Object.keys(sharesGroups);\n\tconst selectionRef = useRef<Array<ShareInfo>>([]);\n\n\tconst onSelect = useCallback(\n\t\t(share: ShareInfo) => {\n\t\t\tconst shareIndex = selectionRef.current.indexOf(share);\n\t\t\tif (shareIndex >= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tselectionRef.current.push(share);\n\t\t\tonSelectionChange(selectionRef.current);\n\t\t},\n\t\t[onSelectionChange]\n\t);\n\n\tconst onDeselect = useCallback(\n\t\t(share: ShareInfo) => {\n\t\t\tconst shareIndex = selectionRef.current.indexOf(share);\n\t\t\tif (shareIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tselectionRef.current.splice(shareIndex, 1);\n\t\t\tonSelectionChange(selectionRef.current);\n\t\t},\n\t\t[onSelectionChange]\n\t);\n\n\treturn (\n\t\t<Container mainAlignment={'flex-start'}>\n\t\t\t<ListV2>\n\t\t\t\t{ownerNames.map((ownerName, index) => (\n\t\t\t\t\t<CustomListItem key={index}>\n\t\t\t\t\t\t{(visible: boolean): React.JSX.Element =>\n\t\t\t\t\t\t\tvisible ? (\n\t\t\t\t\t\t\t\t<UsersSharesListItem\n\t\t\t\t\t\t\t\t\tshares={sharesGroups[ownerName]}\n\t\t\t\t\t\t\t\t\townerName={ownerName}\n\t\t\t\t\t\t\t\t\tonSelect={onSelect}\n\t\t\t\t\t\t\t\t\tonDeselect={onDeselect}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</CustomListItem>\n\t\t\t\t))}\n\t\t\t</ListV2>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { createTheme, CustomPaletteOptions, CustomTheme } from '@mui/material/styles';\n\nexport const theme: CustomTheme = createTheme(<CustomPaletteOptions>{\n\tpalette: {\n\t\tcurrentColor: {\n\t\t\tregular: 'currentColor',\n\t\t\thover: 'currentColor',\n\t\t\tactive: 'currentColor',\n\t\t\tfocus: 'currentColor',\n\t\t\tdisabled: 'currentColor'\n\t\t},\n\t\ttransparent: {\n\t\t\tregular: 'rgba(0, 0, 0, 0)',\n\t\t\thover: 'rgba(0, 0, 0, 0.05)',\n\t\t\tactive: 'rgba(0, 0, 0, 0.1)',\n\t\t\tfocus: 'rgba(0, 0, 0, 0.05)',\n\t\t\tdisabled: 'rgba(0, 0, 0, 0)'\n\t\t},\n\t\tprimary: {\n\t\t\tregular: '#2b73d2',\n\t\t\thover: '#225ca8',\n\t\t\tactive: '#1e5092',\n\t\t\tfocus: '#225ca8',\n\t\t\tdisabled: '#aac8ee',\n\t\t\tmain: '#2b73d2'\n\t\t},\n\t\tsecondary: {\n\t\t\tregular: '#828282',\n\t\t\thover: '#696969',\n\t\t\tactive: '#5c5c5c',\n\t\t\tfocus: '#696969',\n\t\t\tdisabled: '#cccccc',\n\t\t\tmain: '#828282'\n\t\t},\n\t\theader: {\n\t\t\tregular: '#cfd5dc',\n\t\t\thover: '#b1bbc6',\n\t\t\tactive: '#a3aebc',\n\t\t\tfocus: '#b1bbc6',\n\t\t\tdisabled: '#cfd5dc'\n\t\t},\n\t\thighlight: {\n\t\t\tregular: '#d5e3f6',\n\t\t\thover: '#abc7ed',\n\t\t\tactive: '#96b8e8',\n\t\t\tfocus: '#abc7ed',\n\t\t\tdisabled: '#d5e3f6'\n\t\t},\n\t\tgray0: {\n\t\t\tregular: '#414141',\n\t\t\thover: '#282828',\n\t\t\tactive: '#1b1b1b',\n\t\t\tfocus: '#282828',\n\t\t\tdisabled: '#cccccc'\n\t\t},\n\t\tgray1: {\n\t\t\tregular: '#828282',\n\t\t\thover: '#696969',\n\t\t\tactive: '#5c5c5c',\n\t\t\tfocus: '#696969',\n\t\t\tdisabled: '#cccccc'\n\t\t},\n\t\tgray2: {\n\t\t\tregular: '#cfd5dc',\n\t\t\thover: '#b1bbc6',\n\t\t\tactive: '#a3aebc',\n\t\t\tfocus: '#b1bbc6',\n\t\t\tdisabled: '#cfd5dc'\n\t\t},\n\t\tgray3: {\n\t\t\tregular: '#e6e9ed',\n\t\t\thover: '#c8cfd8',\n\t\t\tactive: '#bac2cd',\n\t\t\tfocus: '#c8cfd8',\n\t\t\tdisabled: '#e6e9ed'\n\t\t},\n\t\tgray4: {\n\t\t\tregular: '#eeeff3',\n\t\t\thover: '#d0d3de',\n\t\t\tactive: '#c1c5d3',\n\t\t\tfocus: '#d0d3de',\n\t\t\tdisabled: '#eeeff3'\n\t\t},\n\t\tgray5: {\n\t\t\tregular: '#f5f6f8',\n\t\t\thover: '#d7dbe3',\n\t\t\tactive: '#c8ced9',\n\t\t\tfocus: '#d7dbe3',\n\t\t\tdisabled: '#f5f6f8'\n\t\t},\n\t\tgray6: {\n\t\t\tregular: '#ffffff',\n\t\t\thover: '#e6e6e6',\n\t\t\tactive: '#d9d9d9',\n\t\t\tfocus: '#e6e6e6',\n\t\t\tdisabled: '#ffffff'\n\t\t},\n\t\twarning: {\n\t\t\tregular: '#ffc107',\n\t\t\thover: '#d39e00',\n\t\t\tactive: '#ba8b00',\n\t\t\tfocus: '#d39e00',\n\t\t\tdisabled: '#ffe699',\n\t\t\tmain: '#ffc107'\n\t\t},\n\t\terror: {\n\t\t\tregular: '#d74942',\n\t\t\thover: '#be3028',\n\t\t\tactive: '#a92a24',\n\t\t\tfocus: '#be3028',\n\t\t\tdisabled: '#edaeab',\n\t\t\tmain: '#d74942'\n\t\t},\n\t\tsuccess: {\n\t\t\tregular: '#8bc34a',\n\t\t\thover: '#71a436',\n\t\t\tactive: '#639030',\n\t\t\tfocus: '#71a436',\n\t\t\tdisabled: '#cee6b2',\n\t\t\tmain: '#8bc34a'\n\t\t},\n\t\tinfo: {\n\t\t\tregular: '#2196d3',\n\t\t\thover: '#1a75a7',\n\t\t\tactive: '#176691',\n\t\t\tfocus: '#1a75a7',\n\t\t\tdisabled: '#a7d7f1',\n\t\t\tmain: '#2196d3'\n\t\t},\n\t\ttext: {\n\t\t\tregular: '#333333',\n\t\t\thover: '#1a1a1a',\n\t\t\tactive: '#0d0d0d',\n\t\t\tfocus: '#1a1a1a',\n\t\t\tdisabled: '#cccccc',\n\t\t\tmain: '#333333'\n\t\t}\n\t},\n\tavatarColors: {\n\t\tavatar_1: '#EF9A9A',\n\t\tavatar_2: '#F48FB1',\n\t\tavatar_3: '#CE93D8',\n\t\tavatar_4: '#B39DDB',\n\t\tavatar_5: '#9FA8DA',\n\t\tavatar_6: '#90CAF9',\n\t\tavatar_7: '#81D4FA',\n\t\tavatar_8: '#80DEEA',\n\t\tavatar_9: '#80CBC4',\n\t\tavatar_10: '#A5D6A7',\n\t\tavatar_11: '#C5E1A5',\n\t\tavatar_12: '#E6EE9C',\n\t\tavatar_13: '#FFE082',\n\t\tavatar_14: '#FFCC80',\n\t\tavatar_15: '#FFAB91',\n\t\tavatar_16: '#BCAAA4',\n\t\tavatar_17: '#E57373',\n\t\tavatar_18: '#F06292',\n\t\tavatar_19: '#BA68C8',\n\t\tavatar_20: '#9575CD',\n\t\tavatar_21: '#7986CB',\n\t\tavatar_22: '#64B5F6',\n\t\tavatar_23: '#4FC3F7',\n\t\tavatar_24: '#4DD0E1',\n\t\tavatar_25: '#4DB6AC',\n\t\tavatar_26: '#81C784',\n\t\tavatar_27: '#AED581',\n\t\tavatar_28: '#DCE775',\n\t\tavatar_29: '#FFD54F',\n\t\tavatar_30: '#FFB74D',\n\t\tavatar_31: '#FF8A65',\n\t\tavatar_32: '#A1887F',\n\t\tavatar_33: '#0097A7',\n\t\tavatar_34: '#EF5350',\n\t\tavatar_35: '#EC407A',\n\t\tavatar_36: '#AB47BC',\n\t\tavatar_37: '#7E57C2',\n\t\tavatar_38: '#5C6BC0',\n\t\tavatar_39: '#42A5F5',\n\t\tavatar_40: '#29B6F6',\n\t\tavatar_41: '#26C6DA',\n\t\tavatar_42: '#26A69A',\n\t\tavatar_43: '#66BB6A',\n\t\tavatar_44: '#9CCC65',\n\t\tavatar_45: '#D4E157',\n\t\tavatar_46: '#FFCA28',\n\t\tavatar_47: '#FFA726',\n\t\tavatar_48: '#FF7043',\n\t\tavatar_49: '#8D6E63',\n\t\tavatar_50: '#0288D1'\n\t}\n});\n\nexport const themeMui = createTheme({\n\tcomponents: {\n\t\tMuiSvgIcon: {\n\t\t\tstyleOverrides: {\n\t\t\t\troot: {\n\t\t\t\t\tcolor: theme.palette.text.regular,\n\t\t\t\t\t'&:hover': { background: theme.palette.gray3.hover },\n\t\t\t\t\tfontSize: '1.25rem',\n\t\t\t\t\tfontWeight: 400\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiAccordionSummary: {\n\t\t\tstyleOverrides: {\n\t\t\t\troot: {\n\t\t\t\t\tpadding: '0 1rem 0 0',\n\t\t\t\t\tmargin: '0',\n\t\t\t\t\tminHeight: '0',\n\t\t\t\t\tjustifyContent: 'left'\n\t\t\t\t},\n\t\t\t\tcontent: {\n\t\t\t\t\tmargin: '0',\n\t\t\t\t\tmaxWidth: 'calc(100% - 1.25rem)'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiAccordionDetails: {\n\t\t\tstyleOverrides: {\n\t\t\t\troot: {\n\t\t\t\t\tbackground: theme.palette.gray5.regular,\n\t\t\t\t\tpadding: '0 0 0 0.5rem',\n\t\t\t\t\tmargin: '0'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiButtonBase: {\n\t\t\tstyleOverrides: {\n\t\t\t\troot: {\n\t\t\t\t\tpadding: '0'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiPaper: {\n\t\t\tstyleOverrides: {\n\t\t\t\troot: {\n\t\t\t\t\tborderBottomLeftRadius: '0',\n\t\t\t\t\tborderTopLeftRadius: '0',\n\t\t\t\t\tborderBottomRightRadius: '0',\n\t\t\t\t\tborderTopRightRadius: '0'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiAccordion: {\n\t\t\tstyleOverrides: {\n\t\t\t\troot: {\n\t\t\t\t\t':last-of-type': {\n\t\t\t\t\t\tborderBottomLeftRadius: '0',\n\t\t\t\t\t\tborderTopLeftRadius: '0',\n\t\t\t\t\t\tborderBottomRightRadius: '0',\n\t\t\t\t\t\tborderTopRightRadius: '0'\n\t\t\t\t\t},\n\t\t\t\t\t':first-of-type': {\n\t\t\t\t\t\tborderBottomLeftRadius: '0',\n\t\t\t\t\t\tborderTopLeftRadius: '0',\n\t\t\t\t\t\tborderBottomRightRadius: '0',\n\t\t\t\t\t\tborderTopRightRadius: '0'\n\t\t\t\t\t},\n\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\tbackground: theme.palette.gray5.highlight,\n\t\t\t\t\t'&.MuiAccordion-root:before': {\n\t\t\t\t\t\ttop: '0'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { FC, useCallback, useRef } from 'react';\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Accordion, AccordionDetails, AccordionSummary, Container } from '@mui/material';\nimport { useLocalStorage } from '@zextras/carbonio-shell-ui';\n\nimport { theme } from '../../theme/theme-mui';\nimport type { Folder } from '../../types/folder';\nimport type { SidebarAccordionProps } from '../../types/sidebar';\nimport { hasId } from '../../worker/handle-message';\nimport { FOREGROUND_COLOR } from '../../../sruvi/Colors';\n\nexport const SidebarAccordionMui: FC<SidebarAccordionProps> = ({\n\taccordions,\n\tfolderId,\n\tlocalStorageName,\n\tAccordionCustomComponent,\n\tsetSelectedFolder,\n\tbuttonFindShares,\n\tinitialExpanded\n}) => {\n\tconst [openIds, setOpenIds] = useLocalStorage<Array<string>>(\n\t\tlocalStorageName,\n\t\tinitialExpanded ?? []\n\t);\n\tconst sidebarRef = useRef<HTMLInputElement>(null);\n\tconst onClick = useCallback(\n\t\t({ accordion, expanded }: { accordion: Folder; expanded: boolean }): void => {\n\t\t\tif (expanded) {\n\t\t\t\tsetOpenIds((state: Array<string>) =>\n\t\t\t\t\tstate.includes(accordion.id) ? state : [...state, accordion.id]\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsetOpenIds((state: Array<string>) => state.filter((id) => id !== accordion.id));\n\t\t\t}\n\t\t},\n\t\t[setOpenIds]\n\t);\n\n\treturn (\n\t\t<Container ref={sidebarRef} disableGutters>\n\t\t\t{accordions.map((accordion) =>\n\t\t\t\taccordion.id === 'find_shares' ? (\n\t\t\t\t\tbuttonFindShares\n\t\t\t\t) : (\n\t\t\t\t\t<Accordion\n\t\t\t\t\t\tdisableGutters\n\t\t\t\t\t\tTransitionProps={{ unmountOnExit: true }}\n\t\t\t\t\t\texpanded={openIds.includes(accordion.id)}\n\t\t\t\t\t\tkey={accordion.id}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\tsetSelectedFolder && setSelectedFolder(accordion.id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\texpandIcon={\n\t\t\t\t\t\t\t\taccordion?.children?.length > 0 &&\n\t\t\t\t\t\t\t\t!hasId(accordion, 'all') && (\n\t\t\t\t\t\t\t\t\t<ExpandMoreIcon\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={(e): void => {\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\tonClick({ accordion, expanded: !openIds.includes(accordion.id) });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-controls=\"panel1a-content\"\n\t\t\t\t\t\t\tid={accordion.id}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tbackgroundColor: accordion.id === folderId ? FOREGROUND_COLOR : 'transparent',\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\t\taccordion.id === folderId ? FOREGROUND_COLOR : theme.palette.gray5.hover\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tborderRadius: '16px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccordionCustomComponent item={accordion} />\n\t\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t\t{accordion?.children?.length > 0 && (\n\t\t\t\t\t\t\t<AccordionDetails>\n\t\t\t\t\t\t\t\t<SidebarAccordionMui\n\t\t\t\t\t\t\t\t\taccordions={accordion.children}\n\t\t\t\t\t\t\t\t\tfolderId={folderId}\n\t\t\t\t\t\t\t\t\tkey={accordion.id}\n\t\t\t\t\t\t\t\t\tlocalStorageName={localStorageName}\n\t\t\t\t\t\t\t\t\tAccordionCustomComponent={AccordionCustomComponent}\n\t\t\t\t\t\t\t\t\tsetSelectedFolder={setSelectedFolder}\n\t\t\t\t\t\t\t\t\tbuttonFindShares={buttonFindShares}\n\t\t\t\t\t\t\t\t\tinitialExpanded={initialExpanded}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</AccordionDetails>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Accordion>\n\t\t\t\t)\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport type { FolderMessage, SoapNotify } from '@zextras/carbonio-shell-ui';\n\nimport { getLinkIdMapKey } from './utils';\nimport type {\n\tBaseFolder,\n\tFolder,\n\tFolders,\n\tLinkFolder,\n\tLinkFolderFields,\n\tSearches,\n\tSearchFolderFields,\n\tSoapFolder,\n\tSoapLink,\n\tSoapSearchFolder,\n\tUserFolder\n} from '../types/folder';\nimport { FolderView, LinksIdMap } from '../types/folder';\n\nconst IM_LOGS = '14';\nconst USER_ROOT = '1';\n\nlet folders: Folders = {};\nconst searches: Searches = {};\nconst linksIdMap: LinksIdMap = {};\n// used to check if a newly created folder is being added to the correct store\nlet view: string | undefined;\n\nexport const testUtils = {\n\tgetFolders: (): Folders => folders,\n\tresetFolders: (): void => {\n\t\tfolders = {};\n\t},\n\tsetFolders: (data: Folders): void => {\n\t\tfolders = data;\n\t},\n\tsetCurrentView: (current: FolderView): void => {\n\t\tview = current;\n\t},\n\tgetCurrentView: (): string | undefined => view\n};\n\nconst sortFoldersByName = (obj: Array<Folder>): Array<Folder> =>\n\tobj.sort((a, b) => {\n\t\tconst aLowerName = a.name.toLowerCase();\n\t\tconst bLowerName = b.name.toLowerCase();\n\t\tif (aLowerName < bLowerName) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (aLowerName > bLowerName) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\nconst updateChildren = (folder: Folder, changes: any): any => {\n\tif (changes.absFolderPath && folder.children.length) {\n\t\tfolder.children.forEach((child) => {\n\t\t\tconst childFolder = folders[child.id];\n\t\t\tif (changes.absFolderPath && childFolder.absFolderPath) {\n\t\t\t\tconst paths = childFolder.absFolderPath.split('/').slice(2);\n\t\t\t\tchildFolder.absFolderPath = `${changes.absFolderPath}/${paths.join('/')}`;\n\t\t\t}\n\t\t\tif (childFolder.children.length) {\n\t\t\t\tupdateChildren(childFolder, changes);\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const testFolderIsChecked = ({ string }: { string: string | undefined }): boolean =>\n\t/#/.test(string || '');\n\nconst omit = ({\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tlink: _1,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tfolder: _2,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tsearch: _3,\n\t...obj\n}: Partial<SoapFolder>): Partial<SoapFolder> => obj;\n\nexport const hasId = (f: { id: string }, id: string): boolean => f.id.split(':').includes(id);\nexport const normalize = (f: SoapFolder, p?: Folder): BaseFolder => ({\n\tid: f.id,\n\tuuid: f.uuid,\n\tname: f.name,\n\tabsFolderPath: f.absFolderPath,\n\tl: f.l,\n\tluuid: f.luuid,\n\tchecked: testFolderIsChecked({ string: f.f }),\n\tf: f.f,\n\t// the type defined in shell is not correct refs: SHELL-118\n\t// FIXME: remove the cast when the type will be fixed\n\tcolor: (f.color as unknown as number) || p?.color,\n\trgb: f.rgb,\n\tu: f.u,\n\ti4u: f.i4u,\n\tview: f.view,\n\trev: f.rev,\n\tms: f.ms,\n\tmd: f.md,\n\tn: f.n,\n\ti4n: f.i4n,\n\ts: f.s,\n\ti4ms: f.i4ms,\n\ti4next: f.i4next,\n\turl: f.url,\n\tactivesyncdisabled: !!f.activesyncdisabled,\n\twebOfflineSyncDays: f.webOfflineSyncDays,\n\tperm: f.perm,\n\trecursive: !!f.recursive,\n\trest: f.rest,\n\tdeletable: !!f.deletable,\n\tmeta: f.meta,\n\tacl: f.acl,\n\tretentionPolicy: f.retentionPolicy\n});\n\nexport const normalizeSearch = (s: SoapSearchFolder): BaseFolder & SearchFolderFields => ({\n\t...normalize(s),\n\tquery: s.query,\n\tsortBy: s.sortBy,\n\ttypes: s.types\n});\n\nexport const normalizeLink = (l: SoapLink, p?: Folder): BaseFolder & LinkFolderFields => ({\n\t...normalize(l, p),\n\towner: l.owner,\n\tzid: l.zid,\n\trid: l.rid,\n\truuid: l.ruuid,\n\toname: l.oname,\n\treminder: !!l.reminder,\n\tbroken: !!l.broken\n});\n\nexport const processSearch = (soapSearch: SoapSearchFolder, parent: Folder): void => {\n\tconst search = {\n\t\t...normalizeSearch(soapSearch),\n\t\tparent: parent?.id,\n\t\tisLink: parent?.isLink\n\t};\n\tsearches[search.id] = search;\n};\n\nexport const processLink = (soapLink: SoapLink, depth: number, parent?: Folder): LinkFolder => {\n\tconst link = {\n\t\t...normalizeLink(soapLink, parent),\n\t\tisLink: true,\n\t\tchildren: [],\n\t\tparent: parent?.id,\n\t\tdepth\n\t} as LinkFolder;\n\t// eslint-disable-next-line no-param-reassign\n\tfolders[soapLink.id] = link;\n\n\t// Get the zid:rid key of the link and add it to the links id map\n\tconst linkIdMapKey = getLinkIdMapKey(soapLink);\n\tlinkIdMapKey && (linksIdMap[linkIdMapKey] = soapLink.id);\n\n\tsoapLink?.folder?.forEach((f) => {\n\t\tif (!hasId(f, IM_LOGS)) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tconst child = processFolder(f, depth + 1, link);\n\t\t\tlink.children.push(child);\n\t\t}\n\t});\n\tsoapLink?.link?.forEach((l) => {\n\t\tif (!hasId(l, IM_LOGS)) {\n\t\t\tconst child = processLink(l, depth + 1, link);\n\t\t\tlink.children.push(child);\n\t\t}\n\t});\n\tsoapLink?.search?.forEach((s) => {\n\t\tprocessSearch(s, link);\n\t});\n\n\treturn link;\n};\n\nexport const processFolder = (\n\tsoapFolder: SoapFolder,\n\tdepth: number,\n\tparent?: Folder\n): UserFolder => {\n\tconst folder: UserFolder = {\n\t\t...normalize(soapFolder, parent),\n\t\tisLink: false,\n\t\tchildren: [],\n\t\tparent: parent?.id,\n\t\tdepth\n\t};\n\tfolders[soapFolder.id] = folder;\n\tsoapFolder?.folder?.forEach((f) => {\n\t\tif (!hasId(f, IM_LOGS)) {\n\t\t\tconst child = processFolder(f, depth + 1, folder);\n\t\t\tif (!hasId(f, USER_ROOT)) {\n\t\t\t\tfolder.children.push(child);\n\t\t\t}\n\t\t}\n\t});\n\tsoapFolder?.link?.forEach((l) => {\n\t\tif (!hasId(l, IM_LOGS)) {\n\t\t\tconst child = processLink(l, depth + 1, folder);\n\t\t\tif (!hasId(l, USER_ROOT)) {\n\t\t\t\tfolder.children.push(child);\n\t\t\t}\n\t\t}\n\t});\n\tsoapFolder?.search?.forEach((s) => {\n\t\tprocessSearch(s, folder);\n\t});\n\treturn folder;\n};\n\nexport const handleFolderRefresh = (\n\tsoapFolders: Array<SoapFolder>,\n\tcurrentView: FolderView\n): UserFolder | Array<UserFolder> => {\n\tview = currentView;\n\tif (soapFolders.length > 1) {\n\t\tconst sharedAccounts = soapFolders.slice(1);\n\t\treturn [\n\t\t\tprocessFolder(soapFolders[0], 0),\n\t\t\t...sharedAccounts.map((folder) => processLink(folder as SoapLink, 0))\n\t\t] as Array<UserFolder>;\n\t}\n\treturn processFolder(soapFolders[0], 0);\n};\n\nexport const handleFolderCreated = (created: Array<SoapFolder>): void =>\n\tcreated.forEach((val: SoapFolder) => {\n\t\tif (val.id && val.l && view && val.view === view) {\n\t\t\tconst parent = folders[val.l];\n\t\t\tconst folder: UserFolder = {\n\t\t\t\t...normalize(val, parent),\n\t\t\t\tisLink: false,\n\t\t\t\tchildren: [],\n\t\t\t\tparent: parent?.id,\n\t\t\t\tdepth: parent && parent.depth !== undefined ? parent.depth + 1 : 0\n\t\t\t};\n\t\t\tfolders[val.id] = folder;\n\t\t\tparent.children.push(folder);\n\t\t\tsortFoldersByName(parent.children);\n\t\t}\n\t});\nexport const handleLinkCreated = (created: Array<SoapLink>): void =>\n\tcreated.forEach((val: SoapLink) => {\n\t\tif (val.id && val.l && view && val.view === view) {\n\t\t\tconst parent = folders[val.l];\n\t\t\tconst folder: LinkFolder = {\n\t\t\t\t...normalizeLink(val, parent),\n\t\t\t\tisLink: true,\n\t\t\t\tchildren: [],\n\t\t\t\tparent: parent?.id,\n\t\t\t\tdepth: parent && parent.depth !== undefined ? parent.depth + 1 : 0\n\t\t\t};\n\t\t\tfolders[val.id] = folder;\n\t\t\tparent.children.push(folder);\n\t\t\tsortFoldersByName(parent.children);\n\t\t}\n\t});\n\nfunction getKeyByValue(map: Folders, searchValue: Partial<UserFolder>): string | undefined {\n\treturn Object.keys(map).find(\n\t\t(key) => searchValue.id === `${(map[key] as LinkFolder).zid}:${(map[key] as LinkFolder).rid}`\n\t);\n}\n\nfunction folderIsSharedWithMe(folderId: string | undefined): boolean {\n\tif (!folderId) return false;\n\tconst folder = folders[folderId];\n\tif (folder?.parent) {\n\t\treturn folderIsSharedWithMe(folder?.parent);\n\t}\n\treturn folder?.name === 'USER_ROOT';\n}\n\nexport const handleFolderModified = (modified: Array<Partial<UserFolder>>): void =>\n\t// the type defined in shell is not correct refs: SHELL-118\n\t// FIXME: remove the ts-ignore when the type will be fixed\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tmodified.forEach((val: Partial<SoapFolder>): void => {\n\t\tif (!val.id) return;\n\t\tconst mountPointId = val.id.includes(':') ? val.id : getKeyByValue(folders, val);\n\t\tconst parentMountPointId = getKeyByValue(folders, { id: val.l });\n\t\tconst isSharedWithMe = folderIsSharedWithMe(mountPointId);\n\t\tconst parentIsSharedWithMe = folderIsSharedWithMe(parentMountPointId);\n\t\tconst parentFolderId = parentIsSharedWithMe && parentMountPointId ? parentMountPointId : val.l;\n\t\tconst folderId = isSharedWithMe && mountPointId ? mountPointId : val.id;\n\t\tconst folder = folderId ? folders[folderId] : null;\n\n\t\tif (folder) {\n\t\t\tObject.assign(folder, omit({ ...val, id: folderId }));\n\t\t\tupdateChildren(folder, val);\n\t\t\tif (typeof val.f !== 'undefined') {\n\t\t\t\tfolder.checked = testFolderIsChecked({ string: val.f });\n\t\t\t}\n\n\t\t\tconst oldParentId = folder.parent;\n\n\t\t\tif (oldParentId) {\n\t\t\t\tconst oldParent = folders[oldParentId];\n\t\t\t\tif (oldParent) {\n\t\t\t\t\tif (!val.l) {\n\t\t\t\t\t\toldParent.children = oldParent.children.map((f) => (f.id !== val.id ? f : folder));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst newParent = parentFolderId ? folders[parentFolderId] : null;\n\t\t\t\t\t\tif (newParent) {\n\t\t\t\t\t\t\toldParent.children = oldParent.children.filter((f) => f.id !== folderId);\n\t\t\t\t\t\t\tnewParent.children.push(folder);\n\t\t\t\t\t\t\tsortFoldersByName(newParent.children);\n\t\t\t\t\t\t\tfolder.parent = newParent.id;\n\t\t\t\t\t\t\tfolder.depth = newParent?.depth !== undefined ? newParent.depth + 1 : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfolders[folderId] = folder;\n\t\t\t}\n\t\t}\n\t});\nexport const handleFolderDeleted = (deleted: string[]): void =>\n\tdeleted.forEach((val) => {\n\t\tconst folder = folders[val];\n\t\tif (folder) {\n\t\t\tif (folder.parent) {\n\t\t\t\tconst parent = folders[folder.parent];\n\t\t\t\tparent.children = parent.children.filter((obj) => obj.id !== val);\n\t\t\t}\n\t\t\tdelete folders[val];\n\t\t\tdelete searches[val];\n\t\t}\n\t});\nexport const handleFolderNotify = (notify: SoapNotify): void => {\n\thandleFolderCreated(notify.created?.folder ?? []);\n\thandleLinkCreated(notify.created?.link ?? []);\n\t// the type defined in shell is not correct refs: SHELL-118\n\t// FIXME: remove the ts-ignore when the type will be fixed\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\thandleFolderModified([...(notify.modified?.folder ?? []), ...(notify.modified?.link ?? [])]);\n\thandleFolderDeleted(notify.deleted ?? []);\n};\n\nexport const handleFoldersMessages = ({ data }: FolderMessage): void => {\n\tif (data.op === 'refresh' && data.folder) {\n\t\thandleFolderRefresh(data.folder, data.currentView);\n\t}\n\tif (data.op === 'notify') {\n\t\thandleFolderNotify(data.notify);\n\t}\n};\n\nexport const handleMessage = ({ data }: FolderMessage): void => {\n\thandleFoldersMessages({ data });\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tpostMessage({ folders, linksIdMap, searches });\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useMemo } from 'react';\n\nimport { nanoid } from '@reduxjs/toolkit';\nimport {\n\tAccordionItem,\n\tDropdown,\n\tRow,\n\tIcon,\n\tPadding,\n\tTooltip,\n\tuseModal\n} from '@zextras/carbonio-design-system';\nimport { useTags, ZIMBRA_STANDARD_COLORS, runSearch, QueryChip } from '@zextras/carbonio-shell-ui';\nimport { reduce } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { createTag, useGetTagsActions } from '../ui-actions/tag-actions';\nimport { ItemType, TagsAccordionItems } from '../views/secondary-bar/parts/tags/types';\n\ntype ItemProps = {\n\titem: ItemType;\n};\n\nconst CustomComp: FC<ItemProps> = (props) => {\n\tconst [t] = useTranslation();\n\tconst actions = useGetTagsActions({ tag: props?.item, t });\n\n\tconst triggerSearch = useCallback(\n\t\t() =>\n\t\t\trunSearch(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: nanoid(),\n\t\t\t\t\t\tavatarBackground: ZIMBRA_STANDARD_COLORS[props?.item?.color || 0].hex,\n\t\t\t\t\t\tavatarIcon: 'Tag',\n\t\t\t\t\t\tbackground: 'gray2',\n\t\t\t\t\t\thasAvatar: true,\n\t\t\t\t\t\tisGeneric: false,\n\t\t\t\t\t\tisQueryFilter: true,\n\t\t\t\t\t\tlabel: `tag:${props?.item?.name}`,\n\t\t\t\t\t\tvalue: `tag:\"${props?.item?.name}\"`\n\t\t\t\t\t} as QueryChip\n\t\t\t\t],\n\t\t\t\t'contacts'\n\t\t\t),\n\t\t[props?.item?.color, props?.item?.name]\n\t);\n\n\treturn (\n\t\t<Dropdown contextMenu items={actions} display=\"block\" width=\"fit\" onClick={triggerSearch}>\n\t\t\t<Row mainAlignment=\"flex-start\" height=\"fit\" padding={{ left: 'large' }} takeAvailableSpace>\n\t\t\t\t<Icon\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\ticon=\"Tag\"\n\t\t\t\t\tcustomColor={ZIMBRA_STANDARD_COLORS[props?.item?.color ?? 0].hex}\n\t\t\t\t/>\n\n\t\t\t\t<Padding right=\"large\" />\n\t\t\t\t<Tooltip label={props?.item?.name} placement=\"right\" maxWidth=\"100%\">\n\t\t\t\t\t<AccordionItem {...props} height=\"2.5rem\" />\n\t\t\t\t</Tooltip>\n\t\t\t</Row>\n\t\t</Dropdown>\n\t);\n};\n\nexport const TagLabel: FC<ItemType> = (props) => {\n\tconst createModal = useModal();\n\tconst [t] = useTranslation();\n\tconst alteredProps = { ...props, color: `$props.color` };\n\treturn (\n\t\t<Dropdown contextMenu display=\"block\" width=\"fit\" items={[createTag({ t, createModal })]}>\n\t\t\t<Row mainAlignment=\"flex-start\" padding={{ horizontal: 'small' }} takeAvailableSpace>\n\t\t\t\t<Icon size=\"large\" icon=\"TagsMoreOutline\" />\n\t\t\t\t<AccordionItem {...alteredProps} />\n\t\t\t</Row>\n\t\t</Dropdown>\n\t);\n};\n\nconst useGetTagsAccordion = (): TagsAccordionItems => {\n\tconst tagsFromStore = useTags();\n\tconst [t] = useTranslation();\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'Tags',\n\t\t\tlabel: t('label.tags', 'Tags'),\n\t\t\tactive: false,\n\t\t\topen: false,\n\t\t\tonClick: (e): void => {\n\t\t\t\te.stopPropagation();\n\t\t\t},\n\t\t\tCustomComponent: TagLabel,\n\t\t\titems: reduce(\n\t\t\t\ttagsFromStore,\n\t\t\t\t(acc: Array<ItemType>, v) => {\n\t\t\t\t\tconst item = {\n\t\t\t\t\t\tid: v.id,\n\t\t\t\t\t\titem: v,\n\t\t\t\t\t\tactive: false,\n\t\t\t\t\t\tcolor: v.color || 0,\n\t\t\t\t\t\tdivider: false,\n\t\t\t\t\t\tlabel: v.name,\n\t\t\t\t\t\tname: v.name,\n\t\t\t\t\t\topen: false,\n\t\t\t\t\t\tCustomComponent: CustomComp\n\t\t\t\t\t};\n\t\t\t\t\tacc.push(item);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t)\n\t\t}),\n\t\t[t, tagsFromStore]\n\t);\n};\n\nexport default useGetTagsAccordion;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback, useMemo } from 'react';\n\nimport { ThemeProvider } from '@mui/material';\nimport {\n\tAccordion,\n\tButton,\n\tContainer,\n\tDivider,\n\tIconButton,\n\tPadding,\n\tRow,\n\tTooltip\n} from '@zextras/carbonio-design-system';\nimport {\n\tAppLink,\n\tFOLDERS,\n\tSecondaryBarComponentProps,\n\tZIMBRA_STANDARD_COLORS\n} from '@zextras/carbonio-shell-ui';\nimport { map, noop } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\n\nimport { AccordionCustomComponent } from './accordion-custom-component';\nimport { useActionAddSharedAddressBooks } from '../../../actions/add-shared-address-books';\nimport { SidebarAccordionMui } from '../../../carbonio-ui-commons/components/sidebar/sidebar-accordion-mui';\nimport { isLink } from '../../../carbonio-ui-commons/helpers/folders';\nimport { useRootsArray } from '../../../carbonio-ui-commons/store/zustand/folder';\nimport { themeMui } from '../../../carbonio-ui-commons/theme/theme-mui';\nimport { Folder } from '../../../carbonio-ui-commons/types/folder';\nimport { LOCAL_STORAGES } from '../../../constants';\nimport { sortFolders } from '../../../helpers/folders';\nimport useGetTagsAccordion from '../../hooks/use-get-tags-accordions';\nimport { getFolderTranslatedName } from '../../utils/helpers';\n\n/**\n * Component for trigger the browsing and selection of\n * address books shared by other users\n */\nconst AddSharesButton = (): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst addSharesAction = useActionAddSharedAddressBooks();\n\n\tconst isEnabled = useMemo(() => addSharesAction.canExecute(), [addSharesAction]);\n\n\tconst label = useMemo(() => t('label.find_shares', 'Find shares'), [t]);\n\n\tconst onClick = useCallback(() => {\n\t\taddSharesAction.execute();\n\t}, [addSharesAction]);\n\n\treturn (\n\t\t<Container padding={{ horizontal: 'medium', vertical: 'small' }} key=\"button-find-shares\">\n\t\t\t<Button\n\t\t\t\ttype=\"outlined\"\n\t\t\t\tlabel={label}\n\t\t\t\twidth=\"fill\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={onClick}\n\t\t\t\tdisabled={!isEnabled}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n\nconst folderIconName: Record<number, string> = {\n\t7: 'PersonOutline',\n\t13: 'EmailOutline',\n\t3: 'Trash2Outline'\n};\n\n/**\n * Item component for the collapsed secondary bar\n * @param folder\n */\nconst CollapsedSideBarItems = ({ folder }: { folder: Folder }): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst folderIcon = useMemo(() => {\n\t\tif (Object.keys(folderIconName).includes(folder.id)) {\n\t\t\treturn folderIconName[Number(folder.id)];\n\t\t}\n\t\tif (folder.id === 'shares' || isLink(folder)) {\n\t\t\treturn 'Share';\n\t\t}\n\t\treturn 'Folder';\n\t}, [folder]);\n\n\tconst folderIconColor = useMemo(\n\t\t() => (folder.color ? ZIMBRA_STANDARD_COLORS[folder.color].hex : ZIMBRA_STANDARD_COLORS[0].hex),\n\t\t[folder]\n\t);\n\n\tconst folderIconTooltip = useMemo(\n\t\t() => getFolderTranslatedName(t, folder.id, folder.name),\n\t\t[folder.id, folder.name, t]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<AppLink to={`/folder/${folder.id}`} style={{ width: '100%', textDecoration: 'none' }}>\n\t\t\t\t<Row mainAlignment=\"flex-start\" height={'fit'}>\n\t\t\t\t\t<Tooltip placement=\"right\" label={folderIconTooltip}>\n\t\t\t\t\t\t<Padding all=\"extrasmall\">\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcustomSize={{ iconSize: 'large', paddingSize: 'small' }}\n\t\t\t\t\t\t\t\ticon={folderIcon}\n\t\t\t\t\t\t\t\ticonColor={folderIconColor}\n\t\t\t\t\t\t\t\tonClick={noop}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Padding>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Row>\n\t\t\t</AppLink>\n\t\t</>\n\t);\n};\n\nconst SecondaryBarView: FC<SecondaryBarComponentProps> = ({ expanded = false }) => {\n\tconst { folderId: selectedFolderId } = useParams<{ folderId: string }>();\n\tconst tagsAccordionItems = useGetTagsAccordion();\n\tconst { path } = useRouteMatch();\n\n\tconst roots = useRootsArray();\n\tconst folders = useMemo(() => sortFolders(roots), [roots]);\n\n\tconst accordionsWithFindShare = useMemo(() => {\n\t\tif (!folders?.[0]?.children.find((folder: Folder) => folder.id === 'find_shares')) {\n\t\t\tfolders[0]?.children?.push({\n\t\t\t\tid: 'find_shares',\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tdisableHover: true\n\t\t\t});\n\t\t}\n\t\treturn map(folders, (item) => ({ ...item, background: 'gray4' }));\n\t}, [folders]);\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={themeMui}>\n\t\t\t\t{expanded ? (\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={`${path}/folder/:folderId/:type?/:itemId?`}>\n\t\t\t\t\t\t\t<SidebarAccordionMui\n\t\t\t\t\t\t\t\taccordions={accordionsWithFindShare}\n\t\t\t\t\t\t\t\tfolderId={selectedFolderId}\n\t\t\t\t\t\t\t\tlocalStorageName={LOCAL_STORAGES.EXPANDED_ADDRESSBOOKS}\n\t\t\t\t\t\t\t\tAccordionCustomComponent={AccordionCustomComponent}\n\t\t\t\t\t\t\t\tbuttonFindShares={<></>}\n\t\t\t\t\t\t\t\tinitialExpanded={[FOLDERS.USER_ROOT]}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Accordion background=\"transparent\" items={[tagsAccordionItems]} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t) : (\n\t\t\t\t\tfolders[0].children.map((folder) => (\n\t\t\t\t\t\t<CollapsedSideBarItems key={folder.id} folder={folder} />\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n};\n\nexport default SecondaryBarView;\n","export const BACKGROUND_COLOR = '#FFFFFF';\nexport const BACKGROUND_HEADER_COLOR = '#ffffff';\nexport const PRIMARY_COLOR = '#ff6600';\nexport const SECONDARY_COLOR = '#0a1153';\nexport const FOREGROUND_COLOR = '#c2e7ff';\nexport const PRIMARY_ICON_COLOR_ACTIVE = '#0a1153';\n\nexport const BUTTONCOLOR = '#0a1153';\n"],"names":["HoverRow","styled","Row","withConfig","displayName","componentId","theme","palette","transparent","regular","hover","HoverContainer","HoverBarContainer","ListItemContainer","Container","StyledListItem","ListItem","attrs","background","selectedBackground","activeBackground","active","selected","backgroundColor","pseudoClasses","css","getColor","ScrollableContainer","CustomIconAvatar","Avatar","AddressBookCreateModal","defaultParentId","onClose","t","useTranslation","createSnackbar","useSnackbar","defaultParent","useFolder","FOLDERS","USER_ROOT","newAddressBookName","setNewAddressBookName","useState","parentAddressBook","setParentAddressBook","modalTitle","useMemo","confirmLabel","addressBookAlreadyExists","filter","children","child","name","length","addressBookNameFieldLabel","confirmDisabled","undefined","trim","onAddressBookNameChanged","useCallback","ev","target","value","onParentAddressBookSelected","addressBook","onConfirm","apiClient","createFolder","parentFolderId","id","CONTACTS","then","key","replace","type","label","autoHideTimeout","TIMEOUTS","defaultSnackbar","hideButton","catch","React","ModalHeader","title","showCloseIcon","Divider","Padding","vertical","gap","mainAlignment","crossAlignment","height","Input","hasError","onChange","FolderTreeSelector","selectedFolderId","onFolderSelected","showSharedAccounts","showTrashFolder","showLinkedFolders","allowRootSelection","allowFolderCreation","ModalFooter","AddressBookDeleteModal","addressBookName","defaultValue","confirmButtonLabel","confirmationText","deleteFolder","ModalBody","Text","overflow","confirmColor","ROLES","none","flags","regex","viewer","admin","manager","getShareFolderRoleOptions","Object","values","map","role","getRoleDescription","permissionsFlags","find","match","GranteeInfo","grant","perm","composeLabel","d","zid","Chip","Actions","addressBookId","onEdit","onRevoke","account","useUserAccount","onRevokeClick","onResend","sendShareNotification","accountName","folderId","addresses","res","onEditClick","orientation","maxWidth","Tooltip","placement","Button","onClick","size","horizontal","color","Grantee","padding","bottom","ShareFolderProperties","grants","acl","weight","AddressBookEditGeneralModal","onAddShare","onEditShare","onRevokeShare","setAddressBookName","addressBookColor","setAddressBookColor","confirmButtonDisabled","addShareDisabled","isAdministerAllowed","close","updateFolder","onAddressBookInputChange","e","onColorChange","Number","showShared","addressBookInputDisabled","isSystemFolder","disabled","top","ColorSelect","defaultColor","width","style","minHeight","takeAvailableSpace","wrap","n","onSecondaryAction","secondaryActionLabel","secondaryActionDisabled","ShareFolderModal","editMode","activeGrant","shareFolderRoleOptions","sendNotification","setSendNotification","standardMessage","setStandardMessage","contacts","setContacts","shareWithUserRole","setshareWithUserRole","userName","split","userNameCapitalise","word","newAsciiRef","charCodeAt","String","fromCharCode","substr","capitalise","onShareRoleChange","shareRole","contact","email","shareFolder","message","err","disableEdit","selectedRole","all","ContactInput","placeholder","normalizedContacts","reduce","result","push","Select","items","defaultSelection","Checkbox","defaultChecked","right","ShareRevokeModal","revokeFolderGrant","iconSize","AddressBookEditModal","activeSubModal","setActiveSubModal","modal","gt","AddressBookEmptyModal","isTrashFolder","isTrash","confirmationTextComponent","successLabel","emptyFolder","ContactsImportModal","closeCallback","file","onUploadError","filename","onUploadComplete","attachmentId","importContacts","aid","response","count","contactsCount","defaultValue_one","upload","fileInfo","fileName","folderName","AddressBookMoveModal","onMove","excludeIds","parent","useActionMoveAddressBook","createModal","useModal","move","parentAddressBookId","moveFolder","canExecute","newParentAddressBook","isWriteAllowed","l","isLink","execute","closeModal","maxHeight","success","ACTION_IDS","moveAddressBook","icon","ShareInfoRow","text","Icon","left","ShareInfoModal","test","concat","stopPropagation","AddressBookTrashModal","onRestore","trashFolder","trashAddressBook","actionLabel","onActionClick","generateMenuAction","uiAction","executionParams","useAddressBookContextualMenuItems","createAction","useActionCreateAddressBook","isNestedInTrash","isCreateAllowed","createAddressBook","moveAction","editAction","useActionEditAddressBook","StoreProvider","editAddressBook","deleteAction","useActionDeleteAddressBook","isDeleteAllowed","deleteAddressBook","trashAction","useActionTrashAddressBook","emptyAddressBookAction","useActionEmptyAddressBook","emptyAddressBook","emptyTrashAction","useActionEmptyTrash","emptyTrash","exportAction","useActionExportAddressBook","exportContacts","content","redirectToBlob","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","exportAddressBook","importAction","useActionImportContacts","Promise","resolve","reject","input","multiple","hidden","accept","onchange","files","oncancel","shareInfoAction","useActionShowShareInfo","showShareInfo","removeLinkAction","useActionRemoveAddressBookLink","removeAddressBookLink","sizes","small","DropOverlayContainer","props","folder","depth","DropDenyOverlayContainer","gray1","AccordionCustomComponent","item","moveContactAction","useActionMoveContacts","moveAddressBookAction","onDragEnterAction","dragInfo","data","dragFolderDisable","textProps","accordionItem","getFolderTranslatedName","getFolderIconName","iconColor","getFolderIconColor","to","dropdownItems","statusIcon","RowWithIcon","tooltipText","broken","isRoot","oname","ROOT_NAME","minWidth","Drop","acceptType","onDrop","dragEnterResponse","onDropAction","event","onDragEnter","overlayAcceptComponent","overlayDenyComponent","Drag","dragDisabled","display","AppLink","textDecoration","Dropdown","contextMenu","AccordionItem","createTheme","currentColor","focus","primary","main","secondary","header","highlight","gray0","gray2","gray3","gray4","gray5","gray6","warning","error","info","avatarColors","avatar_1","avatar_2","avatar_3","avatar_4","avatar_5","avatar_6","avatar_7","avatar_8","avatar_9","avatar_10","avatar_11","avatar_12","avatar_13","avatar_14","avatar_15","avatar_16","avatar_17","avatar_18","avatar_19","avatar_20","avatar_21","avatar_22","avatar_23","avatar_24","avatar_25","avatar_26","avatar_27","avatar_28","avatar_29","avatar_30","avatar_31","avatar_32","avatar_33","avatar_34","avatar_35","avatar_36","avatar_37","avatar_38","avatar_39","avatar_40","avatar_41","avatar_42","avatar_43","avatar_44","avatar_45","avatar_46","avatar_47","avatar_48","avatar_49","avatar_50","themeMui","components","MuiSvgIcon","styleOverrides","root","fontSize","fontWeight","MuiAccordionSummary","margin","justifyContent","MuiAccordionDetails","MuiButtonBase","MuiPaper","borderBottomLeftRadius","borderTopLeftRadius","borderBottomRightRadius","borderTopRightRadius","MuiAccordion","boxShadow","SidebarAccordionMui","accordions","localStorageName","setSelectedFolder","buttonFindShares","initialExpanded","openIds","setOpenIds","useLocalStorage","sidebarRef","useRef","accordion","expanded","state","includes","ref","disableGutters","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","f","ExpandMoreIcon","preventDefault","sx","FOREGROUND_COLOR","borderRadius","AccordionDetails","hasId","CustomComp","actions","useGetTagsActions","tag","triggerSearch","runSearch","nanoid","avatarBackground","ZIMBRA_STANDARD_COLORS","hex","avatarIcon","hasAvatar","isGeneric","isQueryFilter","customColor","_extends","TagLabel","alteredProps","createTag","folderIconName","CollapsedSideBarItems","folderIcon","keys","folderIconColor","folderIconTooltip","IconButton","customSize","paddingSize","noop","SecondaryBarView","useParams","tagsAccordionItems","useGetTagsAccordion","tagsFromStore","useTags","open","CustomComponent","acc","v","divider","path","useRouteMatch","roots","useRootsArray","folders","sortFolders","accordionsWithFindShare","disableHover","ThemeProvider","Switch","Route","LOCAL_STORAGES","EXPANDED_ADDRESSBOOKS","BACKGROUND_COLOR"],"sourceRoot":""}