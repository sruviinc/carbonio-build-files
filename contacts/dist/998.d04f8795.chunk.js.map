{"version":3,"file":"998.d04f8795.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/./src/components/styled-components.tsx","webpack://carbonio-contacts-ui/./src/actions/restore-contacts.tsx","webpack://carbonio-contacts-ui/./src/legacy/types/folder.ts","webpack://carbonio-contacts-ui/./src/legacy/ui-actions/contact-actions.jsx","webpack://carbonio-contacts-ui/./src/legacy/ui-actions/actions-context.tsx","webpack://carbonio-contacts-ui/./src/actions/export-contact.tsx","webpack://carbonio-contacts-ui/./src/helpers/download.ts","webpack://carbonio-contacts-ui/./src/legacy/views/app/folder-panel/item-avatar.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/app/folder-panel/item-content.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/folder/list-item-action-wrapper.jsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport {\n\tAvatar,\n\tContainer,\n\tgetColor,\n\tListItem,\n\ttype ListItemProps,\n\tpseudoClasses,\n\tRow\n} from '@zextras/carbonio-design-system';\nimport styled, { css, type DefaultTheme, type SimpleInterpolation } from 'styled-components';\n\nexport const HoverRow = styled(Row)`\n\tposition: relative;\n\tcursor: pointer;\n\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.regular};\n\n\t&:hover {\n\t\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.hover};\n\t}\n`;\n\nexport const HoverContainer = styled(Row)``;\n\nexport const HoverBarContainer = styled(Row)`\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbackground: linear-gradient(to right, transparent, currentColor);\n`;\n\nexport const ListItemContainer = styled(Container)`\n\tposition: relative;\n\tcursor: pointer;\n\t${HoverBarContainer} {\n\t\tdisplay: none;\n\t}\n\n\t&:hover {\n\t\t${HoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n`;\n\nexport const StyledListItem = styled(ListItem).attrs<\n\tListItemProps,\n\t{ backgroundColor?: string | keyof DefaultTheme['palette'] }\n>(({ background, selectedBackground, activeBackground, active, selected }) => ({\n\tbackgroundColor: (active && activeBackground) || (selected && selectedBackground) || background\n}))`\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor && pseudoClasses(theme, backgroundColor, 'color')}\n\ttransition: none;\n\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor &&\n\t\tcss`\n\t\t\t${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(to right, transparent, ${getColor(backgroundColor, theme)});\n\t\t\t}\n\t\t\t&:focus ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.focus`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:hover ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.hover`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:active ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.active`, theme)}\n\t\t\t\t);\n\t\t\t}\n\t\t`}\n`;\n\nexport const ScrollableContainer = styled(Container)`\n\toverflow-y: auto;\n`;\n\nexport const CustomIconAvatar = styled(Avatar)`\n\t& > svg {\n\t\tmax-width: 1.5rem;\n\t\tmax-height: 1.5rem;\n\t\tmin-width: 1.5rem;\n\t\tmin-height: 1.5rem;\n\t}\n`;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { useModal, useSnackbar } from '@zextras/carbonio-design-system';\nimport { every } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { isTrashed } from '../carbonio-ui-commons/helpers/folders';\nimport { getFolder } from '../carbonio-ui-commons/store/zustand/folder';\nimport { Folder } from '../carbonio-ui-commons/types/folder';\nimport { ContactMoveModal } from '../components/modals/contact-move';\nimport { ACTION_IDS, TIMEOUTS } from '../constants';\nimport { Contact } from '../legacy/types/contact';\nimport { apiClient } from '../network/api-client';\n\nexport type RestoreContactsAction = UIAction<\n\t{ contacts?: Array<Contact> },\n\t{ contacts?: Array<Contact> }\n>;\n\nexport const useActionRestoreContacts = (): RestoreContactsAction => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst createModal = useModal();\n\n\tconst canExecute = useCallback<RestoreContactsAction['canExecute']>(\n\t\t({ contacts } = {}): boolean => {\n\t\t\tif (!contacts || contacts.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst parentAddressBooks = contacts.reduce<Array<Folder>>((result, contact) => {\n\t\t\t\tconst folder = getFolder(contact.parent);\n\t\t\t\tif (folder) {\n\t\t\t\t\tresult.push(folder);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, []);\n\n\t\t\treturn every(parentAddressBooks, (addressBook) => isTrashed({ folder: addressBook }));\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<RestoreContactsAction['execute']>(\n\t\t({ contacts } = {}) => {\n\t\t\tif (!contacts || contacts.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!canExecute({ contacts })) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst contactsIds = contacts.map((contact) => contact.id);\n\n\t\t\tconst closeModal = createModal(\n\t\t\t\t{\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<ContactMoveModal\n\t\t\t\t\t\t\tmode={'restore'}\n\t\t\t\t\t\t\tcontacts={contacts}\n\t\t\t\t\t\t\tonMove={(parentAddressBookId) =>\n\t\t\t\t\t\t\t\tapiClient\n\t\t\t\t\t\t\t\t\t.moveContact(contactsIds, parentAddressBookId)\n\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\t\t\t\tkey: `restore-contacts-success`,\n\t\t\t\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\t\t\tlabel: t('messages.snackbar.contact_restored', 'Contacts restored'),\n\t\t\t\t\t\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\t\t\t\tkey: `restore-contacts-error`,\n\t\t\t\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClose={() => closeModal()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\t\t},\n\t\t[canExecute, createModal, createSnackbar, t]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.restoreContacts,\n\t\t\tlabel: t('label.restore', 'Restore'),\n\t\t\ticon: 'RestoreOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nexport const FolderActionsType = {\n\tNEW: 'new',\n\tMOVE: 'move',\n\tDELETE: 'delete',\n\tEDIT: 'edit',\n\tEMPTY: 'empty',\n\tREMOVE_FROM_LIST: 'removeFromList',\n\tRESTORE: 'restore',\n\tSHARE_INFO: 'sharesInfo',\n\tSHARE: 'share',\n\tIMPORT_CONTACTS: 'importContacts',\n\tEXPORT_CONTACTS: 'exportContacts'\n} as const;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Text, useModal, useSnackbar } from '@zextras/carbonio-design-system';\nimport { getAction, FOLDERS, useTags, replaceHistory } from '@zextras/carbonio-shell-ui';\nimport { compact, isEmpty } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { applyTag, applyMultiTag, createAndApplyTag } from './tag-actions';\nimport { useActionExportContact } from '../../actions/export-contact';\nimport { useActionMoveContacts } from '../../actions/move-contacts';\nimport { useActionRestoreContacts } from '../../actions/restore-contacts';\nimport { isTrash } from '../../carbonio-ui-commons/helpers/folders';\nimport { useAppDispatch } from '../hooks/redux';\nimport { contactAction } from '../store/actions/contact-action';\nimport { StoreProvider } from '../store/redux';\nimport { FolderActionsType } from '../types/folder';\n\nconst generateClickableAction = (action, params) => ({\n\tid: action.id,\n\ticon: action.icon,\n\tlabel: action.label,\n\tonClick: (ev) => {\n\t\tif (ev) {\n\t\t\tev.preventDefault();\n\t\t}\n\t\taction.execute(params);\n\t}\n});\n\nexport function mailToContact(contact, t) {\n\tconst [mailTo, available] = getAction('contact-list', 'mail-to', [contact]);\n\treturn available\n\t\t? {\n\t\t\t\t...mailTo,\n\t\t\t\tlabel: t('action.send_msg', 'Send e-mail'),\n\t\t\t\tdisabled: isEmpty(contact?.email)\n\t\t\t}\n\t\t: undefined;\n}\nexport function deletePermanently({ ids, t, dispatch, createSnackbar, createModal, deselectAll }) {\n\treturn {\n\t\tid: 'deletePermanently',\n\t\ticon: 'DeletePermanentlyOutline',\n\t\tlabel: t('action.delete_permanently', 'Delete Permanently'),\n\t\tonClick: (ev) => {\n\t\t\tif (ev) ev.preventDefault();\n\t\t\tconst closeModal = createModal({\n\t\t\t\ttitle: t('messages.modal.delete.sure_delete_contact', {\n\t\t\t\t\tcount: ids.length,\n\t\t\t\t\tdefaultValue_one: 'Are you sure to permanently delete this contact?',\n\t\t\t\t\tdefaultValue_other: 'Are you sure to permanently delete the selected contacts?'\n\t\t\t\t}),\n\t\t\t\tconfirmLabel: t('action.delete_permanently', 'Delete Permanently'),\n\t\t\t\tconfirmColor: 'error',\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tcloseModal();\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tcontactAction({\n\t\t\t\t\t\t\tcontactsIDs: ids,\n\t\t\t\t\t\t\toriginID: FOLDERS.TRASH,\n\t\t\t\t\t\t\tdestinationID: undefined,\n\t\t\t\t\t\t\top: FolderActionsType.DELETE\n\t\t\t\t\t\t})\n\t\t\t\t\t).then((res) => {\n\t\t\t\t\t\tdeselectAll && deselectAll();\n\t\t\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t\t\t\t'messages.snackbar.contact_deleted_permanently',\n\t\t\t\t\t\t\t\t\t'Contact permanently deleted'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\t\t\tautoHideTimeout: 3000\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonClose: () => closeModal(),\n\t\t\t\tshowCloseIcon: true,\n\t\t\t\tchildren: (\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<Text overflow=\"break-word\">\n\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t'messages.modal.delete.if_delete_lost_forever',\n\t\t\t\t\t\t\t\t'By permanently deleting this contact you will not be able to recover it anymore, continue?'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\t};\n}\nexport function moveToTrash({ ids, t, dispatch, parent, createSnackbar, deselectAll }) {\n\tconst restoreContact = () => {\n\t\tdispatch(\n\t\t\tcontactAction({\n\t\t\t\tcontactsIDs: ids,\n\t\t\t\toriginID: FOLDERS.TRASH,\n\t\t\t\tdestinationID: parent,\n\t\t\t\top: FolderActionsType.MOVE\n\t\t\t})\n\t\t).then((res) => {\n\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `trash`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tlabel: t('messages.snackbar.contact_restored', 'Contact restored'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `edit`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\treturn {\n\t\tid: isTrash(parent) ? 'deletePermanently' : 'delete',\n\t\ticon: isTrash(parent) ? 'DeletePermanentlyOutline' : 'Trash2Outline',\n\t\tlabel: t('label.delete', 'Delete'),\n\t\tonClick: (ev) => {\n\t\t\tif (ev) ev.preventDefault();\n\n\t\t\tdispatch(\n\t\t\t\tcontactAction({\n\t\t\t\t\tcontactsIDs: ids,\n\t\t\t\t\toriginID: parent,\n\t\t\t\t\tdestinationID: isTrash(parent) ? undefined : FOLDERS.TRASH,\n\t\t\t\t\top: isTrash(parent) ? FolderActionsType.DELETE : FolderActionsType.MOVE\n\t\t\t\t})\n\t\t\t).then((res) => {\n\t\t\t\tdeselectAll && deselectAll();\n\t\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `trash`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: t('messages.snackbar.contact_moved_to_trash', 'Contact moved to trash'),\n\t\t\t\t\t\tautoHideTimeout: 5000,\n\t\t\t\t\t\thideButton: false,\n\t\t\t\t\t\tactionLabel: 'Undo',\n\t\t\t\t\t\tonActionClick: () => restoreContact()\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `edit`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport const useContextActions = (folderId) => {\n\tconst [t] = useTranslation();\n\tconst dispatch = useAppDispatch();\n\tconst createSnackbar = useSnackbar();\n\tconst createModal = useModal();\n\tconst tags = useTags();\n\tconst exportAction = useActionExportContact();\n\tconst moveAction = useActionMoveContacts();\n\tconst restoreAction = useActionRestoreContacts();\n\n\tswitch (folderId) {\n\t\tcase FOLDERS.TRASH:\n\t\t\treturn (contact) => [\n\t\t\t\t...(restoreAction.canExecute({ contacts: [contact] })\n\t\t\t\t\t? [generateClickableAction(restoreAction, { contacts: [contact] })]\n\t\t\t\t\t: []),\n\t\t\t\tdeletePermanently({\n\t\t\t\t\tids: [contact.id],\n\t\t\t\t\tt,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tcreateSnackbar,\n\t\t\t\t\tcreateModal\n\t\t\t\t}),\n\t\t\t\t...(exportAction.canExecute() ? [generateClickableAction(exportAction, contact)] : []),\n\t\t\t\tapplyTag({ contact, tags, t, context: { createAndApplyTag, createModal } })\n\t\t\t];\n\n\t\tdefault:\n\t\t\treturn (contact) =>\n\t\t\t\tcompact([\n\t\t\t\t\tmoveToTrash({\n\t\t\t\t\t\tids: [contact.id],\n\t\t\t\t\t\tt,\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\tparent: contact.parent,\n\t\t\t\t\t\tcreateSnackbar,\n\t\t\t\t\t\treplaceHistory\n\t\t\t\t\t}),\n\t\t\t\t\tmailToContact(contact, t),\n\t\t\t\t\t...(moveAction.canExecute({ contacts: [contact] })\n\t\t\t\t\t\t? [generateClickableAction(moveAction, { contacts: [contact] })]\n\t\t\t\t\t\t: []),\n\t\t\t\t\t...(exportAction.canExecute(contact)\n\t\t\t\t\t\t? [generateClickableAction(exportAction, contact)]\n\t\t\t\t\t\t: []),\n\t\t\t\t\tapplyTag({ contact, tags, t, context: { createAndApplyTag, createModal } })\n\t\t\t\t]);\n\t}\n};\n\nexport const useHoverActions = (folderId) => {\n\tconst [t] = useTranslation();\n\tconst dispatch = useAppDispatch();\n\tconst createSnackbar = useSnackbar();\n\tconst createModal = useModal();\n\tconst moveAction = useActionMoveContacts();\n\tconst restoreAction = useActionRestoreContacts();\n\n\tswitch (folderId) {\n\t\tcase FOLDERS.TRASH:\n\t\t\treturn (contact) => [\n\t\t\t\t...(restoreAction.canExecute({ contacts: [contact] })\n\t\t\t\t\t? [generateClickableAction(restoreAction, { contacts: [contact] })]\n\t\t\t\t\t: []),\n\t\t\t\tdeletePermanently({\n\t\t\t\t\tids: [contact.id],\n\t\t\t\t\tt,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tcreateSnackbar,\n\t\t\t\t\tcreateModal\n\t\t\t\t})\n\t\t\t];\n\n\t\tdefault:\n\t\t\treturn (contact) =>\n\t\t\t\tcompact([\n\t\t\t\t\tmoveToTrash({\n\t\t\t\t\t\tids: [contact.id],\n\t\t\t\t\t\tt,\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\tparent: contact.parent,\n\t\t\t\t\t\tcreateSnackbar,\n\t\t\t\t\t\treplaceHistory\n\t\t\t\t\t}),\n\t\t\t\t\tmailToContact(contact, t),\n\t\t\t\t\t...(moveAction.canExecute({ contacts: [contact] })\n\t\t\t\t\t\t? [generateClickableAction(moveAction, { contacts: [contact] })]\n\t\t\t\t\t\t: [])\n\t\t\t\t]);\n\t}\n};\n\nexport const primaryActions = ({ folderId }) => {\n\tswitch (folderId) {\n\t\tcase FOLDERS.TRASH:\n\t\t\treturn () => [];\n\n\t\tdefault:\n\t\t\treturn () => [];\n\t}\n};\nexport const secondaryActions = ({\n\tfolderId,\n\tt,\n\tdispatch,\n\treplaceHistory,\n\tcreateSnackbar,\n\tcreateModal,\n\tselectedIds,\n\tdeselectAll,\n\ttags,\n\tselectedContacts,\n\tids\n}) => {\n\tswitch (folderId) {\n\t\tcase FOLDERS.TRASH:\n\t\t\treturn () => [\n\t\t\t\tdeletePermanently({\n\t\t\t\t\tids: selectedIds,\n\t\t\t\t\tt,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tcreateSnackbar,\n\t\t\t\t\tcreateModal,\n\t\t\t\t\tdeselectAll\n\t\t\t\t}),\n\t\t\t\tapplyMultiTag({\n\t\t\t\t\tt,\n\t\t\t\t\ttags,\n\t\t\t\t\tids,\n\t\t\t\t\tcontacts: selectedContacts,\n\t\t\t\t\tdeselectAll,\n\t\t\t\t\tfolderId\n\t\t\t\t})\n\t\t\t];\n\n\t\tdefault:\n\t\t\treturn () => [\n\t\t\t\tmoveToTrash({\n\t\t\t\t\tids: selectedIds,\n\t\t\t\t\tt,\n\t\t\t\t\tdispatch,\n\t\t\t\t\tfolderId,\n\t\t\t\t\tcreateSnackbar,\n\t\t\t\t\tdeselectAll,\n\t\t\t\t\treplaceHistory\n\t\t\t\t}),\n\t\t\t\tapplyMultiTag({\n\t\t\t\t\tt,\n\t\t\t\t\ttags,\n\t\t\t\t\tids,\n\t\t\t\t\tcontacts: selectedContacts,\n\t\t\t\t\tdeselectAll,\n\t\t\t\t\tfolderId\n\t\t\t\t})\n\t\t\t];\n\t}\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { ComponentType, createContext, FC, useCallback, useMemo } from 'react';\n\nimport { useModal, useSnackbar } from '@zextras/carbonio-design-system';\nimport { replaceHistory, useTags } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n\tuseContextActions,\n\tuseHoverActions,\n\tprimaryActions,\n\tsecondaryActions\n} from './contact-actions';\nimport { useAppDispatch } from '../hooks/redux';\nimport { Contact } from '../types/contact';\n\ntype ACPProps = {\n\tfolderId: string;\n\tselectedIds: Array<string>;\n\tdeselectAll: () => void;\n};\n\ntype ActionObj = {\n\tid: string;\n\tlabel: string;\n\tonClick: (e: React.SyntheticEvent<HTMLElement> | KeyboardEvent) => void;\n\tcustomComponent: ComponentType;\n\titems: Array<ActionObj>;\n\ticon: string;\n};\n\ntype ActionList = Array<ActionObj>;\n\ntype SingleContactActionsProvider = (item: Contact) => ActionList;\ntype MultipleContactsActionsProvider = () => ActionList;\n\nexport const ActionsContext = createContext<{\n\tgetContextActions: SingleContactActionsProvider;\n\tgetHoverActions: SingleContactActionsProvider;\n\tgetPrimaryActions: MultipleContactsActionsProvider;\n\tgetSecondaryActions: MultipleContactsActionsProvider;\n}>({\n\tgetContextActions: () => [],\n\tgetHoverActions: () => [],\n\tgetPrimaryActions: () => [],\n\tgetSecondaryActions: () => []\n});\n\nexport const ActionsContextProvider: FC<ACPProps & { selectedContacts: Contact[] }> = ({\n\tchildren,\n\tfolderId,\n\tselectedIds,\n\tdeselectAll,\n\tselectedContacts\n}) => {\n\tconst [t] = useTranslation();\n\tconst ids = useMemo(() => Object.keys(selectedIds ?? []), [selectedIds]);\n\tconst dispatch = useAppDispatch();\n\tconst createSnackbar = useSnackbar();\n\tconst createModal = useModal();\n\tconst tags = useTags();\n\tconst contextActions = useContextActions(folderId);\n\tconst hoverActions = useHoverActions(folderId);\n\n\tconst [\n\t\tcontextActionsCallback,\n\t\thoverActionsCallback,\n\t\tprimaryActionsCallback,\n\t\tsecondaryActionsCallback\n\t] = useMemo(\n\t\t() => [\n\t\t\tcontextActions,\n\t\t\thoverActions,\n\t\t\tprimaryActions({\n\t\t\t\tfolderId,\n\t\t\t\tt,\n\t\t\t\tdispatch,\n\t\t\t\treplaceHistory,\n\t\t\t\tcreateSnackbar,\n\t\t\t\tcreateModal,\n\t\t\t\tselectedIds,\n\t\t\t\tdeselectAll\n\t\t\t}),\n\t\t\tsecondaryActions({\n\t\t\t\tfolderId,\n\t\t\t\tt,\n\t\t\t\tdispatch,\n\t\t\t\treplaceHistory,\n\t\t\t\tcreateSnackbar,\n\t\t\t\tcreateModal,\n\t\t\t\tselectedIds,\n\t\t\t\tdeselectAll,\n\t\t\t\ttags,\n\t\t\t\tids,\n\t\t\t\tselectedContacts\n\t\t\t})\n\t\t],\n\t\t[\n\t\t\tcontextActions,\n\t\t\thoverActions,\n\t\t\tfolderId,\n\t\t\tt,\n\t\t\tdispatch,\n\t\t\tcreateSnackbar,\n\t\t\tcreateModal,\n\t\t\tselectedIds,\n\t\t\tdeselectAll,\n\t\t\ttags,\n\t\t\tids,\n\t\t\tselectedContacts\n\t\t]\n\t);\n\n\tconst getContextActions = useCallback<SingleContactActionsProvider>(\n\t\t(item: Contact): ActionList => contextActionsCallback(item),\n\t\t[contextActionsCallback]\n\t);\n\tconst getHoverActions = useCallback<SingleContactActionsProvider>(\n\t\t(item: Contact): ActionList => hoverActionsCallback(item),\n\t\t[hoverActionsCallback]\n\t);\n\tconst getPrimaryActions = useCallback<MultipleContactsActionsProvider>(\n\t\t(): ActionList => primaryActionsCallback(),\n\t\t[primaryActionsCallback]\n\t);\n\tconst getSecondaryActions = useCallback<MultipleContactsActionsProvider>(\n\t\t(): ActionList => secondaryActionsCallback(),\n\t\t[secondaryActionsCallback]\n\t);\n\n\treturn (\n\t\t<ActionsContext.Provider\n\t\t\tvalue={{ getContextActions, getHoverActions, getPrimaryActions, getSecondaryActions }}\n\t\t>\n\t\t\t{children}\n\t\t</ActionsContext.Provider>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { ACTION_IDS, TIMEOUTS } from '../constants';\nimport { redirectToBlob } from '../helpers/download';\nimport { getDisplayName } from '../legacy/hooks/use-display-name';\nimport { Contact } from '../legacy/types/contact';\nimport { apiClient } from '../network/api-client';\n\nconst FILENAME_EXTENSION = 'vcf';\nconst MIME_TYPE = 'text/vcard';\n\nexport type ExportContactAction = UIAction<Contact, Contact>;\n\nexport const useActionExportContact = (): ExportContactAction => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\n\tconst canExecute = useCallback<ExportContactAction['canExecute']>(\n\t\t(contact?: Contact): boolean => {\n\t\t\tif (!contact) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[]\n\t);\n\n\tconst execute = useCallback<ExportContactAction['execute']>(\n\t\t(contact) => {\n\t\t\tif (!canExecute(contact)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!contact) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = `${getDisplayName(contact) ?? contact.id}.${FILENAME_EXTENSION}`;\n\n\t\t\tapiClient\n\t\t\t\t.getItem(contact.id)\n\t\t\t\t.then((content) => {\n\t\t\t\t\tredirectToBlob(content, fileName, MIME_TYPE);\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: 'export-contact-success',\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tlabel: t('export_contact.snackbar.success', 'vCard file exported successfully'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: 'export-contact-error',\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: TIMEOUTS.defaultSnackbar,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\t[canExecute, createSnackbar, t]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.exportContact,\n\t\t\tlabel: t('label.export_contact', 'Export vCard file'),\n\t\t\ticon: 'DownloadOutline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n/**\n * Redirect the browser to the given file\n *\n * This function is not testable\n *\n * @param content\n * @param fileName\n * @param mimeType\n */\nexport const redirectToBlob = (content: string, fileName: string, mimeType: string): void => {\n\tconst blob = new Blob([content], { type: mimeType });\n\tconst url = window.URL.createObjectURL(blob);\n\tconst a = document.createElement('a');\n\ta.href = url;\n\ta.download = fileName;\n\ta.click();\n\twindow.URL.revokeObjectURL(url);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Avatar, Container, Tooltip } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst AvatarElement = styled(Avatar)`\n\twidth: 2.625rem !important;\n\theight: 2.625rem !important;\n\tmin-width: 2.625rem !important;\n\tmin-height: 2.625rem !important;\n\tp {\n\t\tfont-size: 0.875rem;\n\t}\n`;\nexport const ItemAvatar = ({ item, selected, selecting, toggle, isSearch = false }) => {\n\tconst [t] = useTranslation();\n\tconst conversationSelect = useCallback(\n\t\t(id) => (ev) => {\n\t\t\tev.preventDefault();\n\t\t\ttoggle(id);\n\t\t},\n\t\t[toggle]\n\t);\n\tconst activateSelectionMode = useMemo(\n\t\t() =>\n\t\t\tisSearch\n\t\t\t\t? t(\n\t\t\t\t\t\t'label.search_activate_selection_mode',\n\t\t\t\t\t\t'Selection mode isn’t available yet on search results'\n\t\t\t\t\t)\n\t\t\t\t: t('label.activate_selection_mode', 'Activate selection mode'),\n\t\t[t, isSearch]\n\t);\n\treturn (\n\t\t<Container\n\t\t\tdata-testid={`AvatarContainer`}\n\t\t\tpadding={{ all: 'small' }}\n\t\t\twidth=\"fit\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t>\n\t\t\t<Tooltip label={activateSelectionMode} disabled={selecting} maxWidth=\"100%\">\n\t\t\t\t<AvatarElement\n\t\t\t\t\tselecting={selecting}\n\t\t\t\t\tselected={selected}\n\t\t\t\t\tlabel={`${item.firstName} ${item.middleName} ${item.lastName}`}\n\t\t\t\t\tonClick={conversationSelect(item.id)}\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport { Text, Row, Tooltip, Container, Padding, Icon } from '@zextras/carbonio-design-system';\nimport { trim } from 'lodash';\n\nimport { useDisplayName } from '../../../hooks/use-display-name';\nimport { useTagExist } from '../../../ui-actions/tag-actions';\n\nexport const RowInfo = ({ item, tags }) => {\n\tconst tagIcon = useMemo(() => (tags?.length > 1 ? 'TagsMoreOutline' : 'Tag'), [tags]);\n\tconst tagIconColor = useMemo(() => (tags?.length === 1 ? tags?.[0]?.color : undefined), [tags]);\n\n\tconst isTagInStore = useTagExist(tags);\n\tconst showTagIcon = useMemo(\n\t\t() => item.tags && item.tags.length !== 0 && item.tags?.[0] !== '' && isTagInStore,\n\t\t[isTagInStore, item.tags]\n\t);\n\n\treturn (\n\t\t<Row>\n\t\t\t{showTagIcon && (\n\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t<Icon data-testid=\"TagIcon\" icon={tagIcon} color={tagIconColor} />\n\t\t\t\t</Padding>\n\t\t\t)}\n\t\t</Row>\n\t);\n};\n\nexport const ItemContent = ({ item, tags }) => {\n\tconst displayName = useDisplayName(item);\n\tconst secondaryRow = useMemo(\n\t\t() =>\n\t\t\ttrim(\n\t\t\t\t`${Object.values(item.email).length > 0 ? Object.values(item.email)[0].mail : ''}, ${\n\t\t\t\t\tObject.values(item.phone).length > 0 ? Object.values(item.phone)[0].number : ''\n\t\t\t\t}`,\n\t\t\t\t', '\n\t\t\t),\n\t\t[item]\n\t);\n\treturn (\n\t\t<Row\n\t\t\tmainAlignment=\"space-around\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\torientation=\"vertical\"\n\t\t\tpadding={{ all: 'small', right: 'medium' }}\n\t\t\ttakeAvailableSpace\n\t\t>\n\t\t\t<Container orientation=\"horizontal\" height=\"fit\" width=\"fill\">\n\t\t\t\t<Row wrap=\"nowrap\" takeAvailableSpace mainAlignment=\"flex-start\">\n\t\t\t\t\t<Text>{displayName}</Text>\n\t\t\t\t</Row>\n\t\t\t\t<RowInfo item={item} tags={tags} />\n\t\t\t</Container>\n\t\t\t<Tooltip label={secondaryRow} overflow=\"break-word\" maxWidth=\"60vw\">\n\t\t\t\t<Text\n\t\t\t\t\tdata-testid=\"SenderSecondText\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tweight=\"regular\"\n\t\t\t\t\toverflow=\"ellipsis\"\n\t\t\t\t>\n\t\t\t\t\t{secondaryRow}\n\t\t\t\t</Text>\n\t\t\t</Tooltip>\n\t\t</Row>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useContext, useMemo } from 'react';\n\nimport { Container, Tooltip, Dropdown, IconButton } from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\nimport { HoverRow } from '../../../components/styled-components';\nimport { ActionsContext } from '../../ui-actions/actions-context';\n\nconst HoverBarContainer = styled(Container)`\n\ttop: 0;\n\tright: 0;\n\n\tdisplay: none;\n\tposition: absolute;\n\tbackground: linear-gradient(to right, transparent, ${({ theme }) => theme.palette.gray6.hover});\n\theight: 45%;\n\t& > * {\n\t\tmargin-top: ${({ theme }) => theme.sizes.padding.small};\n\t\tmargin-right: ${({ theme }) => theme.sizes.padding.small};\n\t}\n`;\n\nconst CustomHoverRow = styled(HoverRow)`\n\tbackground: #ffffff;\n\t&:hover {\n\t\tbackground: ${({ theme }) => theme.palette.gray6.hover};\n\t\t& ${HoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t\tmargin: 8px;\n\t\t}\n\t}\n`;\n\nconst ListItemActionWrapper = ({ children, current, onClick, contact }) => {\n\tconst { getContextActions, getHoverActions } = useContext(ActionsContext);\n\n\tconst hoverActions = useMemo(() => getHoverActions(contact), [contact, getHoverActions]);\n\tconst dropdownActions = useMemo(() => getContextActions(contact), [contact, getContextActions]);\n\treturn (\n\t\t<Dropdown contextMenu items={dropdownActions} display=\"block\" style={{ width: '100%' }}>\n\t\t\t<CustomHoverRow\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tcrossAlignment=\"unset\"\n\t\t\t\tonClick={onClick}\n\t\t\t\tcurrent={current}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t\t<HoverBarContainer\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\tmainAlignment=\"flex-end\"\n\t\t\t\t\tcrossAlignment=\"center\"\n\t\t\t\t\tpadding={{ right: 'small' }}\n\t\t\t\t>\n\t\t\t\t\t{hoverActions.map((action) => (\n\t\t\t\t\t\t<Tooltip key={action.id} label={action.label}>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tkey={action.id}\n\t\t\t\t\t\t\t\ticon={action.icon}\n\t\t\t\t\t\t\t\tonClick={(ev) => {\n\t\t\t\t\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t\t\t\t\taction.onClick(ev);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tdisabled={action.disabled}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t))}\n\t\t\t\t</HoverBarContainer>\n\t\t\t</CustomHoverRow>\n\t\t</Dropdown>\n\t);\n};\n\nexport default ListItemActionWrapper;\n"],"names":["HoverRow","styled","Row","withConfig","displayName","componentId","theme","palette","transparent","regular","hover","HoverContainer","HoverBarContainer","ListItemContainer","Container","StyledListItem","ListItem","attrs","background","selectedBackground","activeBackground","active","selected","backgroundColor","pseudoClasses","css","getColor","ScrollableContainer","CustomIconAvatar","Avatar","useActionRestoreContacts","t","useTranslation","createSnackbar","useSnackbar","createModal","useModal","canExecute","useCallback","contacts","length","parentAddressBooks","reduce","result","contact","folder","getFolder","parent","push","every","addressBook","isTrashed","execute","contactsIds","map","id","closeModal","children","React","ContactMoveModal","mode","onMove","parentAddressBookId","apiClient","moveContact","then","key","replace","type","label","autoHideTimeout","TIMEOUTS","defaultSnackbar","hideButton","catch","onClose","useMemo","ACTION_IDS","restoreContacts","icon","FolderActionsType","generateClickableAction","action","params","onClick","ev","preventDefault","mailToContact","mailTo","available","getAction","disabled","isEmpty","email","undefined","deletePermanently","ids","dispatch","deselectAll","title","count","defaultValue_one","defaultValue_other","confirmLabel","confirmColor","onConfirm","contactAction","contactsIDs","originID","FOLDERS","TRASH","destinationID","op","res","includes","showCloseIcon","StoreProvider","Text","overflow","moveToTrash","isTrash","actionLabel","onActionClick","primaryActions","folderId","secondaryActions","replaceHistory","selectedIds","tags","selectedContacts","applyMultiTag","ActionsContext","createContext","getContextActions","getHoverActions","getPrimaryActions","getSecondaryActions","ActionsContextProvider","Object","keys","useAppDispatch","useTags","contextActions","exportAction","useActionExportContact","fileName","getDisplayName","getItem","content","redirectToBlob","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","err","exportContact","moveAction","useActionMoveContacts","restoreAction","applyTag","context","createAndApplyTag","compact","useContextActions","hoverActions","useHoverActions","contextActionsCallback","hoverActionsCallback","primaryActionsCallback","secondaryActionsCallback","item","Provider","value","AvatarElement","ItemAvatar","selecting","toggle","isSearch","conversationSelect","activateSelectionMode","padding","all","width","mainAlignment","Tooltip","maxWidth","firstName","middleName","lastName","size","RowInfo","tagIcon","tagIconColor","color","isTagInStore","useTagExist","showTagIcon","Padding","left","Icon","ItemContent","useDisplayName","secondaryRow","trim","values","mail","phone","number","crossAlignment","orientation","right","takeAvailableSpace","height","wrap","weight","gray6","sizes","small","CustomHoverRow","ListItemActionWrapper","current","useContext","dropdownActions","Dropdown","contextMenu","items","display","style","IconButton","stopPropagation"],"sourceRoot":""}