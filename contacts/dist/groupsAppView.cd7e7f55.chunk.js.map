{"version":3,"file":"groupsAppView.cd7e7f55.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/./src/actions/copy-to-clipboard.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/utils/clipboard.ts","webpack://carbonio-contacts-ui/./src/actions/send-email.ts","webpack://carbonio-contacts-ui/./src/components/Text.tsx","webpack://carbonio-contacts-ui/./src/components/dl-details-info.tsx","webpack://carbonio-contacts-ui/./src/components/filter-members-icon.tsx","webpack://carbonio-contacts-ui/./src/components/shimmed-displayer-list-item.tsx","webpack://carbonio-contacts-ui/./src/components/loading-items.tsx","webpack://carbonio-contacts-ui/./src/components/manager-list.tsx","webpack://carbonio-contacts-ui/./src/components/member-displayer-list-item.tsx","webpack://carbonio-contacts-ui/./src/components/styled-components.tsx","webpack://carbonio-contacts-ui/./src/hooks/use-dl-tabs.ts","webpack://carbonio-contacts-ui/./src/store/contact-groups.ts","webpack://carbonio-contacts-ui/./src/components/cg-displayer-details.tsx","webpack://carbonio-contacts-ui/./src/components/displayer-actions-header.tsx","webpack://carbonio-contacts-ui/./src/hooks/useActiveItem.ts","webpack://carbonio-contacts-ui/./src/components/displayer-header.tsx","webpack://carbonio-contacts-ui/./src/hooks/useActiveContactGroup.ts","webpack://carbonio-contacts-ui/./src/actions/send-email-cg.ts","webpack://carbonio-contacts-ui/./src/hooks/use-contact-group-actions.tsx","webpack://carbonio-contacts-ui/./src/actions/delete-cg.tsx","webpack://carbonio-contacts-ui/./src/actions/edit-cg.ts","webpack://carbonio-contacts-ui/./src/components/cg-displayer.tsx","webpack://carbonio-contacts-ui/./src/components/empty-displayer.tsx","webpack://carbonio-contacts-ui/./src/components/cg-displayer-controller.tsx","webpack://carbonio-contacts-ui/./src/components/contextual-menu.tsx","webpack://carbonio-contacts-ui/./src/components/ListItemHoverBar.tsx","webpack://carbonio-contacts-ui/./src/components/cg-list-item.tsx","webpack://carbonio-contacts-ui/./src/components/main-list.tsx","webpack://carbonio-contacts-ui/./src/components/cg-list.tsx","webpack://carbonio-contacts-ui/./src/views/cg-view.tsx","webpack://carbonio-contacts-ui/./src/hooks/useFindContactGroups.ts","webpack://carbonio-contacts-ui/./src/components/member-list.tsx","webpack://carbonio-contacts-ui/./src/hooks/use-dl-actions.ts","webpack://carbonio-contacts-ui/./src/actions/edit-dl.tsx","webpack://carbonio-contacts-ui/./src/components/dl-displayer.tsx","webpack://carbonio-contacts-ui/./src/components/dl-displayer-controller.tsx","webpack://carbonio-contacts-ui/./src/components/dl-list-item.tsx","webpack://carbonio-contacts-ui/./src/hooks/use-find-distribution-lists.ts","webpack://carbonio-contacts-ui/./src/views/distribution-lists-view.tsx","webpack://carbonio-contacts-ui/./src/views/GroupsAppView.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { copyToClipboard } from '../carbonio-ui-commons/utils/clipboard';\nimport { ACTION_IDS } from '../constants';\n\ntype CopyToClipboardAction = UIAction<string, never>;\nexport const useActionCopyToClipboard = (): CopyToClipboardAction => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst canExecute = useCallback<CopyToClipboardAction['canExecute']>(() => true, []);\n\tconst execute = useCallback<CopyToClipboardAction['execute']>(\n\t\t(text) => {\n\t\t\tif (text) {\n\t\t\t\tcopyToClipboard(text).then(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `clipboard-copy-success-${Date.now()}`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\tlabel: t('snackbar.email_copied_to_clipboard', 'Email copied to clipboard.')\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[createSnackbar, t]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.copyToClipboard,\n\t\t\tlabel: t('action.copy', 'Copy'),\n\t\t\ticon: 'Copy',\n\t\t\tcanExecute,\n\t\t\texecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nconst legacyFallback = (text: string): Promise<void> => {\n\tconst textArea = window.parent.document.createElement('textarea');\n\twindow.parent.document.body.appendChild(textArea);\n\ttextArea.value = text;\n\ttextArea.select();\n\tconst success = window.parent.document.execCommand('copy');\n\twindow.parent.document.body.removeChild(textArea);\n\treturn new Promise<void>((resolve, reject) => {\n\t\tsuccess ? resolve() : reject();\n\t});\n};\n\nexport const copyToClipboard = (text: string): Promise<void> => {\n\tif (!window.parent.navigator.clipboard) {\n\t\treturn legacyFallback(text);\n\t}\n\n\treturn window.parent.navigator.clipboard.writeText(text);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useIntegratedFunction } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { ACTION_IDS } from '../constants';\n\nexport type MailComposerRecipient = { email?: string; isGroup?: boolean };\n\nexport type OpenMailComposerIntegratedFunction = (arg: {\n\trecipients: Array<{\n\t\ttype: 't';\n\t\taddress: string | undefined;\n\t\temail?: string | undefined;\n\t\tisGroup?: boolean | undefined;\n\t}>;\n}) => void;\n\nexport type SendEmailAction = UIAction<Array<string | MailComposerRecipient>, never>;\n\nexport const useActionSendEmail = (): SendEmailAction => {\n\tconst [t] = useTranslation();\n\n\t// FIXME: remove cast when shell will have generics\n\tconst [openMailComposer, isMailAvailable] = useIntegratedFunction('composePrefillMessage') as [\n\t\tOpenMailComposerIntegratedFunction,\n\t\tboolean\n\t];\n\n\tconst sendEmail = useCallback<SendEmailAction['execute']>(\n\t\t(recipients) => {\n\t\t\tif (recipients) {\n\t\t\t\topenMailComposer({\n\t\t\t\t\trecipients: recipients.map((recipient) => ({\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\taddress: typeof recipient === 'string' ? recipient : recipient.email,\n\t\t\t\t\t\temail: typeof recipient === 'string' ? recipient : recipient.email,\n\t\t\t\t\t\tisGroup: typeof recipient === 'string' ? false : recipient.isGroup\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[openMailComposer]\n\t);\n\n\tconst canExecute = useCallback<SendEmailAction['canExecute']>(\n\t\t() => isMailAvailable,\n\t\t[isMailAvailable]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.sendEmail,\n\t\t\tlabel: t('action.mail', 'Send e-mail'),\n\t\t\ticon: 'EmailOutline',\n\t\t\tcanExecute,\n\t\t\texecute: sendEmail\n\t\t}),\n\t\t[canExecute, sendEmail, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport {\n\tText as DSText,\n\ttype TextProps,\n\tTextWithTooltip,\n\ttype TextWithTooltipProps\n} from '@zextras/carbonio-design-system';\nimport styled, { type SimpleInterpolation } from 'styled-components';\n\nimport { MakeOptional } from '../types/utils';\n\ninterface TextExtendedProps {\n\twidth?: string;\n\tcentered?: boolean;\n\titalic?: boolean;\n\tinline?: boolean;\n\tlineHeight?: number;\n}\n\ntype WithDollarPrefix<S extends string> = `$${S}`;\n\ntype WithoutDollarPrefix<S extends string> = S extends `$${infer WithoutDollarString}`\n\t? WithoutDollarString\n\t: S;\n\ntype StyledTextProps = {\n\t[K in WithDollarPrefix<\n\t\tkeyof Omit<TextExtendedProps, 'withTooltip'>\n\t>]: TextExtendedProps[WithoutDollarPrefix<K>];\n};\n\ntype TextWithOptionalTooltipProps =\n\t| ({ withTooltip: true } & MakeOptional<TextWithTooltipProps, 'children'>)\n\t| ({ withTooltip?: false } & TextProps);\n\nconst TextWithOptionalTooltip = ({\n\twithTooltip,\n\tchildren = null,\n\t...rest\n}: TextWithOptionalTooltipProps): React.JSX.Element =>\n\twithTooltip ? (\n\t\t<TextWithTooltip {...rest}>{children}</TextWithTooltip>\n\t) : (\n\t\t<DSText {...rest}>{children}</DSText>\n\t);\n\nconst StyledText = styled(TextWithOptionalTooltip)<StyledTextProps>`\n\twidth: ${({ $width }): SimpleInterpolation => $width};\n\tdisplay: ${({ $inline }): SimpleInterpolation => $inline && 'inline'};\n\tfont-style: ${({ $italic }): SimpleInterpolation => $italic && 'italic'};\n\ttext-align: ${({ $centered }): SimpleInterpolation => $centered && 'center'};\n\tline-height: ${({ $lineHeight }): SimpleInterpolation => $lineHeight};\n`;\nexport const Text = ({\n\twidth,\n\tcentered,\n\titalic,\n\tinline,\n\tlineHeight = 1.5,\n\twithTooltip = false,\n\t...dsProps\n}: TextExtendedProps & TextWithOptionalTooltipProps): React.JSX.Element => (\n\t<StyledText\n\t\t$width={width}\n\t\t$centered={centered}\n\t\t$italic={italic}\n\t\t$inline={inline}\n\t\t$lineHeight={lineHeight}\n\t\twithTooltip={withTooltip}\n\t\t{...dsProps}\n\t/>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { Container, ContainerProps, IconButton, Row } from '@zextras/carbonio-design-system';\n\nimport { CustomIconAvatar } from './styled-components';\nimport { Text } from './Text';\nimport { useActionCopyToClipboard } from '../actions/copy-to-clipboard';\nimport { DistributionList } from '../model/distribution-list';\n\nexport const DLDetailsInfo = ({\n\tdisplayName,\n\temail,\n\t...rest\n}: Pick<DistributionList, 'displayName' | 'email'> & ContainerProps): React.JSX.Element => {\n\tconst copyToClipboardAction = useActionCopyToClipboard();\n\n\tconst copyEmail = useCallback(() => {\n\t\tcopyToClipboardAction.execute(email);\n\t}, [copyToClipboardAction, email]);\n\n\treturn (\n\t\t<Container\n\t\t\torientation={'horizontal'}\n\t\t\tgap={'1rem'}\n\t\t\tmainAlignment={'flex-start'}\n\t\t\tcrossAlignment={'flex-start'}\n\t\t\theight={'auto'}\n\t\t\tdata-testid={'info-container'}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<CustomIconAvatar\n\t\t\t\tshape={'square'}\n\t\t\t\ticon={'DistributionListOutline'}\n\t\t\t\tlabel={displayName || email}\n\t\t\t\tsize={'large'}\n\t\t\t/>\n\t\t\t<Container minWidth={0} crossAlignment={'flex-start'} mainAlignment={'center'}>\n\t\t\t\t<Text weight={'bold'}>{displayName}</Text>\n\t\t\t\t<Row gap={'0.25rem'}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tsize={displayName ? 'small' : 'medium'}\n\t\t\t\t\t\tweight={displayName ? 'regular' : 'bold'}\n\t\t\t\t\t\tcolor={displayName ? 'gray1' : 'text'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{email}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={copyToClipboardAction.icon}\n\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\tonClick={copyEmail}\n\t\t\t\t\t\ttype={'ghost'}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Icon } from '@zextras/carbonio-design-system';\n\nexport const FilterMembersIcon = (): React.JSX.Element => (\n\t<Icon icon={'FunnelOutline'} size={'large'}></Icon>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Row, Shimmer } from '@zextras/carbonio-design-system';\n\nexport const ShimmedDisplayerListItem = (): React.JSX.Element => (\n\t<Row\n\t\twidth={'fill'}\n\t\tmainAlignment={'space-between'}\n\t\tpadding={'small'}\n\t\tgap={'0.5rem'}\n\t\tdata-testid={'shimmed-list-item'}\n\t\twrap={'nowrap'}\n\t>\n\t\t<Row wrap={'nowrap'} gap={'0.5rem'} flexShrink={1} minWidth={'1rem'}>\n\t\t\t<Row flexShrink={0}>\n\t\t\t\t<Shimmer.Avatar size={'medium'} />\n\t\t\t</Row>\n\t\t\t<Row flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t<Shimmer.Text size=\"small\" width=\"25ch\" />\n\t\t\t</Row>\n\t\t</Row>\n\t</Row>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { times } from 'lodash';\n\nimport { ShimmedDisplayerListItem } from './shimmed-displayer-list-item';\n\nexport const loadingItems = (count: number): React.JSX.Element[] =>\n\ttimes(count, (index) => <ShimmedDisplayerListItem key={index} />);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { Container, ListV2, Row } from '@zextras/carbonio-design-system';\nimport { map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { loadingItems } from './loading-items';\nimport { MemberDisplayerListItemComponent } from './member-displayer-list-item';\nimport { Text } from './Text';\nimport { DistributionList, DistributionListOwner } from '../model/distribution-list';\n\ntype ManagerListProps = {\n\tmanagers: DistributionList['owners'];\n\tloading?: boolean;\n};\n\nexport const ManagerList = ({ managers, loading }: ManagerListProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst memberItems = useMemo(\n\t\t() =>\n\t\t\tmap<DistributionListOwner, React.JSX.Element>(managers, (manager) => (\n\t\t\t\t<MemberDisplayerListItemComponent email={manager.name} key={manager.id} />\n\t\t\t)),\n\t\t[managers]\n\t);\n\n\treturn (\n\t\t<Container mainAlignment={'flex-start'} crossAlignment={'flex-start'} gap={'0.5rem'}>\n\t\t\t<Row>\n\t\t\t\t<Text size={'small'} color={'secondary'}>\n\t\t\t\t\t{t('displayer.distribution_list.label.manager_total', 'Manager list {{total}}', {\n\t\t\t\t\t\ttotal: managers?.length ?? 0\n\t\t\t\t\t})}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t<Container minHeight={0} mainAlignment={'flex-start'}>\n\t\t\t\t<ListV2>{(!loading && memberItems) || loadingItems(3)}</ListV2>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Avatar, Button, Row, TextWithTooltip } from '@zextras/carbonio-design-system';\n\nimport { useActionCopyToClipboard } from '../actions/copy-to-clipboard';\nimport { useActionSendEmail } from '../actions/send-email';\n\nexport type MemberDisplayerListItemComponentProps = {\n\temail: string;\n};\n\nexport const MemberDisplayerListItemComponent = ({\n\temail\n}: MemberDisplayerListItemComponentProps): React.JSX.Element => {\n\tconst sendEmailAction = useActionSendEmail();\n\tconst copyToClipboardAction = useActionCopyToClipboard();\n\n\tconst onSendEmail = useCallback(() => {\n\t\tsendEmailAction.execute([email]);\n\t}, [email, sendEmailAction]);\n\n\tconst onCopyEmail = useCallback(() => {\n\t\tcopyToClipboardAction.execute(email);\n\t}, [copyToClipboardAction, email]);\n\n\tconst canSendEmail = useMemo(() => sendEmailAction.canExecute(), [sendEmailAction]);\n\n\treturn (\n\t\t<Row\n\t\t\twidth={'fill'}\n\t\t\tmainAlignment={'space-between'}\n\t\t\tpadding={'small'}\n\t\t\tgap={'0.5rem'}\n\t\t\tdata-testid={'member-list-item'}\n\t\t\twrap={'nowrap'}\n\t\t>\n\t\t\t<Row wrap={'nowrap'} gap={'0.5rem'} flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t<Avatar size={'medium'} label={email} />\n\t\t\t\t<Row flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t\t<TextWithTooltip size={'small'}>{email}</TextWithTooltip>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t\t<Row wrap={'nowrap'} gap={'0.25rem'} flexShrink={1} minWidth={'fit-content'}>\n\t\t\t\t{canSendEmail && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={'outlined'}\n\t\t\t\t\t\tsize={'medium'}\n\t\t\t\t\t\ticon={sendEmailAction.icon}\n\t\t\t\t\t\tonClick={onSendEmail}\n\t\t\t\t\t\tminWidth={'fit-content'}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Button\n\t\t\t\t\ttype={'outlined'}\n\t\t\t\t\tsize={'medium'}\n\t\t\t\t\ticon={copyToClipboardAction.icon}\n\t\t\t\t\tonClick={onCopyEmail}\n\t\t\t\t\tminWidth={'fit-content'}\n\t\t\t\t/>\n\t\t\t</Row>\n\t\t</Row>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport {\n\tAvatar,\n\tContainer,\n\tgetColor,\n\tListItem,\n\ttype ListItemProps,\n\tpseudoClasses,\n\tRow\n} from '@zextras/carbonio-design-system';\nimport styled, { css, type DefaultTheme, type SimpleInterpolation } from 'styled-components';\n\nexport const HoverRow = styled(Row)`\n\tposition: relative;\n\tcursor: pointer;\n\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.regular};\n\n\t&:hover {\n\t\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.hover};\n\t}\n`;\n\nexport const HoverContainer = styled(Row)``;\n\nexport const HoverBarContainer = styled(Row)`\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbackground: linear-gradient(to right, transparent, currentColor);\n`;\n\nexport const ListItemContainer = styled(Container)`\n\tposition: relative;\n\tcursor: pointer;\n\t${HoverBarContainer} {\n\t\tdisplay: none;\n\t}\n\n\t&:hover {\n\t\t${HoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n`;\n\nexport const StyledListItem = styled(ListItem).attrs<\n\tListItemProps,\n\t{ backgroundColor?: string | keyof DefaultTheme['palette'] }\n>(({ background, selectedBackground, activeBackground, active, selected }) => ({\n\tbackgroundColor: (active && activeBackground) || (selected && selectedBackground) || background\n}))`\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor && pseudoClasses(theme, backgroundColor, 'color')}\n\ttransition: none;\n\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor &&\n\t\tcss`\n\t\t\t${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(to right, transparent, ${getColor(backgroundColor, theme)});\n\t\t\t}\n\t\t\t&:focus ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.focus`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:hover ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.hover`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:active ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.active`, theme)}\n\t\t\t\t);\n\t\t\t}\n\t\t`}\n`;\n\nexport const ScrollableContainer = styled(Container)`\n\toverflow-y: auto;\n`;\n\nexport const CustomIconAvatar = styled(Avatar)`\n\t& > svg {\n\t\tmax-width: 1.5rem;\n\t\tmax-height: 1.5rem;\n\t\tmin-width: 1.5rem;\n\t\tmin-height: 1.5rem;\n\t}\n`;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { TabBarProps } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { DL_TABS } from '../constants';\n\ntype UseDLTabsReturnType = {\n\titems: TabBarProps['items'];\n\tselected: string;\n\tonChange: TabBarProps['onChange'];\n};\n\nexport const useDLTabs = (): UseDLTabsReturnType => {\n\tconst [t] = useTranslation();\n\tconst [selected, setSelected] = useState<string>(DL_TABS.details);\n\n\tconst items = useMemo(\n\t\t(): TabBarProps['items'] => [\n\t\t\t{ id: DL_TABS.details, label: t('distribution_list.tabs.details', 'Details') },\n\t\t\t{ id: DL_TABS.members, label: t('distribution_list.tabs.members', 'Member list') },\n\t\t\t{\n\t\t\t\tid: DL_TABS.managers,\n\t\t\t\tlabel: t('distribution_list.tabs.managers', 'Manager list')\n\t\t\t}\n\t\t],\n\t\t[t]\n\t);\n\n\tconst onChange = useCallback<TabBarProps['onChange']>((ev, selectedId) => {\n\t\tsetSelected(selectedId);\n\t}, []);\n\n\treturn { items, selected, onChange };\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { differenceBy, findIndex } from 'lodash';\nimport { create } from 'zustand';\n\nimport { ContactGroup } from '../model/contact-group';\n\nexport function compareContactGroupName(nameA: string, nameB: string): number {\n\tconst nameALow = nameA.toLowerCase();\n\tconst nameBLow = nameB.toLowerCase();\n\tif (nameALow > nameBLow) {\n\t\treturn 1;\n\t}\n\tif (nameBLow > nameALow) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\ntype State = {\n\torderedContactGroups: Array<ContactGroup>;\n\tunorderedContactGroups: Array<ContactGroup>;\n\toffset: number;\n};\n\nexport type ContactGroupStoreActions = {\n\taddContactGroups: (newContactGroups: Array<ContactGroup>) => void;\n\taddContactGroupInSortedPosition: (newContactGroup: ContactGroup) => void;\n\tupdateContactGroup: (contactGroup: ContactGroup) => void;\n\tsetOffset: (offset: number) => void;\n\tremoveContactGroup: (contactGroupId: string) => void;\n\treset: () => void;\n};\n\nexport const initialState: State = {\n\torderedContactGroups: [],\n\tunorderedContactGroups: [],\n\toffset: 0\n};\n\n/**\n * Note: this function will modify the contact Group arrays intentionally\n * */\n// TODO refactor as pure function when Array toSpliced will be available\nfunction addToProperList(\n\tordered: Array<ContactGroup>,\n\tunOrdered: Array<ContactGroup>,\n\tcgToAdd: ContactGroup\n): void {\n\tconst idxToAdd = findIndex(\n\t\tordered,\n\t\t(item) => compareContactGroupName(cgToAdd.title, item.title) < 0\n\t);\n\tif (idxToAdd < ordered.length && idxToAdd >= 0) {\n\t\tordered.splice(idxToAdd, 0, cgToAdd);\n\t} else if (unOrdered.length === 0) {\n\t\tunOrdered.push(cgToAdd);\n\t} else {\n\t\tconst unorderedIdxToAdd = findIndex(\n\t\t\tunOrdered,\n\t\t\t(item) => compareContactGroupName(cgToAdd.title, item.title) < 0\n\t\t);\n\t\tunOrdered.splice(unorderedIdxToAdd, 0, cgToAdd);\n\t}\n}\n\n// extra currying as suggested in https://github.com/pmndrs/zustand/blob/main/docs/guides/typescript.md#basic-usage\nexport const useContactGroupStore = create<State & ContactGroupStoreActions>()((set, get) => ({\n\t...initialState,\n\treset: (): void => {\n\t\tset(initialState);\n\t},\n\tupdateContactGroup: (contactGroup): void => {\n\t\tconst { orderedContactGroups, unorderedContactGroups, offset } = get();\n\t\tconst idxToRemove = orderedContactGroups.findIndex((item) => item.id === contactGroup.id);\n\n\t\tconst newOrderedContactGroups = [...orderedContactGroups];\n\t\tconst newUnorderedContactGroups = [...unorderedContactGroups];\n\t\tif (idxToRemove >= 0) {\n\t\t\tnewOrderedContactGroups.splice(idxToRemove, 1);\n\t\t\taddToProperList(newOrderedContactGroups, newUnorderedContactGroups, contactGroup);\n\t\t\tset(() => ({\n\t\t\t\torderedContactGroups: newOrderedContactGroups,\n\t\t\t\tunorderedContactGroups: newUnorderedContactGroups,\n\t\t\t\toffset:\n\t\t\t\t\tnewOrderedContactGroups.length === orderedContactGroups.length || offset === -1\n\t\t\t\t\t\t? offset\n\t\t\t\t\t\t: offset + newOrderedContactGroups.length - orderedContactGroups.length\n\t\t\t}));\n\t\t} else {\n\t\t\tconst uIdxToRemove = unorderedContactGroups.findIndex((item) => item.id === contactGroup.id);\n\t\t\tif (uIdxToRemove >= 0) {\n\t\t\t\tnewUnorderedContactGroups.splice(uIdxToRemove, 1);\n\t\t\t\taddToProperList(newOrderedContactGroups, newUnorderedContactGroups, contactGroup);\n\t\t\t\tset(() => ({\n\t\t\t\t\torderedContactGroups: newOrderedContactGroups,\n\t\t\t\t\tunorderedContactGroups: newUnorderedContactGroups,\n\t\t\t\t\toffset:\n\t\t\t\t\t\tnewOrderedContactGroups.length === orderedContactGroups.length || offset === -1\n\t\t\t\t\t\t\t? offset\n\t\t\t\t\t\t\t: offset + newOrderedContactGroups.length - orderedContactGroups.length\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthrow new Error('Contact group not found');\n\t\t\t}\n\t\t}\n\t},\n\tsetOffset: (offset): void => set(() => ({ offset })),\n\taddContactGroups: (contactGroups): void => {\n\t\tconst { orderedContactGroups, unorderedContactGroups } = get();\n\n\t\tif (unorderedContactGroups.length > 0) {\n\t\t\tconst unorderedResult = differenceBy(unorderedContactGroups, contactGroups, (cg) => cg.id);\n\t\t\tset(() => ({\n\t\t\t\torderedContactGroups: [...(orderedContactGroups ?? []), ...contactGroups],\n\t\t\t\tunorderedContactGroups: unorderedResult\n\t\t\t}));\n\t\t} else {\n\t\t\tset(() => ({\n\t\t\t\torderedContactGroups: [...(orderedContactGroups ?? []), ...contactGroups]\n\t\t\t}));\n\t\t}\n\t},\n\tremoveContactGroup: (contactGroupId: string): void => {\n\t\tconst { orderedContactGroups, unorderedContactGroups, offset } = get();\n\t\tconst idx = orderedContactGroups.findIndex(\n\t\t\t(contactGroup) => contactGroup.id === contactGroupId\n\t\t);\n\t\tif (idx >= 0) {\n\t\t\tset(() => ({\n\t\t\t\t// TODO replace with Array toSpliced when will be available\n\t\t\t\torderedContactGroups: orderedContactGroups.filter(\n\t\t\t\t\t(contactGroup) => contactGroup.id !== contactGroupId\n\t\t\t\t),\n\t\t\t\toffset: offset - 1\n\t\t\t}));\n\t\t} else {\n\t\t\tconst uIdx = unorderedContactGroups.findIndex(\n\t\t\t\t(contactGroup) => contactGroup.id === contactGroupId\n\t\t\t);\n\t\t\tif (uIdx >= 0) {\n\t\t\t\tset(() => ({\n\t\t\t\t\t// TODO replace with Array toSpliced when will be available\n\t\t\t\t\tunorderedContactGroups: unorderedContactGroups.filter(\n\t\t\t\t\t\t(contactGroup) => contactGroup.id !== contactGroupId\n\t\t\t\t\t)\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthrow new Error('Contact group not found');\n\t\t\t}\n\t\t}\n\t},\n\taddContactGroupInSortedPosition: (newContactGroup: ContactGroup): void => {\n\t\tconst { orderedContactGroups, unorderedContactGroups, offset } = get();\n\t\tconst newOrderedContactGroups = [...orderedContactGroups];\n\t\tconst newUnorderedContactGroups = [...unorderedContactGroups];\n\t\taddToProperList(newOrderedContactGroups, newUnorderedContactGroups, newContactGroup);\n\t\tset(() => ({\n\t\t\torderedContactGroups: newOrderedContactGroups,\n\t\t\tunorderedContactGroups: newUnorderedContactGroups,\n\t\t\toffset:\n\t\t\t\tnewOrderedContactGroups.length === orderedContactGroups.length || offset === -1\n\t\t\t\t\t? offset\n\t\t\t\t\t: offset + newOrderedContactGroups.length - orderedContactGroups.length\n\t\t}));\n\t}\n}));\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport { Container, Divider, ListV2, Row } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { MemberDisplayerListItemComponent } from './member-displayer-list-item';\nimport { CustomIconAvatar } from './styled-components';\nimport { Text } from './Text';\nimport { ContactGroup } from '../model/contact-group';\n\nexport type CGDisplayerDetailsProps = {\n\tcontactGroup: ContactGroup;\n};\n\nexport const CGDisplayerDetails = ({\n\tcontactGroup\n}: CGDisplayerDetailsProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst { members, title } = contactGroup;\n\n\tconst memberItems = useMemo(\n\t\t() => members.map((member) => <MemberDisplayerListItemComponent email={member} key={member} />),\n\t\t[members]\n\t);\n\n\treturn (\n\t\t<Container\n\t\t\tpadding={{ horizontal: '1rem', top: '1rem', bottom: '0' }}\n\t\t\tcrossAlignment={'flex-start'}\n\t\t\tmainAlignment={'flex-start'}\n\t\t\tgap={'1rem'}\n\t\t\tbackground={'gray6'}\n\t\t\tminHeight={'0'}\n\t\t\theight={'auto'}\n\t\t>\n\t\t\t<Container\n\t\t\t\theight={'fit'}\n\t\t\t\torientation={'horizontal'}\n\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\tgap={'1rem'}\n\t\t\t>\n\t\t\t\t<CustomIconAvatar label={title} size={'large'} icon={'PeopleOutline'} />\n\t\t\t\t<Container height={'fit'} crossAlignment={'flex-start'} minWidth={0}>\n\t\t\t\t\t<Text weight={'bold'}>{title}</Text>\n\t\t\t\t\t<Text size={'small'} color={'secondary'}>\n\t\t\t\t\t\t{t('contactGroupDisplayer.label.members_total', 'Addresses: {{count}}', {\n\t\t\t\t\t\t\tcount: members.length\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Text>\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t\t<Divider color={'gray3'} />\n\t\t\t<Row padding={{ top: '0.5rem' }}>\n\t\t\t\t<Text color={'secondary'}>\n\t\t\t\t\t{t('board.newContactGroup.input.contact_input.title', 'Addresses list')}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t<Container minHeight={'0'} mainAlignment={'flex-start'}>\n\t\t\t\t<ListV2>{memberItems}</ListV2>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport { type Action, Button, Container } from '@zextras/carbonio-design-system';\n\ninterface DisplayerActionsHeaderProps {\n\tactions: Action[];\n}\n\nexport const DisplayerActionsHeader = ({\n\tactions\n}: DisplayerActionsHeaderProps): React.JSX.Element => {\n\tconst actionButtons = useMemo<React.JSX.Element[]>(\n\t\t() =>\n\t\t\tactions.map((action) => (\n\t\t\t\t<Button\n\t\t\t\t\tkey={action.id}\n\t\t\t\t\tlabel={action.label}\n\t\t\t\t\ttype={'outlined'}\n\t\t\t\t\tonClick={action.onClick}\n\t\t\t\t\tsize={'medium'}\n\t\t\t\t\tbackgroundColor={'transparent'}\n\t\t\t\t\tdisabled={action.disabled}\n\t\t\t\t\tcolor={action.color}\n\t\t\t\t/>\n\t\t\t)),\n\t\t[actions]\n\t);\n\n\treturn (\n\t\t<Container\n\t\t\torientation={'horizontal'}\n\t\t\theight={'auto'}\n\t\t\tpadding={{ vertical: '0.5rem' }}\n\t\t\tgap={'0.25rem'}\n\t\t\tmainAlignment={'flex-end'}\n\t\t>\n\t\t\t{actionButtons}\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { useNavigation, type UseNavigationReturnType } from './useNavigation';\nimport { RouteParams, ROUTES_INTERNAL_PARAMS } from '../constants';\n\nexport type UseActiveItemReturnType = {\n\tactiveItem: string | undefined;\n\tisActive: (id: string) => boolean;\n\tsetActive: (id: string, options?: Parameters<UseNavigationReturnType['navigateTo']>[1]) => void;\n\tremoveActive: (options?: Parameters<UseNavigationReturnType['navigateTo']>[1]) => void;\n};\n\nexport const useActiveItem = (): UseActiveItemReturnType => {\n\tconst { navigateTo } = useNavigation();\n\tconst { id, route, filter } = useParams<RouteParams>();\n\tconst activeIdRef = useRef<string>();\n\n\tuseEffect(() => {\n\t\tactiveIdRef.current = id;\n\t}, [id]);\n\n\t/**\n\t * Check if the given id matches the active id.\n\t * The callback is memoized and is not recreated when the active item changes.\n\t * Use activeItem field if you need the dependency to update.\n\t */\n\tconst isActive = useCallback<UseActiveItemReturnType['isActive']>(\n\t\t(itemId) => activeIdRef.current === itemId,\n\t\t[]\n\t);\n\n\tconst currentPath = useMemo<string>(() => {\n\t\tif (route === ROUTES_INTERNAL_PARAMS.route.distributionLists) {\n\t\t\treturn `${route}/${filter ?? ''}`;\n\t\t}\n\t\treturn route ?? '';\n\t}, [filter, route]);\n\n\tconst setActive = useCallback<UseActiveItemReturnType['setActive']>(\n\t\t(itemId, options) => {\n\t\t\tnavigateTo(`${currentPath}/${itemId}`, options);\n\t\t},\n\t\t[currentPath, navigateTo]\n\t);\n\n\tconst removeActive = useCallback<UseActiveItemReturnType['removeActive']>(\n\t\t(options) => {\n\t\t\tnavigateTo(currentPath, options);\n\t\t},\n\t\t[currentPath, navigateTo]\n\t);\n\n\treturn { activeItem: id, isActive, setActive, removeActive };\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { Container, Divider, Icon, IconButton } from '@zextras/carbonio-design-system';\nimport styled, { DefaultTheme } from 'styled-components';\n\nimport { Text } from './Text';\nimport { useActiveItem } from '../hooks/useActiveItem';\n\ninterface DisplayerHeaderProps {\n\ttitle: string;\n\ticon: keyof DefaultTheme['icons'];\n}\n\nconst CustomIcon = styled(Icon)`\n\twidth: 1.125rem;\n\theight: 1.125rem;\n`;\n\nexport const DisplayerHeader = ({ title, icon }: DisplayerHeaderProps): React.JSX.Element => {\n\tconst { removeActive } = useActiveItem();\n\n\tconst closeDisplayer = useCallback(() => {\n\t\tremoveActive();\n\t}, [removeActive]);\n\n\treturn (\n\t\t<Container\n\t\t\torientation={'vertical'}\n\t\t\twidth={'fill'}\n\t\t\theight={'auto'}\n\t\t\tdata-testid={'displayer-header'}\n\t\t>\n\t\t\t<Container\n\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\torientation={'horizontal'}\n\t\t\t\twidth={'fill'}\n\t\t\t\theight={'auto'}\n\t\t\t\tpadding={{ top: '0.5rem', right: '0.5rem', bottom: '0.5rem', left: '1rem' }}\n\t\t\t\tgap={'0.75rem'}\n\t\t\t>\n\t\t\t\t<Container\n\t\t\t\t\twidth={'fit-content'}\n\t\t\t\t\theight={'fit-content'}\n\t\t\t\t\tminWidth={'fit-content'}\n\t\t\t\t\tminHeight={'fit-content'}\n\t\t\t\t>\n\t\t\t\t\t<CustomIcon icon={icon} />\n\t\t\t\t</Container>\n\t\t\t\t<Text withTooltip>{title}</Text>\n\t\t\t\t<Container margin={{ left: 'auto' }} width={'fit'} height={'fit'} flexShrink={0}>\n\t\t\t\t\t<IconButton icon={'CloseOutline'} size={'medium'} onClick={closeDisplayer} />\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t\t<Divider color={'gray3'} />\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useActiveItem } from './useActiveItem';\nimport { ContactGroup } from '../model/contact-group';\nimport { useContactGroupStore } from '../store/contact-groups';\n\nexport const useActiveContactGroup = (): ContactGroup | undefined => {\n\tconst contactGroups = useContactGroupStore((state) => state.orderedContactGroups);\n\tconst unOrderedContactGroups = useContactGroupStore((state) => state.unorderedContactGroups);\n\n\tconst { activeItem } = useActiveItem();\n\n\treturn [...contactGroups, ...unOrderedContactGroups].find(\n\t\t(contactGroup) => contactGroup.id === activeItem\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { useActionSendEmail } from './send-email';\nimport { UIAction } from './types';\nimport { ACTION_IDS } from '../constants';\nimport { ContactGroup } from '../model/contact-group';\n\nexport type SendEmailActionCG = UIAction<ContactGroup, ContactGroup>;\n\nexport const useActionSendEmailCG = (): SendEmailActionCG => {\n\tconst [t] = useTranslation();\n\tconst sendMailAction = useActionSendEmail();\n\n\tconst canExecute = useCallback<SendEmailActionCG['canExecute']>(\n\t\t(contactGroup) =>\n\t\t\tcontactGroup !== undefined && contactGroup.members.length > 0 && sendMailAction.canExecute(),\n\t\t[sendMailAction]\n\t);\n\n\tconst sendEmail = useCallback<SendEmailActionCG['execute']>(\n\t\t(contactGroup) => {\n\t\t\tif (contactGroup === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!canExecute(contactGroup)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsendMailAction.execute(contactGroup.members);\n\t\t},\n\t\t[canExecute, sendMailAction]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.sendEmailCG,\n\t\t\tlabel: t('action.mail', 'Send e-mail'),\n\t\t\ticon: 'EmailOutline',\n\t\t\tcanExecute,\n\t\t\texecute: sendEmail\n\t\t}),\n\t\t[canExecute, sendEmail, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useMemo } from 'react';\n\nimport { type Action as DSAction } from '@zextras/carbonio-design-system';\n\nimport { useActionDeleteCG } from '../actions/delete-cg';\nimport { useActionEditCG } from '../actions/edit-cg';\nimport { useActionSendEmailCG } from '../actions/send-email-cg';\nimport { ContactGroup } from '../model/contact-group';\n\nexport const useContactGroupActions = (contactGroup: ContactGroup): DSAction[] => {\n\tconst deleteCGAction = useActionDeleteCG();\n\tconst sendEmailAction = useActionSendEmailCG();\n\tconst editCGAction = useActionEditCG();\n\n\treturn useMemo<DSAction[]>((): DSAction[] => {\n\t\tconst orderedActions: DSAction[] = [];\n\n\t\tif (sendEmailAction.canExecute(contactGroup)) {\n\t\t\torderedActions.push({\n\t\t\t\tid: sendEmailAction.id,\n\t\t\t\tlabel: sendEmailAction.label,\n\t\t\t\tonClick: () => {\n\t\t\t\t\tsendEmailAction.execute(contactGroup);\n\t\t\t\t},\n\t\t\t\ticon: sendEmailAction.icon\n\t\t\t});\n\t\t}\n\t\tif (editCGAction.canExecute()) {\n\t\t\torderedActions.push({\n\t\t\t\tid: editCGAction.id,\n\t\t\t\tlabel: editCGAction.label,\n\t\t\t\ticon: editCGAction.icon,\n\t\t\t\tonClick: () => {\n\t\t\t\t\teditCGAction.execute(contactGroup);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (deleteCGAction.canExecute()) {\n\t\t\torderedActions.push({\n\t\t\t\tid: deleteCGAction.id,\n\t\t\t\tlabel: deleteCGAction.label,\n\t\t\t\tonClick: () => {\n\t\t\t\t\tdeleteCGAction.execute(contactGroup);\n\t\t\t\t},\n\t\t\t\ticon: deleteCGAction.icon,\n\t\t\t\tcolor: deleteCGAction.color\n\t\t\t});\n\t\t}\n\t\treturn orderedActions;\n\t}, [contactGroup, deleteCGAction, editCGAction, sendEmailAction]);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Container, useModal, useSnackbar } from '@zextras/carbonio-design-system';\nimport { closeBoard, getBoardById } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { Text } from '../components/Text';\nimport { ACTION_IDS, EDIT_CONTACT_GROUP_BOARD_ID, ROUTES_INTERNAL_PARAMS } from '../constants';\nimport { useActiveContactGroup } from '../hooks/useActiveContactGroup';\nimport { useNavigation } from '../hooks/useNavigation';\nimport { ContactGroup } from '../model/contact-group';\nimport { apiClient } from '../network/api-client';\nimport { useContactGroupStore } from '../store/contact-groups';\n\nexport type DeleteCGAction = UIAction<ContactGroup, never>;\n\nexport const useActionDeleteCG = (): DeleteCGAction => {\n\tconst [t] = useTranslation();\n\tconst createModal = useModal();\n\tconst createSnackbar = useSnackbar();\n\tconst { removeContactGroup } = useContactGroupStore();\n\tconst { navigateTo } = useNavigation();\n\tconst activeContactGroup = useActiveContactGroup();\n\n\tconst canExecute = useCallback<DeleteCGAction['canExecute']>(() => true, []);\n\n\tconst openDeleteModal = useCallback<DeleteCGAction['execute']>(\n\t\t(contactGroup) => {\n\t\t\tif (contactGroup === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst closeModal = createModal({\n\t\t\t\ttitle: t('modal.delete.contactGroup.header', 'Delete \"{{contactGroupName}}\"', {\n\t\t\t\t\tcontactGroupName: contactGroup.title\n\t\t\t\t}),\n\t\t\t\tconfirmLabel: t('modal.delete.button.confirm', 'delete'),\n\t\t\t\tconfirmColor: 'error',\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tcloseModal();\n\t\t\t\t\tapiClient\n\t\t\t\t\t\t.deleteContact([contactGroup.id])\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tconst boardId = `${EDIT_CONTACT_GROUP_BOARD_ID}-${contactGroup.id}`;\n\t\t\t\t\t\t\tconst board = getBoardById(boardId);\n\t\t\t\t\t\t\tif (board) {\n\t\t\t\t\t\t\t\tcloseBoard(boardId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (activeContactGroup?.id === contactGroup.id) {\n\t\t\t\t\t\t\t\tnavigateTo(ROUTES_INTERNAL_PARAMS.route.contactGroups, { replace: true });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremoveContactGroup(contactGroup.id);\n\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\tkey: `snackbar-${Date.now()}`,\n\t\t\t\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t\t\t\t'snackbar.delete_contact_group.confirm.success',\n\t\t\t\t\t\t\t\t\t'Contact group successfully deleted'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\t\t\tkey: `snackbar-${Date.now()}`,\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\t\t\thideButton: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tshowCloseIcon: true,\n\t\t\t\tonClose: () => {\n\t\t\t\t\tcloseModal();\n\t\t\t\t},\n\t\t\t\tchildren: (\n\t\t\t\t\t<Container padding={{ vertical: 'medium' }} crossAlignment={'flex-start'}>\n\t\t\t\t\t\t<Text lineHeight={1.3125} overflow=\"break-word\" size=\"small\">\n\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t'modal.delete.contactGroup.body1',\n\t\t\t\t\t\t\t\t'Are you sure to delete the selected contact group?'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text lineHeight={1.3125} overflow=\"break-word\" size=\"small\">\n\t\t\t\t\t\t\t{t('modal.delete.contactGroup.body2', 'If you delete it will be lost forever.')}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Container>\n\t\t\t\t)\n\t\t\t});\n\t\t},\n\t\t[activeContactGroup?.id, createModal, createSnackbar, navigateTo, removeContactGroup, t]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.deleteCG,\n\t\t\tlabel: t('action.contactGroup.delete', 'Delete'),\n\t\t\ticon: 'Trash2Outline',\n\t\t\tcanExecute,\n\t\t\texecute: openDeleteModal,\n\t\t\tcolor: 'error'\n\t\t}),\n\t\t[openDeleteModal, canExecute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { addBoard, getBoardById, reopenBoards, setCurrentBoard } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { DeleteCGAction } from './delete-cg';\nimport { UIAction } from './types';\nimport { ACTION_IDS, EDIT_CONTACT_GROUP_BOARD_ID } from '../constants';\nimport { ContactGroup } from '../model/contact-group';\n\nexport type EditActionCG = UIAction<ContactGroup, never>;\n\nexport const useActionEditCG = (): EditActionCG => {\n\tconst [t] = useTranslation();\n\n\tconst canExecute = useCallback<DeleteCGAction['canExecute']>(() => true, []);\n\n\tconst editCG = useCallback<EditActionCG['execute']>((contactGroup) => {\n\t\tif (contactGroup === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst board = getBoardById(`${EDIT_CONTACT_GROUP_BOARD_ID}-${contactGroup.id}`);\n\t\tif (board) {\n\t\t\tsetCurrentBoard(board.id);\n\t\t\treopenBoards();\n\t\t} else {\n\t\t\taddBoard({\n\t\t\t\tid: `${EDIT_CONTACT_GROUP_BOARD_ID}-${contactGroup.id}`,\n\t\t\t\turl: EDIT_CONTACT_GROUP_BOARD_ID,\n\t\t\t\ttitle: contactGroup.title,\n\t\t\t\tcontext: { contactGroupId: contactGroup.id }\n\t\t\t});\n\t\t}\n\t}, []);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.editCG,\n\t\t\tlabel: t('action.edit', 'Edit'),\n\t\t\ticon: 'Edit2Outline',\n\t\t\tcanExecute,\n\t\t\texecute: editCG\n\t\t}),\n\t\t[canExecute, editCG, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\n\nimport { CGDisplayerDetails } from './cg-displayer-details';\nimport { DisplayerActionsHeader } from './displayer-actions-header';\nimport { DisplayerHeader } from './displayer-header';\nimport { useContactGroupActions } from '../hooks/use-contact-group-actions';\nimport { ContactGroup } from '../model/contact-group';\n\ninterface ContactGroupDisplayerProps {\n\tcontactGroup: ContactGroup;\n}\n\nexport const CGDisplayer = ({ contactGroup }: ContactGroupDisplayerProps): React.JSX.Element => {\n\tconst actions = useContactGroupActions(contactGroup);\n\treturn (\n\t\t<Container background={'gray5'} mainAlignment={'flex-start'} padding={{ bottom: '3rem' }}>\n\t\t\t<DisplayerHeader title={contactGroup.title} icon={'PeopleOutline'} />\n\t\t\t<Container\n\t\t\t\tpadding={{ horizontal: '1rem' }}\n\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\tminHeight={0}\n\t\t\t\tmaxHeight={'100%'}\n\t\t\t>\n\t\t\t\t<DisplayerActionsHeader actions={actions} />\n\t\t\t\t<CGDisplayerDetails contactGroup={contactGroup} />\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { Container, Icon, Padding } from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\nimport { Text } from './Text';\n\ntype EmptyDisplayerProps = {\n\ticon: string;\n\ttitle: string;\n\tdescription: string;\n};\n\nconst CustomIcon = styled(Icon)`\n\twidth: 2rem;\n\theight: 2rem;\n`;\n\nexport const EmptyDisplayer = ({\n\ticon,\n\ttitle,\n\tdescription\n}: EmptyDisplayerProps): React.JSX.Element => (\n\t<Container>\n\t\t<CustomIcon icon={icon} color={'secondary'} />\n\t\t<Padding all=\"medium\">\n\t\t\t<Text color=\"gray1\" overflow=\"break-word\" weight=\"bold\" size=\"large\" centered>\n\t\t\t\t{title}\n\t\t\t</Text>\n\t\t</Padding>\n\t\t<Text size=\"small\" color=\"gray1\" overflow=\"break-word\" width=\"60%\" centered>\n\t\t\t{description}\n\t\t</Text>\n\t</Container>\n);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect } from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { CGDisplayer } from './cg-displayer';\nimport { EmptyDisplayer } from './empty-displayer';\nimport { useActiveContactGroup } from '../hooks/useActiveContactGroup';\nimport { useActiveItem } from '../hooks/useActiveItem';\n\nexport const CGDisplayerController = (): React.JSX.Element => {\n\tconst contactGroup = useActiveContactGroup();\n\tconst { activeItem, removeActive } = useActiveItem();\n\n\tuseEffect(() => {\n\t\tif (activeItem !== undefined && contactGroup === undefined) {\n\t\t\tremoveActive();\n\t\t}\n\t}, [activeItem, contactGroup, removeActive]);\n\n\tconst [t] = useTranslation();\n\n\treturn (\n\t\t<Container\n\t\t\torientation=\"vertical\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tdata-testid=\"displayer\"\n\t\t>\n\t\t\t{(contactGroup && <CGDisplayer contactGroup={contactGroup} />) || (\n\t\t\t\t<EmptyDisplayer\n\t\t\t\t\tdescription={t(\n\t\t\t\t\t\t'emptyDisplayer.contactGroup.hint',\n\t\t\t\t\t\t'Click the “NEW” button to create a new contacts group.'\n\t\t\t\t\t)}\n\t\t\t\t\ttitle={t('displayer.title3', 'Stay in touch with your colleagues.')}\n\t\t\t\t\ticon={'PeopleOutline'}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport {\n\tDropdown,\n\ttype DropdownItem,\n\ttype DropdownProps,\n\tuseCombinedRefs\n} from '@zextras/carbonio-design-system';\nimport styled from 'styled-components';\n\nexport interface ContextualMenuProps extends Omit<DropdownProps, 'items' | 'contextMenu'> {\n\tactions: DropdownItem[];\n}\n\ntype ContextualMenuElement = HTMLDivElement & {\n\tdropdownOpen?: boolean;\n};\n\nconst CustomDropdown = styled(Dropdown)`\n\twidth: 100%;\n\theight: 100%;\n`;\n\nexport const ContextualMenu = React.forwardRef<HTMLDivElement, ContextualMenuProps>(\n\tfunction ContextualMenuFn(\n\t\t{ children, disabled = false, onOpen, onClose, actions, disableRestoreFocus, ...rest },\n\t\tref\n\t) {\n\t\tconst contextMenuRef = useCombinedRefs<ContextualMenuElement>(ref);\n\t\tconst [open, setOpen] = useState(false);\n\n\t\tuseEffect(() => {\n\t\t\tif (contextMenuRef.current) {\n\t\t\t\tconst htmlElement = contextMenuRef.current;\n\t\t\t\thtmlElement.oncontextmenu = (): void => {\n\t\t\t\t\tif (!htmlElement.dropdownOpen) {\n\t\t\t\t\t\thtmlElement.click();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}, [contextMenuRef]);\n\n\t\tconst onOpenHandler = useCallback(() => {\n\t\t\tif (contextMenuRef.current) {\n\t\t\t\tcontextMenuRef.current.dropdownOpen = true;\n\t\t\t\tsetOpen(true);\n\t\t\t}\n\t\t}, [contextMenuRef]);\n\n\t\tconst onCloseHandler = useCallback(() => {\n\t\t\tif (contextMenuRef.current) {\n\t\t\t\tcontextMenuRef.current.dropdownOpen = false;\n\t\t\t\tsetOpen(false);\n\t\t\t}\n\t\t}, [contextMenuRef]);\n\n\t\tuseEffect(() => {\n\t\t\t// trigger onOpen and onClose with an internal state to avoid hover-bar to flash when contextual menu is\n\t\t\t// opened again but in a different position\n\t\t\tif (open) {\n\t\t\t\tonOpen && onOpen();\n\t\t\t} else {\n\t\t\t\tonClose && onClose();\n\t\t\t}\n\t\t}, [onClose, onOpen, open]);\n\n\t\tuseEffect(() => {\n\t\t\t// force close when disabled\n\t\t\tif (disabled && contextMenuRef.current && contextMenuRef.current.dropdownOpen) {\n\t\t\t\tcontextMenuRef.current.click();\n\t\t\t}\n\t\t}, [open, disabled, onCloseHandler, contextMenuRef]);\n\n\t\treturn (\n\t\t\t<CustomDropdown\n\t\t\t\tplacement=\"right-start\"\n\t\t\t\tcontextMenu\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonOpen={onOpenHandler}\n\t\t\t\tonClose={onCloseHandler}\n\t\t\t\titems={actions}\n\t\t\t\tref={contextMenuRef}\n\t\t\t\tdisableRestoreFocus={disableRestoreFocus}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</CustomDropdown>\n\t\t);\n\t}\n);\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { type Action as DSAction, CollapsingActions } from '@zextras/carbonio-design-system';\nimport { map } from 'lodash';\n\nimport { HoverBarContainer } from './styled-components';\n\ninterface ListItemHoverBarProps extends React.ComponentPropsWithoutRef<typeof HoverBarContainer> {\n\tactions?: DSAction[];\n}\n\nexport const ListItemHoverBar = ({\n\tactions,\n\t...rest\n}: ListItemHoverBarProps): React.JSX.Element => {\n\tconst actionsMapped = useMemo(\n\t\t(): DSAction[] =>\n\t\t\tmap(actions, (action) => ({\n\t\t\t\t...action,\n\t\t\t\tonClick: (event): ReturnType<DSAction['onClick']> => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taction.onClick(event);\n\t\t\t\t},\n\t\t\t\tcolor: undefined\n\t\t\t})),\n\t\t[actions]\n\t);\n\n\treturn (\n\t\t<HoverBarContainer\n\t\t\twrap=\"nowrap\"\n\t\t\tmainAlignment=\"flex-end\"\n\t\t\tdata-testid=\"hover-bar\"\n\t\t\tpadding={{ top: '0.25rem', right: '0.5rem' }}\n\t\t\twidth={'100%'}\n\t\t\theight={'fit'}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<CollapsingActions actions={actionsMapped} color={'text'} size={'medium'} gap={'0.25rem'} />\n\t\t</HoverBarContainer>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { Container, Row } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { ContextualMenu } from './contextual-menu';\nimport { ListItemHoverBar } from './ListItemHoverBar';\nimport { CustomIconAvatar, HoverContainer, ListItemContainer } from './styled-components';\nimport { Text } from './Text';\nimport { LIST_ITEM_HEIGHT } from '../constants';\nimport { useContactGroupActions } from '../hooks/use-contact-group-actions';\n\ntype CGListItemProps = {\n\tid: string;\n\ttitle: string;\n\tmembers: string[];\n\tvisible?: boolean;\n\tonClick?: (id: string) => void;\n};\n\nconst ContentContainer = styled(Container)`\n\toverflow: hidden;\n`;\n\nexport const CGListItem = React.memo<CGListItemProps>(\n\t({ onClick, visible, id, title, members }) => {\n\t\tconst [t] = useTranslation();\n\t\tconst actions = useContactGroupActions({ id, title, members });\n\n\t\tconst clickHandler = useCallback<React.MouseEventHandler<HTMLDivElement>>(() => {\n\t\t\tonClick?.(id);\n\t\t}, [id, onClick]);\n\n\t\tconst preventTextSelection = useCallback<React.MouseEventHandler<HTMLDivElement>>((e) => {\n\t\t\tif (e.detail > 1) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<Container data-testid={id} height={LIST_ITEM_HEIGHT} id={id}>\n\t\t\t\t<ContextualMenu actions={actions}>\n\t\t\t\t\t<ListItemContainer\n\t\t\t\t\t\theight={'fit'}\n\t\t\t\t\t\tcrossAlignment={'flex-end'}\n\t\t\t\t\t\tonMouseDown={preventTextSelection}\n\t\t\t\t\t\tonClick={clickHandler}\n\t\t\t\t\t\tdata-testid={'list-item-content'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<HoverContainer\n\t\t\t\t\t\t\theight={LIST_ITEM_HEIGHT}\n\t\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\t\tcrossAlignment=\"center\"\n\t\t\t\t\t\t\tpadding={{ horizontal: 'large', vertical: 'small' }}\n\t\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\t\tgap={'1rem'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ContentContainer\n\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\theight={'auto'}\n\t\t\t\t\t\t\t\tmaxHeight={'100%'}\n\t\t\t\t\t\t\t\tgap={'0.25rem'}\n\t\t\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Row gap={'0.5rem'} width=\"fill\" wrap=\"nowrap\" mainAlignment={'flex-start'}>\n\t\t\t\t\t\t\t\t\t<CustomIconAvatar label={title} icon={'PeopleOutline'} size={'large'} />\n\t\t\t\t\t\t\t\t\t<Container crossAlignment={'flex-start'} gap={'0.25rem'} minWidth={0}>\n\t\t\t\t\t\t\t\t\t\t<Text overflow=\"ellipsis\" size=\"small\">\n\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t<Text overflow=\"ellipsis\" size=\"small\" color={'gray1'}>\n\t\t\t\t\t\t\t\t\t\t\t{t('contactGroupList.addressCount', {\n\t\t\t\t\t\t\t\t\t\t\t\tcount: members.length,\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue_one: '{{count}} address',\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue_other: `{{count}} addresses`\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ContentContainer>\n\t\t\t\t\t\t</HoverContainer>\n\t\t\t\t\t\t<ListItemHoverBar actions={actions} />\n\t\t\t\t\t</ListItemContainer>\n\t\t\t\t</ContextualMenu>\n\t\t\t</Container>\n\t\t);\n\t}\n);\n\nCGListItem.displayName = 'CgListItem';\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Container, Divider, ListV2, ListV2Props, Row } from '@zextras/carbonio-design-system';\n\nimport { Text } from './Text';\nimport { LIST_WIDTH } from '../constants';\n\ntype MainListProps = {\n\tonListBottom?: () => void;\n\tchildren?: ListV2Props['children'];\n\temptyMessage: string;\n};\n\nexport const MainList = ({\n\tonListBottom,\n\tchildren,\n\temptyMessage\n}: MainListProps): React.JSX.Element => (\n\t<Container\n\t\twidth={LIST_WIDTH}\n\t\tmainAlignment=\"flex-start\"\n\t\tcrossAlignment=\"unset\"\n\t\tborderRadius=\"none\"\n\t\tbackground={'gray6'}\n\t\tborderColor={{ right: 'gray3' }}\n\t>\n\t\t<Row\n\t\t\tminHeight={'3rem'}\n\t\t\theight=\"auto\"\n\t\t\tbackground={'gray5'}\n\t\t\tmainAlignment={'space-between'}\n\t\t\tpadding={{ left: 'large' }}\n\t\t\twrap={'nowrap'}\n\t\t\twidth={'fill'}\n\t\t\tmaxWidth={'100%'}\n\t\t\tdata-testid=\"list-header\"\n\t\t\tflexShrink={0}\n\t\t\tflexGrow={1}\n\t\t\tgap=\"medium\"\n\t\t></Row>\n\t\t<Divider color=\"gray3\" />\n\t\t<Container minHeight={0} maxHeight={'100%'}>\n\t\t\t{children && children.length > 0 ? (\n\t\t\t\t<ListV2\n\t\t\t\t\tdata-testid=\"main-list\"\n\t\t\t\t\tbackground={'gray6'}\n\t\t\t\t\tonListBottom={onListBottom}\n\t\t\t\t\tintersectionObserverInitOptions={{ threshold: 0.5 }}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</ListV2>\n\t\t\t) : (\n\t\t\t\t<Text size={'small'} weight={'bold'} overflow={'break-word'} color={'secondary'} centered>\n\t\t\t\t\t{emptyMessage}\n\t\t\t\t</Text>\n\t\t\t)}\n\t\t</Container>\n\t</Container>\n);\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { CGListItem } from './cg-list-item';\nimport { MainList } from './main-list';\nimport { StyledListItem } from './styled-components';\nimport { useActiveItem } from '../hooks/useActiveItem';\nimport { ContactGroup } from '../model/contact-group';\n\nexport type CGListProps = {\n\tcontactGroups: Array<ContactGroup>;\n\tonListBottom?: () => void;\n};\n\nexport const CGList = ({ contactGroups, onListBottom }: CGListProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst { activeItem, setActive } = useActiveItem();\n\n\tconst items = useMemo(\n\t\t() =>\n\t\t\tmap(contactGroups, (contactGroup) => (\n\t\t\t\t<StyledListItem\n\t\t\t\t\tkey={contactGroup.id}\n\t\t\t\t\tactive={contactGroup.id === activeItem}\n\t\t\t\t\tdata-testid={'list-item'}\n\t\t\t\t>\n\t\t\t\t\t{(visible): React.JSX.Element => (\n\t\t\t\t\t\t<CGListItem\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\ttitle={contactGroup.title}\n\t\t\t\t\t\t\tid={contactGroup.id}\n\t\t\t\t\t\t\tonClick={setActive}\n\t\t\t\t\t\t\tmembers={contactGroup.members}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</StyledListItem>\n\t\t\t)),\n\t\t[activeItem, contactGroups, setActive]\n\t);\n\n\treturn (\n\t\t<MainList\n\t\t\temptyMessage={t('contactGroupList.emptyList', 'No contact groups have been created yet')}\n\t\t\tonListBottom={onListBottom}\n\t\t>\n\t\t\t{items}\n\t\t</MainList>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\n\nimport { CGDisplayerController } from '../components/cg-displayer-controller';\nimport { CGList } from '../components/cg-list';\nimport { DISPLAYER_WIDTH } from '../constants';\nimport { useFindContactGroups } from '../hooks/useFindContactGroups';\n\nexport const CGView = (): React.JSX.Element => {\n\tconst { contactGroups, hasMore, findMore } = useFindContactGroups();\n\n\treturn (\n\t\t<Container\n\t\t\torientation=\"row\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tbackground=\"gray5\"\n\t\t\tborderRadius=\"none\"\n\t\t>\n\t\t\t<CGList contactGroups={contactGroups} onListBottom={hasMore ? findMore : undefined} />\n\t\t\t<Container\n\t\t\t\twidth={DISPLAYER_WIDTH}\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\tborderRadius=\"none\"\n\t\t\t\tmaxHeight={'100%'}\n\t\t\t>\n\t\t\t\t<CGDisplayerController />\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { FIND_CONTACT_GROUP_LIMIT } from '../constants';\nimport { ContactGroup } from '../model/contact-group';\nimport { apiClient } from '../network/api-client';\nimport { useContactGroupStore } from '../store/contact-groups';\n\ntype UseFindContactGroupsReturnType = {\n\tcontactGroups: Array<ContactGroup>;\n\thasMore: boolean;\n\tfindMore: () => void;\n};\n\nexport const useFindContactGroups = (): UseFindContactGroupsReturnType => {\n\tconst { addContactGroups, setOffset, orderedContactGroups, unorderedContactGroups } =\n\t\tuseContactGroupStore();\n\n\tconst [hasMore, setHasMore] = useState(useContactGroupStore.getState().offset !== -1);\n\n\tconst findCallback = useCallback(() => {\n\t\tapiClient.findContactGroups(useContactGroupStore.getState().offset).then((result) => {\n\t\t\taddContactGroups(result.contactGroups);\n\t\t\tsetOffset(\n\t\t\t\tresult.hasMore ? useContactGroupStore.getState().offset + FIND_CONTACT_GROUP_LIMIT : -1\n\t\t\t);\n\t\t\tsetHasMore(result.hasMore);\n\t\t});\n\t}, [addContactGroups, setOffset]);\n\n\tuseEffect(() => {\n\t\tif (useContactGroupStore.getState().orderedContactGroups.length > 0) {\n\t\t\treturn;\n\t\t}\n\t\tfindCallback();\n\t}, [findCallback]);\n\n\tconst findMore = useCallback(() => {\n\t\tif (!hasMore) {\n\t\t\tthrow new Error('No more nodes available');\n\t\t}\n\t\tfindCallback();\n\t}, [findCallback, hasMore]);\n\n\treturn { contactGroups: [...orderedContactGroups, ...unorderedContactGroups], hasMore, findMore };\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { Container, Input, ListV2, Text } from '@zextras/carbonio-design-system';\nimport { filter, map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { FilterMembersIcon } from './filter-members-icon';\nimport { loadingItems } from './loading-items';\nimport { MemberDisplayerListItemComponent } from './member-displayer-list-item';\n\ntype MemberListProps = {\n\tmembers: Array<string>;\n\tmembersCount: number;\n\tloading?: boolean;\n};\n\nexport const MemberList = ({\n\tmembers,\n\tmembersCount,\n\tloading\n}: MemberListProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst [searchValue, setSearchValue] = useState('');\n\n\tconst memberItems = useMemo(\n\t\t() =>\n\t\t\tmap<string, React.JSX.Element>(\n\t\t\t\tfilter(members, (member) => member.includes(searchValue)),\n\t\t\t\t(member) => <MemberDisplayerListItemComponent email={member} key={member} />\n\t\t\t),\n\t\t[members, searchValue]\n\t);\n\n\tconst onSearchChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n\t\tsetSearchValue(event.currentTarget.value);\n\t}, []);\n\n\treturn (\n\t\t<Container\n\t\t\tmainAlignment={'flex-start'}\n\t\t\tcrossAlignment={'flex-start'}\n\t\t\tgap={'0.5rem'}\n\t\t\tminHeight={0}\n\t\t>\n\t\t\t<Container\n\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\tgap={'0.25rem'}\n\t\t\t\theight={'auto'}\n\t\t\t\tminHeight={'fit-content'}\n\t\t\t>\n\t\t\t\t<Text size={'small'} color={'secondary'}>\n\t\t\t\t\t{t('displayer.distribution_list.label.member_total', 'Member list {{total}}', {\n\t\t\t\t\t\ttotal: membersCount\n\t\t\t\t\t})}\n\t\t\t\t</Text>\n\t\t\t\t<Text size={'small'} overflow={'break-word'}>\n\t\t\t\t\t{t(\n\t\t\t\t\t\t'displayer.distribution_list.label.filter_hint',\n\t\t\t\t\t\t'You can filter this list by looking for specific member’s name.'\n\t\t\t\t\t)}\n\t\t\t\t</Text>\n\t\t\t</Container>\n\t\t\t<Input\n\t\t\t\tdata-testid={'dl-members-filter-input'}\n\t\t\t\tlabel={t('displayer.distribution_list.placeholder.filter_member', 'Filter an address')}\n\t\t\t\tCustomIcon={FilterMembersIcon}\n\t\t\t\tvalue={searchValue}\n\t\t\t\tonChange={onSearchChange}\n\t\t\t/>\n\t\t\t<Container minHeight={'10rem'} mainAlignment={'flex-start'}>\n\t\t\t\t<ListV2>{(!loading && memberItems) || loadingItems(3)}</ListV2>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useMemo } from 'react';\n\nimport { Action as DSAction } from '@zextras/carbonio-design-system';\n\nimport { useActionEditDL } from '../actions/edit-dl';\nimport { useActionSendEmail } from '../actions/send-email';\nimport { DistributionList } from '../model/distribution-list';\n\nexport const useDLActions = (\n\tdistributionList: Pick<DistributionList, 'email' | 'displayName' | 'id' | 'isOwner'> | undefined\n): Array<DSAction> => {\n\tconst sendEmailAction = useActionSendEmail();\n\tconst editDLAction = useActionEditDL();\n\n\treturn useMemo(() => {\n\t\tif (distributionList === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tconst actions: Array<DSAction> = [];\n\t\tif (sendEmailAction.canExecute()) {\n\t\t\tactions.push({\n\t\t\t\tid: sendEmailAction.id,\n\t\t\t\tlabel: sendEmailAction.label,\n\t\t\t\tonClick: () => {\n\t\t\t\t\tsendEmailAction.execute([{ email: distributionList.email, isGroup: true }]);\n\t\t\t\t},\n\t\t\t\ticon: sendEmailAction.icon\n\t\t\t});\n\t\t}\n\n\t\tif (editDLAction.canExecute(distributionList)) {\n\t\t\tactions.push({\n\t\t\t\tid: editDLAction.id,\n\t\t\t\tlabel: editDLAction.label,\n\t\t\t\tonClick: () => {\n\t\t\t\t\teditDLAction.execute(distributionList);\n\t\t\t\t},\n\t\t\t\ticon: editDLAction.icon\n\t\t\t});\n\t\t}\n\t\treturn actions;\n\t}, [distributionList, editDLAction, sendEmailAction]);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { addBoard, getBoardById, reopenBoards, setCurrentBoard } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { ACTION_IDS, EDIT_DL_BOARD_ID } from '../constants';\nimport { DistributionList } from '../model/distribution-list';\nimport { EditDLBoardContext } from '../views/board/edit-dl-board';\n\nexport type EditDLAction = UIAction<\n\tPick<DistributionList, 'email' | 'displayName' | 'id'>,\n\tPick<DistributionList, 'isOwner'>\n>;\n\nexport const useActionEditDL = (): EditDLAction => {\n\tconst [t] = useTranslation();\n\n\tconst execute = useCallback<EditDLAction['execute']>((distributionList) => {\n\t\tif (distributionList !== undefined) {\n\t\t\tconst boardId = `${EDIT_DL_BOARD_ID}-${distributionList.id}`;\n\t\t\tconst board = getBoardById(boardId);\n\t\t\tif (board) {\n\t\t\t\tsetCurrentBoard(board.id);\n\t\t\t\treopenBoards();\n\t\t\t} else {\n\t\t\t\taddBoard<EditDLBoardContext>({\n\t\t\t\t\tcontext: { id: distributionList.id },\n\t\t\t\t\ticon: 'DistributionListOutline',\n\t\t\t\t\ttitle: distributionList.displayName || distributionList.email,\n\t\t\t\t\tid: boardId,\n\t\t\t\t\turl: EDIT_DL_BOARD_ID\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, []);\n\n\tconst canExecute = useCallback<EditDLAction['canExecute']>((dl) => dl?.isOwner === true, []);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.editDL,\n\t\t\tlabel: t('action.edit_distribution_list', 'Edit'),\n\t\t\ticon: 'Edit2Outline',\n\t\t\texecute,\n\t\t\tcanExecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { Container, Divider, Row, TabBar } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { DisplayerActionsHeader } from './displayer-actions-header';\nimport { DisplayerHeader } from './displayer-header';\nimport { DLDetailsInfo } from './dl-details-info';\nimport { ManagerList } from './manager-list';\nimport { MemberList } from './member-list';\nimport { ScrollableContainer } from './styled-components';\nimport { Text } from './Text';\nimport { DL_TABS } from '../constants';\nimport { useDLActions } from '../hooks/use-dl-actions';\nimport { useDLTabs } from '../hooks/use-dl-tabs';\nimport { DistributionList } from '../model/distribution-list';\n\ninterface DistributionListDisplayerProps {\n\tmembers: Array<string>;\n\ttotalMembers: number;\n\tdistributionList?: DistributionList;\n}\n\nexport const DistributionListDisplayer = ({\n\tmembers,\n\ttotalMembers,\n\tdistributionList\n}: DistributionListDisplayerProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst { items, onChange, selected } = useDLTabs();\n\tconst actions = useDLActions(distributionList);\n\n\treturn (\n\t\t<Container\n\t\t\tbackground={'gray5'}\n\t\t\tmainAlignment={'flex-start'}\n\t\t\tpadding={{ bottom: '1rem' }}\n\t\t\tmaxHeight={'100%'}\n\t\t\tminHeight={0}\n\t\t>\n\t\t\t<DisplayerHeader\n\t\t\t\ttitle={(distributionList?.displayName || distributionList?.email) ?? ''}\n\t\t\t\ticon={'DistributionListOutline'}\n\t\t\t/>\n\t\t\t<Container\n\t\t\t\tpadding={{ horizontal: '1rem' }}\n\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\tmaxHeight={'100%'}\n\t\t\t\tminHeight={0}\n\t\t\t>\n\t\t\t\t<DisplayerActionsHeader actions={actions} />\n\t\t\t\t<Container\n\t\t\t\t\tbackground={'gray6'}\n\t\t\t\t\tpadding={'1rem'}\n\t\t\t\t\tgap={'1rem'}\n\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\t\theight={'auto'}\n\t\t\t\t\tflexGrow={1}\n\t\t\t\t\tflexShrink={1}\n\t\t\t\t\tminHeight={0}\n\t\t\t\t\tmaxHeight={'100%'}\n\t\t\t\t>\n\t\t\t\t\t<DLDetailsInfo\n\t\t\t\t\t\tdisplayName={distributionList?.displayName}\n\t\t\t\t\t\temail={distributionList?.email ?? ''}\n\t\t\t\t\t/>\n\t\t\t\t\t<Divider color={'gray3'} />\n\t\t\t\t\t<TabBar\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tbackground={'gray6'}\n\t\t\t\t\t\tflexShrink={0}\n\t\t\t\t\t\theight={'3rem'}\n\t\t\t\t\t\twidth={'fill'}\n\t\t\t\t\t\tborderColor={{ bottom: 'gray3' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Container\n\t\t\t\t\t\tpadding={{ top: 'large' }}\n\t\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\t\t\tmaxHeight={'100%'}\n\t\t\t\t\t\tminHeight={0}\n\t\t\t\t\t>\n\t\t\t\t\t\t{selected === DL_TABS.details && (\n\t\t\t\t\t\t\t<ScrollableContainer\n\t\t\t\t\t\t\t\theight={'auto'}\n\t\t\t\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\t\t\t\t\tmaxHeight={'100%'}\n\t\t\t\t\t\t\t\tminHeight={0}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{(distributionList?.description && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Text size={'small'} color={'secondary'}>\n\t\t\t\t\t\t\t\t\t\t\t{t('displayer.distribution_list.label.description', 'Description')}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t<Text overflow={'break-word'}>{distributionList.description}</Text>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)) || (\n\t\t\t\t\t\t\t\t\t<Row width={'fill'}>\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\toverflow={'break-word'}\n\t\t\t\t\t\t\t\t\t\t\tsize={'small'}\n\t\t\t\t\t\t\t\t\t\t\tcolor={'secondary'}\n\t\t\t\t\t\t\t\t\t\t\tweight={'light'}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{distributionList?.isOwner\n\t\t\t\t\t\t\t\t\t\t\t\t? t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'displayer.distribution_list.no_details_owner',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'There are no additional details for this distribution list. Edit the distribution list to add them or ask to the administrator.'\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t: t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'displayer.distribution_list.no_details',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'There are no additional details for this distribution list. For more information, ask to the administrator.'\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ScrollableContainer>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{selected === DL_TABS.managers && <ManagerList managers={distributionList?.owners} />}\n\t\t\t\t\t\t{selected === DL_TABS.members &&\n\t\t\t\t\t\t\t((distributionList?.canRequireMembers && (\n\t\t\t\t\t\t\t\t<MemberList\n\t\t\t\t\t\t\t\t\tmembers={members}\n\t\t\t\t\t\t\t\t\tmembersCount={totalMembers}\n\t\t\t\t\t\t\t\t\tkey={distributionList.email}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)) || (\n\t\t\t\t\t\t\t\t<Row width={'fill'}>\n\t\t\t\t\t\t\t\t\t<Text overflow={'break-word'} size={'small'} color={'secondary'} weight={'light'}>\n\t\t\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t\t\t'displayer.distribution_list.member_not_visible',\n\t\t\t\t\t\t\t\t\t\t\t\"You don't have the permissions to see the members of this distribution list. For more information, ask to the administrator.\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { DistributionListDisplayer } from './dl-displayer';\nimport { EmptyDisplayer } from './empty-displayer';\nimport { useGetDistributionList } from '../hooks/use-get-distribution-list';\nimport { useGetDistributionListMembers } from '../hooks/use-get-distribution-list-members';\n\ntype DLDisplayerControllerProps = {\n\tid: string | undefined;\n};\n\nexport const DLDisplayerController = ({ id }: DLDisplayerControllerProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst { distributionList } = useGetDistributionList({ id }, { skip: id === undefined });\n\n\tconst { members = [], total = 0 } = useGetDistributionListMembers(\n\t\t(distributionList?.canRequireMembers && distributionList?.email) || '',\n\t\t{ skip: !distributionList?.canRequireMembers || !distributionList?.email }\n\t);\n\n\treturn (\n\t\t<Container\n\t\t\torientation=\"vertical\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tdata-testid=\"displayer\"\n\t\t>\n\t\t\t{(id && (\n\t\t\t\t<DistributionListDisplayer\n\t\t\t\t\tmembers={members}\n\t\t\t\t\ttotalMembers={total}\n\t\t\t\t\tdistributionList={distributionList}\n\t\t\t\t\tkey={id}\n\t\t\t\t/>\n\t\t\t)) || (\n\t\t\t\t<EmptyDisplayer\n\t\t\t\t\ticon={'DistributionListOutline'}\n\t\t\t\t\ttitle={t('displayer.title3', 'Stay in touch with your colleagues.')}\n\t\t\t\t\tdescription={t(\n\t\t\t\t\t\t'displayer.distribution_list.empty_displayer',\n\t\t\t\t\t\t'Select a distribution list or contact the Admin to have one.'\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { Action as DSAction, Container } from '@zextras/carbonio-design-system';\n\nimport { ContextualMenu } from './contextual-menu';\nimport { ListItemHoverBar } from './ListItemHoverBar';\nimport { CustomIconAvatar, HoverContainer, ListItemContainer } from './styled-components';\nimport { Text } from './Text';\nimport { LIST_ITEM_HEIGHT } from '../constants';\nimport { useDLActions } from '../hooks/use-dl-actions';\nimport { DistributionList } from '../model/distribution-list';\n\ntype DLListItemContentProps = {\n\tonClick?: (id: string) => void;\n\tid: string;\n\ttitle: string;\n\tactions: Array<DSAction>;\n};\n\nconst DLListItemContent = React.memo<DLListItemContentProps>(function DLListItemMemo({\n\tonClick,\n\t// others props\n\tid,\n\ttitle,\n\tactions\n}) {\n\tconst clickHandler = useCallback<React.MouseEventHandler<HTMLDivElement>>(() => {\n\t\tonClick?.(id);\n\t}, [id, onClick]);\n\n\tconst preventTextSelection = useCallback<React.MouseEventHandler<HTMLDivElement>>((e) => {\n\t\tif (e.detail > 1) {\n\t\t\te.preventDefault();\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<Container data-testid={id} height={LIST_ITEM_HEIGHT}>\n\t\t\t<ContextualMenu actions={actions}>\n\t\t\t\t<ListItemContainer\n\t\t\t\t\theight={'fit'}\n\t\t\t\t\tcrossAlignment={'flex-end'}\n\t\t\t\t\tonMouseDown={preventTextSelection}\n\t\t\t\t\tonClick={clickHandler}\n\t\t\t\t\tdata-testid={'list-item-content'}\n\t\t\t\t>\n\t\t\t\t\t<HoverContainer\n\t\t\t\t\t\theight={LIST_ITEM_HEIGHT}\n\t\t\t\t\t\twrap=\"nowrap\"\n\t\t\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\t\t\tcrossAlignment=\"center\"\n\t\t\t\t\t\tpadding={{ horizontal: 'large', vertical: 'small' }}\n\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\tgap={'1rem'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\t\theight={'auto'}\n\t\t\t\t\t\t\tmaxHeight={'100%'}\n\t\t\t\t\t\t\tgap={'0.5rem'}\n\t\t\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\t\t\tmaxWidth={'100%'}\n\t\t\t\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CustomIconAvatar\n\t\t\t\t\t\t\t\tlabel={title}\n\t\t\t\t\t\t\t\ticon={'DistributionListOutline'}\n\t\t\t\t\t\t\t\tsize={'large'}\n\t\t\t\t\t\t\t\tshape={'square'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Container crossAlignment={'flex-start'} minWidth={0}>\n\t\t\t\t\t\t\t\t<Text overflow=\"ellipsis\" size=\"small\">\n\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</HoverContainer>\n\t\t\t\t\t<ListItemHoverBar actions={actions} height={'fill'} crossAlignment={'flex-start'} />\n\t\t\t\t</ListItemContainer>\n\t\t\t</ContextualMenu>\n\t\t</Container>\n\t);\n});\n\ntype DLListItemProps = {\n\tdistributionList: DistributionList;\n\tvisible: boolean;\n\tonClick?: (id: string) => void;\n};\n\nexport const DLListItem = ({\n\tdistributionList,\n\tvisible,\n\tonClick\n}: DLListItemProps): React.JSX.Element => {\n\tconst actions = useDLActions(distributionList);\n\treturn (\n\t\t<DLListItemContent\n\t\t\tid={distributionList.id}\n\t\t\ttitle={distributionList.displayName || distributionList.email}\n\t\t\tactions={actions}\n\t\t\tonClick={onClick}\n\t\t/>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useEffect, useMemo } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { filter } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { DistributionList } from '../model/distribution-list';\nimport { apiClient } from '../network/api-client';\nimport { useDistributionListsStore } from '../store/distribution-lists';\n\nexport const useFindDistributionLists = ({\n\townerOf,\n\tmemberOf\n}: {\n\townerOf: boolean;\n\tmemberOf: boolean;\n}): Array<DistributionList> => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst { distributionLists, setDistributionLists } = useDistributionListsStore();\n\tconst shouldLoadData = useMemo(\n\t\t() =>\n\t\t\tdistributionLists === undefined || distributionLists.some((item) => item.id === undefined),\n\t\t[distributionLists]\n\t);\n\n\tuseEffect(() => {\n\t\t// Since we need\n\t\t// to ask all distribution lists of the account to have both the isOwner and isMember info,\n\t\t// perform the request only once, and then filter the results based on the requested filter.\n\t\tif (shouldLoadData) {\n\t\t\tapiClient\n\t\t\t\t.getAccountDistributionLists({ ownerOf: true, memberOf: true })\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetDistributionLists(response);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: new Date().toDateString(),\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}, [createSnackbar, setDistributionLists, shouldLoadData, t]);\n\n\treturn useMemo(\n\t\t() =>\n\t\t\tfilter(\n\t\t\t\tdistributionLists,\n\t\t\t\t(item): item is DistributionList =>\n\t\t\t\t\titem.id !== undefined &&\n\t\t\t\t\t((ownerOf && item.isOwner) || (memberOf && item.isMember === true))\n\t\t\t),\n\t\t[distributionLists, memberOf, ownerOf]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport { DLDisplayerController } from '../components/dl-displayer-controller';\nimport { DLListItem } from '../components/dl-list-item';\nimport { MainList } from '../components/main-list';\nimport { StyledListItem } from '../components/styled-components';\nimport { DISPLAYER_WIDTH, RouteParams, ROUTES_INTERNAL_PARAMS } from '../constants';\nimport { useFindDistributionLists } from '../hooks/use-find-distribution-lists';\nimport { useActiveItem } from '../hooks/useActiveItem';\n\nexport const DistributionListsView = (): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst { activeItem, setActive } = useActiveItem();\n\tconst { filter } = useParams<RouteParams>();\n\tconst distributionLists = useFindDistributionLists({\n\t\townerOf: filter === ROUTES_INTERNAL_PARAMS.filter.manager,\n\t\tmemberOf: filter === ROUTES_INTERNAL_PARAMS.filter.member\n\t});\n\n\tconst items = useMemo(\n\t\t() =>\n\t\t\tdistributionLists.map((dl) => (\n\t\t\t\t<StyledListItem\n\t\t\t\t\tkey={dl.id || dl.email}\n\t\t\t\t\tactive={dl.id === activeItem}\n\t\t\t\t\tdata-testid={'list-item'}\n\t\t\t\t>\n\t\t\t\t\t{(visible): React.JSX.Element => (\n\t\t\t\t\t\t<DLListItem visible={visible} distributionList={dl} onClick={setActive} />\n\t\t\t\t\t)}\n\t\t\t\t</StyledListItem>\n\t\t\t)),\n\t\t[activeItem, distributionLists, setActive]\n\t);\n\n\treturn (\n\t\t<Container\n\t\t\torientation=\"row\"\n\t\t\tcrossAlignment=\"flex-start\"\n\t\t\tmainAlignment=\"flex-start\"\n\t\t\twidth=\"fill\"\n\t\t\theight=\"fill\"\n\t\t\tbackground=\"gray5\"\n\t\t\tborderRadius=\"none\"\n\t\t\tmaxHeight=\"100%\"\n\t\t>\n\t\t\t<MainList\n\t\t\t\temptyMessage={t(\n\t\t\t\t\t'distribution_list.label.empty_message',\n\t\t\t\t\t'There are no distribution lists yet.'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{items}\n\t\t\t</MainList>\n\t\t\t<Container\n\t\t\t\twidth={DISPLAYER_WIDTH}\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\tborderRadius=\"none\"\n\t\t\t\tmaxHeight={'100%'}\n\t\t\t>\n\t\t\t\t<DLDisplayerController id={activeItem} />\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { ModalManager, ThemeProvider } from '@zextras/carbonio-design-system';\nimport { trimEnd } from 'lodash';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport { CGView } from './cg-view';\nimport { DistributionListsView } from './distribution-lists-view';\nimport { RouteParams, ROUTES, ROUTES_INTERNAL_PARAMS } from '../constants';\n\nconst AppView = (): React.JSX.Element => {\n\tconst { path, params, url } = useRouteMatch<RouteParams>();\n\n\tconst trimmedPath = useMemo(() => trimEnd(path, '/'), [path]);\n\n\tconst routes = useMemo(\n\t\t() => (\n\t\t\t<Switch>\n\t\t\t\t{params.route === ROUTES_INTERNAL_PARAMS.route.contactGroups && (\n\t\t\t\t\t<Route path={`${trimmedPath}${ROUTES.contactGroups}`} component={CGView} />\n\t\t\t\t)}\n\t\t\t\t{params.route === ROUTES_INTERNAL_PARAMS.route.distributionLists && (\n\t\t\t\t\t<Route path={`${trimmedPath}${ROUTES.distributionLists}`}>\n\t\t\t\t\t\t{({ match }): React.JSX.Element =>\n\t\t\t\t\t\t\tmatch?.params.filter &&\n\t\t\t\t\t\t\tObject.values<string>(ROUTES_INTERNAL_PARAMS.filter).includes(match.params.filter) ? (\n\t\t\t\t\t\t\t\t<DistributionListsView />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Redirect to={`${url}/${ROUTES_INTERNAL_PARAMS.filter.member}`} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Route>\n\t\t\t\t)}\n\t\t\t</Switch>\n\t\t),\n\t\t[params.route, trimmedPath, url]\n\t);\n\n\treturn (\n\t\t<ThemeProvider loadDefaultFont={false}>\n\t\t\t<ModalManager>{routes}</ModalManager>\n\t\t</ThemeProvider>\n\t);\n};\n\nconst MainRouteAppView = (): React.JSX.Element => {\n\tconst { path } = useRouteMatch();\n\n\tconst trimmedPath = useMemo(() => trimEnd(path, '/'), [path]);\n\n\treturn <Route path={`${trimmedPath}${ROUTES.mainRoute}`} component={AppView} />;\n};\n\nexport default MainRouteAppView;\n"],"names":["useActionCopyToClipboard","t","useTranslation","createSnackbar","useSnackbar","canExecute","useCallback","execute","text","window","parent","navigator","clipboard","writeText","textArea","document","createElement","body","appendChild","value","select","success","execCommand","removeChild","Promise","resolve","reject","legacyFallback","copyToClipboard","then","key","Date","now","replace","type","hideButton","label","useMemo","id","ACTION_IDS","icon","useActionSendEmail","openMailComposer","isMailAvailable","useIntegratedFunction","sendEmail","recipients","map","recipient","address","email","isGroup","StyledText","styled","TextWithOptionalTooltip","withTooltip","children","rest","React","TextWithTooltip","DSText","withConfig","displayName","componentId","$width","$inline","$italic","$centered","$lineHeight","Text","width","centered","italic","inline","lineHeight","dsProps","_extends","DLDetailsInfo","copyToClipboardAction","copyEmail","Container","orientation","gap","mainAlignment","crossAlignment","height","CustomIconAvatar","shape","size","minWidth","weight","Row","color","IconButton","onClick","FilterMembersIcon","Icon","ShimmedDisplayerListItem","padding","wrap","flexShrink","Shimmer","Avatar","loadingItems","count","times","index","ManagerList","managers","loading","memberItems","manager","MemberDisplayerListItemComponent","name","total","length","minHeight","ListV2","sendEmailAction","onSendEmail","onCopyEmail","canSendEmail","Button","HoverRow","theme","palette","transparent","regular","hover","HoverContainer","HoverBarContainer","ListItemContainer","StyledListItem","ListItem","attrs","background","selectedBackground","activeBackground","active","selected","backgroundColor","pseudoClasses","css","getColor","ScrollableContainer","useDLTabs","setSelected","useState","DL_TABS","details","items","members","onChange","ev","selectedId","compareContactGroupName","nameA","nameB","nameALow","toLowerCase","nameBLow","initialState","orderedContactGroups","unorderedContactGroups","offset","addToProperList","ordered","unOrdered","cgToAdd","idxToAdd","findIndex","item","title","splice","push","unorderedIdxToAdd","useContactGroupStore","create","set","get","reset","updateContactGroup","contactGroup","idxToRemove","newOrderedContactGroups","newUnorderedContactGroups","uIdxToRemove","Error","setOffset","addContactGroups","contactGroups","unorderedResult","differenceBy","cg","removeContactGroup","contactGroupId","filter","addContactGroupInSortedPosition","newContactGroup","CGDisplayerDetails","member","horizontal","top","bottom","Divider","DisplayerActionsHeader","actions","actionButtons","action","disabled","vertical","useActiveItem","navigateTo","useNavigation","route","useParams","activeIdRef","useRef","useEffect","current","isActive","itemId","currentPath","ROUTES_INTERNAL_PARAMS","distributionLists","setActive","options","removeActive","activeItem","CustomIcon","DisplayerHeader","closeDisplayer","right","left","margin","useActiveContactGroup","state","unOrderedContactGroups","find","useContactGroupActions","deleteCGAction","useActionDeleteCG","createModal","useModal","activeContactGroup","openDeleteModal","undefined","closeModal","contactGroupName","confirmLabel","confirmColor","onConfirm","apiClient","deleteContact","boardId","EDIT_CONTACT_GROUP_BOARD_ID","getBoardById","closeBoard","catch","error","console","showCloseIcon","onClose","overflow","deleteCG","useActionSendEmailCG","sendMailAction","sendEmailCG","editCGAction","useActionEditCG","editCG","board","setCurrentBoard","reopenBoards","addBoard","url","context","orderedActions","CGDisplayer","maxHeight","EmptyDisplayer","description","Padding","all","CGDisplayerController","CustomDropdown","Dropdown","ContextualMenu","onOpen","disableRestoreFocus","ref","contextMenuRef","useCombinedRefs","open","setOpen","htmlElement","oncontextmenu","dropdownOpen","click","onOpenHandler","onCloseHandler","placement","contextMenu","ListItemHoverBar","actionsMapped","event","stopPropagation","CollapsingActions","ContentContainer","CGListItem","visible","clickHandler","preventTextSelection","e","detail","preventDefault","LIST_ITEM_HEIGHT","onMouseDown","defaultValue_one","defaultValue_other","MainList","onListBottom","emptyMessage","LIST_WIDTH","borderRadius","borderColor","maxWidth","flexGrow","intersectionObserverInitOptions","threshold","CGList","CGView","hasMore","findMore","useFindContactGroups","setHasMore","getState","findCallback","findContactGroups","result","FIND_CONTACT_GROUP_LIMIT","DISPLAYER_WIDTH","MemberList","membersCount","searchValue","setSearchValue","includes","onSearchChange","currentTarget","Input","useDLActions","distributionList","editDLAction","useActionEditDL","EDIT_DL_BOARD_ID","dl","isOwner","editDL","DistributionListDisplayer","totalMembers","TabBar","owners","canRequireMembers","DLDisplayerController","useGetDistributionList","skip","useGetDistributionListMembers","DLListItemContent","DLListItem","DistributionListsView","useFindDistributionLists","ownerOf","memberOf","setDistributionLists","useDistributionListsStore","shouldLoadData","some","getAccountDistributionLists","response","toDateString","autoHideTimeout","isMember","AppView","path","params","useRouteMatch","trimmedPath","trimEnd","routes","Switch","Route","ROUTES","component","match","Object","values","Redirect","to","ThemeProvider","loadDefaultFont","ModalManager","MainRouteAppView","mainRoute"],"sourceRoot":""}