{"version":3,"file":"edit-view.ccb8c16d.chunk.js","mappings":"8NAeO,MAAMA,EAASC,IAAAA,IAAUC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVH,CAAU,sIAKL,EAAGI,WAAiCA,EAAMC,QAAQC,MAAMC,UACpE,EAAGC,WAAiCA,IAGtCC,EAAiBT,IAAOU,EAAAA,WAAUT,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAjBH,CAAiB,yDACb,EAAGI,WAAiCA,EAAMC,QAAQC,MAAMC,UAI7EI,EAAgBX,IAAOY,EAAAA,MAAKX,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAZH,CAAY,gCAInCa,EAAeA,EACpBC,WACAC,QACAC,OACAC,WAEAC,IAAAA,cAACT,EAAc,CACdU,YAAY,aACZC,MAAM,OACNC,eAAe,SACfC,cAAc,gBACdC,aAAa,OACbC,WAAW,QACXC,QAAS,CACRC,IAAK,UAGNR,IAAAA,cAACS,EAAAA,IAAG,CAACP,MAAM,OAAOQ,oBAAkB,EAACN,cAAc,iBAClDJ,IAAAA,cAACS,EAAAA,IAAG,CACHR,YAAY,WACZE,eAAe,aACfC,cAAc,aACdG,QAAS,CAAEI,KAAM,UAEjBX,IAAAA,cAACN,EAAAA,KAAI,CAACkB,KAAK,QAAQtB,MAAOQ,GAAQC,EAAQ,UAAY,aACpDF,GAEFG,IAAAA,cAACP,EAAa,KAAEG,EAAS,GAAGC,QAE7BG,IAAAA,cAACa,EAAAA,QAAO,CAACC,MAAM,SACdd,IAAAA,cAACnB,EAAM,CAACS,MAAOyB,EAAAA,uBAAuBC,SAASpB,EAAS,GAAGqB,MAAO,KAAKC,QAGzElB,IAAAA,cAACmB,EAAAA,KAAI,CACJP,KAAK,QACLQ,KAAMtB,EAAO,mBAAqB,qBAClCR,MAAOQ,GAAQC,EAAQ,UAAY,YACnCsB,MAAO,CAAEC,UAAW,aAWVC,EAAcA,EAC1BC,WACAC,eAAe,EACf5B,YAEA,MAAO6B,IAAKC,EAAAA,EAAAA,kBAENC,GAASC,EAAAA,EAAAA,UACd,IACCd,EAAAA,uBAAuBe,KAAI,CAACC,EAAIC,KAC/B,MAAMC,EAAaP,EAAG,SAAQK,EAAGG,SAAU,YAAa,CACvDC,QAASpB,EAAAA,uBACTqB,QAAS,CACR9C,MAAOyC,EAAGG,UAGZ,MAAO,CACNrC,MAAOoC,EACPhB,MAAOe,EAAMK,WACbC,gBACCtC,IAAAA,cAACR,EAAAA,UAAS,CACTU,MAAM,OACNE,cAAc,gBACdH,YAAY,aACZsC,OAAO,OAEPvC,IAAAA,cAACa,EAAAA,QAAO,CAACF,KAAK,SACbX,IAAAA,cAACP,EAAa,KAAEwC,IAEjBjC,IAAAA,cAACnB,EAAM,CAACS,MAAOyC,EAAGb,OAGpB,KAEH,CAACQ,IAEIc,GAAmBX,EAAAA,EAAAA,UAAQ,IAAMD,EAAOH,IAAe,CAACG,EAAQH,IAEtE,OACCzB,IAAAA,cAACyC,EAAAA,OAAM,CACN5C,MAAOA,EACP2B,SAAUA,EACVkB,MAAOd,EACPY,iBAAkBA,EAClB7C,aAAcA,EACd,cAAY,gBACX,C,yFCnHJ,MAiBA,EAjBiCgD,KAChC,MAAMC,GAAiBC,EAAAA,EAAAA,iBAEjBC,GAAUC,EAAAA,EAAAA,cAAY,KAC3BH,EAAeI,YAAY,GACzB,CAACJ,IAEEK,GAAiBF,EAAAA,EAAAA,cACrBG,IACAN,EAAeO,YAAY,CAAED,SAAQ,GAEtC,CAACN,IAGF,OAAO5C,IAAAA,cAACoD,EAAAA,EAAQ,CAACC,OAAO,EAAOP,QAASA,EAASG,eAAgBA,GAAkB,C","sources":["webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/components/select/color-select.tsx","webpack://carbonio-contacts-ui/./src/legacy/views/edit/edit-view-board-wrapper.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport type { SelectProps, SingleSelectionOnChange } from '@zextras/carbonio-design-system';\nimport { Container, Icon, Padding, Row, Select, Text } from '@zextras/carbonio-design-system';\nimport { ZIMBRA_STANDARD_COLORS } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\nimport styled, { SimpleInterpolation } from 'styled-components';\n\nimport { CustomLabelFactoryProps } from '../../types/select';\n\nexport const Square = styled.div`\n\twidth: 1.125rem;\n\theight: 1.125rem;\n\tposition: relative;\n\ttop: -0.1875rem;\n\tborder: 0.0625rem solid ${({ theme }): SimpleInterpolation => theme.palette.gray2.regular};\n\tbackground: ${({ color }): SimpleInterpolation => color};\n\tborder-radius: 0.25rem;\n`;\nexport const ColorContainer = styled(Container)`\n\tborder-bottom: 0.0625rem solid ${({ theme }): SimpleInterpolation => theme.palette.gray2.regular};\n\tcursor: 'pointer';\n`;\n\nexport const TextUpperCase = styled(Text)`\n\ttext-transform: capitalize;\n`;\n\nconst LabelFactory = ({\n\tselected,\n\tlabel,\n\topen,\n\tfocus\n}: CustomLabelFactoryProps): React.JSX.Element => (\n\t<ColorContainer\n\t\torientation=\"horizontal\"\n\t\twidth=\"fill\"\n\t\tcrossAlignment=\"center\"\n\t\tmainAlignment=\"space-between\"\n\t\tborderRadius=\"half\"\n\t\tbackground=\"gray5\"\n\t\tpadding={{\n\t\t\tall: 'small'\n\t\t}}\n\t>\n\t\t<Row width=\"100%\" takeAvailableSpace mainAlignment=\"space-between\">\n\t\t\t<Row\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tcrossAlignment=\"flex-start\"\n\t\t\t\tmainAlignment=\"flex-start\"\n\t\t\t\tpadding={{ left: 'small' }}\n\t\t\t>\n\t\t\t\t<Text size=\"small\" color={open || focus ? 'primary' : 'secondary'}>\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t\t<TextUpperCase>{selected[0].label}</TextUpperCase>\n\t\t\t</Row>\n\t\t\t<Padding right=\"small\">\n\t\t\t\t<Square color={ZIMBRA_STANDARD_COLORS[parseInt(selected[0].value, 10)].hex} />\n\t\t\t</Padding>\n\t\t</Row>\n\t\t<Icon\n\t\t\tsize=\"large\"\n\t\t\ticon={open ? 'ChevronUpOutline' : 'ChevronDownOutline'}\n\t\t\tcolor={open || focus ? 'primary' : 'secondary'}\n\t\t\tstyle={{ alignSelf: 'center' }}\n\t\t/>\n\t</ColorContainer>\n);\n\nexport type ColorSelectProps = {\n\tonChange: SingleSelectionOnChange;\n\tdefaultColor: number;\n\tlabel: string;\n};\n\nexport const ColorSelect = ({\n\tonChange,\n\tdefaultColor = 0,\n\tlabel\n}: ColorSelectProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst colors = useMemo<SelectProps['items']>(\n\t\t() =>\n\t\t\tZIMBRA_STANDARD_COLORS.map((el, index) => {\n\t\t\t\tconst colorLabel = t(`color.${el.zLabel}`, '{{color}}', {\n\t\t\t\t\tcontext: ZIMBRA_STANDARD_COLORS,\n\t\t\t\t\treplace: {\n\t\t\t\t\t\tcolor: el.zLabel\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tlabel: colorLabel,\n\t\t\t\t\tvalue: index.toString(),\n\t\t\t\t\tcustomComponent: (\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tmainAlignment=\"space-between\"\n\t\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\t\theight=\"fit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Padding left=\"small\">\n\t\t\t\t\t\t\t\t<TextUpperCase>{colorLabel}</TextUpperCase>\n\t\t\t\t\t\t\t</Padding>\n\t\t\t\t\t\t\t<Square color={el.hex} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t}),\n\t\t[t]\n\t);\n\tconst defaultSelection = useMemo(() => colors[defaultColor], [colors, defaultColor]);\n\n\treturn (\n\t\t<Select\n\t\t\tlabel={label}\n\t\t\tonChange={onChange}\n\t\t\titems={colors}\n\t\t\tdefaultSelection={defaultSelection}\n\t\t\tLabelFactory={LabelFactory}\n\t\t\tdata-testid=\"color-select\"\n\t\t/>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback } from 'react';\n\nimport { useBoardHooks } from '@zextras/carbonio-shell-ui';\n\nimport EditView from './edit-view';\nimport { EditViewProps } from '../../types/views/edit-view';\n\nconst EditViewBoardWrapper: FC = () => {\n\tconst boardUtilities = useBoardHooks();\n\n\tconst onClose = useCallback(() => {\n\t\tboardUtilities.closeBoard();\n\t}, [boardUtilities]);\n\n\tconst onTitleChanged = useCallback<NonNullable<EditViewProps['onTitleChanged']>>(\n\t\t(title: string) => {\n\t\t\tboardUtilities.updateBoard({ title });\n\t\t},\n\t\t[boardUtilities]\n\t);\n\n\treturn <EditView panel={false} onClose={onClose} onTitleChanged={onTitleChanged} />;\n};\n\nexport default EditViewBoardWrapper;\n"],"names":["Square","styled","withConfig","displayName","componentId","theme","palette","gray2","regular","color","ColorContainer","Container","TextUpperCase","Text","LabelFactory","selected","label","open","focus","React","orientation","width","crossAlignment","mainAlignment","borderRadius","background","padding","all","Row","takeAvailableSpace","left","size","Padding","right","ZIMBRA_STANDARD_COLORS","parseInt","value","hex","Icon","icon","style","alignSelf","ColorSelect","onChange","defaultColor","t","useTranslation","colors","useMemo","map","el","index","colorLabel","zLabel","context","replace","toString","customComponent","height","defaultSelection","Select","items","EditViewBoardWrapper","boardUtilities","useBoardHooks","onClose","useCallback","closeBoard","onTitleChanged","title","updateBoard","EditView","panel"],"sourceRoot":""}