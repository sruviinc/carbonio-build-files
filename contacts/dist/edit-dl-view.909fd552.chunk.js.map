{"version":3,"file":"edit-dl-view.909fd552.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/./src/actions/copy-to-clipboard.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/utils/clipboard.ts","webpack://carbonio-contacts-ui/./src/actions/send-email.ts","webpack://carbonio-contacts-ui/./src/components/Text.tsx","webpack://carbonio-contacts-ui/./src/components/dl-details-info.tsx","webpack://carbonio-contacts-ui/./src/components/filter-members-icon.tsx","webpack://carbonio-contacts-ui/./src/components/shimmed-displayer-list-item.tsx","webpack://carbonio-contacts-ui/./src/components/loading-items.tsx","webpack://carbonio-contacts-ui/./src/components/manager-list.tsx","webpack://carbonio-contacts-ui/./src/components/member-displayer-list-item.tsx","webpack://carbonio-contacts-ui/./src/components/member-list-item.tsx","webpack://carbonio-contacts-ui/./src/components/styled-components.tsx","webpack://carbonio-contacts-ui/./src/hooks/use-dl-tabs.ts","webpack://carbonio-contacts-ui/./src/components/edit-dl-details.tsx","webpack://carbonio-contacts-ui/./src/components/edit-dl-members.tsx","webpack://carbonio-contacts-ui/./src/hooks/use-update-distribution-list.ts","webpack://carbonio-contacts-ui/./src/components/edit-dl-controller.tsx","webpack://carbonio-contacts-ui/./src/views/board/edit-dl-board.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { copyToClipboard } from '../carbonio-ui-commons/utils/clipboard';\nimport { ACTION_IDS } from '../constants';\n\ntype CopyToClipboardAction = UIAction<string, never>;\nexport const useActionCopyToClipboard = (): CopyToClipboardAction => {\n\tconst [t] = useTranslation();\n\tconst createSnackbar = useSnackbar();\n\tconst canExecute = useCallback<CopyToClipboardAction['canExecute']>(() => true, []);\n\tconst execute = useCallback<CopyToClipboardAction['execute']>(\n\t\t(text) => {\n\t\t\tif (text) {\n\t\t\t\tcopyToClipboard(text).then(() => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `clipboard-copy-success-${Date.now()}`,\n\t\t\t\t\t\treplace: true,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\thideButton: true,\n\t\t\t\t\t\tlabel: t('snackbar.email_copied_to_clipboard', 'Email copied to clipboard.')\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[createSnackbar, t]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.copyToClipboard,\n\t\t\tlabel: t('action.copy', 'Copy'),\n\t\t\ticon: 'Copy',\n\t\t\tcanExecute,\n\t\t\texecute\n\t\t}),\n\t\t[canExecute, execute, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nconst legacyFallback = (text: string): Promise<void> => {\n\tconst textArea = window.parent.document.createElement('textarea');\n\twindow.parent.document.body.appendChild(textArea);\n\ttextArea.value = text;\n\ttextArea.select();\n\tconst success = window.parent.document.execCommand('copy');\n\twindow.parent.document.body.removeChild(textArea);\n\treturn new Promise<void>((resolve, reject) => {\n\t\tsuccess ? resolve() : reject();\n\t});\n};\n\nexport const copyToClipboard = (text: string): Promise<void> => {\n\tif (!window.parent.navigator.clipboard) {\n\t\treturn legacyFallback(text);\n\t}\n\n\treturn window.parent.navigator.clipboard.writeText(text);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo } from 'react';\n\nimport { useIntegratedFunction } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { UIAction } from './types';\nimport { ACTION_IDS } from '../constants';\n\nexport type MailComposerRecipient = { email?: string; isGroup?: boolean };\n\nexport type OpenMailComposerIntegratedFunction = (arg: {\n\trecipients: Array<{\n\t\ttype: 't';\n\t\taddress: string | undefined;\n\t\temail?: string | undefined;\n\t\tisGroup?: boolean | undefined;\n\t}>;\n}) => void;\n\nexport type SendEmailAction = UIAction<Array<string | MailComposerRecipient>, never>;\n\nexport const useActionSendEmail = (): SendEmailAction => {\n\tconst [t] = useTranslation();\n\n\t// FIXME: remove cast when shell will have generics\n\tconst [openMailComposer, isMailAvailable] = useIntegratedFunction('composePrefillMessage') as [\n\t\tOpenMailComposerIntegratedFunction,\n\t\tboolean\n\t];\n\n\tconst sendEmail = useCallback<SendEmailAction['execute']>(\n\t\t(recipients) => {\n\t\t\tif (recipients) {\n\t\t\t\topenMailComposer({\n\t\t\t\t\trecipients: recipients.map((recipient) => ({\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\taddress: typeof recipient === 'string' ? recipient : recipient.email,\n\t\t\t\t\t\temail: typeof recipient === 'string' ? recipient : recipient.email,\n\t\t\t\t\t\tisGroup: typeof recipient === 'string' ? false : recipient.isGroup\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[openMailComposer]\n\t);\n\n\tconst canExecute = useCallback<SendEmailAction['canExecute']>(\n\t\t() => isMailAvailable,\n\t\t[isMailAvailable]\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: ACTION_IDS.sendEmail,\n\t\t\tlabel: t('action.mail', 'Send e-mail'),\n\t\t\ticon: 'EmailOutline',\n\t\t\tcanExecute,\n\t\t\texecute: sendEmail\n\t\t}),\n\t\t[canExecute, sendEmail, t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport {\n\tText as DSText,\n\ttype TextProps,\n\tTextWithTooltip,\n\ttype TextWithTooltipProps\n} from '@zextras/carbonio-design-system';\nimport styled, { type SimpleInterpolation } from 'styled-components';\n\nimport { MakeOptional } from '../types/utils';\n\ninterface TextExtendedProps {\n\twidth?: string;\n\tcentered?: boolean;\n\titalic?: boolean;\n\tinline?: boolean;\n\tlineHeight?: number;\n}\n\ntype WithDollarPrefix<S extends string> = `$${S}`;\n\ntype WithoutDollarPrefix<S extends string> = S extends `$${infer WithoutDollarString}`\n\t? WithoutDollarString\n\t: S;\n\ntype StyledTextProps = {\n\t[K in WithDollarPrefix<\n\t\tkeyof Omit<TextExtendedProps, 'withTooltip'>\n\t>]: TextExtendedProps[WithoutDollarPrefix<K>];\n};\n\ntype TextWithOptionalTooltipProps =\n\t| ({ withTooltip: true } & MakeOptional<TextWithTooltipProps, 'children'>)\n\t| ({ withTooltip?: false } & TextProps);\n\nconst TextWithOptionalTooltip = ({\n\twithTooltip,\n\tchildren = null,\n\t...rest\n}: TextWithOptionalTooltipProps): React.JSX.Element =>\n\twithTooltip ? (\n\t\t<TextWithTooltip {...rest}>{children}</TextWithTooltip>\n\t) : (\n\t\t<DSText {...rest}>{children}</DSText>\n\t);\n\nconst StyledText = styled(TextWithOptionalTooltip)<StyledTextProps>`\n\twidth: ${({ $width }): SimpleInterpolation => $width};\n\tdisplay: ${({ $inline }): SimpleInterpolation => $inline && 'inline'};\n\tfont-style: ${({ $italic }): SimpleInterpolation => $italic && 'italic'};\n\ttext-align: ${({ $centered }): SimpleInterpolation => $centered && 'center'};\n\tline-height: ${({ $lineHeight }): SimpleInterpolation => $lineHeight};\n`;\nexport const Text = ({\n\twidth,\n\tcentered,\n\titalic,\n\tinline,\n\tlineHeight = 1.5,\n\twithTooltip = false,\n\t...dsProps\n}: TextExtendedProps & TextWithOptionalTooltipProps): React.JSX.Element => (\n\t<StyledText\n\t\t$width={width}\n\t\t$centered={centered}\n\t\t$italic={italic}\n\t\t$inline={inline}\n\t\t$lineHeight={lineHeight}\n\t\twithTooltip={withTooltip}\n\t\t{...dsProps}\n\t/>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport { Container, ContainerProps, IconButton, Row } from '@zextras/carbonio-design-system';\n\nimport { CustomIconAvatar } from './styled-components';\nimport { Text } from './Text';\nimport { useActionCopyToClipboard } from '../actions/copy-to-clipboard';\nimport { DistributionList } from '../model/distribution-list';\n\nexport const DLDetailsInfo = ({\n\tdisplayName,\n\temail,\n\t...rest\n}: Pick<DistributionList, 'displayName' | 'email'> & ContainerProps): React.JSX.Element => {\n\tconst copyToClipboardAction = useActionCopyToClipboard();\n\n\tconst copyEmail = useCallback(() => {\n\t\tcopyToClipboardAction.execute(email);\n\t}, [copyToClipboardAction, email]);\n\n\treturn (\n\t\t<Container\n\t\t\torientation={'horizontal'}\n\t\t\tgap={'1rem'}\n\t\t\tmainAlignment={'flex-start'}\n\t\t\tcrossAlignment={'flex-start'}\n\t\t\theight={'auto'}\n\t\t\tdata-testid={'info-container'}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<CustomIconAvatar\n\t\t\t\tshape={'square'}\n\t\t\t\ticon={'DistributionListOutline'}\n\t\t\t\tlabel={displayName || email}\n\t\t\t\tsize={'large'}\n\t\t\t/>\n\t\t\t<Container minWidth={0} crossAlignment={'flex-start'} mainAlignment={'center'}>\n\t\t\t\t<Text weight={'bold'}>{displayName}</Text>\n\t\t\t\t<Row gap={'0.25rem'}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tsize={displayName ? 'small' : 'medium'}\n\t\t\t\t\t\tweight={displayName ? 'regular' : 'bold'}\n\t\t\t\t\t\tcolor={displayName ? 'gray1' : 'text'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{email}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={copyToClipboardAction.icon}\n\t\t\t\t\t\tcolor={'primary'}\n\t\t\t\t\t\tonClick={copyEmail}\n\t\t\t\t\t\ttype={'ghost'}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Icon } from '@zextras/carbonio-design-system';\n\nexport const FilterMembersIcon = (): React.JSX.Element => (\n\t<Icon icon={'FunnelOutline'} size={'large'}></Icon>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Row, Shimmer } from '@zextras/carbonio-design-system';\n\nexport const ShimmedDisplayerListItem = (): React.JSX.Element => (\n\t<Row\n\t\twidth={'fill'}\n\t\tmainAlignment={'space-between'}\n\t\tpadding={'small'}\n\t\tgap={'0.5rem'}\n\t\tdata-testid={'shimmed-list-item'}\n\t\twrap={'nowrap'}\n\t>\n\t\t<Row wrap={'nowrap'} gap={'0.5rem'} flexShrink={1} minWidth={'1rem'}>\n\t\t\t<Row flexShrink={0}>\n\t\t\t\t<Shimmer.Avatar size={'medium'} />\n\t\t\t</Row>\n\t\t\t<Row flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t<Shimmer.Text size=\"small\" width=\"25ch\" />\n\t\t\t</Row>\n\t\t</Row>\n\t</Row>\n);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { times } from 'lodash';\n\nimport { ShimmedDisplayerListItem } from './shimmed-displayer-list-item';\n\nexport const loadingItems = (count: number): React.JSX.Element[] =>\n\ttimes(count, (index) => <ShimmedDisplayerListItem key={index} />);\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react';\n\nimport { Container, ListV2, Row } from '@zextras/carbonio-design-system';\nimport { map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { loadingItems } from './loading-items';\nimport { MemberDisplayerListItemComponent } from './member-displayer-list-item';\nimport { Text } from './Text';\nimport { DistributionList, DistributionListOwner } from '../model/distribution-list';\n\ntype ManagerListProps = {\n\tmanagers: DistributionList['owners'];\n\tloading?: boolean;\n};\n\nexport const ManagerList = ({ managers, loading }: ManagerListProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst memberItems = useMemo(\n\t\t() =>\n\t\t\tmap<DistributionListOwner, React.JSX.Element>(managers, (manager) => (\n\t\t\t\t<MemberDisplayerListItemComponent email={manager.name} key={manager.id} />\n\t\t\t)),\n\t\t[managers]\n\t);\n\n\treturn (\n\t\t<Container mainAlignment={'flex-start'} crossAlignment={'flex-start'} gap={'0.5rem'}>\n\t\t\t<Row>\n\t\t\t\t<Text size={'small'} color={'secondary'}>\n\t\t\t\t\t{t('displayer.distribution_list.label.manager_total', 'Manager list {{total}}', {\n\t\t\t\t\t\ttotal: managers?.length ?? 0\n\t\t\t\t\t})}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t<Container minHeight={0} mainAlignment={'flex-start'}>\n\t\t\t\t<ListV2>{(!loading && memberItems) || loadingItems(3)}</ListV2>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Avatar, Button, Row, TextWithTooltip } from '@zextras/carbonio-design-system';\n\nimport { useActionCopyToClipboard } from '../actions/copy-to-clipboard';\nimport { useActionSendEmail } from '../actions/send-email';\n\nexport type MemberDisplayerListItemComponentProps = {\n\temail: string;\n};\n\nexport const MemberDisplayerListItemComponent = ({\n\temail\n}: MemberDisplayerListItemComponentProps): React.JSX.Element => {\n\tconst sendEmailAction = useActionSendEmail();\n\tconst copyToClipboardAction = useActionCopyToClipboard();\n\n\tconst onSendEmail = useCallback(() => {\n\t\tsendEmailAction.execute([email]);\n\t}, [email, sendEmailAction]);\n\n\tconst onCopyEmail = useCallback(() => {\n\t\tcopyToClipboardAction.execute(email);\n\t}, [copyToClipboardAction, email]);\n\n\tconst canSendEmail = useMemo(() => sendEmailAction.canExecute(), [sendEmailAction]);\n\n\treturn (\n\t\t<Row\n\t\t\twidth={'fill'}\n\t\t\tmainAlignment={'space-between'}\n\t\t\tpadding={'small'}\n\t\t\tgap={'0.5rem'}\n\t\t\tdata-testid={'member-list-item'}\n\t\t\twrap={'nowrap'}\n\t\t>\n\t\t\t<Row wrap={'nowrap'} gap={'0.5rem'} flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t<Avatar size={'medium'} label={email} />\n\t\t\t\t<Row flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t\t<TextWithTooltip size={'small'}>{email}</TextWithTooltip>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t\t<Row wrap={'nowrap'} gap={'0.25rem'} flexShrink={1} minWidth={'fit-content'}>\n\t\t\t\t{canSendEmail && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={'outlined'}\n\t\t\t\t\t\tsize={'medium'}\n\t\t\t\t\t\ticon={sendEmailAction.icon}\n\t\t\t\t\t\tonClick={onSendEmail}\n\t\t\t\t\t\tminWidth={'fit-content'}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Button\n\t\t\t\t\ttype={'outlined'}\n\t\t\t\t\tsize={'medium'}\n\t\t\t\t\ticon={copyToClipboardAction.icon}\n\t\t\t\t\tonClick={onCopyEmail}\n\t\t\t\t\tminWidth={'fit-content'}\n\t\t\t\t/>\n\t\t\t</Row>\n\t\t</Row>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { FC, useCallback } from 'react';\n\nimport { Avatar, Button, Row, TextWithTooltip } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nexport type MemberListItemComponentProps = {\n\temail: string;\n\tonRemove: () => void;\n};\n\nexport const MemberListItemComponent: FC<MemberListItemComponentProps> = ({ email, onRemove }) => {\n\tconst [t] = useTranslation();\n\tconst onRemoveClick = useCallback(() => onRemove(), [onRemove]);\n\treturn (\n\t\t<Row\n\t\t\twidth={'fill'}\n\t\t\tmainAlignment={'space-between'}\n\t\t\tpadding={'small'}\n\t\t\tgap={'0.5rem'}\n\t\t\tdata-testid={'member-list-item'}\n\t\t\twrap={'nowrap'}\n\t\t>\n\t\t\t<Row wrap={'nowrap'} gap={'0.5rem'} flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t<Avatar size={'medium'} label={email} />\n\t\t\t\t<Row flexShrink={1} minWidth={'1rem'}>\n\t\t\t\t\t<TextWithTooltip size={'small'}>{email}</TextWithTooltip>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t\t<Button\n\t\t\t\ttype={'outlined'}\n\t\t\t\tsize={'medium'}\n\t\t\t\tlabel={t('members_list_item_component.button.remove', 'remove')}\n\t\t\t\ticon={'Trash2Outline'}\n\t\t\t\tcolor={'error'}\n\t\t\t\tonClick={onRemoveClick}\n\t\t\t\tminWidth={'fit-content'}\n\t\t\t/>\n\t\t</Row>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport {\n\tAvatar,\n\tContainer,\n\tgetColor,\n\tListItem,\n\ttype ListItemProps,\n\tpseudoClasses,\n\tRow\n} from '@zextras/carbonio-design-system';\nimport styled, { css, type DefaultTheme, type SimpleInterpolation } from 'styled-components';\n\nexport const HoverRow = styled(Row)`\n\tposition: relative;\n\tcursor: pointer;\n\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.regular};\n\n\t&:hover {\n\t\tbackground: ${({ theme }): SimpleInterpolation => theme.palette.transparent.hover};\n\t}\n`;\n\nexport const HoverContainer = styled(Row)``;\n\nexport const HoverBarContainer = styled(Row)`\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbackground: linear-gradient(to right, transparent, currentColor);\n`;\n\nexport const ListItemContainer = styled(Container)`\n\tposition: relative;\n\tcursor: pointer;\n\t${HoverBarContainer} {\n\t\tdisplay: none;\n\t}\n\n\t&:hover {\n\t\t${HoverBarContainer} {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n`;\n\nexport const StyledListItem = styled(ListItem).attrs<\n\tListItemProps,\n\t{ backgroundColor?: string | keyof DefaultTheme['palette'] }\n>(({ background, selectedBackground, activeBackground, active, selected }) => ({\n\tbackgroundColor: (active && activeBackground) || (selected && selectedBackground) || background\n}))`\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor && pseudoClasses(theme, backgroundColor, 'color')}\n\ttransition: none;\n\n\t${({ backgroundColor, theme }): SimpleInterpolation =>\n\t\tbackgroundColor &&\n\t\tcss`\n\t\t\t${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(to right, transparent, ${getColor(backgroundColor, theme)});\n\t\t\t}\n\t\t\t&:focus ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.focus`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:hover ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.hover`, theme)}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t&:active ${HoverBarContainer} {\n\t\t\t\tbackground: linear-gradient(\n\t\t\t\t\tto right,\n\t\t\t\t\ttransparent,\n\t\t\t\t\t${getColor(`${backgroundColor}.active`, theme)}\n\t\t\t\t);\n\t\t\t}\n\t\t`}\n`;\n\nexport const ScrollableContainer = styled(Container)`\n\toverflow-y: auto;\n`;\n\nexport const CustomIconAvatar = styled(Avatar)`\n\t& > svg {\n\t\tmax-width: 1.5rem;\n\t\tmax-height: 1.5rem;\n\t\tmin-width: 1.5rem;\n\t\tmin-height: 1.5rem;\n\t}\n`;\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { TabBarProps } from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { DL_TABS } from '../constants';\n\ntype UseDLTabsReturnType = {\n\titems: TabBarProps['items'];\n\tselected: string;\n\tonChange: TabBarProps['onChange'];\n};\n\nexport const useDLTabs = (): UseDLTabsReturnType => {\n\tconst [t] = useTranslation();\n\tconst [selected, setSelected] = useState<string>(DL_TABS.details);\n\n\tconst items = useMemo(\n\t\t(): TabBarProps['items'] => [\n\t\t\t{ id: DL_TABS.details, label: t('distribution_list.tabs.details', 'Details') },\n\t\t\t{ id: DL_TABS.members, label: t('distribution_list.tabs.members', 'Member list') },\n\t\t\t{\n\t\t\t\tid: DL_TABS.managers,\n\t\t\t\tlabel: t('distribution_list.tabs.managers', 'Manager list')\n\t\t\t}\n\t\t],\n\t\t[t]\n\t);\n\n\tconst onChange = useCallback<TabBarProps['onChange']>((ev, selectedId) => {\n\t\tsetSelected(selectedId);\n\t}, []);\n\n\treturn { items, selected, onChange };\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback } from 'react';\n\nimport {\n\tContainer,\n\tInput,\n\tInputProps,\n\tTextArea,\n\tTextAreaProps\n} from '@zextras/carbonio-design-system';\nimport { useTranslation } from 'react-i18next';\n\nimport { DistributionList } from '../model/distribution-list';\n\nexport type EditDLDetailsProps = {\n\tname: string;\n\tnameError?: string;\n\tdescription: string;\n\tonChange: (newData: Partial<Pick<DistributionList, 'displayName' | 'description'>>) => void;\n};\n\nexport const EditDLDetails = ({\n\tname,\n\tnameError,\n\tdescription,\n\tonChange\n}: EditDLDetailsProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\n\tconst onDisplayNameChange = useCallback<NonNullable<InputProps['onChange']>>(\n\t\t(ev) => {\n\t\t\tonChange({ displayName: ev.currentTarget.value });\n\t\t},\n\t\t[onChange]\n\t);\n\n\tconst onDescriptionChange = useCallback<NonNullable<TextAreaProps['onChange']>>(\n\t\t(ev) => {\n\t\t\tonChange({ description: ev.currentTarget.value });\n\t\t},\n\t\t[onChange]\n\t);\n\n\treturn (\n\t\t<Container gap={'1rem'} height={'auto'}>\n\t\t\t<Input\n\t\t\t\tlabel={t('edit_dl_component.input.name.label', 'Distribution List name')}\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={onDisplayNameChange}\n\t\t\t\tdescription={nameError}\n\t\t\t\thasError={!!nameError}\n\t\t\t/>\n\t\t\t<TextArea\n\t\t\t\tlabel={t('edit_dl_component.input.description.label', 'Description')}\n\t\t\t\tvalue={description}\n\t\t\t\tonChange={onDescriptionChange}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, {\n\tuseCallback,\n\tuseEffect,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseRef,\n\tuseState\n} from 'react';\n\nimport { type ChipAction, Container, Input, ListV2, Row } from '@zextras/carbonio-design-system';\nimport { reduce, uniqBy } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { FilterMembersIcon } from './filter-members-icon';\nimport { loadingItems } from './loading-items';\nimport { MemberListItemComponent } from './member-list-item';\nimport { Text } from './Text';\nimport { CHIP_DISPLAY_NAME_VALUES } from '../constants/contact-input';\nimport { ContactInput } from '../legacy/integrations/contact-input';\nimport type { ContactInputValue } from '../legacy/types/integrations';\n\nconst DUPLICATED_MEMBER_ACTION_ID = 'duplicated';\n\nexport type ResetMembers = { reset: () => void };\n\nexport type EditDLComponentProps = {\n\ttotalMembers: number;\n\tmembers: Array<string>;\n\tonRemoveMember: (member: string) => void;\n\tonAddMembers: (members: Array<string>) => void;\n\tloading?: boolean;\n\tresetRef: React.RefObject<ResetMembers>;\n};\n\nconst createDuplicatedMemberAction = (): ChipAction => ({\n\tid: DUPLICATED_MEMBER_ACTION_ID,\n\tcolor: 'error',\n\ttype: 'icon',\n\ticon: 'AlertCircle'\n});\n\nexport const EditDLMembersComponent = ({\n\tmembers,\n\ttotalMembers,\n\tonRemoveMember,\n\tonAddMembers,\n\tloading,\n\tresetRef\n}: EditDLComponentProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst [contactInputValue, setContactInputValue] = useState<ContactInputValue>([]);\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst contactInputInputRef = useRef<HTMLInputElement>(null);\n\n\tuseImperativeHandle(\n\t\tresetRef,\n\t\t() => ({\n\t\t\treset: (): void => {\n\t\t\t\tsetContactInputValue([]);\n\t\t\t\tif (contactInputInputRef.current) {\n\t\t\t\t\tcontactInputInputRef.current.value = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\t[]\n\t);\n\n\tconst memberItems = useMemo(\n\t\t() =>\n\t\t\treduce<string, React.JSX.Element[]>(\n\t\t\t\tmembers,\n\t\t\t\t(accumulator, member) => {\n\t\t\t\t\tif (member.includes(searchValue)) {\n\t\t\t\t\t\taccumulator.push(\n\t\t\t\t\t\t\t<MemberListItemComponent\n\t\t\t\t\t\t\t\temail={member}\n\t\t\t\t\t\t\t\tonRemove={(): void => onRemoveMember(member)}\n\t\t\t\t\t\t\t\tkey={member}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn accumulator;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t),\n\t\t[members, onRemoveMember, searchValue]\n\t);\n\n\tconst isMemberDuplicated = useCallback(\n\t\t(member: string): boolean => members.includes(member),\n\t\t[members]\n\t);\n\n\tconst { validEmails, invalidEmailContacts, duplicatedContacts } = useMemo(\n\t\t() =>\n\t\t\tcontactInputValue.reduce<{\n\t\t\t\tvalidEmails: Array<string>;\n\t\t\t\tinvalidEmailContacts: ContactInputValue;\n\t\t\t\tduplicatedContacts: ContactInputValue;\n\t\t\t}>(\n\t\t\t\t(result, contactInputItem) => {\n\t\t\t\t\tif (contactInputItem.error || contactInputItem.email === undefined) {\n\t\t\t\t\t\tresult.invalidEmailContacts.push(contactInputItem);\n\t\t\t\t\t} else if (isMemberDuplicated(contactInputItem.email)) {\n\t\t\t\t\t\tresult.duplicatedContacts.push(contactInputItem);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.validEmails.push(contactInputItem.email);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalidEmails: [],\n\t\t\t\t\tinvalidEmailContacts: [],\n\t\t\t\t\tduplicatedContacts: []\n\t\t\t\t}\n\t\t\t),\n\t\t[contactInputValue, isMemberDuplicated]\n\t);\n\n\tconst contactInputErrorDescription = useMemo(() => {\n\t\tconst valid = validEmails.length;\n\t\tconst duplicated = duplicatedContacts.length;\n\t\tconst invalid = invalidEmailContacts.length;\n\n\t\tif (valid > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (invalid > 0 && duplicated > 0) {\n\t\t\treturn t(\n\t\t\t\t'edit_dl_component.error.invalid_and_duplicated_addresses',\n\t\t\t\t'Invalid and already present addresses'\n\t\t\t);\n\t\t}\n\n\t\tif (invalid >= 1 && duplicated === 0) {\n\t\t\treturn t('edit_dl_component.error.invalid_address', {\n\t\t\t\tcount: invalid,\n\t\t\t\tdefaultValue_one: 'Invalid address',\n\t\t\t\tdefaultValue_other: 'Invalid addresses'\n\t\t\t});\n\t\t}\n\n\t\tif (invalid === 0 && duplicated >= 1) {\n\t\t\treturn t('edit_dl_component.error.duplicated_address', {\n\t\t\t\tcount: duplicated,\n\t\t\t\tdefaultValue_one: 'Address already present',\n\t\t\t\tdefaultValue_other: 'Addresses already present'\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}, [duplicatedContacts.length, invalidEmailContacts.length, t, validEmails.length]);\n\n\tconst isOnlyInvalidContacts = useMemo(\n\t\t(): boolean =>\n\t\t\tvalidEmails.length === 0 &&\n\t\t\t(invalidEmailContacts.length > 0 || duplicatedContacts.length > 0),\n\t\t[duplicatedContacts.length, invalidEmailContacts.length, validEmails.length]\n\t);\n\n\tconst isAddMembersAllowed = useMemo(() => validEmails.length > 0, [validEmails]);\n\n\tconst decorateContactInputValue = useCallback(\n\t\t(value: ContactInputValue) =>\n\t\t\tvalue.map((item): ContactInputValue[number] => {\n\t\t\t\tconst duplicated = item.email !== undefined && isMemberDuplicated(item.email);\n\t\t\t\tconst hasDuplicatedAction = item.actions?.some(\n\t\t\t\t\t(action) => action.id === DUPLICATED_MEMBER_ACTION_ID\n\t\t\t\t);\n\t\t\t\tif (duplicated && !hasDuplicatedAction) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tactions: [createDuplicatedMemberAction(), ...(item.actions ?? [])]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (!duplicated && hasDuplicatedAction) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tactions:\n\t\t\t\t\t\t\titem.actions?.filter((action) => action.id !== DUPLICATED_MEMBER_ACTION_ID) ?? []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t[isMemberDuplicated]\n\t);\n\n\tuseEffect(() => {\n\t\tsetContactInputValue((prevState) => decorateContactInputValue(prevState));\n\t}, [decorateContactInputValue]);\n\n\tconst onContactInputChange = useCallback(\n\t\t(value: ContactInputValue) => {\n\t\t\t// TODO item are filtered to be uniq, because the ContactInput filters out dropdown duplicated items only visually,\n\t\t\t//  but provide them inside onChange arg\n\t\t\tconst uniqueValue = uniqBy(value, (item) => item.email);\n\t\t\tsetContactInputValue(decorateContactInputValue(uniqueValue));\n\t\t},\n\t\t[decorateContactInputValue]\n\t);\n\n\tconst onSearchChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n\t\tsetSearchValue(event.currentTarget.value);\n\t}, []);\n\n\tconst onAddRawMembers = useCallback(() => {\n\t\tif (validEmails.length > 0) {\n\t\t\tonAddMembers(validEmails);\n\t\t\tsetContactInputValue([...invalidEmailContacts, ...duplicatedContacts]);\n\t\t}\n\t}, [duplicatedContacts, invalidEmailContacts, onAddMembers, validEmails]);\n\n\treturn (\n\t\t<Container mainAlignment={'flex-start'} crossAlignment={'flex-start'} gap={'0.5rem'}>\n\t\t\t<Row>\n\t\t\t\t<Text size={'small'} color={'secondary'}>\n\t\t\t\t\t{t('edit_dl_component.label.members_total', 'Member list {{total}}', {\n\t\t\t\t\t\ttotal: totalMembers\n\t\t\t\t\t})}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t<Text size={'small'} overflow={'break-word'}>\n\t\t\t\t{t(\n\t\t\t\t\t'edit_dl_component.label.hint',\n\t\t\t\t\t'You can filter this list by looking for specific member’s name or add new ones by editing the Distribution List.'\n\t\t\t\t)}\n\t\t\t</Text>\n\t\t\t<Row width={'fill'}>\n\t\t\t\t<ContactInput\n\t\t\t\t\tplaceholder={t(\n\t\t\t\t\t\t'edit_dl_component.placeholder.add_members',\n\t\t\t\t\t\t\"Type an address, click '+' to add to the distribution list\"\n\t\t\t\t\t)}\n\t\t\t\t\tdefaultValue={contactInputValue}\n\t\t\t\t\ticon={'Plus'}\n\t\t\t\t\ticonAction={onAddRawMembers}\n\t\t\t\t\tonChange={onContactInputChange}\n\t\t\t\t\ticonDisabled={!isAddMembersAllowed}\n\t\t\t\t\tchipDisplayName={CHIP_DISPLAY_NAME_VALUES.email}\n\t\t\t\t\tdescription={contactInputErrorDescription}\n\t\t\t\t\thasError={isOnlyInvalidContacts}\n\t\t\t\t\tinputRef={contactInputInputRef}\n\t\t\t\t/>\n\t\t\t</Row>\n\t\t\t<Input\n\t\t\t\tdata-testid={'dl-members-filter-input'}\n\t\t\t\tlabel={t('edit_dl_component.placeholder.filter_member', 'Filter an address')}\n\t\t\t\tCustomIcon={FilterMembersIcon}\n\t\t\t\tvalue={searchValue}\n\t\t\t\tonChange={onSearchChange}\n\t\t\t/>\n\t\t\t<Container minHeight={'10rem'} mainAlignment={'flex-start'}>\n\t\t\t\t<ListV2>{(!loading && memberItems) || loadingItems(3)}</ListV2>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback } from 'react';\n\nimport { useSnackbar } from '@zextras/carbonio-design-system';\nimport { difference } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { DistributionList } from '../model/distribution-list';\nimport { apiClient } from '../network/api-client';\nimport { useDistributionListsStore } from '../store/distribution-lists';\n\ntype DistributionListActionFn = (data: {\n\temail: string;\n\tmembers?: {\n\t\tmembers: string[];\n\t\ttotal: number;\n\t};\n\tdisplayName?: string;\n\tdescription?: string;\n}) => Promise<void>;\n\nexport const getMembersPartition = (\n\toriginalMembers: Array<string>,\n\tupdatedMembers: Array<string>\n): { membersToAdd: Array<string>; membersToRemove: Array<string> } => ({\n\tmembersToAdd: difference(updatedMembers, originalMembers),\n\tmembersToRemove: difference(originalMembers, updatedMembers)\n});\n\nexport const useUpdateDistributionList = (\n\tinitialDistributionList: Pick<\n\t\tDistributionList,\n\t\t'email' | 'displayName' | 'description' | 'members'\n\t>\n): DistributionListActionFn => {\n\tconst [t] = useTranslation();\n\tconst { upsertDistributionList } = useDistributionListsStore();\n\tconst createSnackbar = useSnackbar();\n\n\treturn useCallback<DistributionListActionFn>(\n\t\t({ email, members, displayName, description }) => {\n\t\t\tconst { membersToAdd, membersToRemove } = getMembersPartition(\n\t\t\t\tinitialDistributionList.members?.members ?? [],\n\t\t\t\tmembers?.members ?? []\n\t\t\t);\n\t\t\treturn apiClient\n\t\t\t\t.distributionListAction({ email, membersToAdd, membersToRemove, displayName, description })\n\t\t\t\t.then(() => {\n\t\t\t\t\tupsertDistributionList({\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tdisplayName: displayName ?? initialDistributionList.displayName,\n\t\t\t\t\t\tdescription: description ?? initialDistributionList.description,\n\t\t\t\t\t\tmembers: members\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tmembers: members.members,\n\t\t\t\t\t\t\t\t\ttotal: members.total,\n\t\t\t\t\t\t\t\t\tmore: initialDistributionList.members?.more ?? false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: initialDistributionList.members,\n\t\t\t\t\t\tcanRequireMembers: true\n\t\t\t\t\t});\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `dl-save-success-${email}`,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tlabel: t(\n\t\t\t\t\t\t\t'snackbar.edit_distribution_list.save.success',\n\t\t\t\t\t\t\t'\"{{displayName}}\" distribution list edits saved successfully',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName:\n\t\t\t\t\t\t\t\t\t(displayName !== undefined &&\n\t\t\t\t\t\t\t\t\t\tdisplayName.length > 50 &&\n\t\t\t\t\t\t\t\t\t\t`${displayName.substring(0, 50)}...`) ||\n\t\t\t\t\t\t\t\t\tdisplayName ||\n\t\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t),\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tcreateSnackbar({\n\t\t\t\t\t\tkey: `dl-save-error-${email}`,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\t\thideButton: true\n\t\t\t\t\t});\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t},\n\t\t[\n\t\t\tcreateSnackbar,\n\t\t\tinitialDistributionList.description,\n\t\t\tinitialDistributionList.displayName,\n\t\t\tinitialDistributionList.members,\n\t\t\tt,\n\t\t\tupsertDistributionList\n\t\t]\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { Button, Container, Divider, TabBar } from '@zextras/carbonio-design-system';\nimport { useBoardHooks } from '@zextras/carbonio-shell-ui';\nimport { pickBy, some, xor } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { DLDetailsInfo } from './dl-details-info';\nimport { EditDLDetails, EditDLDetailsProps } from './edit-dl-details';\nimport { EditDLMembersComponent, ResetMembers } from './edit-dl-members';\nimport { ManagerList } from './manager-list';\nimport { ScrollableContainer } from './styled-components';\nimport { DL_NAME_MAX_LENGTH, DL_TABS } from '../constants';\nimport { useDLTabs } from '../hooks/use-dl-tabs';\nimport { useUpdateDistributionList } from '../hooks/use-update-distribution-list';\nimport { DistributionList } from '../model/distribution-list';\n\nexport type EditDLControllerComponentProps = {\n\temail: DistributionList['email'];\n\tdisplayName: DistributionList['displayName'];\n\tdescription: DistributionList['description'];\n\tmembers: DistributionList['members'];\n\tloadingMembers: boolean;\n\towners: DistributionList['owners'];\n\tloadingOwners: boolean;\n};\n\ntype DLDetails = Required<Pick<DistributionList, 'displayName' | 'description'>>;\n\nexport const EditDLControllerComponent = ({\n\temail,\n\tdisplayName,\n\tdescription,\n\tmembers: membersPage,\n\tloadingMembers,\n\towners,\n\tloadingOwners\n}: EditDLControllerComponentProps): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst { items: tabItems, onChange: onTabChange, selected: selectedTab } = useDLTabs();\n\tconst [details, setDetails] = useState<DLDetails>({\n\t\tdisplayName: displayName ?? '',\n\t\tdescription: description ?? ''\n\t});\n\n\tconst [members, setMembers] = useState<string[]>(membersPage?.members ?? []);\n\tconst [totalMembers, setTotalMembers] = useState<number>(membersPage?.total ?? 0);\n\n\tconst [initialDistributionList, setInitialDistributionList] = useState<{\n\t\tmembers: string[];\n\t\ttotalMembers: number;\n\t\tdisplayName: string;\n\t\tdescription: string;\n\t}>({\n\t\tmembers: membersPage?.members ?? [],\n\t\ttotalMembers: membersPage?.total ?? 0,\n\t\tdisplayName: displayName ?? '',\n\t\tdescription: description ?? ''\n\t});\n\n\tuseEffect(() => {\n\t\tif (!loadingMembers) {\n\t\t\tsetMembers(membersPage?.members ?? []);\n\t\t}\n\t}, [loadingMembers, membersPage?.members]);\n\n\tconst updateDistributionList = useUpdateDistributionList({\n\t\temail,\n\t\tmembers: membersPage,\n\t\tdisplayName,\n\t\tdescription\n\t});\n\tconst { updateBoard } = useBoardHooks();\n\n\tconst onAddMembers = useCallback((newMembers: string[]) => {\n\t\tsetMembers((prevState) => [...newMembers, ...prevState]);\n\t\tsetTotalMembers((prevState) => prevState + newMembers.length);\n\t}, []);\n\n\tconst onRemoveMember = useCallback((member: string) => {\n\t\tsetMembers((prevState) => prevState.filter((item) => item !== member));\n\t\tsetTotalMembers((prevState) => prevState - 1);\n\t}, []);\n\n\tconst onSave = useCallback(() => {\n\t\tconst detailDifference = pickBy(\n\t\t\tdetails,\n\t\t\t(value, key) => initialDistributionList[key as keyof DLDetails] !== value\n\t\t);\n\t\tupdateDistributionList({\n\t\t\temail,\n\t\t\tmembers: { members, total: totalMembers },\n\t\t\t...detailDifference\n\t\t}).then(() => {\n\t\t\tsetInitialDistributionList({\n\t\t\t\tmembers,\n\t\t\t\ttotalMembers,\n\t\t\t\t...details\n\t\t\t});\n\t\t});\n\t}, [details, email, initialDistributionList, members, totalMembers, updateDistributionList]);\n\n\tconst isDirty = useMemo(\n\t\t() =>\n\t\t\txor(members, initialDistributionList.members).length > 0 ||\n\t\t\tsome(details, (value, key) => initialDistributionList[key as keyof DLDetails] !== value),\n\t\t[details, initialDistributionList, members]\n\t);\n\n\tconst onDetailsChange = useCallback<EditDLDetailsProps['onChange']>(\n\t\t(newData) => {\n\t\t\tnewData.displayName !== undefined && updateBoard({ title: newData.displayName });\n\t\t\tsetDetails((prevState) => ({ ...prevState, ...newData }));\n\t\t},\n\t\t[updateBoard]\n\t);\n\n\tconst nameError = useMemo(() => {\n\t\tif (details.displayName.length > DL_NAME_MAX_LENGTH) {\n\t\t\treturn t(\n\t\t\t\t'edit_dl_component.input.name.error.max_length',\n\t\t\t\t'Maximum length allowed is 256 characters'\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}, [t, details.displayName]);\n\n\tconst hasErrors = useMemo(() => nameError !== undefined, [nameError]);\n\n\tconst resetMembersRef = useRef<ResetMembers>(null);\n\n\tconst onDiscard = useCallback(() => {\n\t\tsetMembers(initialDistributionList.members);\n\t\tsetTotalMembers(initialDistributionList.totalMembers);\n\t\tsetDetails({\n\t\t\tdescription: initialDistributionList.description,\n\t\t\tdisplayName: initialDistributionList.displayName\n\t\t});\n\t\tupdateBoard({ title: initialDistributionList.displayName });\n\t\tresetMembersRef.current?.reset();\n\t}, [initialDistributionList, updateBoard]);\n\n\treturn (\n\t\t<Container\n\t\t\torientation={'vertical'}\n\t\t\tpadding={{ horizontal: 'large' }}\n\t\t\tmainAlignment={'flex-start'}\n\t\t\tcrossAlignment={'flex-start'}\n\t\t\theight={'100%'}\n\t\t\tbackground={'gray5'}\n\t\t\tdata-testid={'edit-dl-component'}\n\t\t>\n\t\t\t<Container\n\t\t\t\torientation={'horizontal'}\n\t\t\t\tpadding={{ vertical: 'small' }}\n\t\t\t\tmainAlignment={'flex-end'}\n\t\t\t\tgap={'0.5rem'}\n\t\t\t\theight={'auto'}\n\t\t\t>\n\t\t\t\t<Button label={t('label.discard', 'Discard')} type={'outlined'} onClick={onDiscard} />\n\t\t\t\t<Button label={t('label.save', 'Save')} disabled={!isDirty || hasErrors} onClick={onSave} />\n\t\t\t</Container>\n\t\t\t<DLDetailsInfo\n\t\t\t\tdisplayName={details.displayName}\n\t\t\t\temail={email}\n\t\t\t\tpadding={{ bottom: 'large' }}\n\t\t\t/>\n\t\t\t<Divider />\n\t\t\t<ScrollableContainer\n\t\t\t\tpadding={{ top: 'large', bottom: 'extralarge', left: 'large', right: 'large' }}\n\t\t\t\tmainAlignment={'flex-start'}\n\t\t\t\tcrossAlignment={'flex-start'}\n\t\t\t\tbackground={'gray6'}\n\t\t\t\tflexGrow={1}\n\t\t\t>\n\t\t\t\t<TabBar\n\t\t\t\t\titems={tabItems}\n\t\t\t\t\tselected={selectedTab}\n\t\t\t\t\tonChange={onTabChange}\n\t\t\t\t\tbackground={'gray6'}\n\t\t\t\t\tflexShrink={0}\n\t\t\t\t\theight={'3rem'}\n\t\t\t\t\tmaxWidth={'50vw'}\n\t\t\t\t\tborderColor={{ bottom: 'gray3' }}\n\t\t\t\t/>\n\t\t\t\t<ScrollableContainer padding={{ top: 'large' }} mainAlignment={'flex-start'}>\n\t\t\t\t\t{selectedTab === DL_TABS.details && (\n\t\t\t\t\t\t<EditDLDetails\n\t\t\t\t\t\t\tname={details.displayName}\n\t\t\t\t\t\t\tnameError={nameError}\n\t\t\t\t\t\t\tdescription={details.description}\n\t\t\t\t\t\t\tonChange={onDetailsChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{selectedTab === DL_TABS.members && (\n\t\t\t\t\t\t<EditDLMembersComponent\n\t\t\t\t\t\t\tmembers={members}\n\t\t\t\t\t\t\ttotalMembers={totalMembers}\n\t\t\t\t\t\t\tonRemoveMember={onRemoveMember}\n\t\t\t\t\t\t\tonAddMembers={onAddMembers}\n\t\t\t\t\t\t\tloading={loadingMembers}\n\t\t\t\t\t\t\tresetRef={resetMembersRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{selectedTab === DL_TABS.managers && (\n\t\t\t\t\t\t<ManagerList managers={owners} loading={loadingOwners} />\n\t\t\t\t\t)}\n\t\t\t\t</ScrollableContainer>\n\t\t\t</ScrollableContainer>\n\t\t</Container>\n\t);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useMemo } from 'react';\n\nimport { Container } from '@zextras/carbonio-design-system';\nimport { useBoard } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { EditDLControllerComponent } from '../../components/edit-dl-controller';\nimport { Text } from '../../components/Text';\nimport { useGetDistributionList } from '../../hooks/use-get-distribution-list';\nimport { useGetDistributionListMembers } from '../../hooks/use-get-distribution-list-members';\nimport { DistributionList } from '../../model/distribution-list';\n\nexport type EditDLBoardContext = Pick<DistributionList, 'id'>;\n\nconst EditDLBoard = (): React.JSX.Element => {\n\tconst [t] = useTranslation();\n\tconst { context } = useBoard<EditDLBoardContext>();\n\tconst { distributionList, loading: loadingDL } = useGetDistributionList(\n\t\t{ id: context?.id },\n\t\t{ skip: context?.id === undefined }\n\t);\n\tconst {\n\t\tloading: loadingMembers,\n\t\tmembers = [],\n\t\ttotal = 0,\n\t\tmore = false\n\t} = useGetDistributionListMembers(distributionList?.email ?? '', {\n\t\tskip: !distributionList?.email\n\t});\n\n\tconst membersPage = useMemo(() => ({ members, total, more }), [members, more, total]);\n\n\treturn distributionList === undefined ? (\n\t\t<Container>\n\t\t\t<Text color={'error'}>\n\t\t\t\t{t('label.error_try_again', 'Something went wrong, please try again')}\n\t\t\t</Text>\n\t\t</Container>\n\t) : (\n\t\t<EditDLControllerComponent\n\t\t\temail={distributionList.email}\n\t\t\tdisplayName={distributionList.displayName}\n\t\t\tdescription={distributionList.description}\n\t\t\tmembers={membersPage}\n\t\t\tloadingMembers={loadingMembers}\n\t\t\towners={distributionList.owners}\n\t\t\tloadingOwners={loadingDL}\n\t\t/>\n\t);\n};\n\nexport default EditDLBoard;\n"],"names":["useActionCopyToClipboard","t","useTranslation","createSnackbar","useSnackbar","canExecute","useCallback","execute","text","window","parent","navigator","clipboard","writeText","textArea","document","createElement","body","appendChild","value","select","success","execCommand","removeChild","Promise","resolve","reject","legacyFallback","copyToClipboard","then","key","Date","now","replace","type","hideButton","label","useMemo","id","ACTION_IDS","icon","useActionSendEmail","openMailComposer","isMailAvailable","useIntegratedFunction","sendEmail","recipients","map","recipient","address","email","isGroup","StyledText","styled","TextWithOptionalTooltip","withTooltip","children","rest","React","TextWithTooltip","DSText","withConfig","displayName","componentId","$width","$inline","$italic","$centered","$lineHeight","Text","width","centered","italic","inline","lineHeight","dsProps","_extends","DLDetailsInfo","copyToClipboardAction","copyEmail","Container","orientation","gap","mainAlignment","crossAlignment","height","CustomIconAvatar","shape","size","minWidth","weight","Row","color","IconButton","onClick","FilterMembersIcon","Icon","ShimmedDisplayerListItem","padding","wrap","flexShrink","Shimmer","Avatar","loadingItems","count","times","index","ManagerList","managers","loading","memberItems","manager","MemberDisplayerListItemComponent","name","total","length","minHeight","ListV2","sendEmailAction","onSendEmail","onCopyEmail","canSendEmail","Button","MemberListItemComponent","onRemove","onRemoveClick","HoverRow","theme","palette","transparent","regular","hover","HoverContainer","HoverBarContainer","ListItemContainer","StyledListItem","ListItem","attrs","background","selectedBackground","activeBackground","active","selected","backgroundColor","pseudoClasses","css","getColor","ScrollableContainer","useDLTabs","setSelected","useState","DL_TABS","details","items","members","onChange","ev","selectedId","EditDLDetails","nameError","description","onDisplayNameChange","currentTarget","onDescriptionChange","Input","hasError","TextArea","DUPLICATED_MEMBER_ACTION_ID","EditDLMembersComponent","totalMembers","onRemoveMember","onAddMembers","resetRef","contactInputValue","setContactInputValue","searchValue","setSearchValue","contactInputInputRef","useRef","useImperativeHandle","reset","current","reduce","accumulator","member","includes","push","isMemberDuplicated","validEmails","invalidEmailContacts","duplicatedContacts","result","contactInputItem","error","undefined","contactInputErrorDescription","valid","duplicated","invalid","defaultValue_one","defaultValue_other","isOnlyInvalidContacts","isAddMembersAllowed","decorateContactInputValue","item","hasDuplicatedAction","actions","some","action","filter","useEffect","prevState","onContactInputChange","uniqueValue","uniqBy","onSearchChange","event","onAddRawMembers","overflow","ContactInput","placeholder","defaultValue","iconAction","iconDisabled","chipDisplayName","CHIP_DISPLAY_NAME_VALUES","inputRef","CustomIcon","EditDLControllerComponent","membersPage","loadingMembers","owners","loadingOwners","tabItems","onTabChange","selectedTab","setDetails","setMembers","setTotalMembers","initialDistributionList","setInitialDistributionList","updateDistributionList","upsertDistributionList","useDistributionListsStore","membersToAdd","membersToRemove","originalMembers","updatedMembers","difference","getMembersPartition","apiClient","distributionListAction","more","canRequireMembers","substring","catch","console","useUpdateDistributionList","updateBoard","useBoardHooks","newMembers","onSave","detailDifference","pickBy","isDirty","xor","onDetailsChange","newData","title","DL_NAME_MAX_LENGTH","hasErrors","resetMembersRef","onDiscard","horizontal","vertical","disabled","bottom","Divider","top","left","right","flexGrow","TabBar","maxWidth","borderColor","EditDLBoard","context","useBoard","distributionList","loadingDL","useGetDistributionList","skip","useGetDistributionListMembers"],"sourceRoot":""}