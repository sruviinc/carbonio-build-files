{"version":3,"file":"settings-view.16edcf4e.chunk.js","mappings":"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","sources":["webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/test/mocks/carbonio-shell-ui-constants.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/hooks/use-update-view.ts","webpack://carbonio-contacts-ui/./src/carbonio-ui-commons/soap/no-op.ts","webpack://carbonio-contacts-ui/./src/legacy/views/settings/components/utils.js","webpack://carbonio-contacts-ui/./src/legacy/views/settings/components/settings-heading.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/settings/options-settings-view.jsx","webpack://carbonio-contacts-ui/./src/legacy/views/settings/settings-view.jsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const FOLDERS = {\n\tUSER_ROOT: '1',\n\tINBOX: '2',\n\tTRASH: '3',\n\tSPAM: '4',\n\tSENT: '5',\n\tDRAFTS: '6',\n\tCONTACTS: '7',\n\tTAGS: '8',\n\tCONVERSATIONS: '9',\n\tCALENDAR: '10',\n\tROOT: '11',\n\tNOTEBOOK: '12', // no longer created in new mailboxes since Helix (bug 39647).  old mailboxes may still contain a system folder with id 12\n\tAUTO_CONTACTS: '13',\n\tIM_LOGS: '14',\n\tTASKS: '15',\n\tBRIEFCASE: '16'\n};\n\nexport const ZIMBRA_STANDARD_COLORS = [\n\t{ zValue: 0, hex: '#000000', zLabel: 'black' },\n\t{ zValue: 1, hex: '#2b73d2', zLabel: 'blue' },\n\t{ zValue: 2, hex: '#2196d3', zLabel: 'cyan' },\n\t{ zValue: 3, hex: '#639030', zLabel: 'green' },\n\t{ zValue: 4, hex: '#1a75a7', zLabel: 'purple' },\n\t{ zValue: 5, hex: '#d74942', zLabel: 'red' },\n\t{ zValue: 6, hex: '#ffc107', zLabel: 'yellow' },\n\t{ zValue: 7, hex: '#edaeab', zLabel: 'pink' },\n\t{ zValue: 8, hex: '#828282', zLabel: 'gray' },\n\t{ zValue: 9, hex: '#ba8b00', zLabel: 'orange' }\n];\n\nexport enum JSNS {\n\tACCOUNT = 'urn:zimbraAccount',\n\tADMIN = 'urn:zimbraAdmin',\n\tMAIL = 'urn:zimbraMail',\n\tALL = 'urn:zimbra',\n\tSYNC = 'urn:zimbraSync'\n}\n\nexport const ROOT_NAME = 'USER_ROOT';\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { useCallback, useEffect } from 'react';\n\nimport { NoOp } from '../soap/no-op';\n\nexport const useUpdateView = (): void => {\n\tconst handler = useCallback((): void => {\n\t\tNoOp();\n\t}, []);\n\n\tuseEffect((): (() => void) => {\n\t\twindow.addEventListener('updateView', handler);\n\t\treturn function cleanup() {\n\t\t\twindow.removeEventListener('updateView', handler);\n\t\t};\n\t}, [handler]);\n};\n","/*\n * SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { ErrorSoapBodyResponse, soapFetch } from '@zextras/carbonio-shell-ui';\n\nimport { JSNS } from '../test/mocks/carbonio-shell-ui-constants';\n\ntype NoOpRequest = {\n\t_jsns: JSNS.MAIL;\n};\n\ntype NoOpResponse = { _jsns: JSNS.MAIL } | ErrorSoapBodyResponse;\n\nexport const NoOp = async (): Promise<void> => {\n\tconst request = {\n\t\t_jsns: JSNS.MAIL\n\t} as const;\n\tconst response = await soapFetch<NoOpRequest, NoOpResponse>('NoOp', request);\n\tif ('Fault' in response) {\n\t\tthrow new Error(response.Fault.Reason.Text);\n\t}\n};\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { isEqual, transform, isObject, filter } from 'lodash';\n\nexport const differenceObject = (object, base) => {\n\t// eslint-disable-next-line no-shadow\n\tfunction changes(object, base) {\n\t\treturn transform(object, (result, value, key) => {\n\t\t\tif (!isEqual(value, base[key])) {\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\tresult[key] = isObject(value) && isObject(base[key]) ? changes(value, base[key]) : value;\n\t\t\t}\n\t\t});\n\t}\n\treturn changes(object, base);\n};\n\nexport const findLabel = (list, value) => filter(list, (item) => item.value === value)[0].label;\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Padding, Row, Text } from '@zextras/carbonio-design-system';\n\nexport default function Heading({ title }) {\n\treturn (\n\t\t<>\n\t\t\t<Row\n\t\t\t\tpadding={{ all: 'small' }}\n\t\t\t\tmainAlignment=\"baseline\"\n\t\t\t\tcrossAlignment=\"baseline\"\n\t\t\t\twidth=\"100%\"\n\t\t\t>\n\t\t\t\t<Text size=\"medium\" weight=\"bold\">\n\t\t\t\t\t{title}\n\t\t\t\t</Text>\n\t\t\t</Row>\n\t\t\t<Padding veritcal=\"small\" />\n\t\t</>\n\t);\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React from 'react';\n\nimport { Container, FormSubSection, Checkbox } from '@zextras/carbonio-design-system';\n\nimport Heading from './components/settings-heading';\n\nexport default function OptionsSettingsView({ t, settingsObj, updateSettings }) {\n\treturn (\n\t\t<FormSubSection label={t('label.options', 'Options')}>\n\t\t\t<Container crossAlignment=\"baseline\" padding={{ all: 'small' }}>\n\t\t\t\t<Heading title={t('label.options', 'Options')} />\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={t(\n\t\t\t\t\t\t'settings.contacts.checkbox.add_contact_to_emailed_contacts',\n\t\t\t\t\t\t'Add new contacts to \"Emailed Contacts\"'\n\t\t\t\t\t)}\n\t\t\t\t\tvalue={settingsObj.zimbraPrefAutoAddAddressEnabled === 'TRUE'}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tupdateSettings({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname: 'zimbraPrefAutoAddAddressEnabled',\n\t\t\t\t\t\t\t\tvalue: settingsObj.zimbraPrefAutoAddAddressEnabled === 'TRUE' ? 'FALSE' : 'TRUE'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={t(\n\t\t\t\t\t\t'settings.contacts.checkbox.srch_glbl_addrs_list',\n\t\t\t\t\t\t'Initially search the Global Address List when using the contact picker'\n\t\t\t\t\t)}\n\t\t\t\t\tvalue={settingsObj.zimbraPrefGalSearchEnabled === 'TRUE'}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tupdateSettings({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname: 'zimbraPrefGalSearchEnabled',\n\t\t\t\t\t\t\t\tvalue: settingsObj.zimbraPrefGalSearchEnabled === 'TRUE' ? 'FALSE' : 'TRUE'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t\t<Container crossAlignment=\"baseline\" padding={{ all: 'small' }}>\n\t\t\t\t<Heading title={t('label.autocomplete', 'Autocomplete')} />\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={t(\n\t\t\t\t\t\t'settings.contacts.checkbox.incl_addrs_in_glbl_addrs_list',\n\t\t\t\t\t\t'Include addresses in the Global Address List'\n\t\t\t\t\t)}\n\t\t\t\t\tvalue={settingsObj.zimbraPrefGalAutoCompleteEnabled === 'TRUE'}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tupdateSettings({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname: 'zimbraPrefGalAutoCompleteEnabled',\n\t\t\t\t\t\t\t\tvalue: settingsObj.zimbraPrefGalAutoCompleteEnabled === 'TRUE' ? 'FALSE' : 'TRUE'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={t(\n\t\t\t\t\t\t'settings.contacts.checkbox.include_add_in_shared_contact',\n\t\t\t\t\t\t'Include addresses in shared contacts'\n\t\t\t\t\t)}\n\t\t\t\t\tvalue={settingsObj.zimbraPrefSharedAddrBookAutoCompleteEnabled === 'TRUE'}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tupdateSettings({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname: 'zimbraPrefSharedAddrBookAutoCompleteEnabled',\n\t\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\t\tsettingsObj.zimbraPrefSharedAddrBookAutoCompleteEnabled === 'TRUE'\n\t\t\t\t\t\t\t\t\t\t? 'FALSE'\n\t\t\t\t\t\t\t\t\t\t: 'TRUE'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabel={t(\n\t\t\t\t\t\t'settings.contacts.checkbox.autocomplete_on_comma',\n\t\t\t\t\t\t'Select autocomplete match when a comma is typed'\n\t\t\t\t\t)}\n\t\t\t\t\tvalue={settingsObj.zimbraPrefAutoCompleteQuickCompletionOnComma === 'TRUE'}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tupdateSettings({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname: 'zimbraPrefAutoCompleteQuickCompletionOnComma',\n\t\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\t\tsettingsObj.zimbraPrefAutoCompleteQuickCompletionOnComma === 'TRUE'\n\t\t\t\t\t\t\t\t\t\t? 'FALSE'\n\t\t\t\t\t\t\t\t\t\t: 'TRUE'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</FormSubSection>\n\t);\n}\n","/*\n * SPDX-FileCopyrightText: 2021 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport React, { useState, useMemo, useCallback } from 'react';\n\nimport { Container, FormSection, useSnackbar } from '@zextras/carbonio-design-system';\nimport { useUserSettings, editSettings, SettingsHeader } from '@zextras/carbonio-shell-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport { differenceObject } from './components/utils';\nimport OptionsSettingsView from './options-settings-view';\nimport { useUpdateView } from '../../../carbonio-ui-commons/hooks/use-update-view';\n\nexport default function ContactSettingsView() {\n\tconst [t] = useTranslation();\n\tconst settings = useUserSettings()?.prefs;\n\tconst [settingsObj, setSettingsObj] = useState({ ...settings });\n\tconst [updatedSettings, setUpdatedSettings] = useState({});\n\tconst createSnackbar = useSnackbar();\n\tuseUpdateView();\n\n\tconst onClose = useCallback(() => {\n\t\tsetSettingsObj({ ...settings });\n\t\tsetUpdatedSettings({});\n\t}, [settings]);\n\n\tconst updateSettings = useCallback(\n\t\t(e) => {\n\t\t\tsetSettingsObj({ ...settingsObj, [e.target.name]: e.target.value });\n\t\t\tsetUpdatedSettings({ ...updatedSettings, [e.target.name]: e.target.value });\n\t\t},\n\t\t[settingsObj, updatedSettings]\n\t);\n\n\tconst settingsToUpdate = useMemo(\n\t\t() => differenceObject(updatedSettings, settings),\n\t\t[updatedSettings, settings]\n\t);\n\n\tconst disabled = useMemo(() => Object.keys(settingsToUpdate).length === 0, [settingsToUpdate]);\n\n\tconst saveChanges = useCallback(() => {\n\t\teditSettings({ prefs: updatedSettings }).then((res) => {\n\t\t\tif (res.type.includes('fulfilled')) {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `new`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tlabel: t('message.snackbar.settings_saved', 'Edits saved correctly'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcreateSnackbar({\n\t\t\t\t\tkey: `new`,\n\t\t\t\t\treplace: true,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tlabel: t('label.error_try_again', 'Something went wrong, please try again'),\n\t\t\t\t\tautoHideTimeout: 3000,\n\t\t\t\t\thideButton: true\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [updatedSettings, createSnackbar, t]);\n\tconst title = useMemo(() => t('label.contact_setting', 'Contact Settings'), [t]);\n\treturn (\n\t\t<>\n\t\t\t<SettingsHeader onCancel={onClose} onSave={saveChanges} title={title} isDirty={!disabled} />\n\t\t\t<Container\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tmainAlignment=\"baseline\"\n\t\t\t\tcrossAlignment=\"baseline\"\n\t\t\t\tbackground=\"white\"\n\t\t\t\tstyle={{ overflowY: 'auto' }}\n\t\t\t>\n\t\t\t\t<FormSection width=\"100%\" minWidth=\"calc(min(100%, 32rem))\">\n\t\t\t\t\t<OptionsSettingsView t={t} settingsObj={settingsObj} updateSettings={updateSettings} />\n\t\t\t\t</FormSection>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n"],"names":["JSNS","useUpdateView","handler","useCallback","async","request","_jsns","MAIL","response","soapFetch","Error","Fault","Reason","Text","NoOp","useEffect","window","addEventListener","removeEventListener","differenceObject","object","base","changes","transform","result","value","key","isEqual","isObject","Heading","title","React","Row","padding","all","mainAlignment","crossAlignment","width","size","weight","Padding","veritcal","OptionsSettingsView","t","settingsObj","updateSettings","FormSubSection","label","Container","Checkbox","zimbraPrefAutoAddAddressEnabled","onClick","target","name","zimbraPrefGalSearchEnabled","zimbraPrefGalAutoCompleteEnabled","zimbraPrefSharedAddrBookAutoCompleteEnabled","zimbraPrefAutoCompleteQuickCompletionOnComma","ContactSettingsView","useTranslation","settings","useUserSettings","prefs","setSettingsObj","useState","updatedSettings","setUpdatedSettings","createSnackbar","useSnackbar","onClose","e","settingsToUpdate","useMemo","disabled","Object","keys","length","saveChanges","editSettings","then","res","type","includes","replace","autoHideTimeout","hideButton","SettingsHeader","onCancel","onSave","isDirty","orientation","background","style","overflowY","FormSection","minWidth"],"sourceRoot":""}